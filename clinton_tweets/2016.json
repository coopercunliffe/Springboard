[{"created_at": "Mon Feb 01 15:34:50 +0000 2016", "text": "The Force is strong with this one. https://t.co/X4GPj6B72A https://t.co/FOMFXZTNzx", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1411, "source": "TweetDeck", "id_str": "694182123373215745", "is_retweet": false}, {"created_at": "Thu Feb 04 21:00:54 +0000 2016", "text": "A woman winning the Iowa Caucus isn\u2019t just symbolic\u2014it's \"a huge deal for American women.\" \u2014@emilyslist's @Schriock1 https://t.co/S21hO70OBy", "in_reply_to_screen_name": null, "retweet_count": 457, "favorite_count": 1130, "source": "Twitter Web Client", "id_str": "695351347336474624", "is_retweet": false}, {"created_at": "Mon Oct 31 16:20:16 +0000 2016", "text": "Here's what foreign policy experts, diplomats, and world leaders think about Hillary's four years as America's secr\u2026 https://t.co/FeGMBgd2FH", "in_reply_to_screen_name": null, "retweet_count": 6371, "favorite_count": 12608, "source": "Media Studio", "id_str": "793125445952692225", "is_retweet": false}, {"created_at": "Thu Oct 13 15:45:02 +0000 2016", "text": "\u201cWe cannot afford to squander this opportunity, particularly given the alternative.\u201d \u2014@FLOTUS:\u2026 https://t.co/a3Jxuhckp2", "in_reply_to_screen_name": null, "retweet_count": 2760, "favorite_count": 7523, "source": "Media Studio", "id_str": "786593596006928385", "is_retweet": false}, {"created_at": "Wed Jun 01 16:41:11 +0000 2016", "text": "It's one thing to sell steaks using a name as a marketing ploy. Trump's company intentionally put people at risk. https://t.co/5F4siYeO8p", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1294, "favorite_count": 1923, "source": "TweetDeck", "id_str": "738047753423556608", "is_retweet": false}, {"created_at": "Tue Nov 08 14:52:50 +0000 2016", "text": "RT @ChelseaClinton: Couldn\u2019t be more proud of my mom &amp; the campaign she's run. Let\u2019s bring it home for her today. https://t.co/Mw1JC5L9rj", "in_reply_to_screen_name": null, "retweet_count": 3048, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796002546036965377", "is_retweet": true}, {"created_at": "Tue Jun 21 16:46:11 +0000 2016", "text": "Trump has written a lot of books about business\u2014but they all seem to end at Chapter 11.", "in_reply_to_screen_name": null, "retweet_count": 16145, "favorite_count": 31472, "source": "TweetDeck", "id_str": "745296770637438976", "is_retweet": false}, {"created_at": "Wed Nov 09 16:42:06 +0000 2016", "text": "\u201cI hope that he will be a successful president for all Americans.\u201d \u2014Hillary on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 9064, "favorite_count": 30675, "source": "TweetDeck", "id_str": "796392429112926208", "is_retweet": false}, {"created_at": "Fri Mar 04 13:54:29 +0000 2016", "text": "On this day in 1933, Frances Perkins became the first woman cabinet member as Sec. of Labor. #WomensHistoryMonth https://t.co/QgblU1qled", "in_reply_to_screen_name": null, "retweet_count": 2012, "favorite_count": 4042, "source": "TweetDeck", "id_str": "705753283915284480", "is_retweet": false}, {"created_at": "Tue Oct 11 19:32:55 +0000 2016", "text": "Hillary and @AlGore are live from Miami speaking about why we have to act on climate change. Watch live: https://t.co/GFyG79BkEw", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 4788, "source": "TweetDeck", "id_str": "785926169472434176", "is_retweet": false}, {"created_at": "Thu Jul 28 02:27:09 +0000 2016", "text": "\"Hillary has a passion for kids and families. Donald Trump has a passion, too.\n\nIt's himself!\" \u2014@TimKaine https://t.co/8M7cNeLeVu", "in_reply_to_screen_name": null, "retweet_count": 1443, "favorite_count": 4335, "source": "TweetDeck", "id_str": "758488939967549440", "is_retweet": false}, {"created_at": "Sat Nov 05 02:43:20 +0000 2016", "text": "RT @CNN: Hillary Clinton recites Jay Z lyrics: \"Rosa Parks sat so Martin Luther could walk ...\" https://t.co/isW0ZkvdZ4 https://t.co/MKwgNw\u2026", "in_reply_to_screen_name": null, "retweet_count": 9118, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794731798077067264", "is_retweet": true}, {"created_at": "Sat Nov 05 02:29:50 +0000 2016", "text": "RT @CNN: Hillary Clinton embraces Beyonce and Jay Z onstage at a rally in Cleveland, Ohio https://t.co/8kQ324kF3n https://t.co/lmcZoqB5BC", "in_reply_to_screen_name": null, "retweet_count": 6295, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794728399365410816", "is_retweet": true}, {"created_at": "Sat Jan 30 16:08:05 +0000 2016", "text": ".@BillClinton's closing argument for Hillary: \"She's the best changemaker I\u2019ve ever met.\" Watch the new video \u2b07\ufe0f\nhttps://t.co/V27iB2DcHV", "in_reply_to_screen_name": null, "retweet_count": 1294, "favorite_count": 2024, "source": "Twitter Web Client", "id_str": "693465714955399168", "is_retweet": false}, {"created_at": "Fri Jul 15 14:39:48 +0000 2016", "text": "Thank you, Virginia and Senator @TimKaine. https://t.co/1xp7HVga0w", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 3884, "source": "TweetDeck", "id_str": "753962274927304705", "is_retweet": false}, {"created_at": "Mon Sep 26 16:10:44 +0000 2016", "text": "A reminder heading into tonight's debate. #DebateNight https://t.co/TwsbBNPOZP", "in_reply_to_screen_name": null, "retweet_count": 4022, "favorite_count": 8718, "source": "TweetDeck", "id_str": "780439472009801728", "is_retweet": false}, {"created_at": "Wed Nov 02 01:06:52 +0000 2016", "text": "More people will early vote in 2016 than ever before. Join them: https://t.co/3TKJ4H68Kz https://t.co/ZeMmuKhqev", "in_reply_to_screen_name": null, "retweet_count": 1659, "favorite_count": 4289, "source": "TweetDeck", "id_str": "793620356674252800", "is_retweet": false}, {"created_at": "Wed Sep 14 16:38:08 +0000 2016", "text": "7. To what extent would your foreign policy be dictated by potential financial benefits for your business partners? https://t.co/4Nd9KSdTfi", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2807, "favorite_count": 4529, "source": "TweetDeck", "id_str": "776097711082921984", "is_retweet": false}, {"created_at": "Fri Nov 04 19:37:54 +0000 2016", "text": "RT @HillaryforNC: We're rallying with @POTUS in Fayetteville right now. Join us live ahead of the last day of early voting tomorrow: https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 773, "favorite_count": 0, "source": "TweetDeck", "id_str": "794624734554112000", "is_retweet": true}, {"created_at": "Fri Sep 16 17:02:35 +0000 2016", "text": "Again, Trump turns his faults on others. Psychologists call it \"projecting.\" Kids call it \"I'm rubber, you're glue.\" https://t.co/lKDDD0wwsn", "in_reply_to_screen_name": null, "retweet_count": 5967, "favorite_count": 11249, "source": "TweetDeck", "id_str": "776828640554323968", "is_retweet": false}, {"created_at": "Tue Sep 27 02:16:53 +0000 2016", "text": "RT @TheBriefing2016: This is... still not true! #debate https://t.co/6SKFZunCL5", "in_reply_to_screen_name": null, "retweet_count": 1367, "favorite_count": 0, "source": "TweetDeck", "id_str": "780592014639456256", "is_retweet": true}, {"created_at": "Fri Aug 19 00:14:50 +0000 2016", "text": "RT @mayaharris_: Hillary\u2019s college plan will bring about a long-awaited transformation of higher education in America. Here's how: https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 936, "favorite_count": 0, "source": "TweetDeck", "id_str": "766428172615290880", "is_retweet": true}, {"created_at": "Wed Sep 07 17:27:29 +0000 2016", "text": "RT @HFA: 1. Download our app\n2. Complete daily challenges\n3. Elect the next president\n\nhttps://t.co/neivbRsKF8", "in_reply_to_screen_name": null, "retweet_count": 287, "favorite_count": 0, "source": "TweetDeck", "id_str": "773573415487889408", "is_retweet": true}, {"created_at": "Wed May 04 13:00:33 +0000 2016", "text": "\"As he goes after women, as he goes after literally every group, I'm going to be their voice.\" \u2014Hillary on Trump\nhttps://t.co/iNUo2EuTYO", "in_reply_to_screen_name": null, "retweet_count": 2189, "favorite_count": 4901, "source": "Twitter Web Client", "id_str": "727845367996256256", "is_retweet": false}, {"created_at": "Wed Oct 19 14:45:07 +0000 2016", "text": "RT @TheDemocrats: We are Democrats. Let\u2019s make some more history: https://t.co/F6LZvxQSYV https://t.co/et8Pqu8uBu", "in_reply_to_screen_name": null, "retweet_count": 1715, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788752844706967553", "is_retweet": true}, {"created_at": "Tue Oct 18 13:04:52 +0000 2016", "text": "Two maps that show why no one can afford to stay home on Election Day. https://t.co/fenfom4oPl", "in_reply_to_screen_name": null, "retweet_count": 2356, "favorite_count": 4682, "source": "TweetDeck", "id_str": "788365230648729605", "is_retweet": false}, {"created_at": "Wed Nov 09 16:43:06 +0000 2016", "text": "\"I want you to remember this: Our campaign was never about one person or even one election. It was about the country we love.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 17746, "favorite_count": 63681, "source": "TweetDeck", "id_str": "796392680888614912", "is_retweet": false}, {"created_at": "Mon Jul 11 13:14:20 +0000 2016", "text": "You have a problem when a candidate looks to Saddam Hussein and Kim Jong-un as examples of good leadership. https://t.co/T1nPQgSRQ7", "in_reply_to_screen_name": null, "retweet_count": 2552, "favorite_count": 4403, "source": "TweetDeck", "id_str": "752491213840904192", "is_retweet": false}, {"created_at": "Fri Jun 17 02:11:58 +0000 2016", "text": "Hi. https://t.co/11Fyyf5IQm", "in_reply_to_screen_name": null, "retweet_count": 35499, "favorite_count": 81448, "source": "TweetDeck", "id_str": "743627214923632644", "is_retweet": false}, {"created_at": "Mon Oct 03 17:56:05 +0000 2016", "text": "Trump's campaign is bragging that not paying taxes makes him a \"genius.\"\n\nWhat kind of genius loses $1 billion in a single year?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1965, "favorite_count": 4188, "source": "TweetDeck", "id_str": "783002697431736320", "is_retweet": false}, {"created_at": "Fri Sep 23 15:03:06 +0000 2016", "text": "RT @EveryVoice: Every Voice is proud to endorse @HillaryClinton for president. https://t.co/S30v1eZtCm https://t.co/2YUAG4wPJu", "in_reply_to_screen_name": null, "retweet_count": 1137, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "779335288283947008", "is_retweet": true}, {"created_at": "Wed Mar 09 03:05:58 +0000 2016", "text": "\"It\u2019s simple economics: America grows when your paycheck grows.\"  \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 849, "favorite_count": 2089, "source": "TweetDeck", "id_str": "707402019309559808", "is_retweet": false}, {"created_at": "Mon Oct 10 01:22:00 +0000 2016", "text": "Mocking a disabled reporter. Attacking a Gold Star family. Insulting a judge. Trump has never apologized\u2014because that's just who Trump is.", "in_reply_to_screen_name": null, "retweet_count": 4863, "favorite_count": 13013, "source": "TweetDeck", "id_str": "785289246529683458", "is_retweet": false}, {"created_at": "Mon Oct 17 19:03:27 +0000 2016", "text": "RT @Mariska: Thank you @ELLEmagazine for letting me share why #ImWithHer #StrongerTogether \nhttps://t.co/Xp5JoRVXPh", "in_reply_to_screen_name": null, "retweet_count": 3534, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788093082004848640", "is_retweet": true}, {"created_at": "Thu Nov 03 17:58:08 +0000 2016", "text": "Don\u2019t miss out! Join them: https://t.co/3TKJ4H68Kz https://t.co/xT4ER9Dmrk", "in_reply_to_screen_name": null, "retweet_count": 963, "favorite_count": 2866, "source": "Twitter Web Client", "id_str": "794237239014359040", "is_retweet": false}, {"created_at": "Fri Oct 21 21:07:18 +0000 2016", "text": "\u201cWe know the difference between leadership and dictatorship, and the peaceful transition of power is one of the things that sets us apart.\u201d", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 811, "favorite_count": 1789, "source": "TweetDeck", "id_str": "789573802338480128", "is_retweet": false}, {"created_at": "Wed Oct 19 20:31:50 +0000 2016", "text": "RT @TheBriefing2016: Trump is so divisive and offensive, you almost forget his policies are terrible too. https://t.co/A59Zk44qPp", "in_reply_to_screen_name": null, "retweet_count": 2687, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788840101367414786", "is_retweet": true}, {"created_at": "Fri Apr 22 12:28:15 +0000 2016", "text": "Conoce la historia de un gimnasio en Nueva York ayudando a concienciar sobre la encarcelaci\u00f3n masiva. https://t.co/ee4TG3DPTG", "in_reply_to_screen_name": null, "retweet_count": 239, "favorite_count": 489, "source": "TweetDeck", "id_str": "723488586159534080", "is_retweet": false}, {"created_at": "Wed Jan 13 15:58:30 +0000 2016", "text": "Ending the gun industry\u2019s immunity from lawsuits is critical to tackling the epidemic of gun violence in America. https://t.co/p1HoWMXysM", "in_reply_to_screen_name": null, "retweet_count": 511, "favorite_count": 977, "source": "TweetDeck", "id_str": "687302711298146304", "is_retweet": false}, {"created_at": "Fri Aug 12 17:16:32 +0000 2016", "text": "Last night, U.S. Olympic swimmer @Simone_Manuel won gold and made history. https://t.co/fShTxbpX2x", "in_reply_to_screen_name": null, "retweet_count": 2366, "favorite_count": 9127, "source": "Twitter Web Client", "id_str": "764148577643929600", "is_retweet": false}, {"created_at": "Tue Aug 16 20:16:49 +0000 2016", "text": "\"This man is totally, thoroughly unqualified to be president.\" \u2014@JoeBiden on @realDonaldTrump\nhttps://t.co/ZfFj9ZXsfD", "in_reply_to_screen_name": null, "retweet_count": 1835, "favorite_count": 5294, "source": "Twitter Web Client", "id_str": "765643496023728128", "is_retweet": false}, {"created_at": "Thu Feb 18 02:00:32 +0000 2016", "text": "Voting rights, marriage equality, campaign finance\u2014all are at stake in the nomination of our next SCOTUS justice. https://t.co/ymapsCbhci", "in_reply_to_screen_name": null, "retweet_count": 596, "favorite_count": 1203, "source": "TweetDeck", "id_str": "700137792907669504", "is_retweet": false}, {"created_at": "Wed Apr 20 14:33:08 +0000 2016", "text": "\"Erica has turned her sorrow into a strategy and her mourning into a movement.\" \u2014Hillary in New York last night\nhttps://t.co/k1WtDQxrdU", "in_reply_to_screen_name": null, "retweet_count": 1114, "favorite_count": 2528, "source": "Twitter Web Client", "id_str": "722795238469738496", "is_retweet": false}, {"created_at": "Sat Jun 04 21:21:29 +0000 2016", "text": "Donald Trump\u2019s not just wrong about Judge Curiel\u2014he\u2019s wrong about America. He\u2019s wrong about what makes this country great.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 953, "favorite_count": 2214, "source": "TweetDeck", "id_str": "739205459039641600", "is_retweet": false}, {"created_at": "Fri Oct 28 14:53:35 +0000 2016", "text": "\u201cI need you to knock on doors.\nI need you to make phone calls.\nYou gotta talk to your friends, including your Repub\u2026 https://t.co/he3TvFW0p4", "in_reply_to_screen_name": null, "retweet_count": 6318, "favorite_count": 15035, "source": "Media Studio", "id_str": "792016466589708288", "is_retweet": false}, {"created_at": "Mon Oct 03 17:59:54 +0000 2016", "text": "RT @HFA: \"Not a single CEO of a Fortune 100 company supports Trump\u2019s campaign.\" \u2014@HillaryClinton", "in_reply_to_screen_name": null, "retweet_count": 900, "favorite_count": 0, "source": "TweetDeck", "id_str": "783003658241863680", "is_retweet": true}, {"created_at": "Fri Nov 04 20:08:21 +0000 2016", "text": "\"I sorta get away with things like that.\" \u2014Donald Trump, on bursting into Miss Universe pageant dressing rooms https://t.co/dwRPlqMhEL", "in_reply_to_screen_name": null, "retweet_count": 10065, "favorite_count": 17101, "source": "Media Studio", "id_str": "794632397568385024", "is_retweet": false}, {"created_at": "Thu Sep 08 01:25:41 +0000 2016", "text": "RT @TheBriefing2016: Trump tried to prove he'd be fit to serve as president...by comparing @POTUS unfavorably to Putin. #NBCNewsForum https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1814, "favorite_count": 0, "source": "TweetDeck", "id_str": "773693758265262080", "is_retweet": true}, {"created_at": "Mon Jul 25 21:45:27 +0000 2016", "text": "Get the details you need to know ahead of day one at the #DemConvention: https://t.co/1SNEooghOa", "in_reply_to_screen_name": null, "retweet_count": 422, "favorite_count": 1252, "source": "TweetDeck", "id_str": "757693268083806209", "is_retweet": false}, {"created_at": "Tue Sep 27 02:40:04 +0000 2016", "text": "When Donald Trump says he has a \"winning temperament.\" #debatenight https://t.co/ElQ7aG2vxu", "in_reply_to_screen_name": null, "retweet_count": 26460, "favorite_count": 50396, "source": "TweetDeck", "id_str": "780597846814982144", "is_retweet": false}, {"created_at": "Sat Jun 11 17:34:16 +0000 2016", "text": ".@realDonaldTrump is temperamentally unfit to be president and Commander-in-Chief.\nhttps://t.co/pH28V4JWjP", "in_reply_to_screen_name": null, "retweet_count": 2557, "favorite_count": 6785, "source": "Twitter Web Client", "id_str": "741684990073667585", "is_retweet": false}, {"created_at": "Sun Feb 28 20:22:18 +0000 2016", "text": "Saying hello to the overflow room in Atlanta.\nhttps://t.co/RFElTABimp", "in_reply_to_screen_name": null, "retweet_count": 913, "favorite_count": 2264, "source": "Twitter Web Client", "id_str": "704038940139913216", "is_retweet": false}, {"created_at": "Thu Sep 01 01:01:48 +0000 2016", "text": "RT @Hillary_esp: \"Nunca les mentir\u00e9\" \u2014Donald Trump, el 18 de agosto de 2016. https://t.co/16bdRImaSr", "in_reply_to_screen_name": null, "retweet_count": 1538, "favorite_count": 0, "source": "TweetDeck", "id_str": "771151034509037568", "is_retweet": true}, {"created_at": "Tue May 03 15:32:30 +0000 2016", "text": "Let's act on coal miner safety so people like Don Blankenship are held accountable for blatantly disregarding it. https://t.co/eyXdXpvTuH", "in_reply_to_screen_name": null, "retweet_count": 763, "favorite_count": 1350, "source": "TweetDeck", "id_str": "727521221936582656", "is_retweet": false}, {"created_at": "Sat Sep 24 21:05:47 +0000 2016", "text": "Hillary's been fighting for women and girls her entire career\u2014and she's just getting started. https://t.co/NMnrgEzNkT", "in_reply_to_screen_name": null, "retweet_count": 2982, "favorite_count": 7424, "source": "TweetDeck", "id_str": "779788945953591296", "is_retweet": false}, {"created_at": "Fri Oct 14 21:25:38 +0000 2016", "text": "RT @timkaine: We're up in the polls\u2014that's great. But when the wind's at your back, it's time to run faster. Be a part of this: https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 3152, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787041701156286464", "is_retweet": true}, {"created_at": "Sat Jul 02 14:03:51 +0000 2016", "text": "The company you keep says a lot about you (maybe no one ever told Donald Trump). https://t.co/PpgSed6aZJ", "in_reply_to_screen_name": null, "retweet_count": 1906, "favorite_count": 3568, "source": "TweetDeck", "id_str": "749242183362961408", "is_retweet": false}, {"created_at": "Tue Mar 15 00:04:57 +0000 2016", "text": "Moved by the families I met in Chicago who have lost children to gun violence. Their grief is a call to action. -H https://t.co/DS1YnioSDs", "in_reply_to_screen_name": null, "retweet_count": 1383, "favorite_count": 4128, "source": "TweetDeck", "id_str": "709530791831838720", "is_retweet": false}, {"created_at": "Sun Jan 24 21:24:28 +0000 2016", "text": "It\u2019s 2016. The days of dismissing the pay gap as a \"women's issue\" are over. https://t.co/Wk8jbbz2f5", "in_reply_to_screen_name": null, "retweet_count": 1568, "favorite_count": 3141, "source": "TweetDeck", "id_str": "691371008834551808", "is_retweet": false}, {"created_at": "Tue Jul 26 02:42:12 +0000 2016", "text": "\u201cWe\u2019re not going to be Donald Trump\u2019s hate-filled America\u2014not now, not ever!\u201d \u2014@ElizabethforMA #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2437, "favorite_count": 6793, "source": "TweetDeck", "id_str": "757767949327400964", "is_retweet": false}, {"created_at": "Thu Jun 09 23:17:02 +0000 2016", "text": "Honored to have your support. https://t.co/93fTPrW1Ii", "in_reply_to_screen_name": null, "retweet_count": 1113, "favorite_count": 4862, "source": "Twitter Web Client", "id_str": "741046477183668224", "is_retweet": false}, {"created_at": "Wed Jul 13 16:59:55 +0000 2016", "text": "\"I want...all of our children to grow up in a country where violence like the kind we saw last week doesn\u2019t happen again\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 904, "favorite_count": 3192, "source": "TweetDeck", "id_str": "753272757467635712", "is_retweet": false}, {"created_at": "Tue Jan 12 02:41:54 +0000 2016", "text": "Hillary at tonight\u2019s #DemForum: https://t.co/ilsuyvg0qg", "in_reply_to_screen_name": null, "retweet_count": 503, "favorite_count": 1091, "source": "TweetDeck", "id_str": "686739852709244928", "is_retweet": false}, {"created_at": "Thu Aug 04 20:23:17 +0000 2016", "text": "Anyone who you can provoke with a tweet should not be anywhere near nuclear weapons: https://t.co/NLP0SRnuYt", "in_reply_to_screen_name": null, "retweet_count": 1668, "favorite_count": 4590, "source": "TweetDeck", "id_str": "761296469991256066", "is_retweet": false}, {"created_at": "Sat Jul 23 03:18:20 +0000 2016", "text": "RT @GabbyGiffords: Congrats to my friend @timkaine on being @hillaryclinton's running mate! Excited to stand w/you both &amp; fight for safer c\u2026", "in_reply_to_screen_name": null, "retweet_count": 1817, "favorite_count": 0, "source": "TweetDeck", "id_str": "756689878876905472", "is_retweet": true}, {"created_at": "Thu Oct 20 04:46:09 +0000 2016", "text": "\"I'm happy to compare my 30 years of experience with your 30 years.\" \u2014Hillary to Trump #DebateNight https://t.co/TwOpwfFUZ5", "in_reply_to_screen_name": null, "retweet_count": 22497, "favorite_count": 54718, "source": "Media Studio", "id_str": "788964498401071104", "is_retweet": false}, {"created_at": "Fri Oct 21 15:14:58 +0000 2016", "text": "The next president should sweat the details on policy\u2014because it's not just a detail when it's your child. https://t.co/oQNlOd5bcX", "in_reply_to_screen_name": null, "retweet_count": 4966, "favorite_count": 12217, "source": "Media Studio", "id_str": "789485135791988736", "is_retweet": false}, {"created_at": "Sun Feb 21 22:02:27 +0000 2016", "text": "@AntonioFrench @HillaryClinton @MO4Hillary Love this!", "in_reply_to_screen_name": "AntonioFrench", "retweet_count": 61, "favorite_count": 153, "source": "TweetDeck", "id_str": "701527429018419200", "is_retweet": false}, {"created_at": "Mon Sep 26 22:05:39 +0000 2016", "text": "RT @oneVoxdotcom: Study: Donald Trump would raise taxes on millions of middle-class families https://t.co/NmTl8m1R1G https://t.co/INemC8Roms", "in_reply_to_screen_name": null, "retweet_count": 1478, "favorite_count": 0, "source": "TweetDeck", "id_str": "780528788102864896", "is_retweet": true}, {"created_at": "Wed May 04 23:46:39 +0000 2016", "text": "Trump just stood by his proposals to ban Muslims from entering the U.S. &amp; deport millions of immigrants. Seriously.\nhttps://t.co/8KYse7O8Wn", "in_reply_to_screen_name": null, "retweet_count": 2288, "favorite_count": 2690, "source": "Twitter Web Client", "id_str": "728007966629060608", "is_retweet": false}, {"created_at": "Wed Mar 09 03:01:57 +0000 2016", "text": "Everyone who works hard and does their part should be able to say, \u201cI can make it in America.\u201d", "in_reply_to_screen_name": null, "retweet_count": 758, "favorite_count": 1934, "source": "TweetDeck", "id_str": "707401004661264384", "is_retweet": false}, {"created_at": "Tue Mar 08 03:07:42 +0000 2016", "text": "In March 1933, First Lady Eleanor Roosevelt held the first women-only press conference at the White House. https://t.co/bC9xmwYqak", "in_reply_to_screen_name": null, "retweet_count": 2699, "favorite_count": 5893, "source": "TweetDeck", "id_str": "707040063813754880", "is_retweet": false}, {"created_at": "Sat Jul 23 17:13:30 +0000 2016", "text": "Donald Trump may think America is in decline, but he\u2019s wrong.\n\nAmerica\u2019s best days are still ahead of us.", "in_reply_to_screen_name": null, "retweet_count": 1128, "favorite_count": 3540, "source": "TweetDeck", "id_str": "756900054842089472", "is_retweet": false}, {"created_at": "Sun Sep 18 16:11:29 +0000 2016", "text": "\u201cWe have to face the world as it is but commit ourselves to turning it into what it should be.\u201d \u2014Hillary https://t.co/nEB4qSm2YX", "in_reply_to_screen_name": null, "retweet_count": 2228, "favorite_count": 5666, "source": "TweetDeck", "id_str": "777540558210396160", "is_retweet": false}, {"created_at": "Thu Aug 11 18:02:06 +0000 2016", "text": "It\u2019s not right that Donald Trump can ignore his debts, but students and families can\u2019t refinance theirs.", "in_reply_to_screen_name": null, "retweet_count": 1806, "favorite_count": 5017, "source": "TweetDeck", "id_str": "763797656846102529", "is_retweet": false}, {"created_at": "Tue Jul 12 16:11:32 +0000 2016", "text": "We\u2019re going to make sure that Wall Street, corporations, and the super-rich pay their fair share of taxes.", "in_reply_to_screen_name": null, "retweet_count": 708, "favorite_count": 2466, "source": "TweetDeck", "id_str": "752898194212880384", "is_retweet": false}, {"created_at": "Wed Sep 07 22:24:21 +0000 2016", "text": "A man you can bait with a tweet is not a man we can trust with nuclear weapons. https://t.co/qZ3Z10cqKN", "in_reply_to_screen_name": null, "retweet_count": 4356, "favorite_count": 8142, "source": "Twitter Web Client", "id_str": "773648127366688768", "is_retweet": false}, {"created_at": "Tue Oct 11 19:40:31 +0000 2016", "text": "At this rate, 1 in 8 homes in Florida could be underwater by the end of the century, when kids born today are grandparents.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 542, "favorite_count": 1173, "source": "TweetDeck", "id_str": "785928083618557956", "is_retweet": false}, {"created_at": "Mon Oct 10 19:26:53 +0000 2016", "text": "\u201cLast night, Donald Trump spent his time attacking when he should have been apologizing.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1127, "favorite_count": 3611, "source": "TweetDeck", "id_str": "785562262346031104", "is_retweet": false}, {"created_at": "Fri Nov 04 01:06:06 +0000 2016", "text": "\"We know that America is big-hearted, not small-minded. We want to lift people up, not tear each other down.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1240, "favorite_count": 3078, "source": "TweetDeck", "id_str": "794344938846715904", "is_retweet": false}, {"created_at": "Fri Oct 28 00:19:01 +0000 2016", "text": "\"I don't want bullies in my life, and I especially don't want one in the White House.\" \u2014Bryce, a student living wit\u2026 https://t.co/HS8d7jTc1a", "in_reply_to_screen_name": null, "retweet_count": 6354, "favorite_count": 17643, "source": "Media Studio", "id_str": "791796376501792768", "is_retweet": false}, {"created_at": "Fri Jul 29 02:43:08 +0000 2016", "text": "Don\u2019t let anyone tell you that our country is weak\u2014we\u2019re not.\n\nDon\u2019t let anyone tell you we don\u2019t have what it takes\u2014we do.", "in_reply_to_screen_name": null, "retweet_count": 2313, "favorite_count": 6139, "source": "TweetDeck", "id_str": "758855347138244608", "is_retweet": false}, {"created_at": "Wed Apr 06 16:14:44 +0000 2016", "text": "\u201cIt\u2019s time for more businesses to start treating workers as assets to be invested in, not costs to be cut.\u201d -Hillary", "in_reply_to_screen_name": null, "retweet_count": 864, "favorite_count": 1863, "source": "TweetDeck", "id_str": "717747377017368577", "is_retweet": false}, {"created_at": "Fri Feb 05 15:43:20 +0000 2016", "text": "In her closing statement, Hillary called out some of the things she wished they\u2019d brought up in the #DemDebate: https://t.co/T8QWnkTQkC", "in_reply_to_screen_name": null, "retweet_count": 405, "favorite_count": 834, "source": "TweetDeck", "id_str": "695633813704196096", "is_retweet": false}, {"created_at": "Mon Oct 24 17:53:14 +0000 2016", "text": "Donald Trump refused to say that he\u2019d respect the results of this election.\n\nThat\u2019s a direct threat to our democracy.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4353, "favorite_count": 4518, "source": "TweetDeck", "id_str": "790612127996403712", "is_retweet": false}, {"created_at": "Wed Oct 05 01:41:21 +0000 2016", "text": ".@timkaine just reminded Mike Pence of the bigoted things Trump has said about millions of Americans\u2014and Pence couldn't defend it. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 3800, "favorite_count": 9935, "source": "TweetDeck", "id_str": "783482174351806464", "is_retweet": false}, {"created_at": "Thu Jan 14 17:26:38 +0000 2016", "text": "Hillary \"has the experience and right judgment to deliver results for families across the country.\" \u2014@EricHolder https://t.co/mJMQr3eEM5", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 838, "source": "TweetDeck", "id_str": "687687278592962561", "is_retweet": false}, {"created_at": "Thu Oct 20 03:30:27 +0000 2016", "text": "If you think #SheWon, chip in $5 before the midnight FEC deadline: https://t.co/3U33mS9tYL #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 1655, "favorite_count": 6650, "source": "TweetDeck", "id_str": "788945447561879552", "is_retweet": false}, {"created_at": "Thu Aug 25 19:29:58 +0000 2016", "text": "Trump would abolish this bedrock constitutional principle: if you\u2019re born in the U.S., you\u2019re an American citizen. https://t.co/JYJqHhMjsK", "in_reply_to_screen_name": null, "retweet_count": 1187, "favorite_count": 2216, "source": "TweetDeck", "id_str": "768893199016427520", "is_retweet": false}, {"created_at": "Thu Oct 27 18:44:26 +0000 2016", "text": "\u201cSeriously, is there anyone more inspiring than Michelle Obama?\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1365, "favorite_count": 3863, "source": "TweetDeck", "id_str": "791712174683066368", "is_retweet": false}, {"created_at": "Wed Jun 08 02:34:40 +0000 2016", "text": "Unity is better than division, empowerment is better than resentment, and bridges are better than walls. https://t.co/FZbfs0Fc72", "in_reply_to_screen_name": null, "retweet_count": 7580, "favorite_count": 17551, "source": "TweetDeck", "id_str": "740371436439777280", "is_retweet": false}, {"created_at": "Wed Sep 07 16:01:29 +0000 2016", "text": "Donald Trump doesn't \"know why\" African Americans would be offended that he pushed the \"birther\" conspiracy: https://t.co/IY4xocgveh", "in_reply_to_screen_name": null, "retweet_count": 1976, "favorite_count": 3735, "source": "TweetDeck", "id_str": "773551774397530113", "is_retweet": false}, {"created_at": "Thu Sep 15 19:56:23 +0000 2016", "text": "\"People accuse me of all kinds of things\u2014you\u2019ve probably seen that. But nobody ever accuses me of quitting.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1013, "favorite_count": 2302, "source": "TweetDeck", "id_str": "776509989737422848", "is_retweet": false}, {"created_at": "Fri Jul 22 22:03:35 +0000 2016", "text": "\"He doesn\u2019t speak for anyone who thinks our country should be standing together, not splintering apart.\" \u2014Hillary https://t.co/gH2Q6day5J", "in_reply_to_screen_name": null, "retweet_count": 1271, "favorite_count": 3740, "source": "TweetDeck", "id_str": "756610669894627329", "is_retweet": false}, {"created_at": "Mon Oct 10 02:57:01 +0000 2016", "text": "RT @RNicholasBurns: @HillaryClinton won this debate on judgment, intelligence, maturity.  Trump showed how disastrously ill-suited he is fo\u2026", "in_reply_to_screen_name": null, "retweet_count": 5824, "favorite_count": 0, "source": "TweetDeck", "id_str": "785313154528079872", "is_retweet": true}, {"created_at": "Sat Aug 20 14:37:12 +0000 2016", "text": "\"I don't regret anything.\" \u2014Donald Trump, August 2, 2016\nhttps://t.co/TWj7QwVQMP", "in_reply_to_screen_name": null, "retweet_count": 4735, "favorite_count": 7360, "source": "Twitter Web Client", "id_str": "767007582556786688", "is_retweet": false}, {"created_at": "Thu Apr 21 15:44:47 +0000 2016", "text": "In which Hillary reacts to @NBCSNL Hillary skits on @GMA.\nhttps://t.co/6Hcc0V8u3q", "in_reply_to_screen_name": null, "retweet_count": 1013, "favorite_count": 2470, "source": "Twitter Web Client", "id_str": "723175656566083584", "is_retweet": false}, {"created_at": "Tue Sep 27 18:10:07 +0000 2016", "text": "We don\u2019t want to turn against each other.\nWe want to work with one another.\nWe want to set big goals in this country.\n#StrongerTogether", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1222, "favorite_count": 3933, "source": "TweetDeck", "id_str": "780831901204484097", "is_retweet": false}, {"created_at": "Fri Sep 09 20:51:41 +0000 2016", "text": "Let's send Donald Trump a powerful message on Election Day. \n\nhttps://t.co/tTgeqxNqYm #LoveTrumpsHate https://t.co/lVvhZhDdP9", "in_reply_to_screen_name": null, "retweet_count": 2781, "favorite_count": 6545, "source": "TweetDeck", "id_str": "774349582981558273", "is_retweet": false}, {"created_at": "Fri Jun 17 13:57:36 +0000 2016", "text": "Trump has made a big show of supposedly supporting veterans. In reality, he's done the exact opposite. https://t.co/LipYR4dYxI", "in_reply_to_screen_name": null, "retweet_count": 1724, "favorite_count": 3426, "source": "TweetDeck", "id_str": "743804793420910592", "is_retweet": false}, {"created_at": "Thu Jul 28 01:39:57 +0000 2016", "text": "\"Trump says he wants to run the nation like he\u2019s run his business.\n\nGod help us!\" \u2014@MikeBloomberg", "in_reply_to_screen_name": null, "retweet_count": 3511, "favorite_count": 7729, "source": "TweetDeck", "id_str": "758477059286982657", "is_retweet": false}, {"created_at": "Thu Sep 29 20:00:57 +0000 2016", "text": "Glad to be back in Iowa today where it all began for the start of early voting. Find your polling place here: https://t.co/jfd3CXLD1s -H", "in_reply_to_screen_name": null, "retweet_count": 1131, "favorite_count": 3883, "source": "TweetDeck", "id_str": "781584571427090432", "is_retweet": false}, {"created_at": "Tue Nov 01 18:02:28 +0000 2016", "text": "RT @mikereedschmidt: \"Clinton is eminently qualified to serve as President, and Trump is unfit for this office.\" ~2/3rds of living American\u2026", "in_reply_to_screen_name": null, "retweet_count": 2553, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793513555035291648", "is_retweet": true}, {"created_at": "Fri Jan 08 01:14:36 +0000 2016", "text": "Why @PPact broke with tradition to endorse Hillary: https://t.co/U0mFseDkm8 https://t.co/lbDRtlDIil", "in_reply_to_screen_name": null, "retweet_count": 399, "favorite_count": 910, "source": "Twitter Web Client", "id_str": "685268330811281408", "is_retweet": false}, {"created_at": "Thu Apr 21 21:23:19 +0000 2016", "text": "\"Once you've paid your debt to society, your voting rights should be returned immediately.\" \u2014Hillary on @GMA\nhttps://t.co/ZlyKOYwsOo", "in_reply_to_screen_name": null, "retweet_count": 1627, "favorite_count": 3614, "source": "Twitter Web Client", "id_str": "723260853357674497", "is_retweet": false}, {"created_at": "Mon Sep 26 12:05:23 +0000 2016", "text": "RT this if you've got Hillary's back tonight. #Debates2016 https://t.co/r66XZWiNJL", "in_reply_to_screen_name": null, "retweet_count": 27771, "favorite_count": 30401, "source": "TweetDeck", "id_str": "780377725328625664", "is_retweet": false}, {"created_at": "Thu Apr 28 21:50:12 +0000 2016", "text": "Couldn't agree more, @PattyMurray. It's time for Republicans to address this threat: https://t.co/KjmWMDOgDl -H https://t.co/NTkJrVvMql", "in_reply_to_screen_name": null, "retweet_count": 556, "favorite_count": 1126, "source": "TweetDeck", "id_str": "725804331522514945", "is_retweet": false}, {"created_at": "Sat Mar 05 21:26:13 +0000 2016", "text": "\"There is a co-worker I have who is male...I recently found out he was getting paid more than me. I was shocked.\u201d https://t.co/DTSZsqhHBF", "in_reply_to_screen_name": null, "retweet_count": 480, "favorite_count": 1134, "source": "TweetDeck", "id_str": "706229353105989632", "is_retweet": false}, {"created_at": "Wed Sep 28 15:03:04 +0000 2016", "text": "For forty years, every presidential candidate has released their tax returns\u2014except for Trump. What's he hiding? https://t.co/yqTpfXvcV6", "in_reply_to_screen_name": null, "retweet_count": 3305, "favorite_count": 7598, "source": "TweetDeck", "id_str": "781147219177140224", "is_retweet": false}, {"created_at": "Mon Aug 01 01:01:58 +0000 2016", "text": "Do all the good we can, in all the ways we can, in all the places we can, for all the people we can.\nhttps://t.co/L2qe6FedaN", "in_reply_to_screen_name": null, "retweet_count": 5949, "favorite_count": 15775, "source": "Twitter Web Client", "id_str": "759917053524316161", "is_retweet": false}, {"created_at": "Sat Aug 06 20:59:02 +0000 2016", "text": "Why the @HoustonChron is urging voters to support Hillary in the \u201cstarkest political choice in living memory\u201d: https://t.co/phjf19ybXr", "in_reply_to_screen_name": null, "retweet_count": 2231, "favorite_count": 5615, "source": "TweetDeck", "id_str": "762030244584890368", "is_retweet": false}, {"created_at": "Wed Feb 10 02:05:44 +0000 2016", "text": "To @BernieSanders, congratulations. To New Hampshire, thank you. And to our volunteers: I\u2019m so grateful for what you built. Now, onward. -H", "in_reply_to_screen_name": null, "retweet_count": 2580, "favorite_count": 6639, "source": "TweetDeck", "id_str": "697239997011922944", "is_retweet": false}, {"created_at": "Sat Oct 01 19:52:40 +0000 2016", "text": "RT @mayaharris_: Encouraging to see AT&amp;T CEO Randall Stephenson's strong statement on race and justice. https://t.co/xkeJ4m72gW", "in_reply_to_screen_name": null, "retweet_count": 1057, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "782307260412338176", "is_retweet": true}, {"created_at": "Thu Sep 08 23:00:58 +0000 2016", "text": "Hillary\u2019s talking to @nbcusa_inc about her faith live in Kansas City. Watch here: https://t.co/nhX3lDn3Eb", "in_reply_to_screen_name": null, "retweet_count": 372, "favorite_count": 1171, "source": "TweetDeck", "id_str": "774019727471603713", "is_retweet": false}, {"created_at": "Sat Jul 02 01:00:30 +0000 2016", "text": "Praying for the safety of the hostages in Bangladesh. To the terrorists: We will never succumb to fear and hate. -H", "in_reply_to_screen_name": null, "retweet_count": 2577, "favorite_count": 9200, "source": "Twitter for iPhone", "id_str": "749045049275609088", "is_retweet": false}, {"created_at": "Wed Nov 09 00:12:06 +0000 2016", "text": "Remember, if you are in line before polls close, you can vote! Have a question? Call 1-917-444-5915. https://t.co/2MVKOatmvy", "in_reply_to_screen_name": null, "retweet_count": 12426, "favorite_count": 21210, "source": "TweetDeck", "id_str": "796143289971994624", "is_retweet": false}, {"created_at": "Fri Aug 26 16:36:16 +0000 2016", "text": "On #WomensEqualityDay, celebrate your right to vote by making sure you're ready to exercise it: https://t.co/oQJdlV15S2", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1251, "favorite_count": 2654, "source": "TweetDeck", "id_str": "769211873283551232", "is_retweet": false}, {"created_at": "Wed Sep 07 17:52:32 +0000 2016", "text": ".@POTUS, @madeleine, and Leon Panetta agree: Hillary's one of the best secretaries of state we've had. https://t.co/UV6XBW7GCM", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 3350, "source": "TweetDeck", "id_str": "773579721586143232", "is_retweet": false}, {"created_at": "Sun Feb 14 02:51:33 +0000 2016", "text": "\"If anyone needed a reminder of how important it is to take back the Senate &amp; hold onto the White House\u2014look at the Supreme Court.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1387, "favorite_count": 3052, "source": "TweetDeck", "id_str": "698701081564545025", "is_retweet": false}, {"created_at": "Thu Jul 07 15:54:18 +0000 2016", "text": "America woke up to yet another tragedy of a life cut down too soon. Black Lives Matter. #PhilandoCastile -H", "in_reply_to_screen_name": null, "retweet_count": 10160, "favorite_count": 24635, "source": "TweetDeck", "id_str": "751081918712676352", "is_retweet": false}, {"created_at": "Tue Jul 19 21:21:54 +0000 2016", "text": "Live from HQ: @BrynneCraig, @LorellaPraeli, and @JessLivMo introduce our 3 Million Stronger voter registration goal: https://t.co/7jW5sbh6Hp", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 1244, "source": "TweetDeck", "id_str": "755513018205732866", "is_retweet": false}, {"created_at": "Mon Jan 11 19:31:23 +0000 2016", "text": "Backstage at @TheEllenShow! Tune in today to see Hillary play Heads Up! and talk selfies with Ellen. https://t.co/S7xU9dPaGN", "in_reply_to_screen_name": null, "retweet_count": 399, "favorite_count": 1534, "source": "TweetDeck", "id_str": "686631510783471616", "is_retweet": false}, {"created_at": "Sun Sep 11 12:07:46 +0000 2016", "text": "We'll never forget the horror of September 11, 2001. Today, let's honor the lives and tremendous spirit of the victims and responders. -H", "in_reply_to_screen_name": null, "retweet_count": 12605, "favorite_count": 35753, "source": "TweetDeck", "id_str": "774942510582038529", "is_retweet": false}, {"created_at": "Fri Jul 29 02:04:40 +0000 2016", "text": "Getting ready. https://t.co/9ik6n738DO", "in_reply_to_screen_name": null, "retweet_count": 1973, "favorite_count": 8973, "source": "TweetDeck", "id_str": "758845669280878593", "is_retweet": false}, {"created_at": "Tue Mar 15 17:01:49 +0000 2016", "text": "You\u2019re welcome at (the real) HQ any time, @BroadCity.\nhttps://t.co/BQIFqxoTQV", "in_reply_to_screen_name": null, "retweet_count": 1957, "favorite_count": 4203, "source": "Twitter Web Client", "id_str": "709786692647911424", "is_retweet": false}, {"created_at": "Tue Mar 29 20:59:26 +0000 2016", "text": "(The \"F\" doesn't stand for \"friends\") https://t.co/KhYNGeI6b4", "in_reply_to_screen_name": null, "retweet_count": 1484, "favorite_count": 3493, "source": "TweetDeck", "id_str": "714919922002956288", "is_retweet": false}, {"created_at": "Thu Oct 20 16:33:03 +0000 2016", "text": "RT @HillaryforVA: BREAKING: Voter registration in #VirWINia extended through Friday at 11:59 p.m. Register in minutes at https://t.co/yqpXb\u2026", "in_reply_to_screen_name": null, "retweet_count": 1966, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789142394822426624", "is_retweet": true}, {"created_at": "Fri Jun 03 00:04:48 +0000 2016", "text": "Abusive payday lenders have preyed on Americans for too long. @CFPB's new rule will protect families; the next president should do the same.", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 2915, "source": "TweetDeck", "id_str": "738521782588735488", "is_retweet": false}, {"created_at": "Fri Oct 07 13:01:55 +0000 2016", "text": "Running for president was a little different back in 1992. https://t.co/tfWQX8qUsI https://t.co/buDdCaL0xv", "in_reply_to_screen_name": null, "retweet_count": 2493, "favorite_count": 10626, "source": "TweetDeck", "id_str": "784378220477026304", "is_retweet": false}, {"created_at": "Fri Jun 03 21:51:22 +0000 2016", "text": "Trump is attacking a judge based on his heritage because Trump thinks *he's* the victim of bias here. https://t.co/gMxiQIpye4", "in_reply_to_screen_name": null, "retweet_count": 1682, "favorite_count": 3421, "source": "Twitter for iPhone", "id_str": "738850588448960512", "is_retweet": false}, {"created_at": "Thu Aug 11 16:50:22 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump\u2019s tax plan mostly helps...Donald Trump. And people like him at the top. https://t.co/5luTzXmZDP", "in_reply_to_screen_name": null, "retweet_count": 1533, "favorite_count": 0, "source": "TweetDeck", "id_str": "763779605325029376", "is_retweet": true}, {"created_at": "Wed Mar 23 16:56:37 +0000 2016", "text": "We live in a complex and dangerous world. We need leadership that\u2019s strong, smart, and steady.\nhttps://t.co/sI5VMLsJlR", "in_reply_to_screen_name": null, "retweet_count": 1590, "favorite_count": 3177, "source": "Twitter Web Client", "id_str": "712684486605955074", "is_retweet": false}, {"created_at": "Wed Jul 13 17:00:41 +0000 2016", "text": "Let's listen to families whose loved ones have been killed in police incidents. Alton Sterling. Philando Castile. Sandra Bland\u2014one year ago.", "in_reply_to_screen_name": null, "retweet_count": 1045, "favorite_count": 2996, "source": "TweetDeck", "id_str": "753272950598631428", "is_retweet": false}, {"created_at": "Tue Feb 23 01:32:16 +0000 2016", "text": "In Ohio and across the country, Republicans are once again attacking women's health. We won't stand for this. https://t.co/X2w3ul2now", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 2045, "source": "TweetDeck", "id_str": "701942619228737537", "is_retweet": false}, {"created_at": "Wed Nov 09 16:53:02 +0000 2016", "text": "\u201cWe are stronger together and will go forward together. And you should never, ever regret fighting for that.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 71248, "favorite_count": 179565, "source": "TweetDeck", "id_str": "796395181008416773", "is_retweet": false}, {"created_at": "Sun Feb 14 14:02:37 +0000 2016", "text": "Our country can't live up to its potential unless we give every American a chance to live up to theirs. https://t.co/3jTsywrvvP", "in_reply_to_screen_name": null, "retweet_count": 652, "favorite_count": 1620, "source": "TweetDeck", "id_str": "698869960383320064", "is_retweet": false}, {"created_at": "Thu Feb 04 04:06:22 +0000 2016", "text": "We can dream big and fight for progressive values\u2014AND make a real difference in Americans' lives. That is what we will do. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 682, "favorite_count": 1643, "source": "TweetDeck", "id_str": "695096030145208320", "is_retweet": false}, {"created_at": "Wed Mar 09 04:28:07 +0000 2016", "text": "\"I want to talk about what working families are up against.\" Hillary\u2019s remarks tonight after winning in Mississippi.\nhttps://t.co/oYfnmCKJPs", "in_reply_to_screen_name": null, "retweet_count": 1378, "favorite_count": 3495, "source": "Twitter Web Client", "id_str": "707422691918106624", "is_retweet": false}, {"created_at": "Fri Jul 29 02:08:52 +0000 2016", "text": "So proud. https://t.co/ketX6fS9NY", "in_reply_to_screen_name": null, "retweet_count": 14502, "favorite_count": 60603, "source": "TweetDeck", "id_str": "758846722625855496", "is_retweet": false}, {"created_at": "Tue Sep 27 17:58:15 +0000 2016", "text": "\"I don\u2019t think that any family should have to pay more than 10% of their income on child care.\u201d \u2014Hillary https://t.co/pepW0auI8n", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 756, "favorite_count": 2062, "source": "TweetDeck", "id_str": "780828916919504896", "is_retweet": false}, {"created_at": "Fri Oct 28 12:15:43 +0000 2016", "text": "\"First ladies, we rock.\" \u2014@FLOTUS\n\nGet all the highlights from Michelle and Hillary's first-ever joint rally: https://t.co/k7M8R4cEQa", "in_reply_to_screen_name": null, "retweet_count": 2070, "favorite_count": 7239, "source": "TweetDeck", "id_str": "791976740046401536", "is_retweet": false}, {"created_at": "Mon Aug 15 17:08:53 +0000 2016", "text": "\"No matter how far he travels, @JoeBiden never forgets where he\u2019s from.\" \u2014Hillary in Scranton https://t.co/UnJ1zs3qXW", "in_reply_to_screen_name": null, "retweet_count": 1368, "favorite_count": 6072, "source": "TweetDeck", "id_str": "765233814255857664", "is_retweet": false}, {"created_at": "Wed Oct 05 19:34:18 +0000 2016", "text": "RT @JamilSmith: Though Pence delivered a polished performance, @HeerJeet writes, he told a lot of lies. It\u2019s on us to care. https://t.co/0Y\u2026", "in_reply_to_screen_name": null, "retweet_count": 2362, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783752189806272513", "is_retweet": true}, {"created_at": "Fri Oct 14 00:14:51 +0000 2016", "text": "Thank you, @FLOTUS. https://t.co/njbmWdvjtv", "in_reply_to_screen_name": null, "retweet_count": 4084, "favorite_count": 16555, "source": "TweetDeck", "id_str": "786721896935071745", "is_retweet": false}, {"created_at": "Fri Jul 29 19:22:26 +0000 2016", "text": "Capt. Khan embodied the best of our values when his actions saved his unit. Last night, his parents told his story:\nhttps://t.co/3z8Wvf8Xdg", "in_reply_to_screen_name": null, "retweet_count": 6254, "favorite_count": 16592, "source": "Twitter Web Client", "id_str": "759106829670506497", "is_retweet": false}, {"created_at": "Mon Oct 24 19:58:17 +0000 2016", "text": "Good question. https://t.co/wrd7SUI4cI https://t.co/Gpio1LA5Z8", "in_reply_to_screen_name": null, "retweet_count": 3715, "favorite_count": 6651, "source": "TweetDeck", "id_str": "790643596693233664", "is_retweet": false}, {"created_at": "Sun May 15 23:16:11 +0000 2016", "text": "Incomes haven\u2019t gone up for most Americans in about 15 years. We\u2019ve got to fix that. https://t.co/e33YsAu1Ed", "in_reply_to_screen_name": null, "retweet_count": 1819, "favorite_count": 5687, "source": "TweetDeck", "id_str": "731986563505246208", "is_retweet": false}, {"created_at": "Tue Aug 09 20:03:51 +0000 2016", "text": "\"A person seeking to be the President of the United States should not suggest violence in any way.\" https://t.co/Uu55CBCqdK", "in_reply_to_screen_name": null, "retweet_count": 14536, "favorite_count": 33098, "source": "TweetDeck", "id_str": "763103518773436416", "is_retweet": false}, {"created_at": "Tue Aug 16 12:14:50 +0000 2016", "text": "Donald Trump says he'll create a new test for immigrants.\n\nIt's a test he'd fail.\nhttps://t.co/LZoCq8bJFx", "in_reply_to_screen_name": null, "retweet_count": 4894, "favorite_count": 9692, "source": "Twitter Web Client", "id_str": "765522203563536384", "is_retweet": false}, {"created_at": "Fri Oct 07 02:31:10 +0000 2016", "text": "RT @TheBriefing2016: There were almost too many lies to count....but we kept score. https://t.co/VatW0LV1l0", "in_reply_to_screen_name": null, "retweet_count": 2319, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "784219487079923713", "is_retweet": true}, {"created_at": "Tue Aug 02 19:52:02 +0000 2016", "text": "RT @timkaine: First Trump attacked the Hotel Roanoke. Then a Gold Star VA family. Today, he kicked a baby out of a VA rally. Virginia is no\u2026", "in_reply_to_screen_name": null, "retweet_count": 5777, "favorite_count": 0, "source": "TweetDeck", "id_str": "760563828799205376", "is_retweet": true}, {"created_at": "Mon Jun 27 14:59:53 +0000 2016", "text": "It's wrong that millionaires get more tax cuts while families are facing barriers to success.\n\nThis election is a chance to make it right.", "in_reply_to_screen_name": null, "retweet_count": 1270, "favorite_count": 4005, "source": "TweetDeck", "id_str": "747444345389875200", "is_retweet": false}, {"created_at": "Fri May 27 23:03:49 +0000 2016", "text": "From ripping off veterans to demeaning women, Trump spent the week insulting just about everyone: https://t.co/RubNk8j7c2", "in_reply_to_screen_name": null, "retweet_count": 1992, "favorite_count": 3082, "source": "TweetDeck", "id_str": "736332107912491008", "is_retweet": false}, {"created_at": "Mon Mar 28 21:31:13 +0000 2016", "text": "At our best, America has united behind the ideal that everyone deserves a fair shot. At its best, the Supreme Court has defended that ideal.", "in_reply_to_screen_name": null, "retweet_count": 603, "favorite_count": 1454, "source": "TweetDeck", "id_str": "714565532431699968", "is_retweet": false}, {"created_at": "Tue Aug 02 14:32:04 +0000 2016", "text": ".@realDonaldTrump, when someone puts in the work, you are supposed to pay them.\nhttps://t.co/fDVl1mWxrU", "in_reply_to_screen_name": null, "retweet_count": 2576, "favorite_count": 7447, "source": "Twitter Web Client", "id_str": "760483309080018944", "is_retweet": false}, {"created_at": "Fri Nov 04 21:45:15 +0000 2016", "text": "The progress we\u2019ve made under @POTUS is on the line. We owe it to our kids to get out and vote:\u2026 https://t.co/R2E1cHy1IU", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1207, "favorite_count": 3041, "source": "TweetDeck", "id_str": "794656782773846018", "is_retweet": false}, {"created_at": "Wed Feb 24 21:08:19 +0000 2016", "text": "We\u2019re working to break down barriers for every American by organizing state to state. Follow @HFA for updates from the official campaign!", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 1368, "source": "TweetDeck", "id_str": "702600971394879488", "is_retweet": false}, {"created_at": "Sun Jul 10 19:04:07 +0000 2016", "text": "\u201cNecesitamos escribir un nuevo cap\u00edtulo en el sue\u00f1o americano\u2013y no puede ser el Cap\u00edtulo 11 (de bancarrota)\u201d. https://t.co/W8mJk7eUbA", "in_reply_to_screen_name": null, "retweet_count": 443, "favorite_count": 1112, "source": "TweetDeck", "id_str": "752216850466009089", "is_retweet": false}, {"created_at": "Wed Feb 10 16:32:07 +0000 2016", "text": "Fighting to improve the lives of kids and families\u2014and never giving up.\nhttps://t.co/kIozH3pPHx", "in_reply_to_screen_name": null, "retweet_count": 1227, "favorite_count": 2269, "source": "Twitter Web Client", "id_str": "697458033392091136", "is_retweet": false}, {"created_at": "Tue Aug 23 19:36:47 +0000 2016", "text": "RT @MariaTCardona: David Duke\u2019s show cheers Trump-Breitbart merger: \u201cWe appear to have taken over the Republican Party\u201d https://t.co/uKQglN\u2026", "in_reply_to_screen_name": null, "retweet_count": 1584, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "768170138302423040", "is_retweet": true}, {"created_at": "Tue Sep 27 02:13:36 +0000 2016", "text": "RT @TheBriefing2016: Trump's top Russia advisor is being probed for meeting with the Kremlin aide in charge of US election intelligence.  h\u2026", "in_reply_to_screen_name": null, "retweet_count": 1250, "favorite_count": 0, "source": "TweetDeck", "id_str": "780591186046222336", "is_retweet": true}, {"created_at": "Sun Feb 28 01:40:36 +0000 2016", "text": "It may seem odd to hear someone running for president say we need more love and kindness in America\u2014but we do.\nhttps://t.co/5nUkMsVQgp", "in_reply_to_screen_name": null, "retweet_count": 2187, "favorite_count": 4434, "source": "Twitter Web Client", "id_str": "703756656346161152", "is_retweet": false}, {"created_at": "Sun Nov 06 23:46:09 +0000 2016", "text": "RT @HillaryforMN: Somali-Americans are not a burden or a threat\u2014they are our neighbors. We are #StrongerTogether. https://t.co/mmxcXYUuqX", "in_reply_to_screen_name": null, "retweet_count": 1785, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795411982811885568", "is_retweet": true}, {"created_at": "Thu Feb 18 04:56:12 +0000 2016", "text": "\u2714\ufe0f Lifesaving cancer screenings \n\u2714\ufe0f Birth control\n\u2714\ufe0f Sex education\n\nPretty wonderful.  https://t.co/CtGuTqwsVc", "in_reply_to_screen_name": null, "retweet_count": 4029, "favorite_count": 8170, "source": "Twitter for iPhone", "id_str": "700182000674537472", "is_retweet": false}, {"created_at": "Tue Mar 15 02:45:34 +0000 2016", "text": "The right to vote is the heart of our democracy. We should restore it to those who have served their sentences. https://t.co/jdFPadSlLI", "in_reply_to_screen_name": null, "retweet_count": 1369, "favorite_count": 2681, "source": "Twitter Web Client", "id_str": "709571211496448003", "is_retweet": false}, {"created_at": "Thu Jul 28 02:16:35 +0000 2016", "text": "RT @Hillary_esp: \"Aprend\u00ed los valores del pueblo: fe, familia y trabajo. Los mismos valores de la comunidad latina aqu\u00ed en nuestro pa\u00eds\"\u2013@t\u2026", "in_reply_to_screen_name": null, "retweet_count": 662, "favorite_count": 0, "source": "TweetDeck", "id_str": "758486278648115202", "is_retweet": true}, {"created_at": "Thu Oct 20 01:39:17 +0000 2016", "text": "It's been four minutes. Donald Trump could have launched a nuclear weapon by now. #DebateNight https://t.co/vDvFPTKzI0", "in_reply_to_screen_name": null, "retweet_count": 3667, "favorite_count": 8279, "source": "TweetDeck", "id_str": "788917471399014402", "is_retweet": false}, {"created_at": "Tue Sep 27 02:01:05 +0000 2016", "text": "President Obama was born in the United States. He\u2019s American. Trump only has one reason for refusing to admit it. #debatenight", "in_reply_to_screen_name": null, "retweet_count": 6650, "favorite_count": 17751, "source": "TweetDeck", "id_str": "780588035805175808", "is_retweet": false}, {"created_at": "Mon May 16 23:32:50 +0000 2016", "text": "We\u2019ve got to stop giving companies incentives to move jobs overseas. https://t.co/ma8QY5STT6 #MadeInAmerica https://t.co/WD37SnqXM3", "in_reply_to_screen_name": null, "retweet_count": 795, "favorite_count": 1937, "source": "TweetDeck", "id_str": "732353142642343936", "is_retweet": false}, {"created_at": "Mon Nov 07 21:37:10 +0000 2016", "text": "\"If you work hard, and you work full-time, you shouldn\u2019t still be in poverty at the end of the year.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1378, "favorite_count": 3535, "source": "TweetDeck", "id_str": "795741909515898881", "is_retweet": false}, {"created_at": "Sun Aug 14 18:24:44 +0000 2016", "text": "59 million Americans get help from Social Security. On its 81st anniversary, let's recommit to protecting it. https://t.co/1YMaSX14VF", "in_reply_to_screen_name": null, "retweet_count": 4048, "favorite_count": 12064, "source": "TweetDeck", "id_str": "764890514713899008", "is_retweet": false}, {"created_at": "Wed Apr 20 13:37:15 +0000 2016", "text": "\"Because of you, this campaign is the only one\u2014Democrat or Republican\u2014to win 10 million votes.\u201d https://t.co/kX6LMblMDD", "in_reply_to_screen_name": null, "retweet_count": 1017, "favorite_count": 2405, "source": "TweetDeck", "id_str": "722781176558174208", "is_retweet": false}, {"created_at": "Wed Feb 10 21:36:30 +0000 2016", "text": "It\u2019s not whether you get knocked down that matters, it\u2019s whether you get back up.\nhttps://t.co/1iy497PIPp", "in_reply_to_screen_name": null, "retweet_count": 4171, "favorite_count": 8794, "source": "Twitter Web Client", "id_str": "697534634020593664", "is_retweet": false}, {"created_at": "Tue Sep 13 18:20:38 +0000 2016", "text": "\"America is not about \u2018yes, he will.' It's about \u2018yes, we can.'\" \u2014@POTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1230, "favorite_count": 2946, "source": "TweetDeck", "id_str": "775761118291787776", "is_retweet": false}, {"created_at": "Sat Jul 23 17:20:13 +0000 2016", "text": "Pence slashed education funding in Indiana &amp; gave tax cuts to the wealthiest.\n\nKaine cut his own salary &amp; invested in education in Virginia.", "in_reply_to_screen_name": null, "retweet_count": 3020, "favorite_count": 6577, "source": "TweetDeck", "id_str": "756901746421690368", "is_retweet": false}, {"created_at": "Sun Oct 02 23:00:20 +0000 2016", "text": "Real change happens when Americans come together to work toward a common goal\u2014we'll make it easier to do that. https://t.co/PIbFMWHFSS", "in_reply_to_screen_name": null, "retweet_count": 1341, "favorite_count": 4049, "source": "TweetDeck", "id_str": "782716877231521793", "is_retweet": false}, {"created_at": "Wed Oct 26 19:26:44 +0000 2016", "text": "We\u2019ve learned in this campaign that Donald Trump is the poster boy for what\u2019s wrong with our economy. https://t.co/geyHk15uto", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 790, "favorite_count": 1529, "source": "TweetDeck", "id_str": "791360433424855042", "is_retweet": false}, {"created_at": "Wed Sep 14 13:17:44 +0000 2016", "text": "RT @kurteichenwald: In @Newsweek: Trump Organization business would place national security at risk, even undermining the war on ISIS. http\u2026", "in_reply_to_screen_name": null, "retweet_count": 2256, "favorite_count": 0, "source": "TweetDeck", "id_str": "776047278364758016", "is_retweet": true}, {"created_at": "Thu Aug 25 19:01:58 +0000 2016", "text": "Longtime Ku Klux Klan leader David Duke supports Donald Trump because they share so many of the same values. https://t.co/XuXznBEslA", "in_reply_to_screen_name": null, "retweet_count": 3217, "favorite_count": 5751, "source": "TweetDeck", "id_str": "768886152329830400", "is_retweet": false}, {"created_at": "Thu Oct 20 01:16:55 +0000 2016", "text": "This was not actually a hard question.\n\n\"I strongly support Roe v. Wade.\" \u2014Hillary #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 4271, "favorite_count": 12104, "source": "TweetDeck", "id_str": "788911842668244992", "is_retweet": false}, {"created_at": "Tue Oct 18 20:18:39 +0000 2016", "text": "Carter.\nBush.\nClinton.\nBush.\nObama.\n\nNot one of them believes Donald Trump has what it takes to be president. https://t.co/PJSn0KxJPj", "in_reply_to_screen_name": null, "retweet_count": 11736, "favorite_count": 27526, "source": "TweetDeck", "id_str": "788474393265639424", "is_retweet": false}, {"created_at": "Mon Aug 29 19:36:44 +0000 2016", "text": "RT @ZerlinaMaxwell: &gt;&gt; Trump Keeps Lying About Crime In America. This Is The Truth.  https://t.co/SwsAZqsFZY", "in_reply_to_screen_name": null, "retweet_count": 792, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770344452560941062", "is_retweet": true}, {"created_at": "Thu Aug 25 00:21:48 +0000 2016", "text": "RT @HFA: What's your volunteer personality type? Take our quiz for personalized recommendations on how to help elect Hillary: https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 520, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "768604250955997184", "is_retweet": true}, {"created_at": "Thu Oct 06 00:46:31 +0000 2016", "text": "\u201cYou are more than the way you look.\u201d https://t.co/psJaUgTR2L", "in_reply_to_screen_name": null, "retweet_count": 1548, "favorite_count": 4805, "source": "Twitter Web Client", "id_str": "783830764622348288", "is_retweet": false}, {"created_at": "Wed May 25 18:02:01 +0000 2016", "text": "We\u2019re stronger together. When we embrace immigrants, not denigrate them. When we build bridges, not walls.", "in_reply_to_screen_name": null, "retweet_count": 1315, "favorite_count": 3310, "source": "TweetDeck", "id_str": "735531382148059137", "is_retweet": false}, {"created_at": "Wed Nov 02 16:50:20 +0000 2016", "text": "RT @TraceeEllisRoss: It was an honor introducing @HillaryClinton in Las Vegas. Election Day is Tuesday! Are you ready? https://t.co/5X8CdlQ\u2026", "in_reply_to_screen_name": null, "retweet_count": 2582, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793857786392285186", "is_retweet": true}, {"created_at": "Sun Sep 25 19:12:04 +0000 2016", "text": "Our veterans and their families deserve a president who doesn't disrespect and disparage their sacrifices. https://t.co/sMGa9bxZGX", "in_reply_to_screen_name": null, "retweet_count": 3873, "favorite_count": 8300, "source": "Media Studio", "id_str": "780122716338651136", "is_retweet": false}, {"created_at": "Mon Jan 18 02:47:34 +0000 2016", "text": "We need a president who will make quality higher education a reality for every American. #DemDebate https://t.co/M9t0HLrVAB", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 2509, "source": "TweetDeck", "id_str": "688915605781614592", "is_retweet": false}, {"created_at": "Fri Sep 16 01:15:55 +0000 2016", "text": "Trump is running the most divisive campaign of our lifetimes.\n\nThere\u2019s no innuendo or dog whistles anymore. It\u2019s all out in the open now.", "in_reply_to_screen_name": null, "retweet_count": 2467, "favorite_count": 6729, "source": "TweetDeck", "id_str": "776590404246441984", "is_retweet": false}, {"created_at": "Wed Oct 05 18:31:22 +0000 2016", "text": "While millions of families paid their fair share in taxes, it looks like Trump contributed nothing to our military\u2026 https://t.co/vifmUBJ5SH", "in_reply_to_screen_name": null, "retweet_count": 4044, "favorite_count": 10468, "source": "Media Studio", "id_str": "783736354131681280", "is_retweet": false}, {"created_at": "Mon Apr 25 15:10:00 +0000 2016", "text": "Editorial boards in Tuesday primary states are urging their readers to vote for Hillary Clinton. Here's why. https://t.co/r6RKq8150j", "in_reply_to_screen_name": null, "retweet_count": 788, "favorite_count": 1500, "source": "TweetDeck", "id_str": "724616455845720066", "is_retweet": false}, {"created_at": "Thu Sep 29 02:10:06 +0000 2016", "text": "\"Hillary will be a president our kids can look up to.\" \u2014@FLOTUS https://t.co/30iEIdtjsk", "in_reply_to_screen_name": null, "retweet_count": 7161, "favorite_count": 21212, "source": "Media Studio", "id_str": "781315082982531072", "is_retweet": false}, {"created_at": "Tue Feb 23 22:05:16 +0000 2016", "text": "If this team wins the White House, Virginia is invited to come by and dance any time. https://t.co/K0YclxQQbv https://t.co/QPdB1NjE21", "in_reply_to_screen_name": null, "retweet_count": 1091, "favorite_count": 3298, "source": "TweetDeck", "id_str": "702252915080216576", "is_retweet": false}, {"created_at": "Fri Aug 05 16:41:40 +0000 2016", "text": "Rosa Parks opened up every seat on the bus. Now we\u2019ve got to expand economic opportunity so everyone can afford the fare.", "in_reply_to_screen_name": null, "retweet_count": 1606, "favorite_count": 6398, "source": "TweetDeck", "id_str": "761603088826396673", "is_retweet": false}, {"created_at": "Fri Jun 10 03:31:07 +0000 2016", "text": "Thanks, Obama. https://t.co/DzKgMFgdmP", "in_reply_to_screen_name": null, "retweet_count": 7785, "favorite_count": 22261, "source": "Twitter Web Client", "id_str": "741110418807115776", "is_retweet": false}, {"created_at": "Tue Feb 16 21:18:19 +0000 2016", "text": "Anyone asking for your vote has a responsibility to grapple with reality\u2014to see things as they actually are, not just as we want them to be.", "in_reply_to_screen_name": null, "retweet_count": 944, "favorite_count": 1701, "source": "TweetDeck", "id_str": "699704385035759616", "is_retweet": false}, {"created_at": "Tue Nov 01 20:14:44 +0000 2016", "text": "Trump said pregnancy is an inconvenience for employers.\nHe dismisses the pay gap.\nHe said wages are too high.\nHe wants to defund @PPact.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1677, "favorite_count": 3638, "source": "TweetDeck", "id_str": "793546840457240576", "is_retweet": false}, {"created_at": "Wed Jun 08 02:39:26 +0000 2016", "text": "\"We are stronger when we respect each other, listen to each other, and act with a sense of common purpose.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3550, "favorite_count": 6950, "source": "TweetDeck", "id_str": "740372636014895105", "is_retweet": false}, {"created_at": "Sun Oct 16 19:09:32 +0000 2016", "text": "From birth control to cancer screenings, Planned Parenthood has provided care for millions. That's worth celebratin\u2026 https://t.co/wbB4NrBon7", "in_reply_to_screen_name": null, "retweet_count": 7223, "favorite_count": 22481, "source": "TweetDeck", "id_str": "787732224443576320", "is_retweet": false}, {"created_at": "Thu Jul 28 00:03:29 +0000 2016", "text": "\"I\u2019m here without my mother while too many politicians cower behind the gun lobby.\u201d \u2014Erica Smegielski #StopGunViolence", "in_reply_to_screen_name": null, "retweet_count": 1249, "favorite_count": 3589, "source": "TweetDeck", "id_str": "758452780990402560", "is_retweet": false}, {"created_at": "Mon Sep 05 21:59:22 +0000 2016", "text": "\"Human rights are women's rights, and women's rights are human rights.\" \u2014Hillary in Beijing, 21 years ago today https://t.co/T46TNfDikW", "in_reply_to_screen_name": null, "retweet_count": 7700, "favorite_count": 18105, "source": "Twitter Web Client", "id_str": "772917063522328576", "is_retweet": false}, {"created_at": "Fri May 06 15:27:54 +0000 2016", "text": "We asked a dozen people how they feel about a Donald Trump presidency.\n\nThey were\u2026honest. https://t.co/4G3WhW4EVd", "in_reply_to_screen_name": null, "retweet_count": 785, "favorite_count": 1526, "source": "TweetDeck", "id_str": "728607226332614656", "is_retweet": false}, {"created_at": "Thu Jan 07 22:49:08 +0000 2016", "text": ".@CecileRichards Completely appropriate. -H", "in_reply_to_screen_name": "CecileRichards", "retweet_count": 238, "favorite_count": 1023, "source": "Twitter Web Client", "id_str": "685231724003995649", "is_retweet": false}, {"created_at": "Mon Mar 07 02:49:21 +0000 2016", "text": "More than 500,000 kids a year suffer lead poisoning in America. We can put an end to this injustice. #DemDebate https://t.co/jydlMHudad", "in_reply_to_screen_name": null, "retweet_count": 789, "favorite_count": 1488, "source": "TweetDeck", "id_str": "706673060154368000", "is_retweet": false}, {"created_at": "Thu Sep 22 14:03:32 +0000 2016", "text": "RT @funnyordie: .@HillaryClinton sits down Between Two Ferns with Zach Galifianakis for her most memorable interview yet. https://t.co/169e\u2026", "in_reply_to_screen_name": null, "retweet_count": 27992, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778957908990189568", "is_retweet": true}, {"created_at": "Fri Oct 28 22:00:37 +0000 2016", "text": "Watch live: Hillary campaigns in Des Moines, IA with 11 days to go \u2192 https://t.co/jJKydSK4DR\n\nMake a plan to vote: https://t.co/zbTH7fLWJm", "in_reply_to_screen_name": null, "retweet_count": 934, "favorite_count": 3454, "source": "TweetDeck", "id_str": "792123932509892608", "is_retweet": false}, {"created_at": "Mon Aug 15 01:26:05 +0000 2016", "text": "The senseless murders of Imam Maulama Akonjee and Thara Uddin are heartbreaking. This kind of heinous act has no place in America. -H", "in_reply_to_screen_name": null, "retweet_count": 3735, "favorite_count": 12385, "source": "TweetDeck", "id_str": "764996549558534144", "is_retweet": false}, {"created_at": "Sat Jun 25 17:01:40 +0000 2016", "text": "LGBT seniors have seen so much progress, but still face discrimination. This has to change. https://t.co/fUCyqi07zY", "in_reply_to_screen_name": null, "retweet_count": 2067, "favorite_count": 5144, "source": "Twitter Web Client", "id_str": "746750216762720256", "is_retweet": false}, {"created_at": "Wed Jun 08 02:36:00 +0000 2016", "text": "We should lift each other up\u2014not tear each other down. To be great, we can\u2019t be small. We have to be as big as the values that define us.", "in_reply_to_screen_name": null, "retweet_count": 2413, "favorite_count": 5235, "source": "TweetDeck", "id_str": "740371772248346624", "is_retweet": false}, {"created_at": "Fri Jun 17 21:09:57 +0000 2016", "text": "In the spirit of the #Charleston9, let\u2019s bridge our divides, fight for change, and remember that love never fails. https://t.co/VL9HAhzoTY", "in_reply_to_screen_name": null, "retweet_count": 1415, "favorite_count": 3436, "source": "TweetDeck", "id_str": "743913597332500480", "is_retweet": false}, {"created_at": "Thu Oct 20 01:53:22 +0000 2016", "text": "In 2005, Hillary co-sponsored a bill to raise the minimum wage. Trump...did this. https://t.co/iWBGoGigg4\u2026 https://t.co/bDxckFe1M8", "in_reply_to_screen_name": null, "retweet_count": 2674, "favorite_count": 5445, "source": "TweetDeck", "id_str": "788921017070739456", "is_retweet": false}, {"created_at": "Mon Jun 13 17:16:54 +0000 2016", "text": "\"They were sons and daughters, brothers and sisters, and...they all had a lot more to give.\" \u2014Hillary on the Orlando victims", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 3582, "source": "TweetDeck", "id_str": "742405395000528897", "is_retweet": false}, {"created_at": "Thu May 19 17:57:43 +0000 2016", "text": "\"When you run for president of the United States, the entire world is watching.\u201d \u2014Hillary on @realDonaldTrump's dangerous rhetoric", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 2055, "source": "TweetDeck", "id_str": "733355972626907137", "is_retweet": false}, {"created_at": "Sun Apr 03 15:53:46 +0000 2016", "text": "We need to make it easier to balance work and family. https://t.co/prv9uKju3G", "in_reply_to_screen_name": null, "retweet_count": 729, "favorite_count": 1817, "source": "Twitter Web Client", "id_str": "716654935732064256", "is_retweet": false}, {"created_at": "Tue Sep 13 17:57:24 +0000 2016", "text": "\u201cA leader who's got real plans to break down barriers and blast through glass ceilings.\" \u2014@POTUS on Hillary: https://t.co/fNppatvJ41", "in_reply_to_screen_name": null, "retweet_count": 840, "favorite_count": 2335, "source": "TweetDeck", "id_str": "775755273873068033", "is_retweet": false}, {"created_at": "Tue Jun 28 14:57:33 +0000 2016", "text": "Terrorists are taking advantage of the loopholes in our gun laws. Here's how we stop them: https://t.co/Tn9OyVShZn", "in_reply_to_screen_name": null, "retweet_count": 1057, "favorite_count": 2391, "source": "TweetDeck", "id_str": "747806144538812417", "is_retweet": false}, {"created_at": "Fri Jun 10 21:15:46 +0000 2016", "text": "Trump can\u2019t say he treats women with respect.\n\n(For once, he\u2019s right.)\nhttps://t.co/eaOpDVA8Bb", "in_reply_to_screen_name": null, "retweet_count": 3696, "favorite_count": 6383, "source": "Twitter Web Client", "id_str": "741378346404044800", "is_retweet": false}, {"created_at": "Mon Sep 19 22:30:34 +0000 2016", "text": "America has never made progress by thinking one person alone can fix our problems. https://t.co/mYba5FCBrb", "in_reply_to_screen_name": null, "retweet_count": 3482, "favorite_count": 9130, "source": "TweetDeck", "id_str": "777998343553290241", "is_retweet": false}, {"created_at": "Fri Jul 29 02:42:32 +0000 2016", "text": "\"We have the most dynamic and diverse people in the world. We have the most tolerant and generous young people we've ever had.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2436, "favorite_count": 7256, "source": "TweetDeck", "id_str": "758855196852092928", "is_retweet": false}, {"created_at": "Mon Aug 15 01:19:51 +0000 2016", "text": "No family should have to spend more than 10% of its income on quality child care. https://t.co/ReC2DZCjlM https://t.co/TFYDN6VYJj", "in_reply_to_screen_name": null, "retweet_count": 1528, "favorite_count": 5750, "source": "TweetDeck", "id_str": "764994984022052865", "is_retweet": false}, {"created_at": "Thu May 05 22:11:40 +0000 2016", "text": "Last night, Trump stood by his plans to ban Muslims from entering the U.S. and deport millions of immigrants. https://t.co/8KYse7wy4P", "in_reply_to_screen_name": null, "retweet_count": 1999, "favorite_count": 2362, "source": "TweetDeck", "id_str": "728346449684119552", "is_retweet": false}, {"created_at": "Mon Jun 13 17:32:39 +0000 2016", "text": "Inflammatory anti-Muslim rhetoric hurts the vast majority of Muslims who love freedom and hate terror. It\u2019s wrong, and it's dangerous.", "in_reply_to_screen_name": null, "retweet_count": 4314, "favorite_count": 9559, "source": "TweetDeck", "id_str": "742409362593964032", "is_retweet": false}, {"created_at": "Sun Sep 25 16:55:20 +0000 2016", "text": "RT @TheBriefing2016: Once again, Trump's own words are the best evidence he's not fit to be president. https://t.co/D3Ox56zt1k", "in_reply_to_screen_name": null, "retweet_count": 2562, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780088306314928128", "is_retweet": true}, {"created_at": "Tue Feb 09 16:31:41 +0000 2016", "text": "Hey New Hampshire! If you have questions on how, when, or where to vote today, we\u2019ve got answers here: https://t.co/0pVcJy19mD", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 756, "source": "TweetDeck", "id_str": "697095534285348864", "is_retweet": false}, {"created_at": "Thu Sep 08 17:18:57 +0000 2016", "text": "\"As your Commander-in-Chief, I will not trash our country\u2019s most cherished values. I will defend them.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1012, "favorite_count": 2921, "source": "TweetDeck", "id_str": "773933657807552514", "is_retweet": false}, {"created_at": "Fri Sep 23 20:58:07 +0000 2016", "text": "\"Hillary Clinton would make a sober, smart and pragmatic president. Donald Trump would be a catastrophe.\" \u2014@LATimes https://t.co/NG1am536OS", "in_reply_to_screen_name": null, "retweet_count": 2940, "favorite_count": 6963, "source": "TweetDeck", "id_str": "779424632168411136", "is_retweet": false}, {"created_at": "Tue Jul 26 21:37:51 +0000 2016", "text": "\"I am pleased to second the nomination for Hillary Clinton as the party candidate for president!\u201d \u2014@RepJohnLewis https://t.co/OyQiGe0Snw", "in_reply_to_screen_name": null, "retweet_count": 1346, "favorite_count": 4743, "source": "TweetDeck", "id_str": "758053744084910080", "is_retweet": false}, {"created_at": "Mon Oct 17 20:31:34 +0000 2016", "text": "Don't forget, Florida: Your voter registration deadline is tomorrow, 10/18 at 5pm ET. Make sure you're registered a\u2026 https://t.co/e6KilfrTzn", "in_reply_to_screen_name": null, "retweet_count": 2637, "favorite_count": 4798, "source": "TweetDeck", "id_str": "788115255394177024", "is_retweet": false}, {"created_at": "Fri Jul 29 02:31:25 +0000 2016", "text": "\"Chelsea, thank you. I am so proud to be your mother and so proud of the woman you\u2019ve become.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1161, "favorite_count": 5675, "source": "TweetDeck", "id_str": "758852399771504640", "is_retweet": false}, {"created_at": "Thu Sep 01 16:25:34 +0000 2016", "text": "\"He\u2019s causing nations to wonder if we\u2019ll actually keep our word.\u201d \u2014@JoeBiden on Donald Trump: https://t.co/Xf3OPFMOo9", "in_reply_to_screen_name": null, "retweet_count": 988, "favorite_count": 2091, "source": "TweetDeck", "id_str": "771383506840748032", "is_retweet": false}, {"created_at": "Sat Oct 22 21:41:57 +0000 2016", "text": "\u201cWe\u2019re going to grow the middle class from the middle out and the bottom up, not the top down.\u201d \u2014Hillary https://t.co/fBQJawZUvB", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 844, "favorite_count": 2313, "source": "TweetDeck", "id_str": "789944908815667200", "is_retweet": false}, {"created_at": "Mon Jul 11 17:46:10 +0000 2016", "text": ".@realDonaldTrump says he \"loves the vets.\"\n\nPrisoners of war? Not so much.\nhttps://t.co/Qq1bPW65DA", "in_reply_to_screen_name": null, "retweet_count": 1866, "favorite_count": 3256, "source": "Twitter Web Client", "id_str": "752559624184688640", "is_retweet": false}, {"created_at": "Wed May 04 22:40:17 +0000 2016", "text": "\"I don't think we can take a risk on a loose cannon like Donald Trump running our country.\" \u2014Hillary\nhttps://t.co/xcbYMepYdX", "in_reply_to_screen_name": null, "retweet_count": 1961, "favorite_count": 3962, "source": "Twitter Web Client", "id_str": "727991266365952000", "is_retweet": false}, {"created_at": "Sun Feb 14 15:01:57 +0000 2016", "text": "Happy Valentine\u2019s Day! https://t.co/nMpcTIU1Gn", "in_reply_to_screen_name": null, "retweet_count": 1406, "favorite_count": 4142, "source": "Twitter Web Client", "id_str": "698884889706422273", "is_retweet": false}, {"created_at": "Wed Mar 23 19:10:03 +0000 2016", "text": "We face serious challenges in the world\u2014but Americans will not turn on each other, turn on our allies, or turn away from our principles.", "in_reply_to_screen_name": null, "retweet_count": 1407, "favorite_count": 3751, "source": "TweetDeck", "id_str": "712718068313665536", "is_retweet": false}, {"created_at": "Mon Oct 03 23:08:00 +0000 2016", "text": "Trump\u2019s campaign is bragging that not paying taxes makes him a \u201cgenius.\u201d https://t.co/7enA0znwzh", "in_reply_to_screen_name": null, "retweet_count": 4356, "favorite_count": 10236, "source": "TweetDeck", "id_str": "783081195282333696", "is_retweet": false}, {"created_at": "Mon Oct 24 17:55:52 +0000 2016", "text": "The energy we\u2019re seeing out there isn\u2019t just about what we\u2019re against\u2014it\u2019s about what we\u2019re for: a future in which everyone counts.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 636, "favorite_count": 1839, "source": "TweetDeck", "id_str": "790612790268596224", "is_retweet": false}, {"created_at": "Thu Oct 06 14:05:55 +0000 2016", "text": "\"On every issue, Hillary Clinton is the superior candidate. Hands down.\" \u2014@BernieSanders: https://t.co/tTgeqxNqYm https://t.co/nUfJjV0QvS", "in_reply_to_screen_name": null, "retweet_count": 3705, "favorite_count": 9138, "source": "Media Studio", "id_str": "784031939376340993", "is_retweet": false}, {"created_at": "Fri Jan 22 03:42:14 +0000 2016", "text": "\"Most people remember my son\u2019s death, but I remember his life.\" Gwen Carr, mother of Eric Garner https://t.co/F3YLUhkRre", "in_reply_to_screen_name": null, "retweet_count": 633, "favorite_count": 1585, "source": "TweetDeck", "id_str": "690378915639103488", "is_retweet": false}, {"created_at": "Wed Sep 14 19:18:56 +0000 2016", "text": "RT @rosenbergerlm: Hillary applauds the agreement on a new memorandum of understanding regarding U.S. security assistance to Israel. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 618, "favorite_count": 0, "source": "TweetDeck", "id_str": "776138180517040129", "is_retweet": true}, {"created_at": "Sat Jun 04 22:14:30 +0000 2016", "text": "Incre\u00edble.\nhttps://t.co/PmerodqGzQ", "in_reply_to_screen_name": null, "retweet_count": 1348, "favorite_count": 1834, "source": "Twitter Web Client", "id_str": "739218798440415232", "is_retweet": false}, {"created_at": "Mon Oct 17 14:35:14 +0000 2016", "text": "RT @HoustonChron: We found it civically vital to reprint our recommendation for @HillaryClinton in 4 languages widely spoken here https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 2752, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788025582323924996", "is_retweet": true}, {"created_at": "Thu Aug 11 16:26:12 +0000 2016", "text": "1979. https://t.co/VYTglhPyfO", "in_reply_to_screen_name": null, "retweet_count": 2822, "favorite_count": 12979, "source": "TweetDeck", "id_str": "763773523680722944", "is_retweet": false}, {"created_at": "Tue May 10 23:08:39 +0000 2016", "text": "If Trump had his way, the federal minimum wage would be $0. https://t.co/gVa1Mlrj3X", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 1090, "source": "TweetDeck", "id_str": "730172729291345920", "is_retweet": false}, {"created_at": "Wed Jul 27 02:05:09 +0000 2016", "text": "\"She is the best qualified person for this moment in history.\" \u2014@BillClinton on Hillary\nhttps://t.co/WkYfkT9MqX", "in_reply_to_screen_name": null, "retweet_count": 1858, "favorite_count": 5082, "source": "Twitter Web Client", "id_str": "758121015490715648", "is_retweet": false}, {"created_at": "Fri Feb 26 02:34:43 +0000 2016", "text": "Planned Parenthood provides critical health care to millions of Americans. Republicans vow they'll defund it. Not on our watch. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1382, "favorite_count": 4255, "source": "TweetDeck", "id_str": "703045496638717952", "is_retweet": false}, {"created_at": "Mon Oct 10 21:19:43 +0000 2016", "text": "Never heard of a \u201cblue collar worker\u201d losing nearly $1 billion in a year and cheating hundreds of other workers in\u2026 https://t.co/mZlCyXs9uX", "in_reply_to_screen_name": null, "retweet_count": 7145, "favorite_count": 17674, "source": "Twitter Web Client", "id_str": "785590661135278082", "is_retweet": false}, {"created_at": "Mon Oct 24 17:16:23 +0000 2016", "text": "With 15 days to go, Hillary and @ElizabethForMA hit the trail in New Hampshire. Tune in: https://t.co/wn6a97g587 https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1212, "favorite_count": 4535, "source": "TweetDeck", "id_str": "790602853622616066", "is_retweet": false}, {"created_at": "Mon Aug 08 19:35:33 +0000 2016", "text": "Watch live as Hillary stops in St. Petersburg, Florida, for a campaign rally on the choice we face on the economy: https://t.co/09cW39nHXo", "in_reply_to_screen_name": null, "retweet_count": 559, "favorite_count": 2081, "source": "TweetDeck", "id_str": "762734011869499393", "is_retweet": false}, {"created_at": "Sat May 07 14:52:06 +0000 2016", "text": "Son of a Pakistani bus driver, champion of workers' rights and human rights, and now Mayor of London. Congrats, @SadiqKhan. -H", "in_reply_to_screen_name": null, "retweet_count": 11037, "favorite_count": 19243, "source": "TweetDeck", "id_str": "728960604787052544", "is_retweet": false}, {"created_at": "Fri Aug 19 14:50:03 +0000 2016", "text": "RT @MaddowBlog: Clinton and Trump are confirmed to participate in a \"Commander-in-chief\" forum with @IAVA on @MSNBC September 7th https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 1322, "favorite_count": 0, "source": "TweetDeck", "id_str": "766648426801029125", "is_retweet": true}, {"created_at": "Tue Sep 13 01:54:14 +0000 2016", "text": "Student debt and the cost of college are incredibly important.\n\nWhy isn\u2019t Donald Trump talking about these issues?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1092, "favorite_count": 1768, "source": "Twitter Web Client", "id_str": "775512883417481216", "is_retweet": false}, {"created_at": "Fri Jul 08 13:06:02 +0000 2016", "text": "I mourn for the officers shot while doing their sacred duty to protect peaceful protesters, for their families &amp; all who serve with them. -H", "in_reply_to_screen_name": null, "retweet_count": 6739, "favorite_count": 21972, "source": "TweetDeck", "id_str": "751401960381767680", "is_retweet": false}, {"created_at": "Sun Feb 21 18:40:32 +0000 2016", "text": "Our schools should lead students towards opportunity, not prison. https://t.co/yCwzTQ7ADn", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 2197, "source": "TweetDeck", "id_str": "701476615897874433", "is_retweet": false}, {"created_at": "Thu May 05 15:57:53 +0000 2016", "text": "They say your friends reflect who you really are... https://t.co/aubM6KS0BG", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 1593, "source": "TweetDeck", "id_str": "728252385987051520", "is_retweet": false}, {"created_at": "Wed Jan 20 19:24:45 +0000 2016", "text": "A year from today, a new president will start to build on @POTUS' legacy, or dismantle it. That's personal to me. https://t.co/qwcukLY2tT -H", "in_reply_to_screen_name": null, "retweet_count": 741, "favorite_count": 1677, "source": "TweetDeck", "id_str": "689891332551249924", "is_retweet": false}, {"created_at": "Fri Jul 29 04:29:46 +0000 2016", "text": "The next president\u2014and her husband. https://t.co/W5A0rHs21y", "in_reply_to_screen_name": null, "retweet_count": 16303, "favorite_count": 64962, "source": "Twitter for iPhone", "id_str": "758882182253338628", "is_retweet": false}, {"created_at": "Mon Jun 27 15:21:46 +0000 2016", "text": "We are not going to let Donald Trump bankrupt America the way he bankrupted his casinos.", "in_reply_to_screen_name": null, "retweet_count": 1677, "favorite_count": 5077, "source": "TweetDeck", "id_str": "747449853802909705", "is_retweet": false}, {"created_at": "Sat Jan 09 01:13:02 +0000 2016", "text": "A judge in Alabama still opposes marriage equality\u2014and so does every single Republican candidate. https://t.co/YFVXXYEHjD", "in_reply_to_screen_name": null, "retweet_count": 1171, "favorite_count": 1971, "source": "TweetDeck", "id_str": "685630323141533696", "is_retweet": false}, {"created_at": "Thu Sep 08 00:16:16 +0000 2016", "text": "Hillary has spent decades fighting for veterans, members of the military, and their families. https://t.co/GJ0NmH6hYn #NBCNewsForum", "in_reply_to_screen_name": null, "retweet_count": 1381, "favorite_count": 2872, "source": "TweetDeck", "id_str": "773676288624254976", "is_retweet": false}, {"created_at": "Sun Sep 04 18:40:21 +0000 2016", "text": "Astonishing that the Republican nominee still refuses to acknowledge that @POTUS was born in the United States. https://t.co/i4GPAi0klY", "in_reply_to_screen_name": null, "retweet_count": 4195, "favorite_count": 8475, "source": "TweetDeck", "id_str": "772504589102899201", "is_retweet": false}, {"created_at": "Wed May 18 03:12:25 +0000 2016", "text": "Hillary just won Kentucky, but this election is just getting started. Chip in now if you've got her back: https://t.co/8qYPHIje8I", "in_reply_to_screen_name": null, "retweet_count": 884, "favorite_count": 2847, "source": "Twitter for iPhone", "id_str": "732770791834701824", "is_retweet": false}, {"created_at": "Thu Oct 27 21:11:12 +0000 2016", "text": "\u201cWe have never had a more qualified and prepared candidate for president than our friend Hillary.\u201d \u2014@FLOTUS\u2026 https://t.co/RnZ0yxUTCX", "in_reply_to_screen_name": null, "retweet_count": 5843, "favorite_count": 15240, "source": "TweetDeck", "id_str": "791749110294609924", "is_retweet": false}, {"created_at": "Fri Sep 30 21:44:55 +0000 2016", "text": "RT @AppleMusic: Get #The411 now.\n@MaryJBlige &amp; @HillaryClinton speak candidly. \nWatch here:\nhttps://t.co/hbaWqf27NP https://t.co/Q5mU7SowdQ", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781973124921303040", "is_retweet": true}, {"created_at": "Tue Jan 26 03:29:04 +0000 2016", "text": "\"We've got to do everything we possibly can not to let the Republicans rip away our progress and take us backwards.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 935, "favorite_count": 2268, "source": "TweetDeck", "id_str": "691825152888274946", "is_retweet": false}, {"created_at": "Fri Nov 04 14:50:04 +0000 2016", "text": "Progress is on the ballot: https://t.co/3TKJ4H68Kz https://t.co/Il39aXx59c", "in_reply_to_screen_name": null, "retweet_count": 1335, "favorite_count": 3346, "source": "Twitter Web Client", "id_str": "794552299041525760", "is_retweet": false}, {"created_at": "Thu Mar 24 00:36:45 +0000 2016", "text": "When she needed emergency surgery, Obamacare saved her life. Let\u2019s build on six years of progress\u2014not start over.\nhttps://t.co/Bb3ZzOIbAt", "in_reply_to_screen_name": null, "retweet_count": 1856, "favorite_count": 3970, "source": "Twitter Web Client", "id_str": "712800282988548096", "is_retweet": false}, {"created_at": "Thu Aug 11 18:10:33 +0000 2016", "text": "Every employee, from the CEO suite to the factory floor, contributes to a business\u2019 success, so everybody should share in the rewards.", "in_reply_to_screen_name": null, "retweet_count": 1143, "favorite_count": 3751, "source": "TweetDeck", "id_str": "763799783999991808", "is_retweet": false}, {"created_at": "Fri Feb 26 02:40:35 +0000 2016", "text": "Affordable health care should be a human right in America, not a privilege. We will not let Republicans repeal the ACA. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1049, "favorite_count": 2474, "source": "TweetDeck", "id_str": "703046973377667073", "is_retweet": false}, {"created_at": "Sun Feb 28 01:00:25 +0000 2016", "text": "\"Our country was built by people who had each other\u2019s backs. Who understood that, at our best, we all rise together.\" \u2014Hillary in SC", "in_reply_to_screen_name": null, "retweet_count": 1328, "favorite_count": 2939, "source": "TweetDeck", "id_str": "703746542839136257", "is_retweet": false}, {"created_at": "Tue Sep 13 18:03:28 +0000 2016", "text": "\"If you want higher wages, better benefits...then you should be voting for Hillary Clinton.\" \u2014@POTUS: https://t.co/fDBrzSsM1Y", "in_reply_to_screen_name": null, "retweet_count": 930, "favorite_count": 2565, "source": "TweetDeck", "id_str": "775756800268333056", "is_retweet": false}, {"created_at": "Thu Sep 01 01:21:39 +0000 2016", "text": "Trump just failed his first foreign test. Diplomacy isn't as easy as it looks. -H", "in_reply_to_screen_name": null, "retweet_count": 9286, "favorite_count": 22036, "source": "TweetDeck", "id_str": "771156031401521153", "is_retweet": false}, {"created_at": "Sat Feb 06 23:24:04 +0000 2016", "text": "Three days to New Hampshire. https://t.co/rm5iWqJFdX https://t.co/io0irPErVF", "in_reply_to_screen_name": null, "retweet_count": 333, "favorite_count": 1106, "source": "TweetDeck", "id_str": "696112150381731841", "is_retweet": false}, {"created_at": "Wed Oct 05 18:57:29 +0000 2016", "text": "\"Can [Pence] look back on the debate as a success after he repeatedly lied in order to run interference for Trump?\" https://t.co/rwHb5ri1UU", "in_reply_to_screen_name": null, "retweet_count": 1523, "favorite_count": 3814, "source": "TweetDeck", "id_str": "783742924349661184", "is_retweet": false}, {"created_at": "Fri Mar 04 20:18:28 +0000 2016", "text": "More money in the hands of wealthy people mostly just helps wealthy people\u2014but more money in the hands of working people helps everyone.", "in_reply_to_screen_name": null, "retweet_count": 1021, "favorite_count": 2344, "source": "Twitter Web Client", "id_str": "705849917135306752", "is_retweet": false}, {"created_at": "Thu Jul 21 02:57:54 +0000 2016", "text": "You don't say, Mike. #RNCinCLE https://t.co/rmW3NOw0ac", "in_reply_to_screen_name": null, "retweet_count": 9498, "favorite_count": 17995, "source": "TweetDeck", "id_str": "755959963433000960", "is_retweet": false}, {"created_at": "Sun Nov 06 21:33:45 +0000 2016", "text": "Hillary and @KingJames are live in Cleveland with two days to go. Watch here: https://t.co/KPu8RdGuxq", "in_reply_to_screen_name": null, "retweet_count": 1848, "favorite_count": 6298, "source": "TweetDeck", "id_str": "795378663781003264", "is_retweet": false}, {"created_at": "Tue Sep 27 23:26:40 +0000 2016", "text": "RT @POTUS: Couldn't be more proud of @HillaryClinton. Her vision and command during last night's debate showed that she's ready to be our n\u2026", "in_reply_to_screen_name": null, "retweet_count": 24804, "favorite_count": 0, "source": "TweetDeck", "id_str": "780911564857761793", "is_retweet": true}, {"created_at": "Sat Oct 22 13:58:03 +0000 2016", "text": "\"This is a woman I have never met...but who has stood with my family and me over and over again.\" https://t.co/zDMxHMGUZT", "in_reply_to_screen_name": null, "retweet_count": 1304, "favorite_count": 4240, "source": "TweetDeck", "id_str": "789828163476058113", "is_retweet": false}, {"created_at": "Sun Feb 28 00:15:31 +0000 2016", "text": "Heading into Super Tuesday with a smile. Text CONGRATS to 47246 to tell Hillary you\u2019re proud to be on her team. https://t.co/r3m0OgOGQ3", "in_reply_to_screen_name": null, "retweet_count": 714, "favorite_count": 2076, "source": "TweetDeck", "id_str": "703735244181147648", "is_retweet": false}, {"created_at": "Wed Apr 06 01:34:04 +0000 2016", "text": "Trump's \"plan\" to make Mexico pay for a wall is ridiculous, offensive, and would punish kids &amp; families. It's wrong. https://t.co/vFLYIXmHtJ", "in_reply_to_screen_name": null, "retweet_count": 1586, "favorite_count": 3535, "source": "TweetDeck", "id_str": "717525749163565057", "is_retweet": false}, {"created_at": "Thu Oct 13 16:55:57 +0000 2016", "text": "\"We as women have all the power we need to determine the outcome of this election.\u201d \u2014@FLOTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 708, "favorite_count": 1639, "source": "TweetDeck", "id_str": "786611445630984192", "is_retweet": false}, {"created_at": "Wed Mar 16 16:52:14 +0000 2016", "text": "Statement on President Obama's nomination of Judge Merrick Garland to the Supreme Court: https://t.co/GTcLMLyS6I", "in_reply_to_screen_name": null, "retweet_count": 2649, "favorite_count": 5901, "source": "TweetDeck", "id_str": "710146670093332481", "is_retweet": false}, {"created_at": "Fri Sep 23 02:59:02 +0000 2016", "text": "\"He's 70 years old, and he's still a bully.\" \u2014Karen on @realDonaldTrump https://t.co/XBCJ4mTj24", "in_reply_to_screen_name": null, "retweet_count": 3608, "favorite_count": 7330, "source": "Media Studio", "id_str": "779153070118752256", "is_retweet": false}, {"created_at": "Thu Aug 18 23:15:19 +0000 2016", "text": "Congrats to @usatf's @Bri_Rollin, @ItsPooda, and @KristiHollywood on their historic podium sweep last night. https://t.co/K0vkob8BOc", "in_reply_to_screen_name": null, "retweet_count": 845, "favorite_count": 3616, "source": "Twitter Web Client", "id_str": "766413193216401408", "is_retweet": false}, {"created_at": "Mon Aug 22 17:01:25 +0000 2016", "text": ".@TimKaine takes the mic in the latest episode of With Her, the official campaign podcast. Subscribe &amp; listen here: https://t.co/IIzDVOt3r4", "in_reply_to_screen_name": null, "retweet_count": 625, "favorite_count": 1721, "source": "TweetDeck", "id_str": "767768650942218240", "is_retweet": false}, {"created_at": "Wed Oct 05 12:42:13 +0000 2016", "text": "RT @nytimes: Frank Bruni: Mike Pence\u2019s galling amnesia\nhttps://t.co/yHGzNR3KxI via @NYTOpinion", "in_reply_to_screen_name": null, "retweet_count": 1736, "favorite_count": 0, "source": "TweetDeck", "id_str": "783648486436794368", "is_retweet": true}, {"created_at": "Wed May 25 23:59:32 +0000 2016", "text": "With the money Trump would waste on his wall, we could help a lot of families by building infrastructure we need. https://t.co/hvEhVhdc3W", "in_reply_to_screen_name": null, "retweet_count": 3256, "favorite_count": 7676, "source": "TweetDeck", "id_str": "735621352560943105", "is_retweet": false}, {"created_at": "Tue Nov 01 20:00:58 +0000 2016", "text": "\"I\u2019m reaching out to Republicans and Independents as well as Democrats because I want to be president for all Americans.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 921, "favorite_count": 2119, "source": "TweetDeck", "id_str": "793543373848244229", "is_retweet": false}, {"created_at": "Fri Sep 16 19:27:44 +0000 2016", "text": "\"We deserve a president\u2026who believes that each of us is part of the American story, and we\u2019re always stronger together.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2156, "favorite_count": 5997, "source": "TweetDeck", "id_str": "776865170350022656", "is_retweet": false}, {"created_at": "Mon Jun 27 19:25:50 +0000 2016", "text": "\"Americans [are] telling us about their struggles\u2026they want to be given a chance, a fighting chance.\" \u2014Hillary live from Chicago", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 2488, "source": "TweetDeck", "id_str": "747511275761041408", "is_retweet": false}, {"created_at": "Fri Jan 15 22:14:24 +0000 2016", "text": "A right without the opportunity to exercise it isn't a right. Low-income women deserve health care. The Hyde Amendment should be overturned.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 705, "favorite_count": 1346, "source": "TweetDeck", "id_str": "688122085860749313", "is_retweet": false}, {"created_at": "Thu Sep 15 12:11:07 +0000 2016", "text": "Trump's detailed medical records are part of a laundry list of things he's hiding from the American public. https://t.co/uhlFknLvoP", "in_reply_to_screen_name": null, "retweet_count": 5754, "favorite_count": 9839, "source": "Twitter Web Client", "id_str": "776392901362319360", "is_retweet": false}, {"created_at": "Mon Oct 31 12:49:14 +0000 2016", "text": "\"The fear of nuclear war that we had as children, I never thought our children would ever have to deal with that ag\u2026 https://t.co/FhjYNfmxds", "in_reply_to_screen_name": null, "retweet_count": 8650, "favorite_count": 15542, "source": "Media Studio", "id_str": "793072337960697857", "is_retweet": false}, {"created_at": "Sun Aug 07 20:17:42 +0000 2016", "text": "The NRA is based in Virginia, but that's never stopped @TimKaine from leading the fight to reduce gun violence. https://t.co/J9F086bQmo", "in_reply_to_screen_name": null, "retweet_count": 1823, "favorite_count": 6430, "source": "TweetDeck", "id_str": "762382229439930368", "is_retweet": false}, {"created_at": "Wed Oct 05 15:23:17 +0000 2016", "text": "RT @LEBassett: One thing is clear: Tim Kaine won the debate on abortion. https://t.co/Iub5M22kXY", "in_reply_to_screen_name": null, "retweet_count": 696, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783689019926380544", "is_retweet": true}, {"created_at": "Mon Oct 03 19:15:15 +0000 2016", "text": "Trump's child care \"plan\" is really just a tax cut for the wealthy\u2014while giving working families almost nothing. https://t.co/anjgFfdySG", "in_reply_to_screen_name": null, "retweet_count": 1703, "favorite_count": 3391, "source": "TweetDeck", "id_str": "783022621894053888", "is_retweet": false}, {"created_at": "Sat Feb 06 02:48:20 +0000 2016", "text": "\"We also need to break barriers of racism, sexism, discrimination against LGBT Americans, immigrants, &amp; people with disabilities.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 681, "favorite_count": 1449, "source": "TweetDeck", "id_str": "695801168824508416", "is_retweet": false}, {"created_at": "Thu Feb 25 20:24:10 +0000 2016", "text": "\"I had to turn my sorrow into a strategy\u2014my mourning into a movement.\"\nhttps://t.co/SBn8mw43LV", "in_reply_to_screen_name": null, "retweet_count": 556, "favorite_count": 1039, "source": "Twitter Web Client", "id_str": "702952248599384065", "is_retweet": false}, {"created_at": "Thu Sep 22 17:18:06 +0000 2016", "text": "\"I think this is the most important election in my lifetime.\" @ChelseaClinton takes the \ud83c\udfa4 in this week's podcast: https://t.co/dAwaE8Dg0C", "in_reply_to_screen_name": null, "retweet_count": 885, "favorite_count": 2566, "source": "Twitter for iPhone", "id_str": "779006874708475904", "is_retweet": false}, {"created_at": "Mon Mar 07 21:00:04 +0000 2016", "text": "Workers are our economy's greatest strength\u2014not costs to be cut. They shouldn't sacrifice while executives skate by. https://t.co/MswllEbcNr", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 891, "source": "TweetDeck", "id_str": "706947546023854080", "is_retweet": false}, {"created_at": "Fri Sep 16 15:08:00 +0000 2016", "text": "RT @timkaine: It's been 5 years, and Trump's still pushing the notion that @POTUS isn't American. https://t.co/TApNqSOcvN", "in_reply_to_screen_name": null, "retweet_count": 2522, "favorite_count": 0, "source": "TweetDeck", "id_str": "776799805964255232", "is_retweet": true}, {"created_at": "Sun Nov 06 21:35:52 +0000 2016", "text": "\"We have to get out and make sure we vote.\u201d \u2014@KingJames in Ohio with HIllary https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 897, "favorite_count": 1999, "source": "TweetDeck", "id_str": "795379196407246848", "is_retweet": false}, {"created_at": "Wed May 11 17:39:46 +0000 2016", "text": "\"[The LGBT community's] progress is not only safe in her hands, it will continue.\" \u2014@washblade endorsing Hillary: https://t.co/CHegOe0aG5", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1465, "source": "TweetDeck", "id_str": "730452353502031872", "is_retweet": false}, {"created_at": "Wed Mar 23 23:42:36 +0000 2016", "text": "In our fight against radical jihadism, we have to do what actually works. What doesn't work: Islamophobic rhetoric.\nhttps://t.co/483Xib8sA6", "in_reply_to_screen_name": null, "retweet_count": 2118, "favorite_count": 4475, "source": "Twitter Web Client", "id_str": "712786655539650560", "is_retweet": false}, {"created_at": "Fri Jul 08 22:06:53 +0000 2016", "text": "Watch live as Hillary addresses the AME Church Conference in Philadelphia: https://t.co/WfMAW9ebe5", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 1227, "source": "TweetDeck", "id_str": "751538070323888128", "is_retweet": false}, {"created_at": "Sat Nov 05 17:46:00 +0000 2016", "text": "\"Donald, you don\u2019t want to go there.\u201d \u2014Hillary on Trump asking what she\u2019s done for the past 30 years https://t.co/j780NLwguv", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2090, "favorite_count": 5257, "source": "TweetDeck", "id_str": "794958958960279552", "is_retweet": false}, {"created_at": "Wed Sep 14 16:44:21 +0000 2016", "text": "10. How did the Russian mob boss who ran a criminal organization out of Trump Tower get a VIP pass to your Miss Universe pageant in Moscow?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3457, "favorite_count": 5411, "source": "TweetDeck", "id_str": "776099278804684800", "is_retweet": false}, {"created_at": "Thu Sep 15 19:52:21 +0000 2016", "text": "\"I\u2019m going to close my campaign the way I began my career...focused on opportunities for kids and fairness for families.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 757, "favorite_count": 1520, "source": "TweetDeck", "id_str": "776508975797927936", "is_retweet": false}, {"created_at": "Thu Jul 28 00:01:10 +0000 2016", "text": "\u201cIt is time to take Washington back from the gun lobby!\u201d \u2014@ChrisMurphyCT https://t.co/Bi0G1OYCwW", "in_reply_to_screen_name": null, "retweet_count": 877, "favorite_count": 2460, "source": "TweetDeck", "id_str": "758452201341747200", "is_retweet": false}, {"created_at": "Thu Jan 07 19:11:05 +0000 2016", "text": "\u201cIt\u2019s important to stand up to bullies wherever they are.\u201d https://t.co/L2EuvGO2yi", "in_reply_to_screen_name": null, "retweet_count": 624, "favorite_count": 1285, "source": "Twitter for iPhone", "id_str": "685176849908035584", "is_retweet": false}, {"created_at": "Fri Feb 05 22:13:34 +0000 2016", "text": "4 days to the New Hampshire primary\u2014what\u2019s a little snow?\n\nCommit to vote for Hillary: https://t.co/i03ZRjJKP6 https://t.co/aTPJBLW9lv", "in_reply_to_screen_name": null, "retweet_count": 526, "favorite_count": 1664, "source": "TweetDeck", "id_str": "695732022535462912", "is_retweet": false}, {"created_at": "Tue Oct 11 19:59:07 +0000 2016", "text": "\u201cElections have consequences. Your vote counts. Your vote has consequences.\u201d \u2014@AlGore https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1020, "favorite_count": 2695, "source": "TweetDeck", "id_str": "785932762142441472", "is_retweet": false}, {"created_at": "Fri Sep 16 17:14:34 +0000 2016", "text": "What Trump should do: for once in his life, own up to his mistakes. Apologize to the President, and to the American people.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3035, "favorite_count": 6646, "source": "TweetDeck", "id_str": "776831658720956420", "is_retweet": false}, {"created_at": "Sat Jun 04 20:04:01 +0000 2016", "text": "Lying about veterans, his business, and his own words\u2014and that wasn't even the worst thing Trump said this week. https://t.co/YOylTGp1tb", "in_reply_to_screen_name": null, "retweet_count": 1435, "favorite_count": 2718, "source": "TweetDeck", "id_str": "739185962643771392", "is_retweet": false}, {"created_at": "Sun Jun 05 19:54:05 +0000 2016", "text": "The president's job is to take care of our men and women in uniform\u2014while they serve and when they come home. https://t.co/gPhnoWzS63", "in_reply_to_screen_name": null, "retweet_count": 1156, "favorite_count": 2897, "source": "TweetDeck", "id_str": "739545851350122496", "is_retweet": false}, {"created_at": "Thu May 12 16:42:27 +0000 2016", "text": "\"We want to bring unity to the Republican party.\" \u2014@realDonaldTrump\n\nGood luck with that.\nhttps://t.co/MPLsSpV8am", "in_reply_to_screen_name": null, "retweet_count": 1100, "favorite_count": 2136, "source": "Twitter Web Client", "id_str": "730800314417221633", "is_retweet": false}, {"created_at": "Thu May 05 22:48:20 +0000 2016", "text": "5.5 million kids in the U.S. have at least one undocumented parent.\n \nTrump's deportations would hurt them the most. https://t.co/rJMiq7KYwk", "in_reply_to_screen_name": null, "retweet_count": 1229, "favorite_count": 1912, "source": "TweetDeck", "id_str": "728355678822256640", "is_retweet": false}, {"created_at": "Mon Nov 07 01:21:05 +0000 2016", "text": "RT @tyleroakley: we're in line to vote early &amp; not leaving until we cast our vote!! if you have ANY questions at YOUR polls call 1-844-IM4-\u2026", "in_reply_to_screen_name": null, "retweet_count": 4182, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795435873546436609", "is_retweet": true}, {"created_at": "Wed Jan 13 01:04:48 +0000 2016", "text": "A year from now, a new president will walk into the Oval Office. We can't afford to let it be a Republican. https://t.co/UiyznISWar", "in_reply_to_screen_name": null, "retweet_count": 1381, "favorite_count": 3720, "source": "TweetDeck", "id_str": "687077802856857602", "is_retweet": false}, {"created_at": "Mon Jun 13 17:25:50 +0000 2016", "text": "We need to stop terrorists from getting the weapons they need to carry out attacks. https://t.co/Q6r7VVj9ds", "in_reply_to_screen_name": null, "retweet_count": 6011, "favorite_count": 15963, "source": "TweetDeck", "id_str": "742407644284092417", "is_retweet": false}, {"created_at": "Wed Mar 23 21:49:05 +0000 2016", "text": "Women deserve birth control coverage no matter where they work. Bosses shouldn't get to interfere. https://t.co/KUilr3WY9a", "in_reply_to_screen_name": null, "retweet_count": 1247, "favorite_count": 2892, "source": "TweetDeck", "id_str": "712758090614046720", "is_retweet": false}, {"created_at": "Wed Oct 05 01:45:01 +0000 2016", "text": "RT @timkaine: \"I cannot believe that Governor Pence would sit here and defend his running mate\u2019s claim that we should have a deportation fo\u2026", "in_reply_to_screen_name": null, "retweet_count": 1755, "favorite_count": 0, "source": "TweetDeck", "id_str": "783483098709262336", "is_retweet": true}, {"created_at": "Tue Nov 08 01:50:48 +0000 2016", "text": "\u201cTomorrow, with your vote, you can stand up to those who seek to divide us and make us afraid.\u201d \u2014@FLOTUS #ImVotingBecause", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2145, "favorite_count": 4544, "source": "TweetDeck", "id_str": "795805741881970688", "is_retweet": false}, {"created_at": "Fri Sep 16 13:47:40 +0000 2016", "text": "\"The good news is that my pneumonia finally got some Republicans interested in women\u2019s health.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3322, "favorite_count": 6900, "source": "TweetDeck", "id_str": "776779588408139776", "is_retweet": false}, {"created_at": "Tue Jun 14 22:29:24 +0000 2016", "text": "For 241 years, brave @USArmy soldiers have answered the call to serve and protect our nation. Thank you. #ArmyBDay https://t.co/GTfNXtGwi5", "in_reply_to_screen_name": null, "retweet_count": 858, "favorite_count": 2686, "source": "TweetDeck", "id_str": "742846428066775040", "is_retweet": false}, {"created_at": "Mon Jul 25 16:02:57 +0000 2016", "text": "The freedoms and privileges that we enjoy as Americans didn\u2019t come out of thin air. People fought and bled and died for them.", "in_reply_to_screen_name": null, "retweet_count": 1128, "favorite_count": 3804, "source": "TweetDeck", "id_str": "757607075572805632", "is_retweet": false}, {"created_at": "Sun Oct 16 01:13:30 +0000 2016", "text": "It is our obligation as Americans to dig deep in doing whatever we can to build the kind of future we want for ours\u2026 https://t.co/PWo7T7lzAy", "in_reply_to_screen_name": null, "retweet_count": 4171, "favorite_count": 15290, "source": "TweetDeck", "id_str": "787461432233324544", "is_retweet": false}, {"created_at": "Tue Nov 08 16:15:08 +0000 2016", "text": "RT @JeanneShaheen: We just voted to elect the 1st woman to be our President. Let me tell you, it feels amazing! #nhpolitics https://t.co/iK\u2026", "in_reply_to_screen_name": null, "retweet_count": 1790, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796023255580680192", "is_retweet": true}, {"created_at": "Fri Feb 05 17:47:20 +0000 2016", "text": "In 1968, Shirley Chisholm became the first African American woman elected to Congress. #BlackHistoryMonth https://t.co/wOmHRbORpw", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 2406, "source": "TweetDeck", "id_str": "695665019820888064", "is_retweet": false}, {"created_at": "Tue Jul 26 01:36:51 +0000 2016", "text": "\u201cSo guess what Donald? It turns out America is pretty great already.\u201d \u2014@EvaLongoria #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2095, "favorite_count": 6140, "source": "TweetDeck", "id_str": "757751502018609153", "is_retweet": false}, {"created_at": "Tue May 03 19:39:40 +0000 2016", "text": "\u201cWe\u2019re going to build a future that will take advantage of the talents and the hard work of every single one of our children.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 821, "favorite_count": 2024, "source": "TweetDeck", "id_str": "727583422726742020", "is_retweet": false}, {"created_at": "Thu Sep 08 23:05:06 +0000 2016", "text": "\"Thank you for loving all people, especially 'the least, the last, and the lost' among us.\" \u2014Hillary to the @nbcusa_inc", "in_reply_to_screen_name": null, "retweet_count": 789, "favorite_count": 2969, "source": "TweetDeck", "id_str": "774020766589394944", "is_retweet": false}, {"created_at": "Wed Aug 10 19:43:32 +0000 2016", "text": "\"I am humbled and moved by the Republicans who are willing to stand up and say that Donald Trump does not represent their values.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 6600, "favorite_count": 26677, "source": "TweetDeck", "id_str": "763460795644641280", "is_retweet": false}, {"created_at": "Wed Oct 26 20:13:58 +0000 2016", "text": "That was quite a birthday surprise, @Adele. Loved the show last night! -H https://t.co/2QJ76wABh0", "in_reply_to_screen_name": null, "retweet_count": 3904, "favorite_count": 15694, "source": "Twitter Web Client", "id_str": "791372321047056385", "is_retweet": false}, {"created_at": "Fri Oct 21 01:26:49 +0000 2016", "text": "\"It\u2019s amazing that I\u2019m up here after Donald. I didn\u2019t think he\u2019d be OK with a peaceful transition of power.\" \u2014Hillary at the #AlSmithDinner", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2291, "favorite_count": 6217, "source": "TweetDeck", "id_str": "789276725171593216", "is_retweet": false}, {"created_at": "Sat Sep 17 19:14:21 +0000 2016", "text": "Any of these examples proves that Donald Trump is unfit to be president. https://t.co/3mQgqZ7b8V", "in_reply_to_screen_name": null, "retweet_count": 2152, "favorite_count": 4083, "source": "TweetDeck", "id_str": "777224189107400704", "is_retweet": false}, {"created_at": "Wed Oct 26 01:20:45 +0000 2016", "text": "Proud to have the endorsement of General Powell, a decorated soldier and distinguished statesman. https://t.co/4uBFn2aw4W -H", "in_reply_to_screen_name": null, "retweet_count": 6501, "favorite_count": 18925, "source": "TweetDeck", "id_str": "791087137353596928", "is_retweet": false}, {"created_at": "Thu Jun 30 12:56:52 +0000 2016", "text": "Scenes from New York City Pride with Team Hillary.\nhttps://t.co/nYWRrJiU40", "in_reply_to_screen_name": null, "retweet_count": 1678, "favorite_count": 4934, "source": "Twitter Web Client", "id_str": "748500552095391745", "is_retweet": false}, {"created_at": "Thu Jun 09 19:04:46 +0000 2016", "text": "\"I\u2019m with her, I\u2019m fired up, and I can\u2019t wait to get out there and campaign for Hillary.\" \u2014@POTUS https://t.co/ptbhfpCooQ", "in_reply_to_screen_name": null, "retweet_count": 10891, "favorite_count": 30274, "source": "TweetDeck", "id_str": "740982988960346112", "is_retweet": false}, {"created_at": "Wed Nov 09 16:51:59 +0000 2016", "text": "\"To all the little girls watching...never doubt that you are valuable and powerful &amp; deserving of every chance &amp; opportunity in the world.\"", "in_reply_to_screen_name": null, "retweet_count": 670227, "favorite_count": 1218248, "source": "TweetDeck", "id_str": "796394920051441664", "is_retweet": false}, {"created_at": "Tue Aug 23 14:52:48 +0000 2016", "text": "RT @rhettbuttle: When it comes to #smallbiz, it's personal for @HillaryClinton. Lessons from her dad help inspire plan: https://t.co/2sCxRg\u2026", "in_reply_to_screen_name": null, "retweet_count": 543, "favorite_count": 0, "source": "TweetDeck", "id_str": "768098669316931584", "is_retweet": true}, {"created_at": "Fri Jun 03 12:15:21 +0000 2016", "text": "Donald Trump's foreign policy team: one \"very good brain\" with very thin skin.\nhttps://t.co/ctG62mBG9k", "in_reply_to_screen_name": null, "retweet_count": 2115, "favorite_count": 3627, "source": "Twitter Web Client", "id_str": "738705629389295621", "is_retweet": false}, {"created_at": "Tue May 24 19:01:45 +0000 2016", "text": "Trump prioritizing his own gain over Americans' well-being isn't new, but it is telling: The only person he'll fight for is himself.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 846, "favorite_count": 1578, "source": "TweetDeck", "id_str": "735184026743545856", "is_retweet": false}, {"created_at": "Wed Sep 28 11:50:15 +0000 2016", "text": "This election is a choice between an economy that benefits everyone or an economy that benefits...Donald Trump. https://t.co/PEHnJDdiLq", "in_reply_to_screen_name": null, "retweet_count": 6943, "favorite_count": 14170, "source": "Media Studio", "id_str": "781098695647387649", "is_retweet": false}, {"created_at": "Tue Oct 25 20:42:07 +0000 2016", "text": "RT @timkaine: Passionate about getting Hillary into the White House? There\u2019s always something you can do to help out: https://t.co/hepgWSPX\u2026", "in_reply_to_screen_name": null, "retweet_count": 2412, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791017013921677312", "is_retweet": true}, {"created_at": "Mon Apr 18 20:00:59 +0000 2016", "text": "Millions of families who call America home live in fear of being torn apart by deportation. Today, SCOTUS begins deciding their fate. -H", "in_reply_to_screen_name": null, "retweet_count": 966, "favorite_count": 2406, "source": "TweetDeck", "id_str": "722152971384066053", "is_retweet": false}, {"created_at": "Fri May 06 00:56:43 +0000 2016", "text": "We cannot let Donald Trump become the next president. https://t.co/1nFZbCiGV2", "in_reply_to_screen_name": null, "retweet_count": 1467, "favorite_count": 3387, "source": "Twitter for iPhone", "id_str": "728387988393238530", "is_retweet": false}, {"created_at": "Wed Jul 27 00:45:46 +0000 2016", "text": "\"Make no mistake about it: Women's health and rights are on the line and on the ballot in this election.\u201d \u2014@CecileRichards #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1824, "favorite_count": 5258, "source": "Twitter Web Client", "id_str": "758101035001012224", "is_retweet": false}, {"created_at": "Mon Oct 10 02:18:43 +0000 2016", "text": "\"I will be a president for all of the people.\" \u2014Donald Trump*\n\n*Except women, people of color, LGBT people, Muslims... #Debate", "in_reply_to_screen_name": null, "retweet_count": 33299, "favorite_count": 57296, "source": "TweetDeck", "id_str": "785303515635847168", "is_retweet": false}, {"created_at": "Fri Sep 02 20:05:36 +0000 2016", "text": "When Ruline was born in 1913, women couldn't vote.\n\nIn 2016, she'll cast her vote to elect the 1st woman president. https://t.co/QSCZI7JbrV", "in_reply_to_screen_name": null, "retweet_count": 9476, "favorite_count": 25008, "source": "Twitter Web Client", "id_str": "771801270113935360", "is_retweet": false}, {"created_at": "Thu Aug 18 12:03:17 +0000 2016", "text": "RT @WIRED: .@HillaryClinton is the best choice for president of the United States: https://t.co/PhRr4uzByZ https://t.co/9884WcdFhP", "in_reply_to_screen_name": null, "retweet_count": 1231, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "766244071975387136", "is_retweet": true}, {"created_at": "Tue May 10 20:12:09 +0000 2016", "text": "While families are struggling to pay for child care, Donald Trump actually argued that Americans are being paid too much.", "in_reply_to_screen_name": null, "retweet_count": 945, "favorite_count": 2219, "source": "TweetDeck", "id_str": "730128312975134722", "is_retweet": false}, {"created_at": "Fri Oct 14 18:09:22 +0000 2016", "text": "One adviser called Hillary's efforts to get kids health insurance a \"one-woman army inside the White House.\" https://t.co/TyaMQGNZ7w", "in_reply_to_screen_name": null, "retweet_count": 1801, "favorite_count": 5236, "source": "TweetDeck", "id_str": "786992309472722946", "is_retweet": false}, {"created_at": "Tue Jun 21 16:54:34 +0000 2016", "text": "\"Imagine him being in charge when your jobs and savings are at stake.  Is this who you want leading us in an emergency?\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1233, "favorite_count": 3424, "source": "TweetDeck", "id_str": "745298879059529728", "is_retweet": false}, {"created_at": "Fri Feb 26 02:11:39 +0000 2016", "text": "Como presidenta, Hillary proteger\u00e1, renovar\u00e1, y expandir\u00e1 DACA y DAPA, las \u00f3rdenes ejecutivas. No cree en separar a las familias. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 806, "source": "TweetDeck", "id_str": "703039693752016896", "is_retweet": false}, {"created_at": "Fri Mar 11 02:52:28 +0000 2016", "text": "Tell us more about how sexism is wrong, @realDonaldTrump. #GOPdebate https://t.co/mQYAktsn4M", "in_reply_to_screen_name": null, "retweet_count": 2477, "favorite_count": 5691, "source": "TweetDeck", "id_str": "708123394563284993", "is_retweet": false}, {"created_at": "Wed Jul 27 02:21:43 +0000 2016", "text": "\"Then she went down to South Texas\u2026and registered Mexican-American voters.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 811, "favorite_count": 3008, "source": "TweetDeck", "id_str": "758125184666730496", "is_retweet": false}, {"created_at": "Thu Aug 25 19:39:16 +0000 2016", "text": "20 years ago, when Bob Dole accepted the Republican nomination, he pointed to the exits and told any racists in the Party to get out.", "in_reply_to_screen_name": null, "retweet_count": 3106, "favorite_count": 9610, "source": "TweetDeck", "id_str": "768895538267906053", "is_retweet": false}, {"created_at": "Thu Oct 20 02:48:42 +0000 2016", "text": "RT @sean_p_thomas: That's a wrap. 3 debates. 3 wins. A hat trick for @HillaryClinton \ud83c\udfa9. Donald outclassed, outmaneuvered, undone. #Debate", "in_reply_to_screen_name": null, "retweet_count": 3124, "favorite_count": 0, "source": "TweetDeck", "id_str": "788934939844681729", "is_retweet": true}, {"created_at": "Wed Nov 09 16:45:58 +0000 2016", "text": "\"I want to thank Tim Kaine and Anne Holton for being our partners on this journey.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 6897, "favorite_count": 41666, "source": "TweetDeck", "id_str": "796393404095692800", "is_retweet": false}, {"created_at": "Fri Feb 12 15:26:45 +0000 2016", "text": "In case you missed it last night \u261d\ufe0f", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 263, "favorite_count": 1006, "source": "Twitter for iPhone", "id_str": "698166356915699712", "is_retweet": false}, {"created_at": "Tue Nov 08 13:59:37 +0000 2016", "text": "Everything we\u2019ve worked toward comes down to today. RT this if you're voting for Hillary: https://t.co/jfd3CXLD1s https://t.co/AhvOOB6L6C", "in_reply_to_screen_name": null, "retweet_count": 63205, "favorite_count": 85320, "source": "TweetDeck", "id_str": "795989151116095488", "is_retweet": false}, {"created_at": "Mon Feb 01 23:06:08 +0000 2016", "text": "Know an Iowan who\u2019s not sure who they\u2019re caucusing for tonight? Retweet this: https://t.co/VfZeZiLKzX", "in_reply_to_screen_name": null, "retweet_count": 1012, "favorite_count": 1352, "source": "Twitter Web Client", "id_str": "694295698725060608", "is_retweet": false}, {"created_at": "Fri Jul 29 02:46:38 +0000 2016", "text": "\"'Stronger Together\u2019 is...not just a slogan for our campaign. It\u2019s a guiding principle for the country we\u2019ve always been.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2378, "favorite_count": 6449, "source": "TweetDeck", "id_str": "758856228160217090", "is_retweet": false}, {"created_at": "Thu Jan 14 19:47:16 +0000 2016", "text": "Hillary sat down with @CecileRichards and @refinery29 to discuss what\u2019s at stake in the 2016 election. Hint: A lot. https://t.co/eMB40QxOTZ", "in_reply_to_screen_name": null, "retweet_count": 244, "favorite_count": 494, "source": "TweetDeck", "id_str": "687722668808867841", "is_retweet": false}, {"created_at": "Tue Jul 26 02:28:56 +0000 2016", "text": "RT @HFA: \"We\u2019re here today because our choice is @HillaryClinton. I\u2019m with Hillary.\" \u2014@ElizabethforMA #DemsInPhilly https://t.co/5h4jzdGZS2", "in_reply_to_screen_name": null, "retweet_count": 921, "favorite_count": 0, "source": "TweetDeck", "id_str": "757764609394745344", "is_retweet": true}, {"created_at": "Mon Oct 10 02:24:53 +0000 2016", "text": "Many people are saying Donald Trump doesn't have the discipline, temperament, or vision to be president. #debate", "in_reply_to_screen_name": null, "retweet_count": 3997, "favorite_count": 13884, "source": "TweetDeck", "id_str": "785305068287430656", "is_retweet": false}, {"created_at": "Sat Sep 17 20:48:57 +0000 2016", "text": "RT @Hillary_esp: Este #HispanicHeritageMonth, honremos las tantas contribuciones que los hispanos y latinos han hecho a este pa\u00eds. https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1172, "favorite_count": 0, "source": "TweetDeck", "id_str": "777247994856996864", "is_retweet": true}, {"created_at": "Thu Jul 28 01:18:11 +0000 2016", "text": "\"We all understand what it will mean for our daughters and granddaughters when Hillary Clinton walks into the Oval Office.\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 1536, "favorite_count": 4451, "source": "TweetDeck", "id_str": "758471581639254016", "is_retweet": false}, {"created_at": "Fri Sep 16 19:22:54 +0000 2016", "text": "\u201cYou\u2019ve got to get yourself and everyone you know registered to vote today.\u201d \u2014@FLOTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1157, "favorite_count": 2375, "source": "TweetDeck", "id_str": "776863952068308992", "is_retweet": false}, {"created_at": "Mon Sep 19 14:43:16 +0000 2016", "text": "Our next president needs to have the right temperament to meet the challenges we face. https://t.co/XMDZPtLNMB", "in_reply_to_screen_name": null, "retweet_count": 2760, "favorite_count": 7333, "source": "TweetDeck", "id_str": "777880745939443713", "is_retweet": false}, {"created_at": "Sun Oct 30 13:47:10 +0000 2016", "text": "Trump has a history of boasting about his donations to charity\u2014and little history of seriously donating to charity. https://t.co/p3EUMewYTw", "in_reply_to_screen_name": null, "retweet_count": 3663, "favorite_count": 7627, "source": "TweetDeck", "id_str": "792724527860051968", "is_retweet": false}, {"created_at": "Thu Mar 17 22:52:26 +0000 2016", "text": "Hate isn't an American value. Division isn't something to be glorified. We can\u2019t let Trump be our next president.\nhttps://t.co/wSgKlxOP3s", "in_reply_to_screen_name": null, "retweet_count": 6769, "favorite_count": 11365, "source": "Twitter Web Client", "id_str": "710599703600082948", "is_retweet": false}, {"created_at": "Tue Sep 27 01:44:51 +0000 2016", "text": "\"Maybe he didn't do a good job.\" \u2014Donald Trump\n\nLooks like you \u201cloved\u201d it at the time. #DebateNight\u2026 https://t.co/LelC6Tb3nj", "in_reply_to_screen_name": null, "retweet_count": 4313, "favorite_count": 8303, "source": "TweetDeck", "id_str": "780583951647768577", "is_retweet": false}, {"created_at": "Thu Nov 03 03:36:33 +0000 2016", "text": "Last week, Sheriff Joe Arpaio was charged with contempt of court for racially profiling Latinos.\n\nDonald Trump supports him.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1831, "favorite_count": 3270, "source": "TweetDeck", "id_str": "794020414662070273", "is_retweet": false}, {"created_at": "Wed Oct 19 12:55:59 +0000 2016", "text": "On November 9, what kind of world do you want to wake up in? https://t.co/nN0EN1MFpd", "in_reply_to_screen_name": null, "retweet_count": 1229, "favorite_count": 3876, "source": "TweetDeck", "id_str": "788725380555366400", "is_retweet": false}, {"created_at": "Mon May 23 17:49:56 +0000 2016", "text": "Tune in to watch Hillary address the 2016 @SEIU International Convention. https://t.co/hAfimAPdjx https://t.co/bU342z6v3K", "in_reply_to_screen_name": null, "retweet_count": 340, "favorite_count": 772, "source": "TweetDeck", "id_str": "734803565747785728", "is_retweet": false}, {"created_at": "Wed Aug 24 18:31:53 +0000 2016", "text": "RT @PaulBegala: Before @ClintinFdn, 200K people with HIV AIDS in poor countries got lifesaving anti-retroviral meds. Because of @ClintonFdn\u2026", "in_reply_to_screen_name": null, "retweet_count": 3928, "favorite_count": 0, "source": "TweetDeck", "id_str": "768516194727002112", "is_retweet": true}, {"created_at": "Sun Oct 02 23:39:05 +0000 2016", "text": "Donald Trump built numerous squandered businesses on the backs of taxpayers\u2014and he hasn't even paid his fair share. https://t.co/z0VopqoiCy", "in_reply_to_screen_name": null, "retweet_count": 2519, "favorite_count": 5529, "source": "TweetDeck", "id_str": "782726630473101313", "is_retweet": false}, {"created_at": "Thu Jul 28 16:45:54 +0000 2016", "text": "On day three, the #DemsInPhilly officially welcomed @TimKaine to the ticket\u2014and @POTUS brought down the house: https://t.co/gs5u7BjPzg", "in_reply_to_screen_name": null, "retweet_count": 769, "favorite_count": 3314, "source": "TweetDeck", "id_str": "758705050294312960", "is_retweet": false}, {"created_at": "Wed Jul 27 17:46:51 +0000 2016", "text": "A young girl asked Hillary, \"Do you think when you're president, you'll be paid as much as a man?\"\nhttps://t.co/sValauUbkT", "in_reply_to_screen_name": null, "retweet_count": 6459, "favorite_count": 14330, "source": "Twitter Web Client", "id_str": "758357998838222848", "is_retweet": false}, {"created_at": "Wed Oct 05 02:08:23 +0000 2016", "text": "RT @timkaine: \u201cHow can you support the troops if you won\u2019t pay taxes?\u201d \u2014Tim #VPDebate https://t.co/GGKa5Iy82m", "in_reply_to_screen_name": null, "retweet_count": 2869, "favorite_count": 0, "source": "TweetDeck", "id_str": "783488978850811905", "is_retweet": true}, {"created_at": "Tue Jul 19 23:15:56 +0000 2016", "text": "Donald Trump just became the Republican nominee. Chip in now to make sure he never steps foot in the Oval Office. https://t.co/GjshXP4BAG", "in_reply_to_screen_name": null, "retweet_count": 1869, "favorite_count": 3674, "source": "TweetDeck", "id_str": "755541714580963330", "is_retweet": false}, {"created_at": "Mon Oct 10 01:44:06 +0000 2016", "text": "RT @TheBriefing2016: This Muslim ban is...literally still on Donald Trump's website right now. #Debate https://t.co/WKJcZLvPrQ https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 6664, "favorite_count": 0, "source": "TweetDeck", "id_str": "785294806826225664", "is_retweet": true}, {"created_at": "Wed Jan 13 20:31:35 +0000 2016", "text": "What would a State of the Union be like under a Republican president? Here\u2019s a disturbing preview. https://t.co/Teulkzxqxk", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 606, "source": "Twitter Web Client", "id_str": "687371435531173890", "is_retweet": false}, {"created_at": "Thu Nov 03 19:34:37 +0000 2016", "text": "\"I was denied an apartment in the Trump buildings based on the color of my skin.\"\n\nThis is Mae Wiggins's story: https://t.co/lQvZr6qWow", "in_reply_to_screen_name": null, "retweet_count": 8808, "favorite_count": 13350, "source": "Media Studio", "id_str": "794261519638921218", "is_retweet": false}, {"created_at": "Thu Oct 13 17:01:37 +0000 2016", "text": "\u201cIn difficult times, we don\u2019t discard our highest ideals, we rise up to meet them.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1410, "favorite_count": 4232, "source": "TweetDeck", "id_str": "786612869429354496", "is_retweet": false}, {"created_at": "Fri Jan 29 17:21:11 +0000 2016", "text": "\"I've spent my life fighting for children, families, and our country\u2014and I'm not stopping now.\u201d\nhttps://t.co/zlGzW953CZ", "in_reply_to_screen_name": null, "retweet_count": 1279, "favorite_count": 2429, "source": "Twitter Web Client", "id_str": "693121725496569856", "is_retweet": false}, {"created_at": "Wed Oct 05 00:32:29 +0000 2016", "text": "If you're on @TimKaine's team tonight, chip in before the #VPDebate to let him know: https://t.co/7IwGS5Olfw https://t.co/LygySSk4i8", "in_reply_to_screen_name": null, "retweet_count": 605, "favorite_count": 2604, "source": "TweetDeck", "id_str": "783464843743485952", "is_retweet": false}, {"created_at": "Tue Jan 26 18:01:18 +0000 2016", "text": "Ready to stand with Hillary? Say #ImWithHer with your custom commit card: https://t.co/aNuBobPBOM \ud83d\udc8c https://t.co/0dz8W6krQV", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 871, "source": "TweetDeck", "id_str": "692044658004901889", "is_retweet": false}, {"created_at": "Mon Feb 01 19:14:43 +0000 2016", "text": "Caucus Day is here, Iowa! Text CAUCUS to 47246 to find your caucus location and make a plan to get there by 6:30 p.m. She's counting on you.", "in_reply_to_screen_name": null, "retweet_count": 349, "favorite_count": 638, "source": "TweetDeck", "id_str": "694237460977573888", "is_retweet": false}, {"created_at": "Sun Oct 30 22:56:11 +0000 2016", "text": "If you're voting for Hillary, don't stop there. We need to support Democrats down the ticket. Here's why: https://t.co/fKZnOYlbrJ", "in_reply_to_screen_name": null, "retweet_count": 3969, "favorite_count": 8547, "source": "TweetDeck", "id_str": "792862695619981312", "is_retweet": false}, {"created_at": "Sun Nov 06 00:13:08 +0000 2016", "text": "Thank you to @Beyonce, @S_C_, @Pharrell, @ChanceTheRapper, @BigSean, @JColeNC, and all the amazing artists helping to get out the vote. -H", "in_reply_to_screen_name": null, "retweet_count": 4922, "favorite_count": 18471, "source": "Twitter Web Client", "id_str": "795056384354222085", "is_retweet": false}, {"created_at": "Fri Jan 01 20:46:20 +0000 2016", "text": "We can\u2019t afford to let a Republican take the oath of office next January. https://t.co/I0vhpsH2G9", "in_reply_to_screen_name": null, "retweet_count": 1483, "favorite_count": 3731, "source": "TweetDeck", "id_str": "683026492473892865", "is_retweet": false}, {"created_at": "Thu Oct 20 00:41:32 +0000 2016", "text": "Can you say you stepped up when it counted most? Chip in before tonight's #debate to show you're on Hillary's team: https://t.co/3yjNk7jCv4", "in_reply_to_screen_name": null, "retweet_count": 979, "favorite_count": 3284, "source": "TweetDeck", "id_str": "788902939683348480", "is_retweet": false}, {"created_at": "Fri Jul 15 15:05:25 +0000 2016", "text": "It's official: @realDonaldTrump just chose Mike Pence as his running mate. What you need to know about him:\nhttps://t.co/VpmloblDhS", "in_reply_to_screen_name": null, "retweet_count": 7712, "favorite_count": 8629, "source": "Twitter Web Client", "id_str": "753968719626326016", "is_retweet": false}, {"created_at": "Sun Jan 17 17:54:50 +0000 2016", "text": "@MaryKayHenry Proud to stand with @SEIU, fighting together to raise wages for hardworking families! So grateful for your support. -H", "in_reply_to_screen_name": "MaryKayHenry", "retweet_count": 87, "favorite_count": 121, "source": "Twitter Web Client", "id_str": "688781537245040640", "is_retweet": false}, {"created_at": "Fri Jul 22 03:31:46 +0000 2016", "text": "History is watching. https://t.co/pdphHQmYCM", "in_reply_to_screen_name": null, "retweet_count": 6873, "favorite_count": 11257, "source": "Twitter Web Client", "id_str": "756330871238561792", "is_retweet": false}, {"created_at": "Sat Aug 06 16:12:33 +0000 2016", "text": "RT @AmbassadorRice: Deeply concerned by raid on #ugpride2016. Many detained, incl. @Frankmugisha. LGBT citizens deserve protection. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 625, "favorite_count": 0, "source": "TweetDeck", "id_str": "761958147602968576", "is_retweet": true}, {"created_at": "Sun Feb 14 03:48:23 +0000 2016", "text": "If anyone needed a reminder of how important it is to elect a Democratic president, look at the Supreme Court.\nhttps://t.co/j4aT4FO1gr", "in_reply_to_screen_name": null, "retweet_count": 1557, "favorite_count": 3224, "source": "Twitter Web Client", "id_str": "698715383176400896", "is_retweet": false}, {"created_at": "Tue Oct 25 02:13:22 +0000 2016", "text": "\"It\u2019s important to give you something to vote for, not just against.\" \u2014Hillary https://t.co/qVF3DUSYZ7 https://t.co/uvGVgqktgn", "in_reply_to_screen_name": null, "retweet_count": 1887, "favorite_count": 6549, "source": "TweetDeck", "id_str": "790737990985326592", "is_retweet": false}, {"created_at": "Fri Mar 25 02:16:39 +0000 2016", "text": "Black students are 16% of student populations but are subjected to school-related arrests 31% of the time. https://t.co/JQtLyoZRBn", "in_reply_to_screen_name": null, "retweet_count": 1992, "favorite_count": 3956, "source": "TweetDeck", "id_str": "713187812590354432", "is_retweet": false}, {"created_at": "Sun Jul 17 14:17:43 +0000 2016", "text": "That time Donald Trump introduced his running mate...sort of.\nhttps://t.co/uJR7U53Cee", "in_reply_to_screen_name": null, "retweet_count": 3241, "favorite_count": 7379, "source": "Twitter Web Client", "id_str": "754681490768736256", "is_retweet": false}, {"created_at": "Tue Apr 05 18:58:39 +0000 2016", "text": "Make sure your friends in Wisconsin vote for Hillary today! Send them a message with our friend finder: https://t.co/8myXocrvCx", "in_reply_to_screen_name": null, "retweet_count": 584, "favorite_count": 1121, "source": "TweetDeck", "id_str": "717426240211300352", "is_retweet": false}, {"created_at": "Thu Jan 21 01:09:18 +0000 2016", "text": "We need to protect and build on the Affordable Care Act, not start over with another contentious national debate.", "in_reply_to_screen_name": null, "retweet_count": 783, "favorite_count": 1956, "source": "TweetDeck", "id_str": "689978038843543552", "is_retweet": false}, {"created_at": "Mon Feb 08 16:01:07 +0000 2016", "text": "Pancakes, coffee, and laughs in Manchester, New Hampshire. https://t.co/FQj9lxiDDb", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 1485, "source": "TweetDeck", "id_str": "696725455634874368", "is_retweet": false}, {"created_at": "Sun Jul 17 21:05:58 +0000 2016", "text": "Hillary's statement on the shooting in Baton Rouge. https://t.co/4a0MVF3025", "in_reply_to_screen_name": null, "retweet_count": 1871, "favorite_count": 4355, "source": "TweetDeck", "id_str": "754784232598364162", "is_retweet": false}, {"created_at": "Mon May 09 19:09:39 +0000 2016", "text": "\"If you have a mother, a wife, a sister, a daughter who is working, it affects you\" \u2014Hillary on equal pay for women: https://t.co/qM16OacO9H", "in_reply_to_screen_name": null, "retweet_count": 1143, "favorite_count": 2485, "source": "TweetDeck", "id_str": "729750197467754497", "is_retweet": false}, {"created_at": "Fri Aug 12 01:12:39 +0000 2016", "text": ".@TeamUSA at the White House, circa 2000. #TBT\nhttps://t.co/cix9dny7PU", "in_reply_to_screen_name": null, "retweet_count": 935, "favorite_count": 3557, "source": "Twitter Web Client", "id_str": "763906007600803840", "is_retweet": false}, {"created_at": "Mon Feb 01 19:29:04 +0000 2016", "text": "Coffee break on Caucus Day in Des Moines, Iowa. #IowaCaucus https://t.co/Xb8EbnBhfE", "in_reply_to_screen_name": null, "retweet_count": 411, "favorite_count": 1207, "source": "TweetDeck", "id_str": "694241071472205826", "is_retweet": false}, {"created_at": "Mon Sep 26 14:32:05 +0000 2016", "text": "Our daughters deserve better. https://t.co/LJPlFegSTs", "in_reply_to_screen_name": null, "retweet_count": 7703, "favorite_count": 16180, "source": "Media Studio", "id_str": "780414643516780544", "is_retweet": false}, {"created_at": "Tue Feb 09 17:07:27 +0000 2016", "text": "Scenes from the homestretch in the Granite State. https://t.co/OSD14NT8az https://t.co/MFPoJazx0o", "in_reply_to_screen_name": null, "retweet_count": 332, "favorite_count": 807, "source": "TweetDeck", "id_str": "697104536545189888", "is_retweet": false}, {"created_at": "Tue Jul 19 18:40:29 +0000 2016", "text": "2,016 and counting: We're reading thousands of lawsuits involving @realDonaldTrump live on Facebook. https://t.co/uEDYLIKkFk", "in_reply_to_screen_name": null, "retweet_count": 1222, "favorite_count": 2872, "source": "TweetDeck", "id_str": "755472393041305600", "is_retweet": false}, {"created_at": "Wed Apr 20 17:30:37 +0000 2016", "text": "Hillary Clinton luchar\u00e1 para los inmigrantes para que todos puedan salir adelante. https://t.co/qxtCX1hbx4", "in_reply_to_screen_name": null, "retweet_count": 353, "favorite_count": 637, "source": "TweetDeck", "id_str": "722839904040927233", "is_retweet": false}, {"created_at": "Thu Jul 07 21:23:48 +0000 2016", "text": "\u201cThere has to be some form of punishment [for seeking abortion].\u201d \u2014Donald Trump, March 30, 2016 https://t.co/2Xd3b2cvq0", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 2272, "source": "TweetDeck", "id_str": "751164840333410304", "is_retweet": false}, {"created_at": "Mon Jul 11 16:08:45 +0000 2016", "text": "New ad: Donald Trump's number one foreign policy advisor? Himself.\n\nAnd his \"very good brain.\"\nhttps://t.co/ac1793AiXf", "in_reply_to_screen_name": null, "retweet_count": 2310, "favorite_count": 4685, "source": "Twitter Web Client", "id_str": "752535107437600768", "is_retweet": false}, {"created_at": "Wed Sep 14 16:39:58 +0000 2016", "text": "8. Will you disclose the nature of your personal and business relationships with all of the Russian oligarchs you are \u201cclose\u201d to?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2896, "favorite_count": 4743, "source": "TweetDeck", "id_str": "776098173047676930", "is_retweet": false}, {"created_at": "Mon Sep 12 20:48:09 +0000 2016", "text": "Like anyone who\u2019s ever been home sick from work, I\u2019m just anxious to get back out there. See you on the trail soon. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4900, "favorite_count": 19704, "source": "Twitter Web Client", "id_str": "775435854466744320", "is_retweet": false}, {"created_at": "Wed Apr 06 16:07:03 +0000 2016", "text": "\"'Right to Work' is wrong for workers and wrong for America.\u201d -Hillary on her opposition to restricting workers' rights", "in_reply_to_screen_name": null, "retweet_count": 497, "favorite_count": 1282, "source": "TweetDeck", "id_str": "717745442163916801", "is_retweet": false}, {"created_at": "Mon Mar 21 18:30:05 +0000 2016", "text": "We need to pay our teachers like the future of our country is in their hands\u2014because it is.", "in_reply_to_screen_name": null, "retweet_count": 3029, "favorite_count": 6438, "source": "TweetDeck", "id_str": "711983231399305216", "is_retweet": false}, {"created_at": "Wed Sep 14 01:16:44 +0000 2016", "text": "California made the right call: Every worker should be treated with dignity and receive the benefits they've earned. https://t.co/hcw2eSekoG", "in_reply_to_screen_name": null, "retweet_count": 2360, "favorite_count": 6868, "source": "TweetDeck", "id_str": "775865833960726528", "is_retweet": false}, {"created_at": "Tue Apr 05 20:29:06 +0000 2016", "text": "Minimum wage earners are disproportionately women of color. Raising it would help millions of families. https://t.co/9GxTWyN6ed", "in_reply_to_screen_name": null, "retweet_count": 1438, "favorite_count": 3445, "source": "TweetDeck", "id_str": "717449001554075648", "is_retweet": false}, {"created_at": "Wed Oct 05 01:26:13 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump thinks this is \"smart.\" If you pay taxes, what does he think of you? #VPDebate https://t.co/hbJOOR1UP3", "in_reply_to_screen_name": null, "retweet_count": 740, "favorite_count": 0, "source": "TweetDeck", "id_str": "783478365479198720", "is_retweet": true}, {"created_at": "Sun Jun 12 00:15:35 +0000 2016", "text": "When Trump's casinos failed, he hurt a whole universe of small businesses that never got paid what they were owed. https://t.co/32cJxMhwnL", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2528, "favorite_count": 4926, "source": "Twitter Web Client", "id_str": "741785985567064064", "is_retweet": false}, {"created_at": "Tue Jan 12 17:30:59 +0000 2016", "text": "\u201cBottom line: Sanders and Clinton are both good on reproductive health\u2014but Clinton pushes harder.\u201d https://t.co/m4kL5jgb8Y", "in_reply_to_screen_name": null, "retweet_count": 381, "favorite_count": 959, "source": "TweetDeck", "id_str": "686963597558312960", "is_retweet": false}, {"created_at": "Mon Oct 10 00:57:07 +0000 2016", "text": "Let's go. #Debate https://t.co/HD3ZVJ9xl8", "in_reply_to_screen_name": null, "retweet_count": 20799, "favorite_count": 79195, "source": "TweetDeck", "id_str": "785282982261190656", "is_retweet": false}, {"created_at": "Mon Nov 07 22:59:04 +0000 2016", "text": "Yesterday, Khizr Khan told the story of a 10-year-old boy who was bullied at school\u2014until his class watched Mr. Kha\u2026 https://t.co/54oWoGm9B8", "in_reply_to_screen_name": null, "retweet_count": 6745, "favorite_count": 18980, "source": "Media Studio", "id_str": "795762522464862208", "is_retweet": false}, {"created_at": "Tue Jul 26 00:11:20 +0000 2016", "text": "\"When Donald Trump talks about deporting 11 million people, he\u2019s talking about...separating families like mine and like Karla\u2019s\" \u2014@Astrid_NV", "in_reply_to_screen_name": null, "retweet_count": 1357, "favorite_count": 3970, "source": "TweetDeck", "id_str": "757729982634483714", "is_retweet": false}, {"created_at": "Thu Oct 27 19:01:56 +0000 2016", "text": "\u201cAs we look into the eyes of our children...the stakes in this election could not be more clear.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 528, "favorite_count": 1250, "source": "TweetDeck", "id_str": "791716578974961664", "is_retweet": false}, {"created_at": "Mon Aug 15 17:18:51 +0000 2016", "text": "Donald Trump would give trillions in tax cuts to big corporations, millionaires, and Wall Street money managers.", "in_reply_to_screen_name": null, "retweet_count": 724, "favorite_count": 2031, "source": "TweetDeck", "id_str": "765236323863130112", "is_retweet": false}, {"created_at": "Thu Jul 28 17:46:02 +0000 2016", "text": "Ready to pass the baton. https://t.co/a0hKQcWDzq", "in_reply_to_screen_name": null, "retweet_count": 3505, "favorite_count": 14129, "source": "TweetDeck", "id_str": "758720181631913985", "is_retweet": false}, {"created_at": "Tue Jul 26 01:57:36 +0000 2016", "text": "\"Let us declare again that we are a nation of interdependence and that in America, love always trumps hate.\" \u2014@CoryBooker #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2452, "favorite_count": 5878, "source": "TweetDeck", "id_str": "757756727416717312", "is_retweet": false}, {"created_at": "Thu Nov 03 12:23:38 +0000 2016", "text": "\"I'm casting my vote early for Hillary Clinton, and I urge you to vote early for Hillary, too.\" \u2014@FLOTUS https://t.co/CDlNpyZ6sd", "in_reply_to_screen_name": null, "retweet_count": 9070, "favorite_count": 22450, "source": "Media Studio", "id_str": "794153057949020160", "is_retweet": false}, {"created_at": "Fri Nov 04 16:41:08 +0000 2016", "text": "RT @algore: The choice in this election is whether we will solve the climate crisis in time or whether the United States will move backward\u2026", "in_reply_to_screen_name": null, "retweet_count": 4490, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794580247891103744", "is_retweet": true}, {"created_at": "Tue Aug 30 02:16:57 +0000 2016", "text": "It's time to finally put access to care for mental health on par with physical health. https://t.co/SgMYIpi1Ac", "in_reply_to_screen_name": null, "retweet_count": 2293, "favorite_count": 6549, "source": "TweetDeck", "id_str": "770445170089287680", "is_retweet": false}, {"created_at": "Wed Aug 31 15:28:05 +0000 2016", "text": ".@GovChristie, vetoing a minimum wage increase is a blow to working families. No one who works full-time should have to live in poverty. -H", "in_reply_to_screen_name": null, "retweet_count": 2712, "favorite_count": 7304, "source": "TweetDeck", "id_str": "771006655316320260", "is_retweet": false}, {"created_at": "Fri Apr 15 02:46:34 +0000 2016", "text": "Republican governors would have to fund one third of @BernieSanders\u2019 college plan. Not likely. #DemDebate https://t.co/QXXn8cUc0s", "in_reply_to_screen_name": null, "retweet_count": 1667, "favorite_count": 3211, "source": "TweetDeck", "id_str": "720805485977460736", "is_retweet": false}, {"created_at": "Wed Sep 21 19:03:24 +0000 2016", "text": "Over 60% of adults with disabilities aren\u2019t in the workplace. We have to fix that. https://t.co/J3Jq21ejtR", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 678, "favorite_count": 1335, "source": "TweetDeck", "id_str": "778670985516048384", "is_retweet": false}, {"created_at": "Wed May 25 12:57:16 +0000 2016", "text": "Millions of families saw their life savings destroyed in the Great Recession.\n\nTrump saw it as a chance to cash in. https://t.co/tnngHNVqoL", "in_reply_to_screen_name": null, "retweet_count": 1940, "favorite_count": 2828, "source": "TweetDeck", "id_str": "735454688028569601", "is_retweet": false}, {"created_at": "Tue Oct 11 12:21:02 +0000 2016", "text": "Does Trump have the discipline to be a good leader? You decide. https://t.co/KfdtXNeFfE", "in_reply_to_screen_name": null, "retweet_count": 4515, "favorite_count": 9097, "source": "Media Studio", "id_str": "785817483097759745", "is_retweet": false}, {"created_at": "Mon Jul 18 21:12:14 +0000 2016", "text": "Today\u2019s #RNCinCLE theme: \u201cLaw and Order.\u201d\nhttps://t.co/CSpr7PgkMS", "in_reply_to_screen_name": null, "retweet_count": 2187, "favorite_count": 4419, "source": "Twitter Web Client", "id_str": "755148197522051072", "is_retweet": false}, {"created_at": "Tue Nov 08 14:26:20 +0000 2016", "text": "RT @repjohnlewis: The right to vote is precious, almost sacred. It is the most powerful nonviolent tool or instrument we have in a democrat\u2026", "in_reply_to_screen_name": null, "retweet_count": 18010, "favorite_count": 0, "source": "TweetDeck", "id_str": "795995877001334785", "is_retweet": true}, {"created_at": "Tue Nov 08 01:49:10 +0000 2016", "text": "\u201cWe have a duty to ensure that this country is handed over to a leader that we all can trust.\u201d \u2014@FLOTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 704, "favorite_count": 1605, "source": "TweetDeck", "id_str": "795805327476269056", "is_retweet": false}, {"created_at": "Thu Oct 20 01:15:38 +0000 2016", "text": "RT @TheBriefing2016: Unlike 92% of Americans, Trump does not support expanding background checks for gun sales. #debate https://t.co/5v3LEu\u2026", "in_reply_to_screen_name": null, "retweet_count": 1002, "favorite_count": 0, "source": "TweetDeck", "id_str": "788911522097590272", "is_retweet": true}, {"created_at": "Sat Jul 23 14:55:11 +0000 2016", "text": "If you want to know what someone\u2019s really like, ask his neighbors when he's not around. https://t.co/TOvRfhitEz", "in_reply_to_screen_name": null, "retweet_count": 1182, "favorite_count": 3283, "source": "Twitter for iPhone", "id_str": "756865248901074944", "is_retweet": false}, {"created_at": "Fri Apr 15 21:45:56 +0000 2016", "text": "This couple lost their daughter in the Aurora shooting. Now, they have to pay the gun dealer's legal fees.\nhttps://t.co/FpyqLO5cCE", "in_reply_to_screen_name": null, "retweet_count": 1882, "favorite_count": 2576, "source": "Twitter Web Client", "id_str": "721092216848908288", "is_retweet": false}, {"created_at": "Tue Sep 27 15:54:07 +0000 2016", "text": "When you have a really, really good night. #SheWon https://t.co/FVeGqhYxRZ", "in_reply_to_screen_name": null, "retweet_count": 10067, "favorite_count": 45763, "source": "TweetDeck", "id_str": "780797677009244160", "is_retweet": false}, {"created_at": "Thu Jul 28 02:22:24 +0000 2016", "text": "RT @timkaine: \"Republican senators...once they've made sure nobody is listening, will tell you how fantastic a senator that Hillary Clinton\u2026", "in_reply_to_screen_name": null, "retweet_count": 1169, "favorite_count": 0, "source": "TweetDeck", "id_str": "758487742284042240", "is_retweet": true}, {"created_at": "Sun Aug 07 17:51:29 +0000 2016", "text": "RT @BishopGarrison: Proud to celebrate Nat. Purple Heart Day today. Thank you to my fellow vets &amp; service members for your sacrifice. https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1201, "favorite_count": 0, "source": "TweetDeck", "id_str": "762345434014707712", "is_retweet": true}, {"created_at": "Fri Jul 29 03:09:33 +0000 2016", "text": "\u201cWay too many dreams die in the parking lots of banks. In America, if you can dream it, you should be able to do it.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1969, "favorite_count": 5710, "source": "TweetDeck", "id_str": "758861996259291143", "is_retweet": false}, {"created_at": "Sun Jul 31 18:55:38 +0000 2016", "text": "Thank you, @JoeBiden. https://t.co/z1Jb6CrtzH", "in_reply_to_screen_name": null, "retweet_count": 2252, "favorite_count": 9228, "source": "TweetDeck", "id_str": "759824863041298432", "is_retweet": false}, {"created_at": "Tue Sep 13 01:23:53 +0000 2016", "text": "Paying for college doesn't end at tuition, so we need to help students pay for other costs like books and housing. https://t.co/6S4QDivoW1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 666, "favorite_count": 1502, "source": "TweetDeck", "id_str": "775505245577285633", "is_retweet": false}, {"created_at": "Thu Jan 28 00:39:01 +0000 2016", "text": "Today &amp; every day, we have an obligation to confront hate, advance human rights, &amp; help those fleeing persecution. #HolocaustMemorialDay -H", "in_reply_to_screen_name": null, "retweet_count": 907, "favorite_count": 1726, "source": "TweetDeck", "id_str": "692507133825409025", "is_retweet": false}, {"created_at": "Fri Aug 19 23:45:01 +0000 2016", "text": "RT @MarlonDMarshall: Trump questions the citizenship of the first black president, courts white supremacists, and has been sued for housing\u2026", "in_reply_to_screen_name": null, "retweet_count": 3397, "favorite_count": 0, "source": "TweetDeck", "id_str": "766783055721852936", "is_retweet": true}, {"created_at": "Tue Jul 26 21:02:01 +0000 2016", "text": "Watch Hillary become the first woman presidential nominee of a major political party: https://t.co/mQ9oeap7qp #WeMadeHistory", "in_reply_to_screen_name": null, "retweet_count": 1178, "favorite_count": 3335, "source": "TweetDeck", "id_str": "758044728596111360", "is_retweet": false}, {"created_at": "Fri Sep 09 19:10:48 +0000 2016", "text": "Watch live as @ElizabethForMA campaigns for Hillary in Philadelphia \u2192 https://t.co/n9m2rk9iCQ https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 654, "favorite_count": 1738, "source": "TweetDeck", "id_str": "774324191587893248", "is_retweet": false}, {"created_at": "Sat Mar 26 22:43:38 +0000 2016", "text": "\"Tenemos que actuar en contra del virus Zika ahora.\" \u2014Hillary https://t.co/dR1OzE3ZEa", "in_reply_to_screen_name": null, "retweet_count": 435, "favorite_count": 909, "source": "TweetDeck", "id_str": "713858982075613184", "is_retweet": false}, {"created_at": "Fri Apr 15 14:41:42 +0000 2016", "text": "A record of results, from taking on the gun lobby to securing health care for millions of kids. https://t.co/8cVshvwDk5 #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 742, "favorite_count": 1659, "source": "TweetDeck", "id_str": "720985454477230080", "is_retweet": false}, {"created_at": "Wed Jul 20 14:22:32 +0000 2016", "text": "Trump doesn't represent us or our values. Join the 100,000 people who have already signed our letter if you agree: https://t.co/1ftZ6mCAHZ", "in_reply_to_screen_name": null, "retweet_count": 1167, "favorite_count": 2986, "source": "TweetDeck", "id_str": "755769865059856384", "is_retweet": false}, {"created_at": "Wed Oct 05 21:54:00 +0000 2016", "text": "When pressed about Trump insulting and demonizing Latinos and immigrants, Mike Pence had a...telling response. https://t.co/QREumskeC2", "in_reply_to_screen_name": null, "retweet_count": 1308, "favorite_count": 3130, "source": "Twitter Web Client", "id_str": "783787347112583168", "is_retweet": false}, {"created_at": "Wed Jan 13 18:52:38 +0000 2016", "text": "From protecting voting rights to challenging discrimination, @EricHolder was one of our finest Attorneys General. Honored by his support. -H", "in_reply_to_screen_name": null, "retweet_count": 515, "favorite_count": 1176, "source": "TweetDeck", "id_str": "687346531675074560", "is_retweet": false}, {"created_at": "Thu Mar 03 14:11:35 +0000 2016", "text": "We\u2019ve got to build on the Affordable Care Act and make sure that every single American has access to quality, affordable health care.", "in_reply_to_screen_name": null, "retweet_count": 1086, "favorite_count": 3179, "source": "TweetDeck", "id_str": "705395196817702912", "is_retweet": false}, {"created_at": "Tue Sep 27 13:57:55 +0000 2016", "text": "Trump on Alicia, 1996: \"Miss Piggy.\"\n\nThis morning: \"She gained a massive amount of weight...it was a real problem.\" https://t.co/0wrISjJe6z", "in_reply_to_screen_name": null, "retweet_count": 23103, "favorite_count": 33226, "source": "TweetDeck", "id_str": "780768433910710272", "is_retweet": false}, {"created_at": "Thu Sep 08 23:29:24 +0000 2016", "text": "We need a president who will do justice, love kindness, and walk humbly. https://t.co/m1814vekWO", "in_reply_to_screen_name": null, "retweet_count": 2769, "favorite_count": 9676, "source": "TweetDeck", "id_str": "774026882966777856", "is_retweet": false}, {"created_at": "Fri Mar 18 00:54:13 +0000 2016", "text": "While the other candidates \"seem downright terrified of the gun lobby, Hillary seems fearless.\" \u2014@GabbyGiffords https://t.co/Dw38Jw3Qus", "in_reply_to_screen_name": null, "retweet_count": 1280, "favorite_count": 2918, "source": "TweetDeck", "id_str": "710630353422196737", "is_retweet": false}, {"created_at": "Fri Jul 22 02:16:32 +0000 2016", "text": "About @realDonaldTrump's views on working women and pregnancy. https://t.co/LmUZI1J8KQ", "in_reply_to_screen_name": null, "retweet_count": 2710, "favorite_count": 3425, "source": "Twitter Web Client", "id_str": "756311938808905728", "is_retweet": false}, {"created_at": "Wed Jul 13 16:55:29 +0000 2016", "text": "\"The words Lincoln spoke all those years ago hold resonance for us now...he said: 'A house divided against itself cannot stand.'\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1385, "favorite_count": 3747, "source": "TweetDeck", "id_str": "753271643179540481", "is_retweet": false}, {"created_at": "Wed Jan 27 23:01:31 +0000 2016", "text": "5 days to #iacaucus. Here are a few ways your five bucks help Hillary win in Iowa: https://t.co/IhHN0F6urm", "in_reply_to_screen_name": null, "retweet_count": 211, "favorite_count": 418, "source": "TweetDeck", "id_str": "692482596819877890", "is_retweet": false}, {"created_at": "Sun Jan 31 21:59:36 +0000 2016", "text": "Thousands of people \"have better lives, and learned more...just because of her.\" \u2014@billclinton\nhttps://t.co/BhwcTFdEJv", "in_reply_to_screen_name": null, "retweet_count": 380, "favorite_count": 798, "source": "Twitter Web Client", "id_str": "693916568745431040", "is_retweet": false}, {"created_at": "Fri Jan 15 14:07:05 +0000 2016", "text": "A Republican president would undo @POTUS\u2019 progress on climate, guns, immigration, and a whole lot more. https://t.co/hnCu74tRt2", "in_reply_to_screen_name": null, "retweet_count": 460, "favorite_count": 965, "source": "TweetDeck", "id_str": "687999446135746560", "is_retweet": false}, {"created_at": "Thu Oct 06 12:46:00 +0000 2016", "text": "Hurricane #Matthew is a major storm. I urge everyone to follow emergency instructions and evacuate if you're told t\u2026 https://t.co/JmPvW8uON0", "in_reply_to_screen_name": null, "retweet_count": 3780, "favorite_count": 9152, "source": "Twitter for iPhone", "id_str": "784011825327312900", "is_retweet": false}, {"created_at": "Tue Jul 05 22:22:00 +0000 2016", "text": "Fired up. Ready to go. https://t.co/DKgJbGCTNE", "in_reply_to_screen_name": null, "retweet_count": 2512, "favorite_count": 6973, "source": "TweetDeck", "id_str": "750454711317397504", "is_retweet": false}, {"created_at": "Fri Jun 10 17:07:41 +0000 2016", "text": "The Hyde Amendment restricts the reproductive rights of low-income women\u2014disproportionately women of color. We need to repeal it now.", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 4401, "source": "TweetDeck", "id_str": "741315915434872832", "is_retweet": false}, {"created_at": "Sun Feb 28 00:47:58 +0000 2016", "text": "\"Tomorrow, this campaign goes national.\" \u2014Hillary in SC", "in_reply_to_screen_name": null, "retweet_count": 737, "favorite_count": 2043, "source": "TweetDeck", "id_str": "703743409962557441", "is_retweet": false}, {"created_at": "Tue Apr 26 00:48:21 +0000 2016", "text": "Eight-year-old Noah became part of Hillary's Secret Service detail this weekend. Here's how.\nhttps://t.co/YjqXcoBhpW", "in_reply_to_screen_name": null, "retweet_count": 1214, "favorite_count": 3034, "source": "Twitter Web Client", "id_str": "724762000853626880", "is_retweet": false}, {"created_at": "Wed Mar 30 22:18:02 +0000 2016", "text": "Maya Angelou said: \"When people show you who they are, believe them.\" Trump can try to walk back his words, but we heard him loud and clear.", "in_reply_to_screen_name": null, "retweet_count": 4394, "favorite_count": 9497, "source": "TweetDeck", "id_str": "715302089094782977", "is_retweet": false}, {"created_at": "Thu Aug 25 19:23:33 +0000 2016", "text": "Trump retweets white supremacists. He took a fringe bigot and spread his message to 11 million people. https://t.co/dEv9EdvXtJ", "in_reply_to_screen_name": null, "retweet_count": 1207, "favorite_count": 2264, "source": "TweetDeck", "id_str": "768891585459355648", "is_retweet": false}, {"created_at": "Tue Sep 20 14:03:20 +0000 2016", "text": "\"The voice of your vote is the greatest voice we have.\" \u2014@NyleDiMarco\n\nhttps://t.co/tTgeqxNqYm https://t.co/X3oqEoOYsU", "in_reply_to_screen_name": null, "retweet_count": 6094, "favorite_count": 13860, "source": "Twitter Web Client", "id_str": "778233084017840128", "is_retweet": false}, {"created_at": "Wed Oct 05 20:29:18 +0000 2016", "text": "RT @WhiteHouse: \u201cThis gives us the best possible shot to save the one planet we\u2019ve got\u201d \u2014@POTUS on the #ParisAgreement   https://t.co/pOZN7\u2026", "in_reply_to_screen_name": null, "retweet_count": 1892, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783766031642849280", "is_retweet": true}, {"created_at": "Thu Oct 27 03:28:57 +0000 2016", "text": "RT @RobbyMook: It's going to be close. No complacency. Nose to the grindstone. Let's get to work! https://t.co/2Eh8f9IhHr", "in_reply_to_screen_name": null, "retweet_count": 4596, "favorite_count": 0, "source": "TweetDeck", "id_str": "791481787948142592", "is_retweet": true}, {"created_at": "Fri Oct 28 19:05:14 +0000 2016", "text": "Don\u2019t let anyone tell you they\u2019re too busy to vote. If Ruline can do it, so can they. https://t.co/tTgeqxNqYm https://t.co/QSCZI7JbrV", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 668, "favorite_count": 1421, "source": "TweetDeck", "id_str": "792079797656641538", "is_retweet": false}, {"created_at": "Mon May 23 13:10:19 +0000 2016", "text": "Unions helped build the middle class, so when Republicans attack unions, they're attacking millions of Americans. https://t.co/lNCI06tYTm", "in_reply_to_screen_name": null, "retweet_count": 2283, "favorite_count": 5313, "source": "TweetDeck", "id_str": "734733197032951808", "is_retweet": false}, {"created_at": "Thu Oct 20 12:59:11 +0000 2016", "text": "Donald Trump wants to compare his last 30 years with Hillary's. Let's do that. https://t.co/Ioq7UDhTCt", "in_reply_to_screen_name": null, "retweet_count": 7074, "favorite_count": 16848, "source": "Media Studio", "id_str": "789088574411042821", "is_retweet": false}, {"created_at": "Thu Aug 11 17:52:10 +0000 2016", "text": "Starting on day one, we will work with both parties to pass the biggest investment in new, good-paying jobs since World War II.", "in_reply_to_screen_name": null, "retweet_count": 872, "favorite_count": 3364, "source": "TweetDeck", "id_str": "763795154566320132", "is_retweet": false}, {"created_at": "Wed Nov 02 19:58:12 +0000 2016", "text": "RT @politico: .@POTUS: There is only one candidate who has devoted her entire life to lifting up America, and that's Hillary Clinton. https\u2026", "in_reply_to_screen_name": null, "retweet_count": 3619, "favorite_count": 0, "source": "TweetDeck", "id_str": "793905067539755008", "is_retweet": true}, {"created_at": "Sun Aug 21 21:09:32 +0000 2016", "text": "Hillary met with Miami doctors to discuss the public health challenge of treating and preventing Zika.\nhttps://t.co/kYPvsWiMDq", "in_reply_to_screen_name": null, "retweet_count": 3149, "favorite_count": 7605, "source": "Twitter Web Client", "id_str": "767468704317661184", "is_retweet": false}, {"created_at": "Wed Nov 02 16:12:21 +0000 2016", "text": "Heartbroken for the families of two brave officers who were killed in Iowa. There\u2019s no justification for this kind of violence. -H", "in_reply_to_screen_name": null, "retweet_count": 5256, "favorite_count": 19113, "source": "Twitter Web Client", "id_str": "793848229024657408", "is_retweet": false}, {"created_at": "Tue Jul 12 16:02:58 +0000 2016", "text": "\u201cLet\u2019s take real, meaningful action to end the epidemic of gun violence in America.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 931, "favorite_count": 2679, "source": "TweetDeck", "id_str": "752896038130900992", "is_retweet": false}, {"created_at": "Fri May 20 16:21:13 +0000 2016", "text": "Dear Congress,\n\nLet's get this done.\n\nThanks,\n\nThe vast majority of Americans https://t.co/23ND36tFFm", "in_reply_to_screen_name": null, "retweet_count": 2473, "favorite_count": 5908, "source": "TweetDeck", "id_str": "733694076961329152", "is_retweet": false}, {"created_at": "Wed Jul 13 17:19:20 +0000 2016", "text": "\"Donald Trump\u2019s campaign adds up to an ugly, dangerous message to America. A message that you should be afraid.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1420, "favorite_count": 3257, "source": "TweetDeck", "id_str": "753277643664027648", "is_retweet": false}, {"created_at": "Tue May 31 16:59:24 +0000 2016", "text": "\u201cI like people that weren\u2019t captured, ok?\u201d\n\nTrump has something to say about prisoners of war.\nhttps://t.co/sbMCyxVfRo", "in_reply_to_screen_name": null, "retweet_count": 1570, "favorite_count": 2536, "source": "Twitter Web Client", "id_str": "737689952494833664", "is_retweet": false}, {"created_at": "Sat Feb 20 19:24:33 +0000 2016", "text": "Nevada: Doors don\u2019t close until noon. Find your caucus location here: https://t.co/sK24GnjMNX https://t.co/aLvU3Eo5gS", "in_reply_to_screen_name": null, "retweet_count": 349, "favorite_count": 805, "source": "Twitter Web Client", "id_str": "701125304325173248", "is_retweet": false}, {"created_at": "Tue Sep 27 03:33:57 +0000 2016", "text": "Donald Trump called her \"Miss Piggy\" and \"Miss Housekeeping.\"\n\nHer name is Alicia Machado. #DebateNight https://t.co/0wrISjJe6z", "in_reply_to_screen_name": null, "retweet_count": 63800, "favorite_count": 86043, "source": "Media Studio", "id_str": "780611407221960704", "is_retweet": false}, {"created_at": "Mon Mar 21 01:09:21 +0000 2016", "text": "\u201cSpeaking is hard for me. But come January, I want to say these two words: Madam President.\u201d \u2014@gabbygiffords\nhttps://t.co/EdLYCi85mp", "in_reply_to_screen_name": null, "retweet_count": 4196, "favorite_count": 10654, "source": "Twitter Web Client", "id_str": "711721323148390400", "is_retweet": false}, {"created_at": "Wed Sep 28 01:13:08 +0000 2016", "text": "20 years after Donald bullied a beauty pageant winner for her weight, the real \"problem\" is...still Donald. https://t.co/ZmqYWuN9px", "in_reply_to_screen_name": null, "retweet_count": 7814, "favorite_count": 15706, "source": "Media Studio", "id_str": "780938357232791552", "is_retweet": false}, {"created_at": "Tue Nov 01 20:02:21 +0000 2016", "text": "\u201cToday, I want to just spend a few minutes focusing on...what [Trump] has said\u2014and what he has done\u2014to women and girls.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 744, "favorite_count": 1632, "source": "TweetDeck", "id_str": "793543724387164160", "is_retweet": false}, {"created_at": "Sat Apr 02 14:06:04 +0000 2016", "text": "From Super Tuesday to \"Live at the Apollo.\" March, in photos. https://t.co/JzE48z7bkb https://t.co/aPofSjFhkZ", "in_reply_to_screen_name": null, "retweet_count": 810, "favorite_count": 2225, "source": "TweetDeck", "id_str": "716265445427396608", "is_retweet": false}, {"created_at": "Fri Jul 08 22:28:53 +0000 2016", "text": "\"Elie Wiesel once clarified for us that 'the opposite of love is not hate\u2014it\u2019s indifference.' ... None of us can afford to be indifferent.\"", "in_reply_to_screen_name": null, "retweet_count": 3881, "favorite_count": 8855, "source": "TweetDeck", "id_str": "751543607891558400", "is_retweet": false}, {"created_at": "Tue Jul 26 02:20:08 +0000 2016", "text": "\"Don\u2019t let anyone ever tell you that this country isn\u2019t great...This, right now, is the greatest country on earth.\" \u2014@FLOTUS #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 5166, "favorite_count": 12830, "source": "TweetDeck", "id_str": "757762395787911168", "is_retweet": false}, {"created_at": "Mon Aug 22 18:12:50 +0000 2016", "text": "RT @mpshapiro: Trump's new \"King of Debt\" tax shelter means negative tax rates - meaning taxpayers pay him for high-debt projects: https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 558, "favorite_count": 0, "source": "TweetDeck", "id_str": "767786623685787649", "is_retweet": true}, {"created_at": "Mon Mar 21 14:10:12 +0000 2016", "text": "Here\u2019s what happened when a strong Bernie Sanders supporter asked Hillary a question at a town hall: https://t.co/1nklw1BTFj", "in_reply_to_screen_name": null, "retweet_count": 947, "favorite_count": 1976, "source": "TweetDeck", "id_str": "711917832909537280", "is_retweet": false}, {"created_at": "Tue May 10 23:34:45 +0000 2016", "text": "Detroit's public schools are in crisis, and we need solutions that include teachers and parents: https://t.co/iIuMyZk6Md -H", "in_reply_to_screen_name": null, "retweet_count": 638, "favorite_count": 1287, "source": "TweetDeck", "id_str": "730179298997481472", "is_retweet": false}, {"created_at": "Mon Sep 19 16:49:18 +0000 2016", "text": "Simply caring is not enough. To drive real progress, you have to change both hearts and laws. https://t.co/oZIm2is1lX", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 797, "favorite_count": 1499, "source": "Twitter Web Client", "id_str": "777912462335172609", "is_retweet": false}, {"created_at": "Sat Sep 10 21:49:23 +0000 2016", "text": "RT @Fahrenthold: .@realdonaldtrump once used $20,000 of his charity's money to buy a six-foot-tall painting of...himself. https://t.co/Pysk\u2026", "in_reply_to_screen_name": null, "retweet_count": 6806, "favorite_count": 0, "source": "TweetDeck", "id_str": "774726490835607552", "is_retweet": true}, {"created_at": "Thu Jun 23 23:20:34 +0000 2016", "text": "Women's health is an economic issue: Every woman deserves access to affordable menstrual products. Bravo, New York. https://t.co/jTtiSGNtYh", "in_reply_to_screen_name": null, "retweet_count": 1220, "favorite_count": 3357, "source": "TweetDeck", "id_str": "746120796750360576", "is_retweet": false}, {"created_at": "Sun Jan 17 19:59:13 +0000 2016", "text": "\u201cEverything she touched, she made better.\u201d \u2014@billclinton shares some of his favorite memories of Hillary\nhttps://t.co/eeAilUSi5M", "in_reply_to_screen_name": null, "retweet_count": 579, "favorite_count": 1563, "source": "Twitter Web Client", "id_str": "688812839381778434", "is_retweet": false}, {"created_at": "Wed Oct 19 19:27:12 +0000 2016", "text": "When there are no ceilings, the sky's the limit. https://t.co/u72wraOmhX https://t.co/a5BnlRg0sF", "in_reply_to_screen_name": null, "retweet_count": 1355, "favorite_count": 4195, "source": "TweetDeck", "id_str": "788823834744979457", "is_retweet": false}, {"created_at": "Wed Jul 20 11:59:33 +0000 2016", "text": "On the #RNCinCLE's \"economy night,\" here's everything we learned about Donald Trump's economic plan: https://t.co/GI51bfZtQS", "in_reply_to_screen_name": null, "retweet_count": 2729, "favorite_count": 5116, "source": "TweetDeck", "id_str": "755733883870703616", "is_retweet": false}, {"created_at": "Sun Jun 12 00:01:43 +0000 2016", "text": "When Trump had to make an $18 million interest payment, his dad had to bail him out by buying $3 million in chips: https://t.co/w6e1LAjOlX", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1318, "favorite_count": 2741, "source": "Twitter Web Client", "id_str": "741782496052957188", "is_retweet": false}, {"created_at": "Sat Jul 23 01:58:27 +0000 2016", "text": "RT @timkaine: \u00a1Honrado de ser el candidato a la vicepresidencia de @HillaryClinton! #JuntosSePuede", "in_reply_to_screen_name": null, "retweet_count": 3760, "favorite_count": 0, "source": "TweetDeck", "id_str": "756669777582718977", "is_retweet": true}, {"created_at": "Sat May 14 18:06:45 +0000 2016", "text": "Worried about a Trump presidency? Here are four things you can do to prevent it: https://t.co/WS7zALCFu4", "in_reply_to_screen_name": null, "retweet_count": 1078, "favorite_count": 1900, "source": "Twitter Web Client", "id_str": "731546304321605632", "is_retweet": false}, {"created_at": "Tue Feb 16 21:12:54 +0000 2016", "text": "\"We face a complex set of economic, social, and political challenges. They\u2019re intersectional, reinforcing, &amp; we\u2019ve got to take them all on.\"", "in_reply_to_screen_name": null, "retweet_count": 548, "favorite_count": 997, "source": "TweetDeck", "id_str": "699703022100865024", "is_retweet": false}, {"created_at": "Sat May 21 18:08:21 +0000 2016", "text": "Donald Trump is questioning Hillary's qualifications to be president. Let's dig into that.\nhttps://t.co/YQ13ORvxlk", "in_reply_to_screen_name": null, "retweet_count": 4040, "favorite_count": 6968, "source": "Twitter Web Client", "id_str": "734083422419714048", "is_retweet": false}, {"created_at": "Fri Jun 17 18:15:12 +0000 2016", "text": "You don't have to be LGBT to stand with the LGBT community. We all have a stake in equality. Thank you, Michael. https://t.co/EfEMVugWCp", "in_reply_to_screen_name": null, "retweet_count": 2617, "favorite_count": 7344, "source": "TweetDeck", "id_str": "743869620159909888", "is_retweet": false}, {"created_at": "Tue Feb 23 20:37:04 +0000 2016", "text": "Racial inequality isn\u2019t just a symptom of economic inequality. https://t.co/4FOHoZpRQI", "in_reply_to_screen_name": null, "retweet_count": 947, "favorite_count": 1318, "source": "TweetDeck", "id_str": "702230719314190337", "is_retweet": false}, {"created_at": "Tue Mar 22 21:04:40 +0000 2016", "text": "Muslim Americans: this is your country, too. These kinds of proposals are dangerous, hateful, and beneath us. https://t.co/kcj1ltvNWa", "in_reply_to_screen_name": null, "retweet_count": 3483, "favorite_count": 5391, "source": "TweetDeck", "id_str": "712384523917516801", "is_retweet": false}, {"created_at": "Wed Oct 26 13:03:18 +0000 2016", "text": "Happy birthday to this future president. https://t.co/JT3HiBjYdj", "in_reply_to_screen_name": null, "retweet_count": 45848, "favorite_count": 102228, "source": "TweetDeck", "id_str": "791263939015376902", "is_retweet": false}, {"created_at": "Fri Feb 26 14:00:01 +0000 2016", "text": "This is it: Your last chance to say you're with Hillary before the South Carolina primary! Commit today. https://t.co/LQ9PdocLWa", "in_reply_to_screen_name": null, "retweet_count": 583, "favorite_count": 1481, "source": "TweetDeck", "id_str": "703217961520271361", "is_retweet": false}, {"created_at": "Sat Jan 16 15:50:00 +0000 2016", "text": ".@JimmyFallon: Can we do a Snapchat? \n\nHillary: Sure! \ud83d\udc7b\nhttps://t.co/KbXJnks1fI", "in_reply_to_screen_name": null, "retweet_count": 741, "favorite_count": 2400, "source": "Twitter Web Client", "id_str": "688387735699243008", "is_retweet": false}, {"created_at": "Thu Jun 16 15:05:07 +0000 2016", "text": "It's absurd that people with suspected terrorist links can buy a gun in America, no questions asked. https://t.co/y0yVjO1k1K", "in_reply_to_screen_name": null, "retweet_count": 5849, "favorite_count": 16529, "source": "TweetDeck", "id_str": "743459396982812672", "is_retweet": false}, {"created_at": "Tue Nov 08 10:07:14 +0000 2016", "text": "There's no such thing as a vote that doesn't count. Today, you can make the difference.\n\nRT this\u2014and go vote!\u2026 https://t.co/nIiPIKOieu", "in_reply_to_screen_name": null, "retweet_count": 9077, "favorite_count": 15171, "source": "Twitter for iPhone", "id_str": "795930670988197889", "is_retweet": false}, {"created_at": "Fri Oct 21 01:36:54 +0000 2016", "text": "\"I said no to some jokes that I thought were over the line, but I suppose you can judge for yourself on Wikileaks in the next few days.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2966, "favorite_count": 8228, "source": "TweetDeck", "id_str": "789279261832146944", "is_retweet": false}, {"created_at": "Thu May 26 19:27:32 +0000 2016", "text": "La \u00fanica forma de enfrentar a un \"bully\" es uni\u00e9ndonos. Nosotros somos los \u00fanicos que podemos detener que Trump llegue a la Casa Blanca.", "in_reply_to_screen_name": null, "retweet_count": 686, "favorite_count": 1273, "source": "TweetDeck", "id_str": "735915289334931456", "is_retweet": false}, {"created_at": "Sun Jan 10 23:53:48 +0000 2016", "text": "Honored to have @GabbyGiffords and @ShuttleCDRKelly's support. https://t.co/JPxlnO3VEr", "in_reply_to_screen_name": null, "retweet_count": 503, "favorite_count": 1439, "source": "Twitter Web Client", "id_str": "686335162506960896", "is_retweet": false}, {"created_at": "Wed Mar 09 16:54:39 +0000 2016", "text": "Why Hillary has won nearly all the editorial board endorsements in the Democratic primary so far. https://t.co/neBtd2kS9W", "in_reply_to_screen_name": null, "retweet_count": 790, "favorite_count": 2141, "source": "TweetDeck", "id_str": "707610560825860096", "is_retweet": false}, {"created_at": "Fri Jul 29 03:06:57 +0000 2016", "text": "\u201cIf you believe that your working mother, wife, sister, or daughter deserve equal pay, join us!\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3765, "favorite_count": 9269, "source": "TweetDeck", "id_str": "758861340320501761", "is_retweet": false}, {"created_at": "Tue Sep 27 02:48:53 +0000 2016", "text": "RT @machadooficial: Gracias se\u00f1ora @HillaryClinton su respeto a las mujeres y nuestras diferencias la hacen grande! Estoy con usted!", "in_reply_to_screen_name": null, "retweet_count": 12605, "favorite_count": 0, "source": "TweetDeck", "id_str": "780600065945657344", "is_retweet": true}, {"created_at": "Wed Aug 31 18:09:37 +0000 2016", "text": "RT @timkaine: In America, our shared values make us stronger. We can't let Trump tear down everything we stand for. https://t.co/pkiw5hdIGe", "in_reply_to_screen_name": null, "retweet_count": 1301, "favorite_count": 0, "source": "TweetDeck", "id_str": "771047304056958976", "is_retweet": true}, {"created_at": "Tue Oct 11 14:35:31 +0000 2016", "text": "Every single American deserves full equality under our laws\u2014no matter who you are or who you love.\u2026 https://t.co/Fo5uuCc6Sd", "in_reply_to_screen_name": null, "retweet_count": 10032, "favorite_count": 25055, "source": "TweetDeck", "id_str": "785851326521569280", "is_retweet": false}, {"created_at": "Mon Apr 04 16:37:25 +0000 2016", "text": "If we care about working families, we should make it easier to work and have a family. https://t.co/nJmVKZk3MU", "in_reply_to_screen_name": null, "retweet_count": 2499, "favorite_count": 5435, "source": "TweetDeck", "id_str": "717028309935263744", "is_retweet": false}, {"created_at": "Sun Mar 20 20:56:11 +0000 2016", "text": "Shirley was born before women had the right to vote. She's seen a lot\u2014and now she wants to see a woman president. https://t.co/gVYX6K6ox0", "in_reply_to_screen_name": null, "retweet_count": 1171, "favorite_count": 3384, "source": "TweetDeck", "id_str": "711657613709201408", "is_retweet": false}, {"created_at": "Fri Jul 29 02:03:09 +0000 2016", "text": "\"That's right\u2014I love Hillary too.\" \u2014@KatyPerry https://t.co/N2OI27Go7k", "in_reply_to_screen_name": null, "retweet_count": 3420, "favorite_count": 7942, "source": "Twitter Web Client", "id_str": "758845287817355264", "is_retweet": false}, {"created_at": "Wed Oct 05 02:43:45 +0000 2016", "text": "RT @CecileRichards: Thank you @timkaine for standing with women. Trump/Pence would send #reprorights back decades.  #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 2300, "favorite_count": 0, "source": "TweetDeck", "id_str": "783497876374712320", "is_retweet": true}, {"created_at": "Sun Oct 30 17:03:58 +0000 2016", "text": "FBI Director Comey owes the American people an explanation. Five things you need to know: https://t.co/PrStSB1207", "in_reply_to_screen_name": null, "retweet_count": 3558, "favorite_count": 6812, "source": "TweetDeck", "id_str": "792774053551607808", "is_retweet": false}, {"created_at": "Fri Feb 12 19:11:56 +0000 2016", "text": ".@POTUS doesn't get the credit he deserves. Some can criticize his leadership; we'll build on his progress. https://t.co/lHsUEX7Mv3", "in_reply_to_screen_name": null, "retweet_count": 933, "favorite_count": 1947, "source": "TweetDeck", "id_str": "698223028409335808", "is_retweet": false}, {"created_at": "Sat Aug 20 22:17:50 +0000 2016", "text": "This choice is pretty straightforward. https://t.co/8D3Og1UM14 https://t.co/1pbwefsVLy", "in_reply_to_screen_name": null, "retweet_count": 1571, "favorite_count": 3864, "source": "TweetDeck", "id_str": "767123506148630528", "is_retweet": false}, {"created_at": "Thu Sep 08 00:25:05 +0000 2016", "text": "We need to do everything we can to remove barriers to the health care our veterans need\u2014whether physical or mental. #NBCNewsForum", "in_reply_to_screen_name": null, "retweet_count": 1254, "favorite_count": 3795, "source": "TweetDeck", "id_str": "773678507826307072", "is_retweet": false}, {"created_at": "Tue Oct 11 00:30:28 +0000 2016", "text": "RT @timkaine: The difference between Hillary and Donald in less than 45 seconds. https://t.co/FEvRjpqDjF", "in_reply_to_screen_name": null, "retweet_count": 3733, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785638664160157696", "is_retweet": true}, {"created_at": "Thu Mar 17 02:08:36 +0000 2016", "text": "Trump is fanning the flames of chaos and violence. That's not leadership\u2014it\u2019s dangerous. https://t.co/wGsfs9ZS8R https://t.co/4ICA9VzSLI", "in_reply_to_screen_name": null, "retweet_count": 2741, "favorite_count": 5811, "source": "TweetDeck", "id_str": "710286683296632832", "is_retweet": false}, {"created_at": "Mon Mar 07 02:56:30 +0000 2016", "text": "Another way we can help the kids and families of Flint: donate what you can to https://t.co/XKJUx3KplA. #DemDebate https://t.co/3uwpf9RQk2", "in_reply_to_screen_name": null, "retweet_count": 1458, "favorite_count": 2671, "source": "TweetDeck", "id_str": "706674861024911360", "is_retweet": false}, {"created_at": "Tue Jul 26 01:09:39 +0000 2016", "text": "Thank you, @ddlovato, for describing your experience dealing with mental illness with such courage. #DemsInPhilly https://t.co/WyzBP5zTwA", "in_reply_to_screen_name": null, "retweet_count": 7489, "favorite_count": 17529, "source": "TweetDeck", "id_str": "757744658466349056", "is_retweet": false}, {"created_at": "Fri Jul 22 02:30:46 +0000 2016", "text": "If Trump wants to talk about debt, let\u2019s start with the $34 trillion (that's a \"t\") his tax plan would run up. https://t.co/n8ZdJJnSSg", "in_reply_to_screen_name": null, "retweet_count": 5045, "favorite_count": 7832, "source": "TweetDeck", "id_str": "756315520484384769", "is_retweet": false}, {"created_at": "Wed May 04 18:31:25 +0000 2016", "text": "\"They couldn't take him on on the issues because they basically agreed with him.\" \u2014Hillary on Trump's @GOP rivals: https://t.co/tHSMxfom9b", "in_reply_to_screen_name": null, "retweet_count": 675, "favorite_count": 1196, "source": "TweetDeck", "id_str": "727928634573475842", "is_retweet": false}, {"created_at": "Fri Jul 08 22:24:23 +0000 2016", "text": "White Americans need to do a better job of listening when African Americans talk about the seen and unseen barriers you face every day.", "in_reply_to_screen_name": null, "retweet_count": 6653, "favorite_count": 14907, "source": "TweetDeck", "id_str": "751542474972291072", "is_retweet": false}, {"created_at": "Thu Jun 09 20:40:43 +0000 2016", "text": "El presidente Obama anuncia su apoyo para Hillary Clinton. \"Nunca ha habido alguien tan calificado para la presidencia\".", "in_reply_to_screen_name": null, "retweet_count": 1845, "favorite_count": 5028, "source": "TweetDeck", "id_str": "741007137954992128", "is_retweet": false}, {"created_at": "Wed Oct 05 20:00:27 +0000 2016", "text": "Mike Pence's #VPDebate strategy seemed to be \"if you close your eyes, Trump doesn't exist.\" https://t.co/VM4CuglV89", "in_reply_to_screen_name": null, "retweet_count": 4427, "favorite_count": 9227, "source": "Media Studio", "id_str": "783758773256986624", "is_retweet": false}, {"created_at": "Mon Jun 06 23:53:08 +0000 2016", "text": "Recuerda apoyar a Hillary ma\u00f1ana con tu voto. RT esto y d\u00e9jale saber a tus amigos: \n#EstoyConElla https://t.co/hwloJN71uf", "in_reply_to_screen_name": null, "retweet_count": 885, "favorite_count": 1526, "source": "TweetDeck", "id_str": "739968398977830913", "is_retweet": false}, {"created_at": "Sun Aug 21 20:35:34 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump claims he surrounds himself with the greatest people. Check out his choice for campaign chief. https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1845, "favorite_count": 0, "source": "TweetDeck", "id_str": "767460155151814656", "is_retweet": true}, {"created_at": "Mon Feb 08 14:07:15 +0000 2016", "text": "This is it: Your last chance to say you're with Hillary before the New Hampshire primary! Commit today: https://t.co/NdE6zkKfLg", "in_reply_to_screen_name": null, "retweet_count": 790, "favorite_count": 1998, "source": "Twitter for iPhone", "id_str": "696696798967156737", "is_retweet": false}, {"created_at": "Fri Aug 05 16:49:25 +0000 2016", "text": "We launched an all-Spanish Twitter account, @Hillary_esp, because we believe in bringing as many people as possible into this conversation.", "in_reply_to_screen_name": null, "retweet_count": 2329, "favorite_count": 7993, "source": "TweetDeck", "id_str": "761605038850596864", "is_retweet": false}, {"created_at": "Sat Jul 16 15:04:07 +0000 2016", "text": "FACT: Mike Pence advocated for legislation that allowed businesses to discriminate against LGBT people.\nhttps://t.co/Amz2l9zkkY", "in_reply_to_screen_name": null, "retweet_count": 3691, "favorite_count": 4737, "source": "Twitter Web Client", "id_str": "754330779535024129", "is_retweet": false}, {"created_at": "Mon Mar 28 21:42:16 +0000 2016", "text": "In 1977, #SCOTUS paved the way for public sector unions. https://t.co/vvXDrLc69O", "in_reply_to_screen_name": null, "retweet_count": 457, "favorite_count": 955, "source": "Twitter Web Client", "id_str": "714568312089227265", "is_retweet": false}, {"created_at": "Tue Nov 08 01:58:15 +0000 2016", "text": "\"We have a chance to elect a 45th president who will build on our progress, who will finish the job.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 789, "favorite_count": 1934, "source": "TweetDeck", "id_str": "795807616916197376", "is_retweet": false}, {"created_at": "Tue Jan 12 03:25:39 +0000 2016", "text": "Immigration raids are sowing discord and fear among our communities. We should end them. #DemForum\nhttps://t.co/c0H6jor721", "in_reply_to_screen_name": null, "retweet_count": 488, "favorite_count": 948, "source": "Twitter Web Client", "id_str": "686750861310046209", "is_retweet": false}, {"created_at": "Thu Mar 24 20:58:53 +0000 2016", "text": "Army Captain Humayun Khan, a Muslim American serving in Iraq, was 27 when he saved the lives of his entire unit.\nhttps://t.co/ci0yU6Y5aO", "in_reply_to_screen_name": null, "retweet_count": 3858, "favorite_count": 6608, "source": "Twitter Web Client", "id_str": "713107843327524865", "is_retweet": false}, {"created_at": "Mon Aug 15 17:58:50 +0000 2016", "text": "\"Trump\u2019s ideas are not only profoundly wrong, they\u2019re dangerous and they\u2019re very un-American.\u201d \u2014@JoeBiden https://t.co/tV4Cfp982z", "in_reply_to_screen_name": null, "retweet_count": 728, "favorite_count": 1983, "source": "TweetDeck", "id_str": "765246387319664640", "is_retweet": false}, {"created_at": "Wed Oct 12 20:40:22 +0000 2016", "text": "Go to https://t.co/VkVm51nWIY to see how much you and your family could save under Hillary\u2019s student debt plan.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 634, "favorite_count": 1353, "source": "TweetDeck", "id_str": "786305532592291840", "is_retweet": false}, {"created_at": "Fri Mar 11 03:24:18 +0000 2016", "text": "Republican candidates deny climate change because they\u2019re \u201cnot scientists.\u201d #GOPdebate https://t.co/ApzqrcHleN", "in_reply_to_screen_name": null, "retweet_count": 3519, "favorite_count": 7963, "source": "TweetDeck", "id_str": "708131406212419584", "is_retweet": false}, {"created_at": "Mon Oct 10 01:12:52 +0000 2016", "text": "\"I have great respect for women.\" \u2014@realDonaldTrump, who said all of these things. #Debate https://t.co/BsW2pUz0hC", "in_reply_to_screen_name": null, "retweet_count": 17084, "favorite_count": 21834, "source": "Twitter Web Client", "id_str": "785286946113384448", "is_retweet": false}, {"created_at": "Tue Jul 26 02:34:40 +0000 2016", "text": "\"What kind of a man roots for an economic crash that cost millions of people their jobs? Their homes? Their life savings?\" \u2014Warren on Trump", "in_reply_to_screen_name": null, "retweet_count": 2683, "favorite_count": 7407, "source": "TweetDeck", "id_str": "757766052428312576", "is_retweet": false}, {"created_at": "Mon Feb 08 21:29:45 +0000 2016", "text": "Tomorrow's the NH primary, and Hillary needs you. Find your NH friends on Facebook and let them know why #ImWithHer! https://t.co/1M7qgyykUb", "in_reply_to_screen_name": null, "retweet_count": 440, "favorite_count": 899, "source": "TweetDeck", "id_str": "696808157516058627", "is_retweet": false}, {"created_at": "Fri Feb 05 20:16:56 +0000 2016", "text": "\u201cIf the kids in a rich suburb of Detroit had been drinking contaminated water, there would have been action.\u201d\nhttps://t.co/sT7BwCdthD", "in_reply_to_screen_name": null, "retweet_count": 919, "favorite_count": 1476, "source": "Twitter Web Client", "id_str": "695702667742478336", "is_retweet": false}, {"created_at": "Thu Sep 15 19:57:51 +0000 2016", "text": "We don\u2019t need a president who thinks only married people deserve paid leave and only mothers ever stay home with the kids.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1142, "favorite_count": 2376, "source": "TweetDeck", "id_str": "776510360287318016", "is_retweet": false}, {"created_at": "Thu Oct 13 18:45:25 +0000 2016", "text": ".@FLOTUS, I'm in awe. Thanks for putting into words what's in so many of our hearts. -H", "in_reply_to_screen_name": null, "retweet_count": 9629, "favorite_count": 37911, "source": "Twitter Web Client", "id_str": "786638992741638144", "is_retweet": false}, {"created_at": "Tue Jan 05 19:17:05 +0000 2016", "text": ".@POTUS just took action to #StopGunViolence. Here's how we build on that progress: https://t.co/DM8IlTNvgd https://t.co/2SxTkpPMVd", "in_reply_to_screen_name": null, "retweet_count": 1311, "favorite_count": 3000, "source": "Twitter Web Client", "id_str": "684453584273014784", "is_retweet": false}, {"created_at": "Thu Jul 21 03:26:35 +0000 2016", "text": "Vote your conscience. https://t.co/xahMq2sU1q", "in_reply_to_screen_name": null, "retweet_count": 10906, "favorite_count": 21657, "source": "TweetDeck", "id_str": "755967178285907968", "is_retweet": false}, {"created_at": "Wed Oct 19 11:51:48 +0000 2016", "text": "Even if Trump's bullying, bigotry, and misogyny weren't disqualifying, his policies would be. https://t.co/9WyNBzycQc", "in_reply_to_screen_name": null, "retweet_count": 6609, "favorite_count": 13652, "source": "Media Studio", "id_str": "788709227632001025", "is_retweet": false}, {"created_at": "Sun Sep 04 21:01:47 +0000 2016", "text": "RT @Slate: Hillary Clinton has a quietly bold idea to stop drug price spikes: https://t.co/CWTgFWhnuS https://t.co/q06VjyIRUL", "in_reply_to_screen_name": null, "retweet_count": 766, "favorite_count": 0, "source": "TweetDeck", "id_str": "772540181777936386", "is_retweet": true}, {"created_at": "Wed Oct 05 01:36:15 +0000 2016", "text": "RT @timkaine: \u201cPeople shouldn\u2019t be afraid to bring up issues of bias in law enforcement...if you\u2019re afraid to have the discussion, you\u2019ll n\u2026", "in_reply_to_screen_name": null, "retweet_count": 4492, "favorite_count": 0, "source": "TweetDeck", "id_str": "783480892761202688", "is_retweet": true}, {"created_at": "Thu Aug 25 19:40:24 +0000 2016", "text": "In 2008, John McCain told his own supporters that Barack Obama is an American citizen and \"a decent person.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1193, "favorite_count": 3360, "source": "TweetDeck", "id_str": "768895824390660097", "is_retweet": false}, {"created_at": "Thu Apr 14 03:17:13 +0000 2016", "text": "This is urgent. We need to invest in a vaccine and treatment now. My heart goes out to parents impacted by Zika. https://t.co/Su07BTN5Ie -H", "in_reply_to_screen_name": null, "retweet_count": 1615, "favorite_count": 2864, "source": "TweetDeck", "id_str": "720450813538279424", "is_retweet": false}, {"created_at": "Fri Jan 22 20:41:55 +0000 2016", "text": "Love @HGTV? Hillary does, too! Here\u2019s why she finds home makeover shows so relaxing.\nhttps://t.co/ZjS7lbiiRJ", "in_reply_to_screen_name": null, "retweet_count": 395, "favorite_count": 1089, "source": "Twitter Web Client", "id_str": "690635525141598208", "is_retweet": false}, {"created_at": "Thu Sep 08 23:03:24 +0000 2016", "text": "Anyone who looks at the African American community and sees only poverty, crime, and despair is missing so much. https://t.co/qdx99XN9nG", "in_reply_to_screen_name": null, "retweet_count": 3894, "favorite_count": 10338, "source": "TweetDeck", "id_str": "774020340850761728", "is_retweet": false}, {"created_at": "Wed Jul 27 21:20:08 +0000 2016", "text": "RT @HRC: Daniel Driffin is the first speaker living with HIV to take the #DemConvention stage in 12 years https://t.co/4zLHmIM2Ry", "in_reply_to_screen_name": null, "retweet_count": 1076, "favorite_count": 0, "source": "TweetDeck", "id_str": "758411675716489216", "is_retweet": true}, {"created_at": "Wed Mar 02 22:38:52 +0000 2016", "text": "We've got to keep going, keep working, keep breaking down those barriers and imagine what we can build together. https://t.co/FyzivMR4xc", "in_reply_to_screen_name": null, "retweet_count": 1205, "favorite_count": 3060, "source": "TweetDeck", "id_str": "705160472727830528", "is_retweet": false}, {"created_at": "Fri Jul 22 20:57:16 +0000 2016", "text": "RT @albamonica: Hillary Clinton is paying respects at the Pulse nightclub memorial in Orlando https://t.co/zF6fw8sw6D", "in_reply_to_screen_name": null, "retweet_count": 1998, "favorite_count": 0, "source": "TweetDeck", "id_str": "756593980733792256", "is_retweet": true}, {"created_at": "Thu Oct 27 18:53:29 +0000 2016", "text": "\"I\u2019ve been fighting for kids at every step of my career, and I will fight for them every single day of my presidency.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 572, "favorite_count": 1549, "source": "TweetDeck", "id_str": "791714453653950464", "is_retweet": false}, {"created_at": "Wed Aug 03 00:17:13 +0000 2016", "text": "Just 98 days until Election Day. Here are 98 things that depend on the choice we make on November 8: https://t.co/RDRCEOJ4N4", "in_reply_to_screen_name": null, "retweet_count": 1793, "favorite_count": 4972, "source": "TweetDeck", "id_str": "760630567402631168", "is_retweet": false}, {"created_at": "Sat Nov 05 21:35:48 +0000 2016", "text": "Five women older than their right to vote share why they're with Hillary: https://t.co/qEOAiwDGyH", "in_reply_to_screen_name": null, "retweet_count": 3805, "favorite_count": 9470, "source": "TweetDeck", "id_str": "795016789684088832", "is_retweet": false}, {"created_at": "Tue Jul 26 21:19:43 +0000 2016", "text": "RT @HFA: Hillary's oldest delegate is 102. Read Jerry's story: https://t.co/kEFmrSaJvH https://t.co/PrH6nsn6eq", "in_reply_to_screen_name": null, "retweet_count": 1712, "favorite_count": 0, "source": "TweetDeck", "id_str": "758049183001698304", "is_retweet": true}, {"created_at": "Tue Mar 01 13:57:18 +0000 2016", "text": "If you want a president who'll wake up every day thinking about how to make your life better, she's your candidate.\nhttps://t.co/9e4XEzT3NL", "in_reply_to_screen_name": null, "retweet_count": 1161, "favorite_count": 1994, "source": "Twitter Web Client", "id_str": "704666829474562049", "is_retweet": false}, {"created_at": "Thu Nov 03 03:50:32 +0000 2016", "text": "\"About half of the people he wants to deport\u2014they\u2019ve paid more taxes than Donald Trump has paid.\u201d \u2014Hillary in Arizona", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2969, "favorite_count": 6299, "source": "TweetDeck", "id_str": "794023931317460992", "is_retweet": false}, {"created_at": "Thu Feb 25 00:47:47 +0000 2016", "text": "A high school student asked Hillary about mental health services for veterans. Her response speaks volumes. https://t.co/0fqFVH1BMZ", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 1191, "source": "TweetDeck", "id_str": "702656200614277120", "is_retweet": false}, {"created_at": "Fri Nov 04 17:41:35 +0000 2016", "text": "\"If you elect me on Tuesday, that\u2019s the kind of president I will be: listening, working, finding common ground.\u201d https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 721, "favorite_count": 1518, "source": "TweetDeck", "id_str": "794595460535160832", "is_retweet": false}, {"created_at": "Wed Sep 07 23:12:21 +0000 2016", "text": "RT @TheBriefing2016: Trump's pay-to-play scandal revolves around the Trump U scam which preyed on people like this military family. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 1753, "favorite_count": 0, "source": "TweetDeck", "id_str": "773660205162852352", "is_retweet": true}, {"created_at": "Fri May 20 03:39:39 +0000 2016", "text": "A candidate who roots for his own gain at the expense of American families isn't just heartless. He's disqualified. https://t.co/1C9kJ9ic0N", "in_reply_to_screen_name": null, "retweet_count": 2189, "favorite_count": 3653, "source": "TweetDeck", "id_str": "733502420924399617", "is_retweet": false}, {"created_at": "Thu Jul 14 02:29:18 +0000 2016", "text": "Gun violence against Americans is all of our problem. We need to solve it together.\nhttps://t.co/vFdReFjB6u", "in_reply_to_screen_name": null, "retweet_count": 1590, "favorite_count": 4280, "source": "Twitter Web Client", "id_str": "753416049949675520", "is_retweet": false}, {"created_at": "Wed Mar 09 20:06:46 +0000 2016", "text": "Shirley was only 5 years old when most women got the right to vote. Here's what's on her mind during this election: https://t.co/CP0Djy7Lgi", "in_reply_to_screen_name": null, "retweet_count": 509, "favorite_count": 1017, "source": "TweetDeck", "id_str": "707658909297803266", "is_retweet": false}, {"created_at": "Sun Jul 24 23:46:31 +0000 2016", "text": "There's never been a campaign app like this before. Download it today to help Hillary win. https://t.co/K1Aw88vS9H\nhttps://t.co/iJNSagEoVc", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 2128, "source": "Twitter Web Client", "id_str": "757361348757991424", "is_retweet": false}, {"created_at": "Fri Jun 03 17:45:00 +0000 2016", "text": "Every time Trump loses his temper, imagine him in the Situation Room making life-or-death decisions on our behalf.\nhttps://t.co/OjL116AV74", "in_reply_to_screen_name": null, "retweet_count": 5801, "favorite_count": 9355, "source": "Twitter Web Client", "id_str": "738788590306500608", "is_retweet": false}, {"created_at": "Wed Jul 20 02:54:40 +0000 2016", "text": "Yeah, Donald Trump has been a real gem to working women. #RNCinCLE https://t.co/LmUZI1J8KQ", "in_reply_to_screen_name": null, "retweet_count": 2769, "favorite_count": 5030, "source": "TweetDeck", "id_str": "755596760928641029", "is_retweet": false}, {"created_at": "Mon May 02 00:35:46 +0000 2016", "text": "\u201cRace still plays a significant role in determining who gets ahead in America and who gets left behind.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 802, "favorite_count": 2079, "source": "TweetDeck", "id_str": "726933161679147008", "is_retweet": false}, {"created_at": "Mon Jan 11 23:51:43 +0000 2016", "text": "One of these people could decide the future of your rights. https://t.co/7MVaUvWcG5 https://t.co/KhSnQHxKZG", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 978, "source": "TweetDeck", "id_str": "686697022854983681", "is_retweet": false}, {"created_at": "Mon May 09 16:59:17 +0000 2016", "text": "\"Making America a more just nation requires honest talk about policies that can lift up those still hurting.\" https://t.co/p6q1rNadJb", "in_reply_to_screen_name": null, "retweet_count": 879, "favorite_count": 1762, "source": "TweetDeck", "id_str": "729717387478614016", "is_retweet": false}, {"created_at": "Tue Apr 19 17:03:27 +0000 2016", "text": "It's #PrimaryDay in New York. Get all you need to know on our live blog: https://t.co/LB1MIvu39F https://t.co/pXFWgcZPDt", "in_reply_to_screen_name": null, "retweet_count": 616, "favorite_count": 1455, "source": "TweetDeck", "id_str": "722470678990045184", "is_retweet": false}, {"created_at": "Tue Nov 08 02:07:58 +0000 2016", "text": "RT @CNN: President Obama: \"We now have the chance to elect a 45th president who will build on our progress\" https://t.co/naPsHB84G4", "in_reply_to_screen_name": null, "retweet_count": 3770, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795810062153433092", "is_retweet": true}, {"created_at": "Wed Oct 05 01:20:09 +0000 2016", "text": "\"Hillary Clinton and Tim Kaine want to build on Obamacare.\" \u2014Mike Pence\n\nFact check: True. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 2013, "favorite_count": 6050, "source": "TweetDeck", "id_str": "783476841160007680", "is_retweet": false}, {"created_at": "Thu Aug 04 21:55:57 +0000 2016", "text": "RT @CNNPolitics: Obama on whether Trump could be trusted with US nuclear weapons: \"Make your own judgment\" https://t.co/6OZtrfIwim https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1141, "favorite_count": 0, "source": "TweetDeck", "id_str": "761319791177109508", "is_retweet": true}, {"created_at": "Mon Oct 10 02:28:36 +0000 2016", "text": "The next president could appoint up to three Supreme Court justices.\n\nWill they protect Americans' rights, or corporations'? #debate", "in_reply_to_screen_name": null, "retweet_count": 3147, "favorite_count": 10405, "source": "TweetDeck", "id_str": "785306003629891584", "is_retweet": false}, {"created_at": "Wed Oct 26 19:45:26 +0000 2016", "text": "\"It\u2019s not just what we\u2019re against that should motivate you to go to the polls.\n\nIt\u2019s what we are for.\u201d \u2014Hillary https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1013, "favorite_count": 2483, "source": "TweetDeck", "id_str": "791365138037215232", "is_retweet": false}, {"created_at": "Sat Oct 22 21:10:12 +0000 2016", "text": "Hillary and @TimKaine are campaigning together in Pittsburgh. Tune in now to join them live: https://t.co/CcJ6koc5On", "in_reply_to_screen_name": null, "retweet_count": 959, "favorite_count": 4424, "source": "TweetDeck", "id_str": "789936917135622144", "is_retweet": false}, {"created_at": "Fri Jan 22 02:51:02 +0000 2016", "text": "\"There is never a day ... in the Oval Office that you can't make something good happen for somebody.\" -@billclinton\nhttps://t.co/3iUPIKrKW2", "in_reply_to_screen_name": null, "retweet_count": 846, "favorite_count": 1833, "source": "Twitter Web Client", "id_str": "690366031496249344", "is_retweet": false}, {"created_at": "Wed Sep 28 19:33:25 +0000 2016", "text": "\"I\u2019m going to close my campaign the way I started my career\u2026fighting for kids and families.\u201d \u2014Hillary https://t.co/YO5sZgVFus", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 4296, "source": "TweetDeck", "id_str": "781215253279506432", "is_retweet": false}, {"created_at": "Fri Jun 24 20:18:29 +0000 2016", "text": "Good for you, Jensen. Every woman deserves equal pay, no matter what her age. Keep up the hard work\u2014and courage! https://t.co/F83gK5oZ6W -H", "in_reply_to_screen_name": null, "retweet_count": 2136, "favorite_count": 5493, "source": "TweetDeck", "id_str": "746437359382708225", "is_retweet": false}, {"created_at": "Mon Oct 24 17:54:00 +0000 2016", "text": "While Donald Trump is assaulting our democracy, millions of people are standing up for it\u2014registering, voting early, and volunteering.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 773, "favorite_count": 2221, "source": "TweetDeck", "id_str": "790612321412452352", "is_retweet": false}, {"created_at": "Tue Mar 01 20:00:13 +0000 2016", "text": "Text TUESDAY to 47246 to get exclusive updates via text from @HFA headquarters. https://t.co/MZmBpGDUcV", "in_reply_to_screen_name": null, "retweet_count": 267, "favorite_count": 606, "source": "TweetDeck", "id_str": "704758157579575296", "is_retweet": false}, {"created_at": "Thu Oct 20 02:11:49 +0000 2016", "text": "Trump on losing the Emmy tonight: \"I should've won.\" #DebateNight\n\nTrump on losing the Emmy in 2012, 2013, and 2014: https://t.co/EQsmBStnC0", "in_reply_to_screen_name": null, "retweet_count": 6988, "favorite_count": 13399, "source": "Twitter Web Client", "id_str": "788925659187933184", "is_retweet": false}, {"created_at": "Sun Nov 06 21:40:45 +0000 2016", "text": "\u201cOur next president, Ms. Hillary Clinton!\u201d \u2014@KingJames https://t.co/KPu8RdGuxq https://t.co/1TOlgQLXaD", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1774, "favorite_count": 3668, "source": "TweetDeck", "id_str": "795380423509602305", "is_retweet": false}, {"created_at": "Sun Oct 09 23:36:05 +0000 2016", "text": "At tonight's debate, Janelle will be in the audience cheering on her friend, Hillary. #Debate https://t.co/wdBlj2HLAH", "in_reply_to_screen_name": null, "retweet_count": 1854, "favorite_count": 6289, "source": "Media Studio", "id_str": "785262588338634752", "is_retweet": false}, {"created_at": "Thu Jun 09 02:41:12 +0000 2016", "text": "\u201cIt\u2019s a simple but powerful idea: We believe that we are stronger together.\u201d \u2014Hillary https://t.co/BpXIJZNcDy", "in_reply_to_screen_name": null, "retweet_count": 1791, "favorite_count": 5406, "source": "TweetDeck", "id_str": "740735469021974528", "is_retweet": false}, {"created_at": "Mon Jan 18 17:19:59 +0000 2016", "text": "\"Making sure all Americans have clean air and water isn\u2019t just a health issue. It\u2019s a civil rights issue.\" \u2014Hillary in Columbia, SC", "in_reply_to_screen_name": null, "retweet_count": 861, "favorite_count": 2082, "source": "TweetDeck", "id_str": "689135154833526784", "is_retweet": false}, {"created_at": "Thu Aug 25 19:21:01 +0000 2016", "text": "Trump first gained political prominence promoting the racist lie that President Obama isn\u2019t really an American. https://t.co/WPM1I9PPN3", "in_reply_to_screen_name": null, "retweet_count": 2900, "favorite_count": 4690, "source": "Twitter Web Client", "id_str": "768890947228663808", "is_retweet": false}, {"created_at": "Mon Apr 11 00:00:37 +0000 2016", "text": "\"I told my oncologist that I have to be there in November to cast my ballot.\"\nhttps://t.co/v85WBJ8KWS", "in_reply_to_screen_name": null, "retweet_count": 1985, "favorite_count": 5433, "source": "Twitter Web Client", "id_str": "719314174178766849", "is_retweet": false}, {"created_at": "Sun Jul 03 20:28:55 +0000 2016", "text": "Today's attack in Baghdad is another horrific example of ISIS's savagery. We will defeat them. My prayers are with the victims' families. -H", "in_reply_to_screen_name": null, "retweet_count": 2390, "favorite_count": 7750, "source": "Twitter for iPhone", "id_str": "749701475350286341", "is_retweet": false}, {"created_at": "Wed Aug 31 19:50:14 +0000 2016", "text": "As Trump meets with President Pe\u00f1a Nieto, a helpful refresher on some of the things he\u2019s said about Mexico: https://t.co/AltRQdTtGt", "in_reply_to_screen_name": null, "retweet_count": 3519, "favorite_count": 4581, "source": "TweetDeck", "id_str": "771072624227123200", "is_retweet": false}, {"created_at": "Mon Jun 27 14:35:23 +0000 2016", "text": "Watch live as Hillary takes the stage with @elizabethforma in Ohio: https://t.co/1MHHD9Zmd4", "in_reply_to_screen_name": null, "retweet_count": 440, "favorite_count": 1207, "source": "TweetDeck", "id_str": "747438180215955456", "is_retweet": false}, {"created_at": "Wed Oct 26 16:41:13 +0000 2016", "text": "Let\u2019s come together to give every American the chance to chart their own future. Let\u2019s prove once-and-for-all that love trumps hate.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 853, "favorite_count": 2854, "source": "TweetDeck", "id_str": "791318778973945856", "is_retweet": false}, {"created_at": "Fri Jul 15 15:26:00 +0000 2016", "text": "Chip in to keep Donald Trump, Mike Pence, and their extreme agenda out of the White House: https://t.co/7rBBdqe31P", "in_reply_to_screen_name": null, "retweet_count": 763, "favorite_count": 2058, "source": "TweetDeck", "id_str": "753973899814141953", "is_retweet": false}, {"created_at": "Wed May 04 15:13:45 +0000 2016", "text": "We know Donald Trump is not who we are. If you want to shut him down, then let\u2019s vote him down. https://t.co/L4w8ASsIAQ", "in_reply_to_screen_name": null, "retweet_count": 3437, "favorite_count": 7407, "source": "TweetDeck", "id_str": "727878891646423044", "is_retweet": false}, {"created_at": "Mon Sep 19 19:03:31 +0000 2016", "text": "Let\u2019s make clear that love trumps hate\u2014not just this November, but always. https://t.co/wDxspmxT9Q", "in_reply_to_screen_name": null, "retweet_count": 1568, "favorite_count": 4169, "source": "TweetDeck", "id_str": "777946240390668288", "is_retweet": false}, {"created_at": "Wed Jul 27 02:10:44 +0000 2016", "text": "You won\u2019t want to miss this. Watch @BillClinton take the stage at the #DemConvention: https://t.co/VCeDTPr24N", "in_reply_to_screen_name": null, "retweet_count": 699, "favorite_count": 2630, "source": "TweetDeck", "id_str": "758122419450249216", "is_retweet": false}, {"created_at": "Thu Oct 20 21:33:40 +0000 2016", "text": "\"If you're a young person worried about affording college, [Hillary] has a plan to make your education tuition-free.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 442, "favorite_count": 1292, "source": "TweetDeck", "id_str": "789218047018078212", "is_retweet": false}, {"created_at": "Fri Sep 16 14:02:35 +0000 2016", "text": "\"He looks at a Gold Star family and sees them as Muslims, not patriotic Americans.\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 811, "favorite_count": 1644, "source": "TweetDeck", "id_str": "776783342700228608", "is_retweet": false}, {"created_at": "Sat Jun 04 20:44:32 +0000 2016", "text": "Muhammad Ali really was The Greatest\u2014unmatched not just in power and skill, but also in courage and conscience. Thinking of his family. -H", "in_reply_to_screen_name": null, "retweet_count": 2920, "favorite_count": 8513, "source": "TweetDeck", "id_str": "739196157482696713", "is_retweet": false}, {"created_at": "Sat Oct 29 20:35:08 +0000 2016", "text": "\"Let\u2019s break every record that we\u2019ve ever had for voting. Let\u2019s make that the story of this election.\u201d \u2014Hillary https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1056, "favorite_count": 2230, "source": "TweetDeck", "id_str": "792464807819632640", "is_retweet": false}, {"created_at": "Thu Sep 08 00:59:10 +0000 2016", "text": "Donald Trump could be our next Commander-in-Chief.\n\nChip in to make sure it never happens: https://t.co/GbWxtTLvDe #NBCNewsForum", "in_reply_to_screen_name": null, "retweet_count": 1031, "favorite_count": 2697, "source": "TweetDeck", "id_str": "773687086633390080", "is_retweet": false}, {"created_at": "Sat Jan 30 01:28:43 +0000 2016", "text": "Heart to heart in Newton, IA. https://t.co/0BfcmfczVV", "in_reply_to_screen_name": null, "retweet_count": 487, "favorite_count": 1485, "source": "TweetDeck", "id_str": "693244415104663552", "is_retweet": false}, {"created_at": "Wed Feb 10 02:21:46 +0000 2016", "text": "\"It\u2019s not whether you get knocked down that matters, it\u2019s whether you get back up.\" \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 1109, "favorite_count": 2074, "source": "TweetDeck", "id_str": "697244034893537280", "is_retweet": false}, {"created_at": "Tue Jan 05 13:57:42 +0000 2016", "text": "Watch what happened when our youngest volunteer got to work at campaign HQ. https://t.co/mQ2djgpa9p", "in_reply_to_screen_name": null, "retweet_count": 287, "favorite_count": 716, "source": "Twitter for iPhone", "id_str": "684373208754184193", "is_retweet": false}, {"created_at": "Fri Jan 29 17:34:06 +0000 2016", "text": "Thrilled @POTUS is making sure women\u2014especially women of color\u2014aren't shortchanged at work. https://t.co/v5ACtLEA21 #EqualPayCantWait -H", "in_reply_to_screen_name": null, "retweet_count": 542, "favorite_count": 1015, "source": "TweetDeck", "id_str": "693124974433996801", "is_retweet": false}, {"created_at": "Thu Aug 25 19:23:08 +0000 2016", "text": "If Donald Trump doesn\u2019t respect all Americans, how can he serve all Americans? https://t.co/Sp8nKxlocd", "in_reply_to_screen_name": null, "retweet_count": 1361, "favorite_count": 2941, "source": "TweetDeck", "id_str": "768891478747873280", "is_retweet": false}, {"created_at": "Wed Feb 03 21:49:47 +0000 2016", "text": "4) Hillary's not running to make a point\u2014she's running to make a difference. She'll keep doing that. Please feel free to keep tweeting.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1601, "favorite_count": 2615, "source": "Twitter Web Client", "id_str": "695001261087842305", "is_retweet": false}, {"created_at": "Tue Oct 25 19:03:28 +0000 2016", "text": "As Trump makes an unprecedented attack on our democracy, millions of people are registering and voting early. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 525, "favorite_count": 1152, "source": "TweetDeck", "id_str": "790992189442719748", "is_retweet": false}, {"created_at": "Thu Oct 13 18:30:45 +0000 2016", "text": "\"Ms. Clinton will prove a worthy example to girls who celebrate the election of America\u2019s first female president.\u201d https://t.co/Fo7uO64qqB", "in_reply_to_screen_name": null, "retweet_count": 2664, "favorite_count": 8547, "source": "TweetDeck", "id_str": "786635300160307200", "is_retweet": false}, {"created_at": "Wed Jul 27 02:27:14 +0000 2016", "text": "\u201cI married my best friend. I was still in awe of\u2026how smart and strong and loving and caring she was.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1762, "favorite_count": 6889, "source": "TweetDeck", "id_str": "758126571697963009", "is_retweet": false}, {"created_at": "Wed Feb 24 02:17:44 +0000 2016", "text": "Systemic racism is found in our criminal justice system, housing, education\u2014but it's also cultural. We have to combat it all. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1308, "favorite_count": 2484, "source": "TweetDeck", "id_str": "702316449956806656", "is_retweet": false}, {"created_at": "Fri Mar 04 03:30:02 +0000 2016", "text": "It's not \"politicizing\" to say that what's happening with the poisoned water in Flint is an emergency and a moral outrage. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 2538, "favorite_count": 5757, "source": "TweetDeck", "id_str": "705596132622278657", "is_retweet": false}, {"created_at": "Tue Jan 26 03:27:42 +0000 2016", "text": "When it comes to protecting and building on President Obama\u2019s progress, there\u2019s only one candidate who will get it done. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 532, "favorite_count": 1276, "source": "TweetDeck", "id_str": "691824810050113541", "is_retweet": false}, {"created_at": "Sat May 07 18:04:57 +0000 2016", "text": "In 1970, Diane Crump rode her way into history at the #KentuckyDerby, becoming the first woman to compete. https://t.co/XKkiNVlXla", "in_reply_to_screen_name": null, "retweet_count": 1736, "favorite_count": 4491, "source": "TweetDeck", "id_str": "729009138102112256", "is_retweet": false}, {"created_at": "Fri Jul 22 16:49:42 +0000 2016", "text": "RT @ABC: Pres. Obama on RNC: \"Some of the fears that were expressed throughout the week just don't jive with the facts.\" https://t.co/zLZE4\u2026", "in_reply_to_screen_name": null, "retweet_count": 2328, "favorite_count": 0, "source": "TweetDeck", "id_str": "756531680626798596", "is_retweet": true}, {"created_at": "Sun Jul 24 19:05:27 +0000 2016", "text": "Trump's convention message: fear and hate.\n\nRT if you agree we're better than this.\nhttps://t.co/GNb8LNeJcb", "in_reply_to_screen_name": null, "retweet_count": 6821, "favorite_count": 7390, "source": "Twitter Web Client", "id_str": "757290614815727616", "is_retweet": false}, {"created_at": "Thu Jul 14 15:45:35 +0000 2016", "text": "\"We need to close the gender pay gap...Latinas earn just 55 cents for every dollar earned by a white man. That is just outrageous.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1226, "favorite_count": 3563, "source": "TweetDeck", "id_str": "753616440880693249", "is_retweet": false}, {"created_at": "Mon Aug 15 17:20:33 +0000 2016", "text": "Trump wants to eliminate the Estate Tax. It would save the Trump family $4 billion, but it would do nothing for 99.8% of Americans.", "in_reply_to_screen_name": null, "retweet_count": 1769, "favorite_count": 3882, "source": "TweetDeck", "id_str": "765236752336429056", "is_retweet": false}, {"created_at": "Fri Nov 04 14:27:40 +0000 2016", "text": "\"Stand up and reject cynicism.  Stand up and reject fear.  \n\nChoose hope.\nChoose hope.\nChoose hope.\nChoose hope.\nCh\u2026 https://t.co/MNkOqDJOql", "in_reply_to_screen_name": null, "retweet_count": 7457, "favorite_count": 19587, "source": "TweetDeck", "id_str": "794546659120283648", "is_retweet": false}, {"created_at": "Mon Apr 18 20:05:34 +0000 2016", "text": "We need comprehensive immigration reform now. I'll propose legislation within my first 100 days as president. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 712, "favorite_count": 1532, "source": "Twitter Web Client", "id_str": "722154123777478657", "is_retweet": false}, {"created_at": "Thu May 05 03:14:40 +0000 2016", "text": "President Trump?\n\nNope: https://t.co/LFfa59OaHX", "in_reply_to_screen_name": null, "retweet_count": 814, "favorite_count": 1874, "source": "TweetDeck", "id_str": "728060313698979840", "is_retweet": false}, {"created_at": "Sat Jan 23 02:09:49 +0000 2016", "text": "Just 10 days to the Iowa caucus! Hillary can't do it without you, here\u2019s how you can help. https://t.co/1n1Mr33tBY https://t.co/01i3gNFFhX", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 1775, "source": "TweetDeck", "id_str": "690718044390322176", "is_retweet": false}, {"created_at": "Mon Sep 26 18:04:36 +0000 2016", "text": "These headlines on Trump's lies are from just one week of his campaign.\n\nImagine four years of his presidency. https://t.co/FE1hZ7MmR6", "in_reply_to_screen_name": null, "retweet_count": 3596, "favorite_count": 6145, "source": "TweetDeck", "id_str": "780468127322738688", "is_retweet": false}, {"created_at": "Mon Jun 20 00:55:15 +0000 2016", "text": "You'll want to read the story behind this photo. https://t.co/Qg7hNkJQgN https://t.co/e7yO9jLF7P", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 2741, "source": "TweetDeck", "id_str": "744695069777760256", "is_retweet": false}, {"created_at": "Wed Jan 27 04:02:05 +0000 2016", "text": "What's happening in Flint should break all our hearts\u2014and spur us to action. If you are able, give to https://t.co/XKJUx3KplA. -H", "in_reply_to_screen_name": null, "retweet_count": 1333, "favorite_count": 2349, "source": "TweetDeck", "id_str": "692195848407613443", "is_retweet": false}, {"created_at": "Fri Mar 25 16:18:16 +0000 2016", "text": ".@JimmyKimmelLive: \"I'm going to help you win this election no problem. Are you familiar with mansplaining?\"\nhttps://t.co/d2td1ZrQZZ", "in_reply_to_screen_name": null, "retweet_count": 3295, "favorite_count": 6806, "source": "Twitter Web Client", "id_str": "713399612040548353", "is_retweet": false}, {"created_at": "Tue Jul 12 16:20:19 +0000 2016", "text": "To everyone who poured your heart and soul into Bernie\u2019s campaign, thank you. Our country desperately needs your voices.", "in_reply_to_screen_name": null, "retweet_count": 3443, "favorite_count": 12016, "source": "TweetDeck", "id_str": "752900404460023809", "is_retweet": false}, {"created_at": "Thu Jul 14 15:41:01 +0000 2016", "text": "\"Latinos have to help us shape the future of America because you are the future of America.\u201d \u2014Hillary at @LULAC", "in_reply_to_screen_name": null, "retweet_count": 596, "favorite_count": 1579, "source": "TweetDeck", "id_str": "753615291951771653", "is_retweet": false}, {"created_at": "Tue Sep 27 01:34:32 +0000 2016", "text": "RT @MittRomney: No legit reason @realDonaldTrump can't release returns while being audited, but if scared, release earlier returns no longe\u2026", "in_reply_to_screen_name": null, "retweet_count": 11710, "favorite_count": 0, "source": "TweetDeck", "id_str": "780581355633700864", "is_retweet": true}, {"created_at": "Fri Jun 24 19:29:05 +0000 2016", "text": "Thank you, @POTUS, for marking another important milestone on LGBT Americans' march toward equality. -H https://t.co/KQVYhNDR8I", "in_reply_to_screen_name": null, "retweet_count": 1941, "favorite_count": 5772, "source": "TweetDeck", "id_str": "746424930179289089", "is_retweet": false}, {"created_at": "Sun Aug 07 13:10:08 +0000 2016", "text": "\u201c#sendDonaldtospace\u201d \u2014@JeffBezos\n\nTrump's peer reviews are dismal: https://t.co/AC4zW7KhrH", "in_reply_to_screen_name": null, "retweet_count": 1282, "favorite_count": 3068, "source": "TweetDeck", "id_str": "762274629931134978", "is_retweet": false}, {"created_at": "Tue Oct 11 12:59:54 +0000 2016", "text": "\"We urge voters to dump Trump and choose the clearly qualified candidate in this race: Hillary Clinton\u201d \u2014@DenverPost https://t.co/x62lrGm1MB", "in_reply_to_screen_name": null, "retweet_count": 2154, "favorite_count": 6998, "source": "TweetDeck", "id_str": "785827263673667584", "is_retweet": false}, {"created_at": "Sun Oct 02 03:48:32 +0000 2016", "text": "Trump \"apparently got to avoid paying taxes for nearly two decades\u2014while tens of millions of working families paid\u2026 https://t.co/s6KgRcoICM", "in_reply_to_screen_name": null, "retweet_count": 12869, "favorite_count": 23711, "source": "TweetDeck", "id_str": "782427018176716804", "is_retweet": false}, {"created_at": "Fri Jul 22 03:35:48 +0000 2016", "text": "This is real\u2014Donald Trump just accepted the @GOP nomination.\n\nRT if you agree: We can't let him become president. https://t.co/3C5WLPv33W", "in_reply_to_screen_name": null, "retweet_count": 17851, "favorite_count": 21479, "source": "TweetDeck", "id_str": "756331886704730112", "is_retweet": false}, {"created_at": "Mon Oct 31 22:48:21 +0000 2016", "text": "\"Think about what it takes to lead in a very complicated world and in whose hands you want to put the safety of our children.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1661, "favorite_count": 4256, "source": "TweetDeck", "id_str": "793223111214850052", "is_retweet": false}, {"created_at": "Tue Mar 22 18:23:38 +0000 2016", "text": "Our education system is failing the most vulnerable\u2014and that hurts all of us. https://t.co/KAT7IeSYUf", "in_reply_to_screen_name": null, "retweet_count": 481, "favorite_count": 989, "source": "TweetDeck", "id_str": "712343996576755712", "is_retweet": false}, {"created_at": "Fri Feb 12 03:30:29 +0000 2016", "text": "Yeah, @BernieSanders\u2014she's got a *bit* of experience. https://t.co/dKoVlBM9Zi #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1602, "favorite_count": 2605, "source": "TweetDeck", "id_str": "697986100829253632", "is_retweet": false}, {"created_at": "Sat Feb 06 02:39:10 +0000 2016", "text": "\"I\u2019m so proud of the campaign we\u2019ve built here. Thousands of volunteers are pouring your dreams and determination into this.\" \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 391, "favorite_count": 1096, "source": "TweetDeck", "id_str": "695798860652875776", "is_retweet": false}, {"created_at": "Mon May 23 18:26:08 +0000 2016", "text": "\"The lesson of our history, through good times and hard times, is that we\u2019re stronger together.\" \u2014Hillary https://t.co/Cc6RChzCqE", "in_reply_to_screen_name": null, "retweet_count": 1521, "favorite_count": 4065, "source": "TweetDeck", "id_str": "734812676526870529", "is_retweet": false}, {"created_at": "Thu Aug 11 17:16:51 +0000 2016", "text": "Anyone willing to sink so low, so often should never be allowed to serve as our Commander-in-Chief.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3362, "favorite_count": 8909, "source": "Twitter Web Client", "id_str": "763786270237687808", "is_retweet": false}, {"created_at": "Wed Jun 29 14:18:05 +0000 2016", "text": "Instead of driving up debt and risking another recession, let's make the economy work for everyone. Here's how: https://t.co/Z10CMINNzn", "in_reply_to_screen_name": null, "retweet_count": 1088, "favorite_count": 2681, "source": "TweetDeck", "id_str": "748158601118781440", "is_retweet": false}, {"created_at": "Tue Sep 27 02:45:44 +0000 2016", "text": "RT this if you're proud to be standing with Hillary tonight. #debatenight https://t.co/91tBmKxVMs", "in_reply_to_screen_name": null, "retweet_count": 80731, "favorite_count": 91872, "source": "TweetDeck", "id_str": "780599274384027648", "is_retweet": false}, {"created_at": "Fri Oct 28 22:10:27 +0000 2016", "text": "While Trump is making an unprecedented attack on democracy, millions of Americans are voting.\n\nJoin them: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 813, "favorite_count": 1944, "source": "TweetDeck", "id_str": "792126409288327168", "is_retweet": false}, {"created_at": "Thu Nov 03 03:55:58 +0000 2016", "text": "\"More than 31 million people have already voted early.\" \u2014Hillary\n\nJoin them \u2192 https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 854, "favorite_count": 2422, "source": "TweetDeck", "id_str": "794025298291552256", "is_retweet": false}, {"created_at": "Wed Sep 14 16:46:02 +0000 2016", "text": "11. With business ties to politically-connected Indian developers, how can you conduct foreign policy that puts the U.S. above your profits?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2428, "favorite_count": 3932, "source": "TweetDeck", "id_str": "776099701745655808", "is_retweet": false}, {"created_at": "Fri Aug 26 14:05:52 +0000 2016", "text": "Countless women fought to win the right to vote. On the anniversary of the 19th Amendment's adoption, let's recommit to protecting it. -H", "in_reply_to_screen_name": null, "retweet_count": 3987, "favorite_count": 11720, "source": "TweetDeck", "id_str": "769174024396103680", "is_retweet": false}, {"created_at": "Thu Aug 11 02:39:47 +0000 2016", "text": "My heart breaks for the family of the officer killed in Arkansas today. Grateful for his service to his community. -H", "in_reply_to_screen_name": null, "retweet_count": 2065, "favorite_count": 9949, "source": "Twitter for iPhone", "id_str": "763565546512248832", "is_retweet": false}, {"created_at": "Mon Mar 28 21:32:34 +0000 2016", "text": "In 1954, #SCOTUS held that separate is not equal in our schools. https://t.co/nHAZOxZc3z", "in_reply_to_screen_name": null, "retweet_count": 592, "favorite_count": 1354, "source": "Twitter Web Client", "id_str": "714565870236729344", "is_retweet": false}, {"created_at": "Tue Jun 28 00:33:50 +0000 2016", "text": "\"This election is about values, so let's just do a few: Donald vs. Hillary.\" \u2014@elizabethforma https://t.co/OK5UueiA7P", "in_reply_to_screen_name": null, "retweet_count": 1738, "favorite_count": 4682, "source": "TweetDeck", "id_str": "747588783147720704", "is_retweet": false}, {"created_at": "Fri Oct 07 00:05:38 +0000 2016", "text": "Our success isn't measured by the size of our bank accounts or the height of our skyscrapers.\n \nIt's measured by wh\u2026 https://t.co/hllWuBHwC6", "in_reply_to_screen_name": null, "retweet_count": 2630, "favorite_count": 7615, "source": "Media Studio", "id_str": "784182861284929538", "is_retweet": false}, {"created_at": "Tue Jun 07 22:50:23 +0000 2016", "text": "Let's build an America that respects and embraces the potential of every last one of us.\nhttps://t.co/q9iPKDnnpI", "in_reply_to_screen_name": null, "retweet_count": 3744, "favorite_count": 7003, "source": "Twitter Web Client", "id_str": "740314992931569664", "is_retweet": false}, {"created_at": "Thu Jul 14 15:52:50 +0000 2016", "text": "Too many kids say bye to their parents every morning, not knowing if mom or dad will be there when they get home.\n\nWe have to fix this.", "in_reply_to_screen_name": null, "retweet_count": 835, "favorite_count": 2776, "source": "TweetDeck", "id_str": "753618264203333632", "is_retweet": false}, {"created_at": "Mon Aug 08 14:00:38 +0000 2016", "text": "\"I don't know another businessman that brags about his bankruptcies.\" \u2014@WarrenBuffett on Trump: https://t.co/Jx2p1D6UAd", "in_reply_to_screen_name": null, "retweet_count": 1725, "favorite_count": 3727, "source": "TweetDeck", "id_str": "762649724021272576", "is_retweet": false}, {"created_at": "Mon Oct 03 17:35:46 +0000 2016", "text": "Live from Toledo: Watch Hillary speak on her plan to make the economy work for everyone\u2014not just those at the top. https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 913, "favorite_count": 3049, "source": "Twitter Web Client", "id_str": "782997583769763840", "is_retweet": false}, {"created_at": "Mon Jan 25 02:39:41 +0000 2016", "text": "\u201cThe presidency is not an entry-level position.\u201d https://t.co/4zwKQHRWu1", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 2261, "source": "TweetDeck", "id_str": "691450338331721729", "is_retweet": false}, {"created_at": "Sat Nov 05 18:26:42 +0000 2016", "text": "RT @ABCPolitics: .@HillaryClinton concludes Florida rally in the pouring rain https://t.co/tevppdQBVz https://t.co/5wOiGCEvLK", "in_reply_to_screen_name": null, "retweet_count": 3272, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794969201953951744", "is_retweet": true}, {"created_at": "Thu Jul 14 15:36:07 +0000 2016", "text": "Tune in to watch Hillary speak live at @LULAC: https://t.co/NUfK6yQLlz https://t.co/Cgvyu85CEp", "in_reply_to_screen_name": null, "retweet_count": 378, "favorite_count": 976, "source": "TweetDeck", "id_str": "753614057828151296", "is_retweet": false}, {"created_at": "Thu Sep 29 21:04:53 +0000 2016", "text": "\"I will not raise taxes on anyone making less than $250,000.\u201d \u2014Hillary https://t.co/zq9Xx6wg2e", "in_reply_to_screen_name": null, "retweet_count": 3105, "favorite_count": 8422, "source": "TweetDeck", "id_str": "781600659200147456", "is_retweet": false}, {"created_at": "Sun Feb 28 01:55:47 +0000 2016", "text": "\u201cWhen we stand together, there is no barrier too big to break.\u201d What Hillary said after winning in South Carolina: https://t.co/XZIFNrkZhK", "in_reply_to_screen_name": null, "retweet_count": 1278, "favorite_count": 2686, "source": "Twitter Web Client", "id_str": "703760474693832704", "is_retweet": false}, {"created_at": "Sat Aug 20 23:02:28 +0000 2016", "text": "If you dream it, you should be able to build it. https://t.co/uArcPunfFy https://t.co/qKg0MOHVBv", "in_reply_to_screen_name": null, "retweet_count": 1206, "favorite_count": 4078, "source": "TweetDeck", "id_str": "767134737257332737", "is_retweet": false}, {"created_at": "Thu Aug 11 21:12:25 +0000 2016", "text": "Trump wants America to work for him and his friends.\n\nWe need to build an economy that works for everyone.\nhttps://t.co/p0bpzITUpv", "in_reply_to_screen_name": null, "retweet_count": 2749, "favorite_count": 7519, "source": "Twitter Web Client", "id_str": "763845551628574720", "is_retweet": false}, {"created_at": "Thu Oct 20 16:05:27 +0000 2016", "text": "RT @HillaryforNC: Today is the day! Make history and vote early for Hillary in NC. Find\nyour closest polling location: https://t.co/wNzl4Ia\u2026", "in_reply_to_screen_name": null, "retweet_count": 1046, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789135449654714368", "is_retweet": true}, {"created_at": "Sat Jul 23 18:00:04 +0000 2016", "text": "\"Hillary and I will not rest...until we get universal background checks and close loopholes.\u201d \u2014@TimKaine on preventing gun violence", "in_reply_to_screen_name": null, "retweet_count": 2513, "favorite_count": 8210, "source": "TweetDeck", "id_str": "756911776478990336", "is_retweet": false}, {"created_at": "Thu Oct 20 02:24:49 +0000 2016", "text": "No, you didn't. https://t.co/EM31nVvh59 #DebateNight https://t.co/wZkBTTuq3M", "in_reply_to_screen_name": null, "retweet_count": 2897, "favorite_count": 6715, "source": "TweetDeck", "id_str": "788928930082353153", "is_retweet": false}, {"created_at": "Mon May 16 03:07:54 +0000 2016", "text": "\u201cIn politics and in life, ignorance is not a virtue.\u201d \u2014@POTUS https://t.co/3MGECPKU2e", "in_reply_to_screen_name": null, "retweet_count": 3915, "favorite_count": 6635, "source": "TweetDeck", "id_str": "732044880009121792", "is_retweet": false}, {"created_at": "Mon Oct 10 03:19:08 +0000 2016", "text": "RT @sean_p_thomas: On substance, on style, on dignity, on temperament, the clear victor is @HillaryClinton. An overgrown toddler vs. a virt\u2026", "in_reply_to_screen_name": null, "retweet_count": 4253, "favorite_count": 0, "source": "TweetDeck", "id_str": "785318721430622209", "is_retweet": true}, {"created_at": "Wed Feb 24 21:49:39 +0000 2016", "text": "Join @AndraDayMusic, @eltonofficial, and @katyperry at @RadioCity for Hillary\u2014get your tickets while they last! https://t.co/9bSXOFxS14", "in_reply_to_screen_name": null, "retweet_count": 263, "favorite_count": 643, "source": "TweetDeck", "id_str": "702611373134581760", "is_retweet": false}, {"created_at": "Thu Jan 14 01:51:20 +0000 2016", "text": "\"From the time I met her 45 years ago this March, she's the best changemaker I've ever known.\" \u2014@billclinton https://t.co/pwA0nJlZk2", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 2778, "source": "Twitter Web Client", "id_str": "687451900892037120", "is_retweet": false}, {"created_at": "Fri Sep 30 16:22:48 +0000 2016", "text": "This is one of the best things about Americans\u2014we\u2019re doers. When we see something that needs fixing, we roll up our sleeves and get to work.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 614, "favorite_count": 1852, "source": "TweetDeck", "id_str": "781892060135686146", "is_retweet": false}, {"created_at": "Fri Sep 16 19:23:58 +0000 2016", "text": "\u201cThe choice that you make on November 8 will determine whether you can afford college tuition.\u201d \u2014@FLOTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1175, "favorite_count": 2823, "source": "TweetDeck", "id_str": "776864221296492544", "is_retweet": false}, {"created_at": "Wed Sep 21 23:05:15 +0000 2016", "text": ".@TimKaine is more than just a great running mate\u2014he's a great guy to have as a friend, too. https://t.co/5WX2qYgUjC", "in_reply_to_screen_name": null, "retweet_count": 1478, "favorite_count": 4527, "source": "TweetDeck", "id_str": "778731850302758912", "is_retweet": false}, {"created_at": "Mon Oct 03 23:50:19 +0000 2016", "text": "\"Hillary has always been a champion for children and their futures.\" \u2014@KingJames https://t.co/PcBChoxpf9", "in_reply_to_screen_name": null, "retweet_count": 2359, "favorite_count": 6898, "source": "TweetDeck", "id_str": "783091843613458432", "is_retweet": false}, {"created_at": "Wed Sep 14 19:16:35 +0000 2016", "text": "\u201cThe bottom line is that we can not afford suddenly to treat this like a reality show.\u201d \u2014@POTUS https://t.co/FnrH6hAM5N", "in_reply_to_screen_name": null, "retweet_count": 1659, "favorite_count": 3967, "source": "TweetDeck", "id_str": "776137589241905152", "is_retweet": false}, {"created_at": "Mon Aug 01 19:34:11 +0000 2016", "text": "RT @HillaryforVA: Hello, Virginia! After an exciting week on the trail with @HillaryClinton, I'm so happy to be home. -TK", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 0, "source": "TweetDeck", "id_str": "760196950495006720", "is_retweet": true}, {"created_at": "Sat Oct 01 07:28:24 +0000 2016", "text": "Remember, don't believe the haters who describe America as hopeless and broken. We should lift each other up, not tear each other down.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3888, "favorite_count": 10927, "source": "Twitter Web Client", "id_str": "782119959820439552", "is_retweet": false}, {"created_at": "Fri Sep 30 16:20:27 +0000 2016", "text": "Trump stood up at his convention and described a hopeless, broken nation\u2014one that in no way resembles the strong, vibrant America we know.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 640, "favorite_count": 1665, "source": "TweetDeck", "id_str": "781891468206215168", "is_retweet": false}, {"created_at": "Thu Jul 28 03:05:24 +0000 2016", "text": "\u201cAs I\u2019ve traveled this country\u2026what I\u2019ve also seen, more than anything, is what is right with America.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 865, "favorite_count": 3156, "source": "TweetDeck", "id_str": "758498562854547456", "is_retweet": false}, {"created_at": "Thu Nov 03 01:30:18 +0000 2016", "text": "RT @HillaryforAZ: A Democrat hasn't won Arizona since 1996, but you wouldn't know it looking at this @HillaryClinton rally in Tempe! \ud83d\ude4c\ud83d\ude4c\ud83c\udffb\ud83d\ude4c\ud83c\udffc\ud83d\ude4c\u2026", "in_reply_to_screen_name": null, "retweet_count": 5454, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793988642314264576", "is_retweet": true}, {"created_at": "Tue Nov 01 19:56:18 +0000 2016", "text": "There are a lot of reasons to vote against Donald Trump. Maybe, for you, it\u2019s his dangerous statements about using\u2026 https://t.co/mRYl11dLQX", "in_reply_to_screen_name": null, "retweet_count": 6907, "favorite_count": 15062, "source": "Media Studio", "id_str": "793542198755151873", "is_retweet": false}, {"created_at": "Sat Oct 01 02:34:29 +0000 2016", "text": "Donald Trump said he has \"great respect\" for women. His actions and words say otherwise. https://t.co/DV0KszUZxM", "in_reply_to_screen_name": null, "retweet_count": 2194, "favorite_count": 5602, "source": "TweetDeck", "id_str": "782045996532559872", "is_retweet": false}, {"created_at": "Mon Sep 26 20:30:05 +0000 2016", "text": "Watch this before you watch tonight's debate. #DebateNight https://t.co/vnC4bMrS0Q", "in_reply_to_screen_name": null, "retweet_count": 4918, "favorite_count": 9355, "source": "Media Studio", "id_str": "780504737980485632", "is_retweet": false}, {"created_at": "Fri Apr 15 20:13:06 +0000 2016", "text": "A typical woman working full-time is paid just 79% of what a man makes, but there's no discount for being a woman.\nhttps://t.co/SyJTSGS39z", "in_reply_to_screen_name": null, "retweet_count": 1754, "favorite_count": 3395, "source": "Twitter Web Client", "id_str": "721068854042972160", "is_retweet": false}, {"created_at": "Sun Oct 23 19:30:22 +0000 2016", "text": "A (non-exhaustive) list of all the terrible things Donald Trump has said about women: https://t.co/QTCwWkrAf9", "in_reply_to_screen_name": null, "retweet_count": 2781, "favorite_count": 5142, "source": "TweetDeck", "id_str": "790274183611707392", "is_retweet": false}, {"created_at": "Sun Jun 12 00:27:13 +0000 2016", "text": "Donald Trump considers his shuttered casinos a success because HE made millions.\n\nA man who thinks that way has no business being president.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2834, "favorite_count": 7863, "source": "Twitter Web Client", "id_str": "741788913476481024", "is_retweet": false}, {"created_at": "Wed Mar 16 01:09:11 +0000 2016", "text": "Our next president has to bring our country together. We should be breaking down barriers, not building walls.", "in_reply_to_screen_name": null, "retweet_count": 2568, "favorite_count": 5734, "source": "TweetDeck", "id_str": "709909344708640768", "is_retweet": false}, {"created_at": "Mon Oct 17 11:45:34 +0000 2016", "text": "There are a lot of bullies in this world. The last thing we need is one in the White House. https://t.co/M0owOglPjy", "in_reply_to_screen_name": null, "retweet_count": 24220, "favorite_count": 55692, "source": "Media Studio", "id_str": "787982885844385793", "is_retweet": false}, {"created_at": "Tue Jul 26 18:49:40 +0000 2016", "text": "RT @HillaryforPA: Meet one of our PA delegates who will help nominate @HillaryClinton today at #DemConvention: @MalcolmKenyatta https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 0, "source": "TweetDeck", "id_str": "758011418759294976", "is_retweet": true}, {"created_at": "Tue Oct 11 21:10:13 +0000 2016", "text": "\"I often think of that moment when we both came out to each other: me as a gay woman and Hillary as my ally.\" \u2014Mira https://t.co/iMUVHVIPKA", "in_reply_to_screen_name": null, "retweet_count": 856, "favorite_count": 4128, "source": "TweetDeck", "id_str": "785950658180546561", "is_retweet": false}, {"created_at": "Tue Apr 05 17:37:06 +0000 2016", "text": "We need to make college more affordable. Relying on Republican governors like @GovWalker isn't the way to do it.\nhttps://t.co/BfomyNPFq9", "in_reply_to_screen_name": null, "retweet_count": 959, "favorite_count": 1812, "source": "Twitter Web Client", "id_str": "717405717364215808", "is_retweet": false}, {"created_at": "Wed Jul 06 15:53:57 +0000 2016", "text": "Hillary heard you: College costs are too high in America. It's time to fix it. https://t.co/HFcBczvyPH", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 5216, "source": "TweetDeck", "id_str": "750719440786976768", "is_retweet": false}, {"created_at": "Fri Nov 04 18:02:05 +0000 2016", "text": "We're on track to having the biggest voter turnout in American history.\n\nBe a part of it and make a plan to vote: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 897, "favorite_count": 2217, "source": "TweetDeck", "id_str": "794600621194313728", "is_retweet": false}, {"created_at": "Tue Sep 27 16:01:04 +0000 2016", "text": "RT @jasoncollins98: More than 70 million Americans aren't registered to vote. We have to do better! Get registered &amp; spread the word: https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1357, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780799428269670400", "is_retweet": true}, {"created_at": "Fri May 06 21:55:12 +0000 2016", "text": "Substance abuse and drug addiction hurt our kids, friends, neighbors, and loved ones. We've got to solve this.\nhttps://t.co/MmUxHvRHOY", "in_reply_to_screen_name": null, "retweet_count": 1483, "favorite_count": 3106, "source": "Twitter Web Client", "id_str": "728704692830658560", "is_retweet": false}, {"created_at": "Mon Nov 07 16:17:12 +0000 2016", "text": "RT @XochitlHinojosa: In FL, over 1 million Latino voters have cast ballots early --  approximately doubled from 2012.  Amazing.", "in_reply_to_screen_name": null, "retweet_count": 2053, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795661390484819969", "is_retweet": true}, {"created_at": "Wed Apr 27 22:59:28 +0000 2016", "text": "The U.S. has 5% of the world's women but nearly 30% of its women prisoners. The consequences are devastating. https://t.co/9GPztYdNlF", "in_reply_to_screen_name": null, "retweet_count": 856, "favorite_count": 1432, "source": "TweetDeck", "id_str": "725459375670841344", "is_retweet": false}, {"created_at": "Wed Jul 20 13:03:46 +0000 2016", "text": "Five disturbing things the GOP officially stands for (yes, in 2016): https://t.co/YpwVUr5Fow", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 2841, "source": "TweetDeck", "id_str": "755750045148966912", "is_retweet": false}, {"created_at": "Fri Jun 03 14:53:29 +0000 2016", "text": "You literally said all those things. https://t.co/6VX5AfR7gL https://t.co/U8LfWdPU7x", "in_reply_to_screen_name": null, "retweet_count": 15081, "favorite_count": 23626, "source": "TweetDeck", "id_str": "738745426879369216", "is_retweet": false}, {"created_at": "Tue Feb 09 20:00:16 +0000 2016", "text": ".@ppact's @CecileRichards: There\u2019s one candidate who stands above the rest on women\u2019s health.\nhttps://t.co/7qOaKnwjSt", "in_reply_to_screen_name": null, "retweet_count": 499, "favorite_count": 890, "source": "Twitter Web Client", "id_str": "697148025777467392", "is_retweet": false}, {"created_at": "Wed Sep 28 19:15:16 +0000 2016", "text": "Tune in for a live conversation on making college affordable for all with Hillary and @BernieSanders at @UofNH \u2192 https://t.co/NQchsSkN8L", "in_reply_to_screen_name": null, "retweet_count": 763, "favorite_count": 2364, "source": "TweetDeck", "id_str": "781210685367869441", "is_retweet": false}, {"created_at": "Fri Sep 16 17:12:16 +0000 2016", "text": "Trump\u2019s birtherism stems from the same innate beliefs that led to discriminating against black tenants early in his career. Can't be undone.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2974, "favorite_count": 5802, "source": "TweetDeck", "id_str": "776831079726604288", "is_retweet": false}, {"created_at": "Mon Jul 18 17:19:15 +0000 2016", "text": "Commit to vote today to show @realDonaldTrump we're #StrongerTogether: https://t.co/hPtEBqwrKy", "in_reply_to_screen_name": null, "retweet_count": 832, "favorite_count": 1926, "source": "TweetDeck", "id_str": "755089563765317632", "is_retweet": false}, {"created_at": "Wed Feb 24 02:35:23 +0000 2016", "text": "People who are working hard should get the respect, dignity, and income they deserve. Middle-class families need a raise. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1031, "favorite_count": 2508, "source": "TweetDeck", "id_str": "702320891435356160", "is_retweet": false}, {"created_at": "Thu Sep 01 16:06:19 +0000 2016", "text": "\"I'm so sick and tired of people like Trump...saying we get 'paid too much.'\" \u2014@JoeBiden in Ohio: https://t.co/zMPLqxzsTY", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 2916, "source": "TweetDeck", "id_str": "771378663489204224", "is_retweet": false}, {"created_at": "Wed Jun 01 16:28:49 +0000 2016", "text": "Trump University employed instructors with no experience and lied to sell outrageously expensive packages. In a word: fraud.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1132, "favorite_count": 1817, "source": "TweetDeck", "id_str": "738044640474071040", "is_retweet": false}, {"created_at": "Sun Jan 17 00:48:10 +0000 2016", "text": "@TUSK81 What wonderful news to hear you're cancer-free. What a great way to start the New Year. Now have that glass of wine! -H", "in_reply_to_screen_name": "TUSK81", "retweet_count": 113, "favorite_count": 495, "source": "TweetDeck", "id_str": "688523171058835457", "is_retweet": false}, {"created_at": "Thu Aug 04 15:16:04 +0000 2016", "text": "What our economy needs: The largest investment in creating good-paying jobs since World War II. https://t.co/uDdkrA2myo", "in_reply_to_screen_name": null, "retweet_count": 2140, "favorite_count": 5538, "source": "TweetDeck", "id_str": "761219156846997505", "is_retweet": false}, {"created_at": "Fri Jun 10 17:09:04 +0000 2016", "text": "Defending women\u2019s health means defending access to safe, legal abortion for all who need it\u2014not just women who can afford it.", "in_reply_to_screen_name": null, "retweet_count": 1319, "favorite_count": 4487, "source": "TweetDeck", "id_str": "741316261087457284", "is_retweet": false}, {"created_at": "Thu Sep 08 01:29:17 +0000 2016", "text": "RT @brianefallon: Trump's unpresidential trifecta tonight:\n1. Attack our generals\n2. Praise Putin\n3. Blame women in combat for sexual assau\u2026", "in_reply_to_screen_name": null, "retweet_count": 7832, "favorite_count": 0, "source": "TweetDeck", "id_str": "773694664960577536", "is_retweet": true}, {"created_at": "Wed Jul 27 00:26:26 +0000 2016", "text": "\u201cSandy, my fourth of five daughters, was gone\u2026 So many of our children gone but not forgotten\u201d \u2014Geneva Reed-Veal, Sandra Bland\u2019s mother.", "in_reply_to_screen_name": null, "retweet_count": 1076, "favorite_count": 4057, "source": "TweetDeck", "id_str": "758096171831361536", "is_retweet": false}, {"created_at": "Thu Oct 13 16:59:39 +0000 2016", "text": "\"If we have a president who...brags about sexually assaulting women, then how can we maintain our moral authority in the world?\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1658, "favorite_count": 3474, "source": "TweetDeck", "id_str": "786612375101276164", "is_retweet": false}, {"created_at": "Wed Jul 13 17:18:13 +0000 2016", "text": "\"I do wish Donald would listen to other people once in a while. He might actually learn something. But...he only listens to himself.\"", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 3600, "source": "TweetDeck", "id_str": "753277364612788224", "is_retweet": false}, {"created_at": "Sun Sep 11 02:04:55 +0000 2016", "text": "\"The story has vastly exceeded the boundaries of the facts.\" \u2014@WashingtonPost on the reporting on Hillary's emails https://t.co/ycp0KW7LZL", "in_reply_to_screen_name": null, "retweet_count": 2927, "favorite_count": 6735, "source": "TweetDeck", "id_str": "774790797707321345", "is_retweet": false}, {"created_at": "Thu May 26 13:15:30 +0000 2016", "text": "El muro de Trump en la frontera costar\u00eda al menos unos $25 mil millones. Lo que podr\u00edamos hacer en lugar de su plan. https://t.co/703QmdjOhi", "in_reply_to_screen_name": null, "retweet_count": 933, "favorite_count": 1318, "source": "TweetDeck", "id_str": "735821664609554433", "is_retweet": false}, {"created_at": "Wed Oct 19 00:34:01 +0000 2016", "text": "Grateful to everyone who performed and turned out at #BroadwayForHillary. A great reminder about how important it i\u2026 https://t.co/BnGOv2trkB", "in_reply_to_screen_name": null, "retweet_count": 2588, "favorite_count": 9209, "source": "Twitter Web Client", "id_str": "788538659356180481", "is_retweet": false}, {"created_at": "Fri Aug 05 16:56:09 +0000 2016", "text": "RT @Hillary_esp: \u201c\u00c9l dice que no se puede confiar en un distinguido juez porque tiene herencia mexicana\u201d\u2014Hillary sobre Trump.", "in_reply_to_screen_name": null, "retweet_count": 504, "favorite_count": 0, "source": "TweetDeck", "id_str": "761606730358849537", "is_retweet": true}, {"created_at": "Sat Feb 20 22:47:18 +0000 2016", "text": "Text CONGRATS to 47246 to tell Hillary you\u2019re proud to be on her team today. https://t.co/6lCdSC6Hzz", "in_reply_to_screen_name": null, "retweet_count": 575, "favorite_count": 1955, "source": "TweetDeck", "id_str": "701176328696025090", "is_retweet": false}, {"created_at": "Fri Sep 02 12:10:31 +0000 2016", "text": "RT @ReutersPolitics: Clinton announces plan to address 'unjustified' price hikes on life-saving drugs https://t.co/rRmEOlqYNF", "in_reply_to_screen_name": null, "retweet_count": 1040, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "771681710517940224", "is_retweet": true}, {"created_at": "Thu Nov 03 03:28:33 +0000 2016", "text": "RT @dougmillsnyt: .@HillaryClinton at  the Arizona Democratic Party Early Vote Rally at  Arizona State University in Tempe, Arizona. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 2726, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794018400934694912", "is_retweet": true}, {"created_at": "Fri Sep 09 16:39:44 +0000 2016", "text": "If you want to see what corruption actually looks like, this is it. https://t.co/tBfL0J82Tz https://t.co/Fc9U2cmlU8", "in_reply_to_screen_name": null, "retweet_count": 2725, "favorite_count": 4127, "source": "TweetDeck", "id_str": "774286177369284612", "is_retweet": false}, {"created_at": "Wed Oct 12 19:03:45 +0000 2016", "text": "Comparing 30 years of public service with\u2026Trump. https://t.co/bNlSN29OZQ", "in_reply_to_screen_name": null, "retweet_count": 1928, "favorite_count": 4749, "source": "TweetDeck", "id_str": "786281218945982464", "is_retweet": false}, {"created_at": "Sat Jul 23 18:05:45 +0000 2016", "text": "\"America was built on courage, on imagination, and an unbeatable determination to do the job at hand.\u201d \u2014@TimKaine quoting Harry Truman", "in_reply_to_screen_name": null, "retweet_count": 1763, "favorite_count": 4923, "source": "TweetDeck", "id_str": "756913204488462336", "is_retweet": false}, {"created_at": "Tue Jul 26 01:38:07 +0000 2016", "text": "\u201cOur forefathers gathered in this very city, and they declared before the world that would be a free and independent nation.\" \u2014Sen. Booker", "in_reply_to_screen_name": null, "retweet_count": 1137, "favorite_count": 3970, "source": "TweetDeck", "id_str": "757751822786453508", "is_retweet": false}, {"created_at": "Tue Sep 06 12:07:05 +0000 2016", "text": "Today, we'll hear Trump talk about our veterans.\n\nOur new ad on what they've been hearing from Trump for months: https://t.co/nG2oTwOclR", "in_reply_to_screen_name": null, "retweet_count": 4572, "favorite_count": 8224, "source": "Twitter Web Client", "id_str": "773130397232275458", "is_retweet": false}, {"created_at": "Tue Nov 08 15:03:04 +0000 2016", "text": "Today's the day when we show how much stronger we are together. Once you\u2019ve voted, sign up for a volunteer shift:\u2026 https://t.co/khCcNeoYal", "in_reply_to_screen_name": null, "retweet_count": 1725, "favorite_count": 5234, "source": "TweetDeck", "id_str": "796005120043548672", "is_retweet": false}, {"created_at": "Wed Mar 02 02:03:30 +0000 2016", "text": "If we resist the forces trying to drive us apart, we can come together to make this country work for everyone.", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 2012, "source": "TweetDeck", "id_str": "704849583160082434", "is_retweet": false}, {"created_at": "Tue Oct 25 03:22:50 +0000 2016", "text": "\"Get this, Donald:\nNasty women are tough.\nNasty women are smart.\nAnd nasty women vote.\"\n\u2014@ElizabethForMA\u2026 https://t.co/VvZl5Y19BA", "in_reply_to_screen_name": null, "retweet_count": 6955, "favorite_count": 20111, "source": "TweetDeck", "id_str": "790755470776623104", "is_retweet": false}, {"created_at": "Sat Aug 27 18:26:50 +0000 2016", "text": "RT @HillaryForGA: If Trump doesn\u2019t see all Americans or respect all Americans, how can he serve all Americans? #StrongerTogether https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1998, "favorite_count": 0, "source": "TweetDeck", "id_str": "769602086120132608", "is_retweet": true}, {"created_at": "Tue Oct 11 19:47:19 +0000 2016", "text": "RT @johnpodesta: And whether or not he chooses to acknowledge climate change in his campaign, even Donald can\u2019t ignore it forever... https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 670, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785929794567467008", "is_retweet": true}, {"created_at": "Mon Mar 28 21:14:52 +0000 2016", "text": "\"We chose a president\u2014twice. Now Republicans are acting like those votes didn\u2019t count, and @POTUS isn\u2019t still our nation\u2019s leader.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1298, "favorite_count": 2654, "source": "TweetDeck", "id_str": "714561418759114753", "is_retweet": false}, {"created_at": "Sat Apr 16 02:14:46 +0000 2016", "text": "It's time for us to say, \"enough is enough.\" We have to protect families, not the gun lobby.\nhttps://t.co/fo604pM1KN", "in_reply_to_screen_name": null, "retweet_count": 1573, "favorite_count": 3148, "source": "Twitter Web Client", "id_str": "721159872985739265", "is_retweet": false}, {"created_at": "Sat Oct 01 07:25:28 +0000 2016", "text": "Too many talented young people pass up on programs like @Peacecorps because of student loans. Let's use GOOD JUDGMENT &amp; lighten that burden.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1805, "favorite_count": 5107, "source": "Twitter Web Client", "id_str": "782119222038163456", "is_retweet": false}, {"created_at": "Fri Mar 25 21:03:26 +0000 2016", "text": "\u201cClinton not only has the experience and achievements\u2026but a commitment to social justice.\u201d \u2014@RollingStone https://t.co/2g5yVQeo8v", "in_reply_to_screen_name": null, "retweet_count": 1394, "favorite_count": 3084, "source": "TweetDeck", "id_str": "713471378704449543", "is_retweet": false}, {"created_at": "Wed Oct 26 02:37:17 +0000 2016", "text": "99% more Florida Latinos have already voted early than at this point in 2012. Join them: https://t.co/cqsal32OB3 https://t.co/WIdCeGUUcu", "in_reply_to_screen_name": null, "retweet_count": 2239, "favorite_count": 7572, "source": "TweetDeck", "id_str": "791106394019823616", "is_retweet": false}, {"created_at": "Thu Mar 10 03:33:16 +0000 2016", "text": "Found it for you: https://t.co/Jb7DXwL9WS #DemDebate  https://t.co/R08tx3Y8K3", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 1646, "source": "TweetDeck", "id_str": "707771274299310080", "is_retweet": false}, {"created_at": "Wed Oct 12 20:29:43 +0000 2016", "text": "\u201cI want every boy and girl to know, the American Dream is big enough for you. And there is a place in America for you.\u201d \u2014Hillary in Colorado", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 833, "favorite_count": 2192, "source": "TweetDeck", "id_str": "786302854478827520", "is_retweet": false}, {"created_at": "Mon Aug 22 20:56:15 +0000 2016", "text": "In times of crisis, America depends on steady leadership, clear thinking, and calm judgment. https://t.co/Tpo3Sp7Ri1", "in_reply_to_screen_name": null, "retweet_count": 2806, "favorite_count": 6467, "source": "TweetDeck", "id_str": "767827749063057409", "is_retweet": false}, {"created_at": "Fri Jul 22 12:39:19 +0000 2016", "text": "President. Donald. Trump.\n\nGet your free sticker to show the world you're not about to let that happen: https://t.co/2Pr6mFCsWO", "in_reply_to_screen_name": null, "retweet_count": 1372, "favorite_count": 3472, "source": "TweetDeck", "id_str": "756468666909196288", "is_retweet": false}, {"created_at": "Tue Apr 19 19:34:31 +0000 2016", "text": "If we have each other's backs and treat each other with kindness and respect, there's nothing we can't do.\nhttps://t.co/ZUYkzKMLyo", "in_reply_to_screen_name": null, "retweet_count": 1420, "favorite_count": 3166, "source": "Twitter Web Client", "id_str": "722508698006884352", "is_retweet": false}, {"created_at": "Mon Jan 04 14:09:42 +0000 2016", "text": "We need a fighter for children and families in the White House. https://t.co/GmtZJkTHhd", "in_reply_to_screen_name": null, "retweet_count": 485, "favorite_count": 1309, "source": "Twitter for iPhone", "id_str": "684013839298478081", "is_retweet": false}, {"created_at": "Mon Mar 28 23:06:31 +0000 2016", "text": "Raising CA's minimum wage to $15 is a big win for workers and #FightFor15 organizers. I applaud CA and other states' work to raise wages. -H", "in_reply_to_screen_name": null, "retweet_count": 1219, "favorite_count": 2705, "source": "TweetDeck", "id_str": "714589515025891329", "is_retweet": false}, {"created_at": "Tue Jun 07 01:20:46 +0000 2016", "text": "Let's finish this primary strong and head into the general election together: https://t.co/3DyAZfFyoi", "in_reply_to_screen_name": null, "retweet_count": 1751, "favorite_count": 4685, "source": "TweetDeck", "id_str": "739990452816994304", "is_retweet": false}, {"created_at": "Thu Aug 18 15:56:05 +0000 2016", "text": "Donald Trump's plan: a multi-billion dollar tax cut for himself and the wealthiest Americans https://t.co/he2KkNcaMm", "in_reply_to_screen_name": null, "retweet_count": 1192, "favorite_count": 2500, "source": "TweetDeck", "id_str": "766302658592399360", "is_retweet": false}, {"created_at": "Fri Aug 26 17:04:19 +0000 2016", "text": "Yes, @realDonaldTrump really did say all of these hateful things. https://t.co/gEvIU8Ugmc", "in_reply_to_screen_name": null, "retweet_count": 1767, "favorite_count": 3217, "source": "TweetDeck", "id_str": "769218931806511104", "is_retweet": false}, {"created_at": "Mon Oct 17 13:55:51 +0000 2016", "text": "Only 71 left! Hurry and save $10 on the Art of Politics tote here: https://t.co/28PCWA4QVZ https://t.co/iV1OowtWAe", "in_reply_to_screen_name": null, "retweet_count": 328, "favorite_count": 1135, "source": "TweetDeck", "id_str": "788015674052472832", "is_retweet": false}, {"created_at": "Tue Oct 25 14:46:54 +0000 2016", "text": "RT @HillaryforVA: Jimmy Ochan found refuge in the U.S., and joined the Marines to give back. When he was injured, he got the care he needed\u2026", "in_reply_to_screen_name": null, "retweet_count": 1446, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "790927620942749696", "is_retweet": true}, {"created_at": "Wed Jul 27 23:46:43 +0000 2016", "text": "\"Trump says global warming is a hoax.\u2070\u2070\n\nI say Trump is a fraud.\u201d \u2014@JerryBrownGov #DemsInPhilly https://t.co/yyx0nmNbvj", "in_reply_to_screen_name": null, "retweet_count": 1213, "favorite_count": 3420, "source": "TweetDeck", "id_str": "758448562061602817", "is_retweet": false}, {"created_at": "Wed Oct 26 16:18:40 +0000 2016", "text": "\"More than 10 million people have already voted in this election\u2014and two million of them are right here in Florida.\u201d https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 441, "favorite_count": 1187, "source": "TweetDeck", "id_str": "791313102457409538", "is_retweet": false}, {"created_at": "Wed May 11 12:57:59 +0000 2016", "text": "We need to raise the minimum wage, lift millions of families out of poverty, and make the economy work for everyone. https://t.co/FC5Cg6qRMI", "in_reply_to_screen_name": null, "retweet_count": 1860, "favorite_count": 4916, "source": "TweetDeck", "id_str": "730381439955554304", "is_retweet": false}, {"created_at": "Tue Oct 18 21:08:20 +0000 2016", "text": "\"In the quiet moments backstage or at the end of a long day, I find myself thinking about my mother.\"\u2026 https://t.co/tEFEXQ5OYP", "in_reply_to_screen_name": null, "retweet_count": 2147, "favorite_count": 9907, "source": "TweetDeck", "id_str": "788486898520031232", "is_retweet": false}, {"created_at": "Wed Aug 31 21:06:12 +0000 2016", "text": "RT @TheBriefing2016: \"I happen to have a tremendous feeling for Mexican Americans.\u201d \u2014Donald Trump, August 31, 2016  https://t.co/fC8pkS55GX", "in_reply_to_screen_name": null, "retweet_count": 475, "favorite_count": 0, "source": "TweetDeck", "id_str": "771091744653967360", "is_retweet": true}, {"created_at": "Tue Sep 27 05:16:56 +0000 2016", "text": "RT @JoeBiden: Tonight, @HillaryClinton proved she is ready to be President \u2014 and Donald Trump proved he is not. #debatenight https://t.co/Z\u2026", "in_reply_to_screen_name": null, "retweet_count": 10771, "favorite_count": 0, "source": "TweetDeck", "id_str": "780637326921830400", "is_retweet": true}, {"created_at": "Thu Sep 08 21:03:50 +0000 2016", "text": "RT @timkaine: When it comes to mental health, help should be focused on treatment, not judgment. https://t.co/IG5sP5qpbG", "in_reply_to_screen_name": null, "retweet_count": 1262, "favorite_count": 0, "source": "TweetDeck", "id_str": "773990251140411393", "is_retweet": true}, {"created_at": "Mon Feb 15 02:13:11 +0000 2016", "text": "The ability to exercise your reproductive rights should be a reality for all, not just those who can afford it. https://t.co/jmzZaUMSqw", "in_reply_to_screen_name": null, "retweet_count": 1532, "favorite_count": 3567, "source": "TweetDeck", "id_str": "699053811294466052", "is_retweet": false}, {"created_at": "Wed Nov 02 22:58:18 +0000 2016", "text": "Imagine that it\u2019s January 20, 2017. Ask yourself, what will life be like for you under President Trump?\n\n\u2192 https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 742, "favorite_count": 1586, "source": "TweetDeck", "id_str": "793950388810563584", "is_retweet": false}, {"created_at": "Thu Oct 13 16:58:52 +0000 2016", "text": "\"Remember, when they go low, we go high.\u201d \u2014@FLOTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 783, "favorite_count": 2019, "source": "TweetDeck", "id_str": "786612176492584961", "is_retweet": false}, {"created_at": "Mon May 09 23:12:09 +0000 2016", "text": "Women earn just $0.79 for every $1 men do.\n\nThat's a problem for all of us. https://t.co/dG8nh59dHF https://t.co/OpUw08xWOF", "in_reply_to_screen_name": null, "retweet_count": 1572, "favorite_count": 2880, "source": "TweetDeck", "id_str": "729811224326750208", "is_retweet": false}, {"created_at": "Sat Feb 27 03:19:38 +0000 2016", "text": "Sometimes running for president involves crashing a bachelor party. https://t.co/0I5Txpq34x", "in_reply_to_screen_name": null, "retweet_count": 1296, "favorite_count": 5066, "source": "TweetDeck", "id_str": "703419188270997505", "is_retweet": false}, {"created_at": "Fri Jul 08 22:21:55 +0000 2016", "text": "\"We\u2019ll make it clear when deadly force is warranted and when it is not, and emphasize proven methods for de-escalating situations.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1288, "favorite_count": 4042, "source": "TweetDeck", "id_str": "751541854806638594", "is_retweet": false}, {"created_at": "Sat Apr 16 16:05:13 +0000 2016", "text": "Behind the scenes on the campaign with YouTube star @raymondbraun.\nhttps://t.co/xme0HojluC", "in_reply_to_screen_name": null, "retweet_count": 691, "favorite_count": 1730, "source": "Twitter Web Client", "id_str": "721368862298509312", "is_retweet": false}, {"created_at": "Wed May 18 19:31:47 +0000 2016", "text": ".@realDonaldTrump doesn't want you to see what's in his tax returns. Wonder why that could be?\nhttps://t.co/2eru1Sxoek", "in_reply_to_screen_name": null, "retweet_count": 1563, "favorite_count": 2556, "source": "Twitter Web Client", "id_str": "733017256939003905", "is_retweet": false}, {"created_at": "Tue Sep 06 18:43:24 +0000 2016", "text": "We\u2019re going to make our economy grow, but we\u2019re also going to make it fair. Here\u2019s how: https://t.co/xIbkccCzWi", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 577, "favorite_count": 1100, "source": "TweetDeck", "id_str": "773230135545921538", "is_retweet": false}, {"created_at": "Thu Sep 22 15:53:27 +0000 2016", "text": "Donald Trump is really good at spending other people's money\u2014on:\n\nLegal settlements.\nPayoffs.\nPortraits of himself. https://t.co/C5bXw5brI9", "in_reply_to_screen_name": null, "retweet_count": 7026, "favorite_count": 12532, "source": "Twitter Web Client", "id_str": "778985572215955456", "is_retweet": false}, {"created_at": "Thu Sep 29 22:36:30 +0000 2016", "text": "We have to face the hard truths about race in America. https://t.co/2dg5oSRsJP", "in_reply_to_screen_name": null, "retweet_count": 1870, "favorite_count": 4382, "source": "TweetDeck", "id_str": "781623714274312197", "is_retweet": false}, {"created_at": "Mon Nov 07 21:12:59 +0000 2016", "text": "Join Hillary in Grand Rapids, Michigan, for one of her last rallies of the campaign: https://t.co/jJKydSK4DR", "in_reply_to_screen_name": null, "retweet_count": 1216, "favorite_count": 4820, "source": "TweetDeck", "id_str": "795735825988337664", "is_retweet": false}, {"created_at": "Wed Jul 27 02:45:58 +0000 2016", "text": "\u201cShe backed President Obama\u2019s decision to go after Osama bin Laden.\u201d \u2014@BillClinton on Hillary https://t.co/vDgTxiWfZJ", "in_reply_to_screen_name": null, "retweet_count": 2745, "favorite_count": 11542, "source": "TweetDeck", "id_str": "758131287085506560", "is_retweet": false}, {"created_at": "Thu Oct 20 20:32:52 +0000 2016", "text": "\u201cA dangerous con artist who has spent a career sticking it to working people.\u201d \u2014@POTUS quoting Marco Rubio on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 796, "favorite_count": 1778, "source": "TweetDeck", "id_str": "789202747157610496", "is_retweet": false}, {"created_at": "Mon Jan 18 20:01:55 +0000 2016", "text": "Texts from Hillary, debate night edition. If you want in, text WATCH to 47246. https://t.co/HMMkdX8Krl", "in_reply_to_screen_name": null, "retweet_count": 152, "favorite_count": 406, "source": "TweetDeck", "id_str": "689175908427640833", "is_retweet": false}, {"created_at": "Thu Jul 28 03:09:17 +0000 2016", "text": "\u201cShe was doing everything I was, but just like Ginger Rogers, it was backwards in heels.\u201d \u2014@POTUS on the 2008 election", "in_reply_to_screen_name": null, "retweet_count": 2805, "favorite_count": 7487, "source": "TweetDeck", "id_str": "758499540584501249", "is_retweet": false}, {"created_at": "Thu Aug 25 19:17:26 +0000 2016", "text": "Trump is reinforcing harmful stereotypes and offering a dog whistle to his most hateful supporters.", "in_reply_to_screen_name": null, "retweet_count": 1095, "favorite_count": 2837, "source": "TweetDeck", "id_str": "768890043448647680", "is_retweet": false}, {"created_at": "Fri May 20 13:11:33 +0000 2016", "text": "An estimated 1 in 4 people in Puerto Rico could get Zika this year.\n\nHere's what we can do to combat this threat: https://t.co/xABxLScUyr", "in_reply_to_screen_name": null, "retweet_count": 667, "favorite_count": 1016, "source": "TweetDeck", "id_str": "733646343135170560", "is_retweet": false}, {"created_at": "Wed Sep 21 18:42:43 +0000 2016", "text": "We have two names to add to a long list of African Americans killed by police officers. It\u2019s unbearable, and it needs to become intolerable.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 930, "favorite_count": 1790, "source": "TweetDeck", "id_str": "778665779906670592", "is_retweet": false}, {"created_at": "Sat Nov 05 14:42:09 +0000 2016", "text": "RT @CP3: Make a plan to vote! #IMWITHHER https://t.co/lpQIRgIipR https://t.co/ZwRI8vw3dX", "in_reply_to_screen_name": null, "retweet_count": 2970, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "794912693203374084", "is_retweet": true}, {"created_at": "Fri Jul 29 17:20:40 +0000 2016", "text": "Hillary &amp; @TimKaine take the stage in Philadelphia at their first campaign rally as the official Democratic ticket: https://t.co/aYKAX9LUgU", "in_reply_to_screen_name": null, "retweet_count": 790, "favorite_count": 3729, "source": "TweetDeck", "id_str": "759076184734965760", "is_retweet": false}, {"created_at": "Fri Jul 08 22:11:55 +0000 2016", "text": "\"We pray for those families and for the souls of all those we lost this week and all those preceding. May they rest in God\u2019s peace\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1315, "favorite_count": 3907, "source": "TweetDeck", "id_str": "751539336508760064", "is_retweet": false}, {"created_at": "Wed Oct 26 14:45:58 +0000 2016", "text": "America is already great because it welcomes people like Dami\u00e1n L\u00f3pez Rodriguez\u2014an immigrant who gave his life for\u2026 https://t.co/xZLZqFZWTO", "in_reply_to_screen_name": null, "retweet_count": 5459, "favorite_count": 13219, "source": "Media Studio", "id_str": "791289774682157057", "is_retweet": false}, {"created_at": "Tue Sep 06 21:52:17 +0000 2016", "text": "Donald Trump has a problem looking at someone different from himself and actually seeing them. https://t.co/LddoXYkBsf", "in_reply_to_screen_name": null, "retweet_count": 3511, "favorite_count": 7528, "source": "TweetDeck", "id_str": "773277667164585984", "is_retweet": false}, {"created_at": "Fri Jul 29 02:05:14 +0000 2016", "text": "\"I\u2019m here as a proud American, a proud Democrat, a proud mother, and tonight, in particular, a very, very proud daughter.\u201d \u2014@ChelseaClinton", "in_reply_to_screen_name": null, "retweet_count": 1696, "favorite_count": 6893, "source": "Twitter Web Client", "id_str": "758845812092702720", "is_retweet": false}, {"created_at": "Tue Jan 12 19:37:25 +0000 2016", "text": "On the trail in New Hampshire, world champion @AbbyWambach led us in a chant she knows well\u2014with a new twist. https://t.co/hVvF3hwwXE", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 1172, "source": "TweetDeck", "id_str": "686995417523990528", "is_retweet": false}, {"created_at": "Fri Jan 15 03:21:29 +0000 2016", "text": "#TBT #GOPdebate https://t.co/nVaWeYGybL", "in_reply_to_screen_name": null, "retweet_count": 1153, "favorite_count": 2741, "source": "TweetDeck", "id_str": "687836977434066945", "is_retweet": false}, {"created_at": "Wed Aug 24 23:10:03 +0000 2016", "text": "8 things you can do *today* to help elect Hillary: https://t.co/fFpvl62RMB", "in_reply_to_screen_name": null, "retweet_count": 1015, "favorite_count": 2210, "source": "TweetDeck", "id_str": "768586198294073344", "is_retweet": false}, {"created_at": "Tue Feb 09 16:03:18 +0000 2016", "text": "It's New Hampshire Primary Day! If you're with Hillary, let her know why by tweeting #ImWithHer. https://t.co/pej94l8M3A", "in_reply_to_screen_name": null, "retweet_count": 837, "favorite_count": 1104, "source": "TweetDeck", "id_str": "697088393377902592", "is_retweet": false}, {"created_at": "Fri Oct 07 14:43:29 +0000 2016", "text": "When Hillary wanted to make sure every child in Arkansas got a quality education, she did her homework. https://t.co/vKu4XbHG4i", "in_reply_to_screen_name": null, "retweet_count": 1644, "favorite_count": 5155, "source": "TweetDeck", "id_str": "784403779395391489", "is_retweet": false}, {"created_at": "Sun Nov 06 18:56:01 +0000 2016", "text": "RT @hannahbfine: \"The first president I got to vote for was black like me. And now I get to vote for a lady. It's just amazing.\" -Dominique\u2026", "in_reply_to_screen_name": null, "retweet_count": 4648, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795338968392941568", "is_retweet": true}, {"created_at": "Tue Sep 27 17:55:26 +0000 2016", "text": "\"I\u2019m really glad my dad never had a contract with Donald Trump.\u201d \u2014Hillary https://t.co/un2YiRLEYF", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2356, "favorite_count": 4058, "source": "TweetDeck", "id_str": "780828206039502848", "is_retweet": false}, {"created_at": "Sun Feb 14 20:23:13 +0000 2016", "text": "Obamacare has brought millions of Americans health care they need. They can't wait for promises that can't be kept.\nhttps://t.co/adDyMUDali", "in_reply_to_screen_name": null, "retweet_count": 1059, "favorite_count": 2265, "source": "Twitter Web Client", "id_str": "698965742385926144", "is_retweet": false}, {"created_at": "Tue Mar 22 17:32:04 +0000 2016", "text": "Live in Arizona? Join thousands of your neighbors at the polls today! Confirm where to go here: https://t.co/qEDl6hEW5B", "in_reply_to_screen_name": null, "retweet_count": 443, "favorite_count": 1048, "source": "TweetDeck", "id_str": "712331021061136385", "is_retweet": false}, {"created_at": "Thu Oct 27 19:07:10 +0000 2016", "text": "Hillary \"is absolutely ready to be Commander-in-Chief\u2026and yes, she happens to be a woman.\" \u2014@FLOTUS https://t.co/A0WhIzFP8Q", "in_reply_to_screen_name": null, "retweet_count": 2561, "favorite_count": 6987, "source": "TweetDeck", "id_str": "791717894308655104", "is_retweet": false}, {"created_at": "Thu Oct 27 18:50:25 +0000 2016", "text": "We can never forget how Trump disrespects our military families, like the Khans. https://t.co/cWxnRsqU6r", "in_reply_to_screen_name": null, "retweet_count": 1739, "favorite_count": 4774, "source": "TweetDeck", "id_str": "791713678953414656", "is_retweet": false}, {"created_at": "Sat Feb 06 19:28:21 +0000 2016", "text": "\"I'm fighting for the millions of people who can\u2019t wait.\" Hillary at #NHdems2016 https://t.co/lkww88xdAK", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 808, "source": "TweetDeck", "id_str": "696052828641558528", "is_retweet": false}, {"created_at": "Mon Jul 25 21:12:39 +0000 2016", "text": "RT @TheAdvocateMag: The Advocate endorses @HillaryClinton, the only candidate who is a champion of #LGBT causes. https://t.co/Obq1UiVSDR ht\u2026", "in_reply_to_screen_name": null, "retweet_count": 1270, "favorite_count": 0, "source": "TweetDeck", "id_str": "757685015434014726", "is_retweet": true}, {"created_at": "Fri Mar 04 03:39:25 +0000 2016", "text": "Marriage equality is the law of the land. Deal with it. #GOPdebate https://t.co/gPS1BVgipl", "in_reply_to_screen_name": null, "retweet_count": 19241, "favorite_count": 37959, "source": "TweetDeck", "id_str": "705598496934633474", "is_retweet": false}, {"created_at": "Tue Jul 05 20:00:29 +0000 2016", "text": "\"I saw how she treated everybody with respect...that's how you judge somebody. How they treat others when the cameras are off.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1433, "favorite_count": 4053, "source": "TweetDeck", "id_str": "750419098136416256", "is_retweet": false}, {"created_at": "Wed Oct 12 20:43:38 +0000 2016", "text": "\u201cI\u2019m going to double the child tax credit\u2014that\u2019s another $1,000 for young kids to pay for the things you need.\u201d https://t.co/lrVTNbd0zf", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1227, "favorite_count": 3777, "source": "TweetDeck", "id_str": "786306354680107008", "is_retweet": false}, {"created_at": "Fri Oct 28 22:20:44 +0000 2016", "text": "We\u2019re going to make public colleges tuition-free for families making less than $125,000 a year and debt-free for everyone else.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4613, "favorite_count": 7860, "source": "TweetDeck", "id_str": "792128996381163521", "is_retweet": false}, {"created_at": "Fri Oct 07 19:00:42 +0000 2016", "text": "\"It will send a strong and powerful message...that we truly believe in equality.\" \u2014@RepJohnLewis\n\nRegister to vote:\u2026 https://t.co/mPthwxXE1m", "in_reply_to_screen_name": null, "retweet_count": 3878, "favorite_count": 8576, "source": "Media Studio", "id_str": "784468512693551104", "is_retweet": false}, {"created_at": "Sun Feb 07 20:18:06 +0000 2016", "text": "\"The children of Flint are just as precious as the children of any other part of America.\" \u2014Hillary in Flint today https://t.co/JlvflCyOYg", "in_reply_to_screen_name": null, "retweet_count": 1365, "favorite_count": 2726, "source": "TweetDeck", "id_str": "696427737775472642", "is_retweet": false}, {"created_at": "Mon Apr 04 23:12:51 +0000 2016", "text": "Born on this day in 1928, Maya Angelou\u2019s voice holds a powerful place in the ongoing fight for justice. https://t.co/7g0GLRI6SX", "in_reply_to_screen_name": null, "retweet_count": 3414, "favorite_count": 8076, "source": "TweetDeck", "id_str": "717127822700122117", "is_retweet": false}, {"created_at": "Wed Nov 02 20:32:42 +0000 2016", "text": "\"Our democracy is on the ballot right now\u2014and Hillary gives us a chance to advance our democracy.\u201d \u2014@POTUS\n\nGo vote: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 885, "favorite_count": 2331, "source": "TweetDeck", "id_str": "793913748155199488", "is_retweet": false}, {"created_at": "Sun Oct 09 18:03:44 +0000 2016", "text": "I strongly condemn today's attack in Jerusalem and my prayers go to the victims' families. The terrorists must be brought to justice. -H", "in_reply_to_screen_name": null, "retweet_count": 3671, "favorite_count": 13757, "source": "TweetDeck", "id_str": "785178953082363908", "is_retweet": false}, {"created_at": "Wed Jul 27 23:07:41 +0000 2016", "text": "RT @DemConvention: Just tuning into tonight's action? Watch the livestream at https://t.co/z995BLo6rF #DemsinPhilly #DNCinPHL https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 265, "favorite_count": 0, "source": "TweetDeck", "id_str": "758438742478716933", "is_retweet": true}, {"created_at": "Fri Jul 29 03:03:26 +0000 2016", "text": "\u201cWe'll pass a constitutional amendment to overturn Citizens United!\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1746, "favorite_count": 5144, "source": "TweetDeck", "id_str": "758860457025298432", "is_retweet": false}, {"created_at": "Sat Mar 12 18:10:03 +0000 2016", "text": "The divisive rhetoric and encouragement of violence we're hearing from Donald Trump isn't just wrong\u2014it's dangerous.\nhttps://t.co/RMWoqHNU5u", "in_reply_to_screen_name": null, "retweet_count": 3905, "favorite_count": 6617, "source": "Twitter Web Client", "id_str": "708716700342943744", "is_retweet": false}, {"created_at": "Wed Apr 27 18:26:04 +0000 2016", "text": "Last night, the \"#womancard.\" This morning, Trump said he \"hasn't recovered\" from Hillary's \"shouting.\" Really? https://t.co/wOXffrFuN2", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1831, "favorite_count": 3415, "source": "TweetDeck", "id_str": "725390574929465345", "is_retweet": false}, {"created_at": "Fri Jul 22 22:02:23 +0000 2016", "text": "\"He doesn\u2019t speak for immigrants...I don\u2019t think he speaks for women. I don\u2019t think he speaks for working families.\" \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1340, "favorite_count": 4199, "source": "TweetDeck", "id_str": "756610369582469120", "is_retweet": false}, {"created_at": "Thu May 26 23:12:29 +0000 2016", "text": "Couldn't agree more. https://t.co/gfk8NWAhIY", "in_reply_to_screen_name": null, "retweet_count": 2002, "favorite_count": 4362, "source": "Twitter Web Client", "id_str": "735971900275499008", "is_retweet": false}, {"created_at": "Fri May 20 02:19:12 +0000 2016", "text": "Donald Trump's plan to ban Muslims from entering the United States will make defeating terrorists more difficult.\nhttps://t.co/4RoN9gJiKq", "in_reply_to_screen_name": null, "retweet_count": 1761, "favorite_count": 3369, "source": "Twitter Web Client", "id_str": "733482175643799553", "is_retweet": false}, {"created_at": "Tue Sep 27 20:37:47 +0000 2016", "text": "RT @ddlovato: The election is just weeks away. Check if you're registered to vote at https://t.co/HcMAh8ljR0, only takes a few clicks! http\u2026", "in_reply_to_screen_name": null, "retweet_count": 5593, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780869063648153601", "is_retweet": true}, {"created_at": "Thu Jul 21 22:01:13 +0000 2016", "text": "So much for party unity.\nhttps://t.co/YO81aWoyR9", "in_reply_to_screen_name": null, "retweet_count": 2698, "favorite_count": 4678, "source": "Twitter Web Client", "id_str": "756247685481373696", "is_retweet": false}, {"created_at": "Sat Nov 05 17:41:25 +0000 2016", "text": "In just 3 days, we have the chance to make history:\n\nJoin Hillary live in Florida as she gets out the vote: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 1979, "favorite_count": 6843, "source": "TweetDeck", "id_str": "794957806797516804", "is_retweet": false}, {"created_at": "Sat Jan 02 17:08:16 +0000 2016", "text": "She\u2019s a Grammy-award winning grandma\u2014plus three more surprising facts about Hillary: https://t.co/iS0FfMJy0t", "in_reply_to_screen_name": null, "retweet_count": 399, "favorite_count": 986, "source": "TweetDeck", "id_str": "683334002200166401", "is_retweet": false}, {"created_at": "Tue Jul 12 16:08:07 +0000 2016", "text": "$7.25 an hour is a starvation wage. So sorry Donald, if you\u2019re watching, we\u2019re not cutting the minimum wage, we\u2019re raising the minimum wage.", "in_reply_to_screen_name": null, "retweet_count": 2743, "favorite_count": 7744, "source": "TweetDeck", "id_str": "752897336007913472", "is_retweet": false}, {"created_at": "Wed Oct 05 12:29:21 +0000 2016", "text": "At the #VPDebate, Mike Pence tried really, really hard to deny pretty much everything Donald Trump has said and don\u2026 https://t.co/lGHSMcEWpF", "in_reply_to_screen_name": null, "retweet_count": 29477, "favorite_count": 43801, "source": "Media Studio", "id_str": "783645247247114240", "is_retweet": false}, {"created_at": "Tue Aug 02 17:43:44 +0000 2016", "text": "All Kauveri wanted for her seventh birthday was to meet Hillary (and a Star Wars Lego set). She got both! https://t.co/d0yNvue7LH", "in_reply_to_screen_name": null, "retweet_count": 3559, "favorite_count": 17612, "source": "TweetDeck", "id_str": "760531542317764608", "is_retweet": false}, {"created_at": "Fri Jul 29 03:21:45 +0000 2016", "text": "We need to start listening to each other.\nHearing each other.\nWalking in each other\u2019s shoes.", "in_reply_to_screen_name": null, "retweet_count": 4012, "favorite_count": 10210, "source": "TweetDeck", "id_str": "758865064484974593", "is_retweet": false}, {"created_at": "Tue Apr 19 21:19:33 +0000 2016", "text": "Just a few hours until polls close in New York. Get the latest from #PrimaryDay on our live blog \u2192 https://t.co/F1KFQkAA2Z", "in_reply_to_screen_name": null, "retweet_count": 499, "favorite_count": 1099, "source": "TweetDeck", "id_str": "722535130510848000", "is_retweet": false}, {"created_at": "Mon Feb 22 19:36:12 +0000 2016", "text": "It's 2016. A woman's place is...wherever she wants it to be. https://t.co/lkXdirHlap", "in_reply_to_screen_name": null, "retweet_count": 2338, "favorite_count": 4159, "source": "TweetDeck", "id_str": "701853013162467331", "is_retweet": false}, {"created_at": "Tue Sep 13 17:51:28 +0000 2016", "text": "\"The choice that you make, that we make, just 8 weeks from today, will determine the direction of this country for a long time.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1450, "favorite_count": 4262, "source": "TweetDeck", "id_str": "775753777550884864", "is_retweet": false}, {"created_at": "Wed Aug 03 21:49:41 +0000 2016", "text": "We are setting a goal to register 3 million more American citizens to vote: https://t.co/eLBTOMvqvk", "in_reply_to_screen_name": null, "retweet_count": 2748, "favorite_count": 6414, "source": "TweetDeck", "id_str": "760955825645125632", "is_retweet": false}, {"created_at": "Fri Aug 19 16:53:51 +0000 2016", "text": "The flooding in Louisiana is worse than anyone expected, and they need our support. Here's how you can help: https://t.co/nihT10OvRk", "in_reply_to_screen_name": null, "retweet_count": 3362, "favorite_count": 6020, "source": "TweetDeck", "id_str": "766679583890497536", "is_retweet": false}, {"created_at": "Fri Aug 12 18:11:00 +0000 2016", "text": "RT @MalalaFund: \"We cannot succeed when half of us are held back. Education is the only solution.\"\u2014Malala #YouthDay https://t.co/v4E47uT4UM", "in_reply_to_screen_name": null, "retweet_count": 2025, "favorite_count": 0, "source": "TweetDeck", "id_str": "764162285485092864", "is_retweet": true}, {"created_at": "Mon Feb 22 22:30:20 +0000 2016", "text": ".@clairecmc If ever cancer picked the wrong person to mess with, it's you. Stay strong and take care of yourself. I'm in your corner. -H", "in_reply_to_screen_name": null, "retweet_count": 1366, "favorite_count": 3436, "source": "TweetDeck", "id_str": "701896834172723202", "is_retweet": false}, {"created_at": "Wed Jul 20 19:11:00 +0000 2016", "text": "Last night's #RNCinCLE theme: \"Make America Work* Again\"\n\n*Instructions not included https://t.co/r1sIlw7XFY", "in_reply_to_screen_name": null, "retweet_count": 1139, "favorite_count": 2769, "source": "TweetDeck", "id_str": "755842463303016448", "is_retweet": false}, {"created_at": "Wed Jul 27 00:33:46 +0000 2016", "text": "\u201cI would not have signed up for this. None of us would have. I am here today for my son, Trayvon Martin, who is in heaven\u201d \u2014Sybrina Fulton", "in_reply_to_screen_name": null, "retweet_count": 1966, "favorite_count": 7011, "source": "TweetDeck", "id_str": "758098017601880064", "is_retweet": false}, {"created_at": "Wed Apr 13 01:00:50 +0000 2016", "text": "We've made progress on equal pay\u2014but our work isn't done. Our next president needs to keep leading the fight for it. https://t.co/KBD2rhs1Ts", "in_reply_to_screen_name": null, "retweet_count": 1275, "favorite_count": 3561, "source": "TweetDeck", "id_str": "720054102772883457", "is_retweet": false}, {"created_at": "Sun Jan 17 03:10:54 +0000 2016", "text": "\"You have the power to choose a nominee who will protect everything we\u2019ve achieved\u2014and stop Republicans from dragging us backward.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 961, "favorite_count": 2437, "source": "TweetDeck", "id_str": "688559089824190464", "is_retweet": false}, {"created_at": "Sun Oct 09 20:46:09 +0000 2016", "text": "RT @HFA: Here's something you can do now to help Hillary win: Call voters from home using our online call tool. Get started: https://t.co/l\u2026", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785219826235150337", "is_retweet": true}, {"created_at": "Sat Mar 12 17:49:48 +0000 2016", "text": "We need to stand together against the forces of division and discrimination that are trying to divide America between \u201cus\u201d and \u201cthem.\u201d", "in_reply_to_screen_name": null, "retweet_count": 2000, "favorite_count": 4086, "source": "TweetDeck", "id_str": "708711606943928322", "is_retweet": false}, {"created_at": "Wed Jan 27 21:12:19 +0000 2016", "text": "Gun makers should be held accountable for endangering Americans. I voted against immunity\u2014it's time to repeal it. -H https://t.co/L0mTx5JBoF", "in_reply_to_screen_name": null, "retweet_count": 680, "favorite_count": 1357, "source": "TweetDeck", "id_str": "692455117216468993", "is_retweet": false}, {"created_at": "Sun Nov 06 15:03:56 +0000 2016", "text": "\"She is a fighter for what is right, what is fair, and what is just.\" \u2014@RepJohnLewis: https://t.co/jfd3CXu1CS https://t.co/MRqG1FtTIL", "in_reply_to_screen_name": null, "retweet_count": 5616, "favorite_count": 12433, "source": "Media Studio", "id_str": "795280563028361216", "is_retweet": false}, {"created_at": "Fri Oct 07 22:45:17 +0000 2016", "text": "The facts are clear: Trump refuses to admit he is wrong on the Central Park jogger case and continues to peddle yet\u2026 https://t.co/oIgCjntUmz", "in_reply_to_screen_name": null, "retweet_count": 6534, "favorite_count": 14570, "source": "TweetDeck", "id_str": "784525030227148800", "is_retweet": false}, {"created_at": "Sat Jul 09 20:59:03 +0000 2016", "text": "Community health centers provide care for 25 million Americans. Here's Hillary's plan to double their funding: https://t.co/4vbbTF4gXS", "in_reply_to_screen_name": null, "retweet_count": 1120, "favorite_count": 2833, "source": "TweetDeck", "id_str": "751883388513050624", "is_retweet": false}, {"created_at": "Thu Aug 11 18:05:19 +0000 2016", "text": "We\u2019re going to invest in union training programs and apprenticeship programs so you can earn while you learn: https://t.co/sbbiIqIz0c", "in_reply_to_screen_name": null, "retweet_count": 1005, "favorite_count": 2600, "source": "TweetDeck", "id_str": "763798465746968576", "is_retweet": false}, {"created_at": "Wed Sep 07 15:35:22 +0000 2016", "text": "When our SEALs took out bin Laden, they brought the terrorists' families to safety first. That's American honor. https://t.co/QV5zDf2iAg", "in_reply_to_screen_name": null, "retweet_count": 1652, "favorite_count": 4029, "source": "TweetDeck", "id_str": "773545200807534592", "is_retweet": false}, {"created_at": "Fri Feb 26 02:52:16 +0000 2016", "text": "What will strengthen our economy: raising middle-class incomes.\n\nWhat won't: more tax cuts for millionaires. \n\n#GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 717, "favorite_count": 1734, "source": "TweetDeck", "id_str": "703049914088071168", "is_retweet": false}, {"created_at": "Mon Jul 18 16:53:44 +0000 2016", "text": "We must fight for criminal justice reform. Everyone is safer when there is respect for the law and when everyone is respected by the law.", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 3683, "source": "TweetDeck", "id_str": "755083142655008768", "is_retweet": false}, {"created_at": "Wed Jun 08 02:41:38 +0000 2016", "text": "Wish Mom could have been here to see tonight. https://t.co/NalmZoKoV7", "in_reply_to_screen_name": null, "retweet_count": 4360, "favorite_count": 17457, "source": "TweetDeck", "id_str": "740373188220178433", "is_retweet": false}, {"created_at": "Fri Jul 29 02:59:55 +0000 2016", "text": "\"When any barrier falls in America, for anyone, it clears the way for everyone...when there are no ceilings, the sky\u2019s the limit.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 4927, "favorite_count": 9294, "source": "TweetDeck", "id_str": "758859571699912706", "is_retweet": false}, {"created_at": "Sun Aug 21 23:04:46 +0000 2016", "text": "\u201cHer mastery of issues and detail is unlike any politician I\u2019ve met.\" \u2014@WIRED's editor-in-chief on Hillary https://t.co/GcA4lJiLbb", "in_reply_to_screen_name": null, "retweet_count": 2696, "favorite_count": 6821, "source": "TweetDeck", "id_str": "767497704591257604", "is_retweet": false}, {"created_at": "Tue Jun 07 03:32:59 +0000 2016", "text": "Estamos al borde de un momento hist\u00f3rico, pero todav\u00eda tenemos trabajo que hacer. \n\nSigamos luchando por cada voto: https://t.co/Z9i6JSIBRV", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 887, "favorite_count": 1614, "source": "TweetDeck", "id_str": "740023725169496064", "is_retweet": false}, {"created_at": "Tue May 17 19:57:29 +0000 2016", "text": "Who benefits from Trump's tax plan?\n\nBillionaires\u2014and millionaires like him. https://t.co/COJ4TPXvm2 https://t.co/o0V6GAgBsM", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 1894, "source": "TweetDeck", "id_str": "732661335125852160", "is_retweet": false}, {"created_at": "Sat Oct 01 07:30:55 +0000 2016", "text": "For those few people knocking public service, hope you'll reconsider answering the call to help others. Because we're stronger together.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2215, "favorite_count": 7808, "source": "Twitter Web Client", "id_str": "782120595005800448", "is_retweet": false}, {"created_at": "Sun Mar 13 19:01:19 +0000 2016", "text": "The Castro Brothers: Whether you\u2019re born here or you immigrate, America should be a land of opportunity.\nhttps://t.co/AUS6eFhrBl", "in_reply_to_screen_name": null, "retweet_count": 1582, "favorite_count": 3204, "source": "Twitter Web Client", "id_str": "709091991036895232", "is_retweet": false}, {"created_at": "Sat Sep 17 23:53:31 +0000 2016", "text": "This year, Janelle beat breast cancer with the support of her family, friends, and a presidential candidate. https://t.co/vmavvobLcs", "in_reply_to_screen_name": null, "retweet_count": 2279, "favorite_count": 7049, "source": "Twitter Web Client", "id_str": "777294443724496896", "is_retweet": false}, {"created_at": "Wed Oct 12 17:53:37 +0000 2016", "text": "RT @nytimes: Donald Trump's tax plan would add to the federal debt and Hillary Clinton\u2019s wouldn\u2019t, study finds https://t.co/zdCGlX80Fu", "in_reply_to_screen_name": null, "retweet_count": 2051, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786263568450588672", "is_retweet": true}, {"created_at": "Fri Jan 15 02:59:22 +0000 2016", "text": "Nobody's attacking the Second Amendment. We can protect Americans' rights\u2014and also protect families from gun violence. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1386, "favorite_count": 3034, "source": "TweetDeck", "id_str": "687831412528025605", "is_retweet": false}, {"created_at": "Mon Oct 03 14:00:19 +0000 2016", "text": "RT @repjohnlewis: Happy Monday, my friends. Are you registered to vote? The right to vote is precious, almost sacred, and we must use it. #\u2026", "in_reply_to_screen_name": null, "retweet_count": 3859, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "782943364455002112", "is_retweet": true}, {"created_at": "Thu Feb 18 03:41:47 +0000 2016", "text": "Many of the major newspapers that backed @POTUS in 2008 are supporting Hillary now. Here's why: https://t.co/UJTVDo9tw6", "in_reply_to_screen_name": null, "retweet_count": 650, "favorite_count": 1372, "source": "TweetDeck", "id_str": "700163275418370049", "is_retweet": false}, {"created_at": "Sat Aug 20 18:44:05 +0000 2016", "text": "RT @Deadspin: \"We don't win anymore.\" https://t.co/opLEssKAxA", "in_reply_to_screen_name": null, "retweet_count": 4262, "favorite_count": 0, "source": "TweetDeck", "id_str": "767069710903115778", "is_retweet": true}, {"created_at": "Sat Mar 05 19:30:28 +0000 2016", "text": "We should be supporting LGBT kids\u2014not trying to change them. It\u2019s time to end conversion therapy for minors. https://t.co/oIqeT9MJjs", "in_reply_to_screen_name": null, "retweet_count": 1746, "favorite_count": 4200, "source": "TweetDeck", "id_str": "706200222586826752", "is_retweet": false}, {"created_at": "Mon Jan 25 14:14:22 +0000 2016", "text": "No Wall Street hedge fund manager should pay a lower tax rate than a teacher or a nurse.", "in_reply_to_screen_name": null, "retweet_count": 787, "favorite_count": 2006, "source": "Twitter for iPhone", "id_str": "691625158541471744", "is_retweet": false}, {"created_at": "Tue Jun 14 16:45:38 +0000 2016", "text": "We need to work together to keep our country and our citizens safe.\n\nNone of this will be helped by anything Trump has to offer.", "in_reply_to_screen_name": null, "retweet_count": 1470, "favorite_count": 4964, "source": "TweetDeck", "id_str": "742759915576561664", "is_retweet": false}, {"created_at": "Mon Oct 10 00:05:28 +0000 2016", "text": "RT @creynoldsnc: Statement from @jmpalmieri on Trump's latest act of desperation https://t.co/DWsARCJQzq", "in_reply_to_screen_name": null, "retweet_count": 1617, "favorite_count": 0, "source": "TweetDeck", "id_str": "785269982687002624", "is_retweet": true}, {"created_at": "Thu Jul 14 15:48:40 +0000 2016", "text": "\u201cFor families making less than $125,000 a year, we\u2019ll eliminate tuition at public colleges and universities.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2311, "favorite_count": 5328, "source": "TweetDeck", "id_str": "753617215568613377", "is_retweet": false}, {"created_at": "Sun Jun 19 16:11:53 +0000 2016", "text": "They may be too young to vote, but these supporters are making their voices heard. https://t.co/LHYz7Jknhg", "in_reply_to_screen_name": null, "retweet_count": 1075, "favorite_count": 4003, "source": "Twitter Web Client", "id_str": "744563361350844416", "is_retweet": false}, {"created_at": "Thu May 05 22:34:04 +0000 2016", "text": "FACT: Donald Trump would end birthright citizenship. https://t.co/RJfgxTC2Ou", "in_reply_to_screen_name": null, "retweet_count": 957, "favorite_count": 1335, "source": "TweetDeck", "id_str": "728352087495585792", "is_retweet": false}, {"created_at": "Wed Jan 13 21:46:00 +0000 2016", "text": "We\u2019re better than this. https://t.co/8B9lhwJVyr", "in_reply_to_screen_name": null, "retweet_count": 1380, "favorite_count": 3270, "source": "TweetDeck", "id_str": "687390161806749696", "is_retweet": false}, {"created_at": "Sat Jul 09 01:00:59 +0000 2016", "text": "White Americans need to do a better job of listening when African Americans talk about the barriers they face.\nhttps://t.co/rmzeEG5HoC", "in_reply_to_screen_name": null, "retweet_count": 5097, "favorite_count": 11377, "source": "Twitter Web Client", "id_str": "751581882404384768", "is_retweet": false}, {"created_at": "Sat May 07 23:13:09 +0000 2016", "text": ".@realDonaldTrump would force all schools to allow guns in classrooms\u2014on his first day in office.\n\nSeriously. https://t.co/snpugpBMoW", "in_reply_to_screen_name": null, "retweet_count": 2072, "favorite_count": 2529, "source": "TweetDeck", "id_str": "729086699666587648", "is_retweet": false}, {"created_at": "Mon Aug 01 16:49:58 +0000 2016", "text": "RT @kylegriffin1: 17 Gold Star families write to Trump: \u201cOurs is a sacrifice you will never know.\u201d (via @votevets) https://t.co/rfpcUFLbdn", "in_reply_to_screen_name": null, "retweet_count": 3801, "favorite_count": 0, "source": "TweetDeck", "id_str": "760155626257387521", "is_retweet": true}, {"created_at": "Sat Sep 03 21:19:33 +0000 2016", "text": "A reminder as America officially joins the Paris climate agreement.\n\nWe can\u2019t stop there: https://t.co/RRy44trUGH https://t.co/mrL3oo1Fg6", "in_reply_to_screen_name": null, "retweet_count": 2332, "favorite_count": 4855, "source": "Twitter Web Client", "id_str": "772182265375952897", "is_retweet": false}, {"created_at": "Wed Apr 20 02:47:30 +0000 2016", "text": "Text CONGRATS to 47246 to tell Hillary you're with her tonight. https://t.co/ZBQ6wKlCPr", "in_reply_to_screen_name": null, "retweet_count": 899, "favorite_count": 2948, "source": "TweetDeck", "id_str": "722617660241022976", "is_retweet": false}, {"created_at": "Wed Jan 06 17:26:15 +0000 2016", "text": "If you can refinance a car payment, you should be able to refinance your student debt.", "in_reply_to_screen_name": null, "retweet_count": 1284, "favorite_count": 3153, "source": "TweetDeck", "id_str": "684788077735374848", "is_retweet": false}, {"created_at": "Wed Oct 05 05:14:47 +0000 2016", "text": "RT @nytopinion: During the debate, Mike Pence simply ignored the Donald Trump we have seen on the trail for more than a year. https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 2086, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "783535886214496256", "is_retweet": true}, {"created_at": "Fri Jul 22 22:10:20 +0000 2016", "text": "\"The last thing we need is somebody running for president who talks trash about America.\" \u2014Hillary in Tampa", "in_reply_to_screen_name": null, "retweet_count": 2506, "favorite_count": 7013, "source": "TweetDeck", "id_str": "756612369070055425", "is_retweet": false}, {"created_at": "Thu May 19 21:04:27 +0000 2016", "text": "The safety of our kids is more important than the interests of the NRA. Our leaders should act like it. https://t.co/Rg3OcMf1Mc", "in_reply_to_screen_name": null, "retweet_count": 2733, "favorite_count": 6371, "source": "TweetDeck", "id_str": "733402964375699457", "is_retweet": false}, {"created_at": "Mon Nov 07 17:45:12 +0000 2016", "text": "If you believe all our kids should have good schools and good teachers, no matter what ZIP code they live in, then\u2026 https://t.co/LGrRPcQFzT", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1141, "favorite_count": 2807, "source": "TweetDeck", "id_str": "795683535176814593", "is_retweet": false}, {"created_at": "Tue Jul 26 21:19:28 +0000 2016", "text": "\u201cTonight, we will shatter that glass ceiling again.\u201d \u2014@RepJohnLewis on nominating Hillary for president #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1423, "favorite_count": 4713, "source": "TweetDeck", "id_str": "758049119462096896", "is_retweet": false}, {"created_at": "Tue Jul 12 15:59:53 +0000 2016", "text": "Thank you, @BernieSanders, not just for your endorsement, but for a lifetime of fighting injustice.", "in_reply_to_screen_name": null, "retweet_count": 3188, "favorite_count": 8969, "source": "TweetDeck", "id_str": "752895261807116288", "is_retweet": false}, {"created_at": "Wed Oct 05 03:04:05 +0000 2016", "text": "RT @AJentleson: The disloyalty Pence demonstrated was astounding. \n\nHe defended Trump on nothing. \n\nHe created his own platform and defende\u2026", "in_reply_to_screen_name": null, "retweet_count": 3480, "favorite_count": 0, "source": "TweetDeck", "id_str": "783502993278763008", "is_retweet": true}, {"created_at": "Fri Apr 29 18:47:20 +0000 2016", "text": "What can we do to fight the Zika threat? Hillary answers on @Quora: https://t.co/VrPhfFKxRI", "in_reply_to_screen_name": null, "retweet_count": 485, "favorite_count": 920, "source": "TweetDeck", "id_str": "726120700461875200", "is_retweet": false}, {"created_at": "Wed Jun 15 21:27:14 +0000 2016", "text": "An \"assault on our values\"\nA \"new low\"\n\"Plays into ISIS's hands\"\n\nNewspapers react to Trump's Orlando speech: https://t.co/EiUCbx9z3r", "in_reply_to_screen_name": null, "retweet_count": 1520, "favorite_count": 3428, "source": "TweetDeck", "id_str": "743193171530813440", "is_retweet": false}, {"created_at": "Fri Feb 19 03:26:38 +0000 2016", "text": "We will call on Congress to repeal the 3/10 year bars on immigrants reentering the US. These provisions tear families apart and should end.", "in_reply_to_screen_name": null, "retweet_count": 610, "favorite_count": 1682, "source": "TweetDeck", "id_str": "700521848300302336", "is_retweet": false}, {"created_at": "Tue Feb 23 23:24:09 +0000 2016", "text": "\u201cIf there\u2019s another child out there that can be saved, I will do this for the rest of my life.\u201d -Gwen Carr https://t.co/Ex3PbltSYF", "in_reply_to_screen_name": null, "retweet_count": 544, "favorite_count": 1237, "source": "TweetDeck", "id_str": "702272764871368704", "is_retweet": false}, {"created_at": "Tue Mar 29 13:02:38 +0000 2016", "text": "We can\u2019t let Donald Trump anywhere near the Supreme Court. https://t.co/dhzw2nzmcX", "in_reply_to_screen_name": null, "retweet_count": 1107, "favorite_count": 2703, "source": "TweetDeck", "id_str": "714799928875294721", "is_retweet": false}, {"created_at": "Thu Jan 21 17:15:35 +0000 2016", "text": "Mayor of Flint: \u201cThis isn't something that's going to go away.\u201d https://t.co/Wba7SQRDZI", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 733, "source": "TweetDeck", "id_str": "690221212480491520", "is_retweet": false}, {"created_at": "Thu Oct 13 01:14:08 +0000 2016", "text": "https://t.co/4RVbA6X0BJ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1532, "favorite_count": 5827, "source": "TweetDeck", "id_str": "786374429039353857", "is_retweet": false}, {"created_at": "Fri Feb 05 03:52:45 +0000 2016", "text": "There are more Flints out there\u2014overwhelmingly low-income communities of color. This is unconscionable. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 849, "favorite_count": 1717, "source": "TweetDeck", "id_str": "695454990069035008", "is_retweet": false}, {"created_at": "Sun May 15 14:25:57 +0000 2016", "text": "8 ways we can give middle-class families a raise, not one of which is cutting taxes for billionaires. https://t.co/CUwoepzAVH", "in_reply_to_screen_name": null, "retweet_count": 1643, "favorite_count": 3333, "source": "Twitter Web Client", "id_str": "731853128283357188", "is_retweet": false}, {"created_at": "Fri Jan 08 14:03:32 +0000 2016", "text": "An expectant mother in Iowa asked: What are your plans for parental and maternity leave?\nhttps://t.co/dw0HcbNKg8", "in_reply_to_screen_name": null, "retweet_count": 626, "favorite_count": 1357, "source": "Twitter Web Client", "id_str": "685461837937160192", "is_retweet": false}, {"created_at": "Thu Feb 11 19:40:41 +0000 2016", "text": "\"The most qualified candidate, and someone who is, by all reality-based measures, progressive.\u201d https://t.co/7CoqHdz5zh", "in_reply_to_screen_name": null, "retweet_count": 812, "favorite_count": 1820, "source": "TweetDeck", "id_str": "697867874933874689", "is_retweet": false}, {"created_at": "Fri Jul 29 02:39:51 +0000 2016", "text": "\"We heard Donald Trump\u2019s answer last week at his convention. He wants to divide us...He wants us to fear the future and fear each other.\"", "in_reply_to_screen_name": null, "retweet_count": 1294, "favorite_count": 3887, "source": "TweetDeck", "id_str": "758854519862157314", "is_retweet": false}, {"created_at": "Fri Oct 21 22:03:57 +0000 2016", "text": "RT @Hillary_esp: Juntos se puede. https://t.co/0hXs2cISNH https://t.co/yuOWQG6y12 https://t.co/7bzlf7FozX", "in_reply_to_screen_name": null, "retweet_count": 1004, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789588056517074944", "is_retweet": true}, {"created_at": "Sun Sep 18 13:06:27 +0000 2016", "text": "If you want to go to college or are saddled with student debt, you'll want to read what @TimKaine has to say: https://t.co/qa9qO4AFxW", "in_reply_to_screen_name": null, "retweet_count": 1920, "favorite_count": 4586, "source": "TweetDeck", "id_str": "777493990434336768", "is_retweet": false}, {"created_at": "Sun Feb 14 02:53:43 +0000 2016", "text": "\"Elections have consequences. The president has a responsibility to nominate a new justice and the Senate has a responsibility to vote.\"", "in_reply_to_screen_name": null, "retweet_count": 1526, "favorite_count": 3220, "source": "TweetDeck", "id_str": "698701627373547520", "is_retweet": false}, {"created_at": "Thu Sep 08 23:18:59 +0000 2016", "text": "Do all the good you can,\nfor all the people you can,\nin all the ways you can,\nfor as long as you can. https://t.co/d0KRFBYW98", "in_reply_to_screen_name": null, "retweet_count": 4257, "favorite_count": 11864, "source": "TweetDeck", "id_str": "774024262352941057", "is_retweet": false}, {"created_at": "Thu Feb 11 21:26:13 +0000 2016", "text": "From fixing the criminal justice system to creating jobs, \"Clinton's ambitions match our own.\" -@GKButterfield https://t.co/Q5K6R0EZl8", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 914, "source": "TweetDeck", "id_str": "697894433380044801", "is_retweet": false}, {"created_at": "Fri Oct 07 20:02:00 +0000 2016", "text": "\"A woman who expresses her emotions oftentimes is questioned...it's part of the subtle\u2014and not so subtle\u2014biases tha\u2026 https://t.co/TKqTxgGX9g", "in_reply_to_screen_name": null, "retweet_count": 6636, "favorite_count": 17396, "source": "Media Studio", "id_str": "784483939977158656", "is_retweet": false}, {"created_at": "Wed Oct 05 00:44:28 +0000 2016", "text": "RT @JoeBiden: One thing's clear: @TimKaine and Hillary have hardworking Americans' backs. The VP's office is in good hands. \u2013Joe #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 3589, "favorite_count": 0, "source": "TweetDeck", "id_str": "783467857745149952", "is_retweet": true}, {"created_at": "Wed Sep 14 16:49:37 +0000 2016", "text": "14. We know you engaged extensively in pay-to-play here at home. Have you bribed foreign officials or other parties abroad?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2690, "favorite_count": 4483, "source": "TweetDeck", "id_str": "776100601092595717", "is_retweet": false}, {"created_at": "Tue Sep 27 02:05:18 +0000 2016", "text": "RT @TheBriefing2016: This is just one of the business practices that led to Donald Trump being sued for discrimination. #Debate https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 0, "source": "TweetDeck", "id_str": "780589100483145728", "is_retweet": true}, {"created_at": "Thu Jul 28 00:16:30 +0000 2016", "text": "\u201cWe say their names, but that is not enough\u201d \u2014@ImAngelaBassett on the victims of gun violence https://t.co/5baWnDLqbj", "in_reply_to_screen_name": null, "retweet_count": 1085, "favorite_count": 2865, "source": "TweetDeck", "id_str": "758456057274347520", "is_retweet": false}, {"created_at": "Tue Aug 02 21:17:40 +0000 2016", "text": "An important step forward on pay equity in Massachusetts. Women deserve equal pay across our nation. https://t.co/s560mVbiGQ", "in_reply_to_screen_name": null, "retweet_count": 2119, "favorite_count": 7171, "source": "TweetDeck", "id_str": "760585382480273409", "is_retweet": false}, {"created_at": "Thu Oct 20 01:43:35 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump's tax plan would be a yuuuuuuge give away to billionaires--and millionaires like him. #debatenight https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 953, "favorite_count": 0, "source": "TweetDeck", "id_str": "788918552979972098", "is_retweet": true}, {"created_at": "Sat Sep 24 17:28:37 +0000 2016", "text": "RT if you believe that #LoveTrumpsHate\n\nThen make sure you're registered to vote: https://t.co/tTgeqxNqYm https://t.co/TlXODnaV53", "in_reply_to_screen_name": null, "retweet_count": 5117, "favorite_count": 7155, "source": "TweetDeck", "id_str": "779734296160530432", "is_retweet": false}, {"created_at": "Wed Aug 17 01:48:07 +0000 2016", "text": "If you were born between 1980 and 2002, Hillary has big plans to help you. https://t.co/4XCf0d3j7R", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 3461, "source": "TweetDeck", "id_str": "765726870080020481", "is_retweet": false}, {"created_at": "Wed Sep 21 02:38:34 +0000 2016", "text": "FACT: Donald Trump used his charitable foundation to purchase *multiple* six-foot-tall paintings of himself. https://t.co/tDeBH37w7h", "in_reply_to_screen_name": null, "retweet_count": 3708, "favorite_count": 6216, "source": "TweetDeck", "id_str": "778423145648754688", "is_retweet": false}, {"created_at": "Wed Aug 31 16:51:20 +0000 2016", "text": "\u201cNo matter how great the challenge, America must lead.\u201d \u2014Hillary to the @AmericanLegion https://t.co/byKmrx9XZy", "in_reply_to_screen_name": null, "retweet_count": 788, "favorite_count": 2415, "source": "TweetDeck", "id_str": "771027603885060097", "is_retweet": false}, {"created_at": "Fri Sep 30 16:17:03 +0000 2016", "text": "This race comes down to two things: what kind of future we want for our kids and how we achieve it. https://t.co/nkwAOnFbJl", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 946, "favorite_count": 2185, "source": "TweetDeck", "id_str": "781890612069036032", "is_retweet": false}, {"created_at": "Fri Jul 22 03:05:25 +0000 2016", "text": "RT @BernieSanders: Will there be one word about student debt or making college affordable? Or just concerned about more tax breaks for the\u2026", "in_reply_to_screen_name": null, "retweet_count": 6849, "favorite_count": 0, "source": "TweetDeck", "id_str": "756324241927208962", "is_retweet": true}, {"created_at": "Sun Oct 02 20:45:33 +0000 2016", "text": "\u201cIt would be reckless not to consider the damage Mr. Trump might wreak.\u201d\u2014@WashingtonPost: https://t.co/drPNG1ucBX", "in_reply_to_screen_name": null, "retweet_count": 2894, "favorite_count": 6089, "source": "TweetDeck", "id_str": "782682960269115394", "is_retweet": false}, {"created_at": "Wed Jul 27 02:12:13 +0000 2016", "text": "\u201cIn the spring of 1971 I met a girl. The first time I saw her we were...in a class on Political and Civil Rights.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1339, "favorite_count": 5005, "source": "TweetDeck", "id_str": "758122792239988741", "is_retweet": false}, {"created_at": "Tue Oct 11 15:45:16 +0000 2016", "text": "RT @mpshapiro: NEW: @HillaryClinton will double the Child Tax Credit to $2,000 for young kids, rewarding work &amp; reducing poverty: https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 1633, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785868880321384448", "is_retweet": true}, {"created_at": "Sat Jan 16 20:25:25 +0000 2016", "text": "Hillary made clear this week: What\u2019s happening with the water in Flint, Michigan is an outrage. https://t.co/iXNmuhuYQQ", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 1128, "source": "TweetDeck", "id_str": "688457048317673472", "is_retweet": false}, {"created_at": "Fri Feb 05 03:19:59 +0000 2016", "text": "Hillary ha luchado para que nuestro pa\u00eds progrese y eso es lo que continuar\u00eda haciendo como presidenta. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 245, "favorite_count": 510, "source": "TweetDeck", "id_str": "695446743677345792", "is_retweet": false}, {"created_at": "Sun May 22 22:18:01 +0000 2016", "text": "There are too many parents across the country with stories like this one.\nhttps://t.co/DACIoi6xSi", "in_reply_to_screen_name": null, "retweet_count": 1484, "favorite_count": 3537, "source": "Twitter Web Client", "id_str": "734508643886850053", "is_retweet": false}, {"created_at": "Mon Nov 07 22:24:52 +0000 2016", "text": "Women can stop Trump.\n\nHere's how: https://t.co/jfd3CXu1CS https://t.co/f28w22yOXq", "in_reply_to_screen_name": null, "retweet_count": 4825, "favorite_count": 9522, "source": "Media Studio", "id_str": "795753915941695488", "is_retweet": false}, {"created_at": "Thu Jul 21 13:04:01 +0000 2016", "text": "\"You do not represent us.\nYour ideas don\u2019t represent us.\nYour values don\u2019t represent us.\"\n\nAdd your name: https://t.co/FBJQBhjvNa", "in_reply_to_screen_name": null, "retweet_count": 1363, "favorite_count": 3445, "source": "TweetDeck", "id_str": "756112495442558976", "is_retweet": false}, {"created_at": "Fri Oct 21 21:24:58 +0000 2016", "text": "\u201cThe only way we can have that positive, optimistic, unifying future is if all of you help us get there.\u201d \u2014Hillary https://t.co/iWKBOE1i18", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 749, "favorite_count": 2382, "source": "TweetDeck", "id_str": "789578245838700544", "is_retweet": false}, {"created_at": "Fri Aug 05 19:22:17 +0000 2016", "text": "This week, Trump attacked a fallen soldier's family, called Hillary \"the devil,\" and criticized a crying baby.\nhttps://t.co/UsexFf0UkT", "in_reply_to_screen_name": null, "retweet_count": 5717, "favorite_count": 9998, "source": "Twitter Web Client", "id_str": "761643508054712320", "is_retweet": false}, {"created_at": "Tue Feb 09 22:37:36 +0000 2016", "text": "Not much time left to vote in the NH primary! Hillary needs you: Confirm your polling place here, then head over. https://t.co/eKYImtmMpk", "in_reply_to_screen_name": null, "retweet_count": 379, "favorite_count": 775, "source": "TweetDeck", "id_str": "697187619017510912", "is_retweet": false}, {"created_at": "Tue Sep 27 17:44:07 +0000 2016", "text": "\"We may have a record-setting turnout in this election.\n\nWe could have the biggest turnout we've ever had.\" https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 680, "favorite_count": 1808, "source": "TweetDeck", "id_str": "780825360611086336", "is_retweet": false}, {"created_at": "Sun Oct 23 02:46:14 +0000 2016", "text": "Don\u2019t let anybody tell you America\u2019s best days are behind us. https://t.co/N6iFu8ZSHl", "in_reply_to_screen_name": null, "retweet_count": 3992, "favorite_count": 14179, "source": "TweetDeck", "id_str": "790021483510857728", "is_retweet": false}, {"created_at": "Mon Jul 25 20:03:12 +0000 2016", "text": "RT @HFA: \"Tim has always had a good heart.\" \u2014@SenWarren\n\nRead what they're saying about Hillary's running mate @TimKaine: https://t.co/ZBv0\u2026", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 0, "source": "TweetDeck", "id_str": "757667537022779392", "is_retweet": true}, {"created_at": "Thu Jul 21 20:21:09 +0000 2016", "text": "Mike Pence introduced himself to America last night. Here's what we learned\u2014and what he forgot to mention: https://t.co/vPZq24FSJh", "in_reply_to_screen_name": null, "retweet_count": 1149, "favorite_count": 2027, "source": "TweetDeck", "id_str": "756222502364442624", "is_retweet": false}, {"created_at": "Fri Jan 29 15:03:01 +0000 2016", "text": "\"Women across this country need more than rhetoric; they need action.\" \u2014@Lilly_Ledbetter https://t.co/JYRqdKqMXr", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 921, "source": "TweetDeck", "id_str": "693086953030488064", "is_retweet": false}, {"created_at": "Thu May 05 14:29:00 +0000 2016", "text": "\"Do you still believe that Muslims should be banned from entering the country?\"\n\n@realDonaldTrump: \"Yes.\"\nhttps://t.co/rm4Bjm6SbS", "in_reply_to_screen_name": null, "retweet_count": 2519, "favorite_count": 2825, "source": "Twitter Web Client", "id_str": "728230016656363520", "is_retweet": false}, {"created_at": "Wed Oct 05 18:16:32 +0000 2016", "text": "It's unclear exactly whom Mike Pence was defending last night, but it sure wasn't Donald Trump. The @NYTimes: https://t.co/zjIh98ur04", "in_reply_to_screen_name": null, "retweet_count": 1589, "favorite_count": 4023, "source": "TweetDeck", "id_str": "783732620362387464", "is_retweet": false}, {"created_at": "Mon Oct 31 20:02:18 +0000 2016", "text": "Incredible. https://t.co/zBqO2HTiP4 https://t.co/w7pkIVqd1p", "in_reply_to_screen_name": null, "retweet_count": 6340, "favorite_count": 9281, "source": "TweetDeck", "id_str": "793181320507777025", "is_retweet": false}, {"created_at": "Tue Jan 26 03:30:27 +0000 2016", "text": "\"The other side is not talking issues\u2014they're talking insults.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1258, "source": "TweetDeck", "id_str": "691825501892165632", "is_retweet": false}, {"created_at": "Fri Oct 21 21:18:29 +0000 2016", "text": "\"Education should lift you up, not hold you back. We\u2019re going to help you pay back and pay down your loans.\" https://t.co/VkVm51nWIY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 707, "favorite_count": 1665, "source": "TweetDeck", "id_str": "789576615441342464", "is_retweet": false}, {"created_at": "Sat Oct 01 23:19:14 +0000 2016", "text": "We're going to make college debt-free for everyone in America. See how much you could save with Hillary's plan at\u2026 https://t.co/Fhzkubhpj7", "in_reply_to_screen_name": null, "retweet_count": 2228, "favorite_count": 6205, "source": "TweetDeck", "id_str": "782359247984222209", "is_retweet": false}, {"created_at": "Sat Jul 23 01:46:08 +0000 2016", "text": "RT @NARAL: NARAL president @ilyseh on Hillary Clinton's VP pick @timkaine: https://t.co/q4w60GBUMg #ClintonKaine #ImWithHer https://t.co/65\u2026", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 0, "source": "TweetDeck", "id_str": "756666675462860800", "is_retweet": true}, {"created_at": "Fri Apr 08 19:07:47 +0000 2016", "text": "\u201cI\u2019ve been called a lot of things over the years, but \u2018unqualified\u2019 has not been one of them.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2904, "favorite_count": 7295, "source": "TweetDeck", "id_str": "718515702915796992", "is_retweet": false}, {"created_at": "Sun Oct 02 01:41:52 +0000 2016", "text": "RT @nytimes: Exclusive: NYT has obtained parts of Trump's 1995 tax records. He could have paid no federal income tax for 18 years https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 16029, "favorite_count": 0, "source": "TweetDeck", "id_str": "782395140782624773", "is_retweet": true}, {"created_at": "Thu Jul 28 00:44:41 +0000 2016", "text": "What the world needs now is love. https://t.co/UyDO7J60iy", "in_reply_to_screen_name": null, "retweet_count": 3900, "favorite_count": 9166, "source": "TweetDeck", "id_str": "758463152698851328", "is_retweet": false}, {"created_at": "Mon Sep 05 19:07:48 +0000 2016", "text": "Unions gave us higher wages, weekends, and the largest middle class in the world. That's worth celebrating &amp; protecting. Happy #LaborDay! -H", "in_reply_to_screen_name": null, "retweet_count": 4092, "favorite_count": 10784, "source": "TweetDeck", "id_str": "772873887214407680", "is_retweet": false}, {"created_at": "Wed May 25 19:27:36 +0000 2016", "text": "Excited to be back with a good friend. Watch @TheEllenShow today at 4 pm ET. https://t.co/zfdh2SVaWb", "in_reply_to_screen_name": null, "retweet_count": 1088, "favorite_count": 3369, "source": "TweetDeck", "id_str": "735552919953637380", "is_retweet": false}, {"created_at": "Thu Oct 20 21:41:02 +0000 2016", "text": "\"We cannot let anyone take away our hope.\nWe cannot let anyone silence our voices.\nBecause we know that every vote matters.\"\n\u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1131, "favorite_count": 3626, "source": "TweetDeck", "id_str": "789219904104923137", "is_retweet": false}, {"created_at": "Wed Oct 05 03:38:23 +0000 2016", "text": "RT @jmpalmieri: @realDonaldTrump lost his second debate tonight.  Both @mike_pence and @timkaine were running against Trump.", "in_reply_to_screen_name": null, "retweet_count": 2570, "favorite_count": 0, "source": "TweetDeck", "id_str": "783511627954065408", "is_retweet": true}, {"created_at": "Fri Jul 29 02:40:13 +0000 2016", "text": "\"He's taken the Republican Party a long way, from 'Morning in America\u2019 to 'Midnight in America.\u2019\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1064, "favorite_count": 3433, "source": "TweetDeck", "id_str": "758854614984761345", "is_retweet": false}, {"created_at": "Tue Aug 02 15:07:16 +0000 2016", "text": "RT @ChelseaClinton: Wonderful: Men at #DemConvention describe what electing a woman president means to them https://t.co/zrGQJ3bgGw #ImWith\u2026", "in_reply_to_screen_name": null, "retweet_count": 1074, "favorite_count": 0, "source": "TweetDeck", "id_str": "760492165957095424", "is_retweet": true}, {"created_at": "Fri Sep 16 00:55:03 +0000 2016", "text": "\"You\u2019re not intruders. You\u2019re our neighbors, our colleagues, our friends, our families...I see you, and I am with you.\" \u2014Hillary to @CHCI", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 4110, "source": "TweetDeck", "id_str": "776585154383020033", "is_retweet": false}, {"created_at": "Sun Aug 21 02:17:56 +0000 2016", "text": "It's too late now to say sorry, Donald. https://t.co/TWj7QwEfVh", "in_reply_to_screen_name": null, "retweet_count": 6144, "favorite_count": 11439, "source": "TweetDeck", "id_str": "767183928344059904", "is_retweet": false}, {"created_at": "Tue Jan 12 15:30:14 +0000 2016", "text": "Thank you, @TheEllenShow. https://t.co/OzMXzrKq7B", "in_reply_to_screen_name": null, "retweet_count": 748, "favorite_count": 2117, "source": "TweetDeck", "id_str": "686933207904841728", "is_retweet": false}, {"created_at": "Wed Nov 09 16:53:19 +0000 2016", "text": "\u201cLet us have faith in each other. Let us not grow weary. Let us not lose heart. For there are more seasons to come and...more work to do.\u201d", "in_reply_to_screen_name": null, "retweet_count": 79309, "favorite_count": 209929, "source": "TweetDeck", "id_str": "796395255432146948", "is_retweet": false}, {"created_at": "Sat Jul 30 20:17:00 +0000 2016", "text": "\u201cI don\u2019t think President Obama &amp; Vice President Biden get the credit they deserve for saving the American economy.\u201d https://t.co/O4WVMHNmOd", "in_reply_to_screen_name": null, "retweet_count": 2632, "favorite_count": 8692, "source": "TweetDeck", "id_str": "759482950794809344", "is_retweet": false}, {"created_at": "Thu Jul 28 01:43:59 +0000 2016", "text": "\"The bottom line is Trump is a risky, reckless, and radical choice, and we can't afford to make that choice.\" \u2014@MikeBloomberg", "in_reply_to_screen_name": null, "retweet_count": 2211, "favorite_count": 5733, "source": "TweetDeck", "id_str": "758478073587085312", "is_retweet": false}, {"created_at": "Fri Jan 08 04:13:34 +0000 2016", "text": "2016 should be remembered as the year America decided to take on gun violence. https://t.co/AVdzxUh9vv #GunsInAmerica", "in_reply_to_screen_name": null, "retweet_count": 1001, "favorite_count": 2330, "source": "Twitter for iPhone", "id_str": "685313369251950592", "is_retweet": false}, {"created_at": "Sat Jul 23 17:48:41 +0000 2016", "text": "\"If I\u2019m good at anything in public life, it\u2019s because I started at the local level\u2014listening to people...&amp; trying to find consensus.\" \u2014Kaine", "in_reply_to_screen_name": null, "retweet_count": 1192, "favorite_count": 3869, "source": "TweetDeck", "id_str": "756908908682342401", "is_retweet": false}, {"created_at": "Fri Sep 16 14:52:56 +0000 2016", "text": "RT @SenSanders: My dad was born in Poland. Do you know how many people ever asked me whether or not I was born in America? Nobody ever aske\u2026", "in_reply_to_screen_name": null, "retweet_count": 47616, "favorite_count": 0, "source": "TweetDeck", "id_str": "776796015466807296", "is_retweet": true}, {"created_at": "Tue Oct 11 23:32:29 +0000 2016", "text": "LGBT kids are perfect exactly the way they are. #BornPerfect https://t.co/FFylqTxG5b", "in_reply_to_screen_name": null, "retweet_count": 13503, "favorite_count": 33165, "source": "TweetDeck", "id_str": "785986459522232320", "is_retweet": false}, {"created_at": "Wed Aug 10 00:18:12 +0000 2016", "text": "Our kids are watching, Donald.\nhttps://t.co/yRnhmfHIWh", "in_reply_to_screen_name": null, "retweet_count": 11401, "favorite_count": 23044, "source": "Twitter Web Client", "id_str": "763167527933386752", "is_retweet": false}, {"created_at": "Wed Jan 13 03:09:28 +0000 2016", "text": "Seven years of progress. We need to build on it\u2014not go backwards. #SOTU https://t.co/LlLjQi2AS4", "in_reply_to_screen_name": null, "retweet_count": 7245, "favorite_count": 15250, "source": "Twitter Web Client", "id_str": "687109175973908481", "is_retweet": false}, {"created_at": "Mon Aug 15 21:08:30 +0000 2016", "text": "RT @HillaryforCO: On the fourth anniversary of #DACA, Juan remembers that \"glass ceiling-shattering moment\"\u2192 https://t.co/kt4nl4RQj0", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 0, "source": "TweetDeck", "id_str": "765294117647777792", "is_retweet": true}, {"created_at": "Tue Jul 26 01:52:46 +0000 2016", "text": "\"Hillary Clinton knows what Donald Trump betrays time and time again in this campaign: that we are not a zero sum nation.\" \u2014@CoryBooker", "in_reply_to_screen_name": null, "retweet_count": 915, "favorite_count": 3581, "source": "TweetDeck", "id_str": "757755510699466752", "is_retweet": false}, {"created_at": "Sat Oct 01 03:08:03 +0000 2016", "text": "Trump stood on a debate stage and lied to millions of Americans.\n\nChip in to make sure he never becomes president:\u2026 https://t.co/UVma8uxsIY", "in_reply_to_screen_name": null, "retweet_count": 7869, "favorite_count": 13949, "source": "Media Studio", "id_str": "782054442845679616", "is_retweet": false}, {"created_at": "Tue Jul 05 20:01:29 +0000 2016", "text": "\"I saw how you can count on her. How she won't back down. How she won't quit.\" \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 2591, "source": "TweetDeck", "id_str": "750419347705913344", "is_retweet": false}, {"created_at": "Thu Nov 03 20:14:53 +0000 2016", "text": "We are all safer when everyone has respect for the law, and everyone is respected by the law.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1409, "favorite_count": 3630, "source": "TweetDeck", "id_str": "794271653635227653", "is_retweet": false}, {"created_at": "Fri Sep 30 17:53:43 +0000 2016", "text": "RT @sdutIdeas: This paper has not endorsed a Democrat for president in its 148-year history. Until now. Here's why: https://t.co/jkBTMIH3eQ\u2026", "in_reply_to_screen_name": null, "retweet_count": 2666, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781914938394771456", "is_retweet": true}, {"created_at": "Mon Jul 18 17:15:37 +0000 2016", "text": "\"I\u2019m pleased to announce a nationwide drive to get 3 million people to register to vote and commit to vote in this election.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1731, "favorite_count": 5288, "source": "TweetDeck", "id_str": "755088649759428608", "is_retweet": false}, {"created_at": "Sun Apr 24 14:05:36 +0000 2016", "text": "Women gathered in Seneca Falls 170 years ago to demand suffrage. @ChelseaClinton visited before voting for her mom. https://t.co/0ZA2mYy6ff", "in_reply_to_screen_name": null, "retweet_count": 894, "favorite_count": 2251, "source": "TweetDeck", "id_str": "724237862770728961", "is_retweet": false}, {"created_at": "Wed Jul 27 00:32:43 +0000 2016", "text": "RT @WesleyLowery: \"Hillary Clinton isn't afraid to say black lives matter...\" - Lucy McBath, mother of Jordan Davis https://t.co/kXXjsuCdgn", "in_reply_to_screen_name": null, "retweet_count": 1206, "favorite_count": 0, "source": "TweetDeck", "id_str": "758097752362455040", "is_retweet": true}, {"created_at": "Fri Jul 22 02:18:18 +0000 2016", "text": "\ud83d\udc40  #RNCinCLE https://t.co/EIZ0bU9lcu", "in_reply_to_screen_name": null, "retweet_count": 5867, "favorite_count": 9633, "source": "TweetDeck", "id_str": "756312382096408576", "is_retweet": false}, {"created_at": "Fri Oct 21 21:13:05 +0000 2016", "text": "\u201cWhen the middle class thrives, America thrives.\u201d \u2014Hillary in Cleveland https://t.co/ZiHj4nQanC", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 912, "favorite_count": 1827, "source": "TweetDeck", "id_str": "789575256788926465", "is_retweet": false}, {"created_at": "Thu Nov 03 20:24:56 +0000 2016", "text": "\"I don\u2019t believe we\u2019re at our best when we stoke fear about each other.\u201d \u2014Hillary\n\nMake a plan to vote if you agree: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 747, "favorite_count": 2195, "source": "TweetDeck", "id_str": "794274180673978368", "is_retweet": false}, {"created_at": "Wed Jun 15 20:04:18 +0000 2016", "text": "Thousands of families are together thanks to @POTUS's action on DACA 4 years ago. We need to protect DACA/DAPA and pass immigration reform.", "in_reply_to_screen_name": null, "retweet_count": 1106, "favorite_count": 3507, "source": "TweetDeck", "id_str": "743172301580079105", "is_retweet": false}, {"created_at": "Fri Oct 14 15:50:54 +0000 2016", "text": "\"Donald Trump\u2019s closing argument is, \u2018What do you have to lose?\u2019\n\nThe answer is everything.\u201d \u2014@POTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1018, "favorite_count": 2808, "source": "TweetDeck", "id_str": "786957460540157952", "is_retweet": false}, {"created_at": "Fri Feb 12 03:59:03 +0000 2016", "text": "Next January, our next president will be sworn in. Add your name if you think it should be Hillary: https://t.co/JeCfTBV5aC #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 2235, "source": "TweetDeck", "id_str": "697993290512138240", "is_retweet": false}, {"created_at": "Tue May 10 01:34:42 +0000 2016", "text": "Americans need a raise. https://t.co/56Ltrh7uxV", "in_reply_to_screen_name": null, "retweet_count": 1317, "favorite_count": 3292, "source": "TweetDeck", "id_str": "729847099056111616", "is_retweet": false}, {"created_at": "Mon Feb 22 19:24:49 +0000 2016", "text": "We need to protect and build on @POTUS' progress. https://t.co/UbyBrMzx3M", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 1073, "source": "TweetDeck", "id_str": "701850145219067904", "is_retweet": false}, {"created_at": "Wed Jan 27 15:48:44 +0000 2016", "text": "We need to raise incomes to lift families out of poverty. https://t.co/j8vj01tBmJ", "in_reply_to_screen_name": null, "retweet_count": 638, "favorite_count": 1610, "source": "TweetDeck", "id_str": "692373682883264515", "is_retweet": false}, {"created_at": "Mon May 02 00:21:38 +0000 2016", "text": "Watch live: Hillary addresses the 61st annual @NAACP dinner in Detroit \u2192 https://t.co/iKTdZahKdp", "in_reply_to_screen_name": null, "retweet_count": 378, "favorite_count": 790, "source": "TweetDeck", "id_str": "726929604708032513", "is_retweet": false}, {"created_at": "Mon Oct 10 02:47:38 +0000 2016", "text": "RT @CecileRichards: I am so proud to stand with @HillaryClinton. She could not have been more poised or presidential. #SheWon #Debate #ImWi\u2026", "in_reply_to_screen_name": null, "retweet_count": 3020, "favorite_count": 0, "source": "TweetDeck", "id_str": "785310793147551744", "is_retweet": true}, {"created_at": "Tue May 24 18:41:49 +0000 2016", "text": "Millions of families\u2014disproportionately black and Latino families\u2014lost homes, jobs, and savings.\n\nTrump tried to profit at their expense.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 798, "favorite_count": 1245, "source": "TweetDeck", "id_str": "735179009793925120", "is_retweet": false}, {"created_at": "Sun Nov 06 22:01:26 +0000 2016", "text": "RT @ericwms: Her last visit to Ohio and it's amazing. I believe that she will win! #OHHillYes #OHVotesEarly https://t.co/eKHQbtwOF7", "in_reply_to_screen_name": null, "retweet_count": 2914, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795385628921909248", "is_retweet": true}, {"created_at": "Thu Aug 25 22:11:54 +0000 2016", "text": "It's not a coincidence that white supremacists proudly support Trump. https://t.co/3OX4I1GSkr", "in_reply_to_screen_name": null, "retweet_count": 2727, "favorite_count": 5948, "source": "TweetDeck", "id_str": "768933949217312768", "is_retweet": false}, {"created_at": "Wed May 11 15:30:33 +0000 2016", "text": "It's been a banner week for @realDonaldTrump... https://t.co/u9Qmw3Z8Ri", "in_reply_to_screen_name": null, "retweet_count": 524, "favorite_count": 852, "source": "TweetDeck", "id_str": "730419831569321984", "is_retweet": false}, {"created_at": "Thu Jul 14 15:59:25 +0000 2016", "text": "\"I will say what Donald Trump won\u2019t: Judge Curiel is as American as I am and as American as Donald Trump.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 778, "favorite_count": 2370, "source": "TweetDeck", "id_str": "753619921028935680", "is_retweet": false}, {"created_at": "Thu Aug 18 23:55:22 +0000 2016", "text": "RT @sarajacobs89: News from Miami Beach highlighting urgency of the Zika crisis, a public health emergency. Congress needs to act now. http\u2026", "in_reply_to_screen_name": null, "retweet_count": 508, "favorite_count": 0, "source": "TweetDeck", "id_str": "766423274226085892", "is_retweet": true}, {"created_at": "Sat May 28 01:13:10 +0000 2016", "text": "Donald Trump thinks workplace pregnancy is an \"inconvenience\" to businesses.\n\n(He could be your next president.) https://t.co/LmUZI1J8KQ", "in_reply_to_screen_name": null, "retweet_count": 2945, "favorite_count": 3932, "source": "TweetDeck", "id_str": "736364661524811776", "is_retweet": false}, {"created_at": "Tue Oct 04 12:48:38 +0000 2016", "text": "Mike Pence: a divisive, anti-woman, anti-LGBT, anti-worker extremist. \n\nNo wonder Trump picked him. #VPDebate https://t.co/icAN1P5DN2", "in_reply_to_screen_name": null, "retweet_count": 11491, "favorite_count": 19039, "source": "Media Studio", "id_str": "783287712405155841", "is_retweet": false}, {"created_at": "Wed Aug 03 21:44:29 +0000 2016", "text": "The RNC showed a negative, pessimistic view of America: That is not who we are.\n\nDo we have challenges? Sure. Can we meet them? Absolutely!", "in_reply_to_screen_name": null, "retweet_count": 1886, "favorite_count": 9171, "source": "TweetDeck", "id_str": "760954516334374913", "is_retweet": false}, {"created_at": "Tue Feb 02 19:20:04 +0000 2016", "text": "\u201cI will keep standing up for you. I will keep fighting for you.\" Hillary\u2019s remarks the night she won the #IowaCaucus https://t.co/bP5ZxrIqG2", "in_reply_to_screen_name": null, "retweet_count": 520, "favorite_count": 1268, "source": "TweetDeck", "id_str": "694601195973918720", "is_retweet": false}, {"created_at": "Sun Sep 18 16:58:06 +0000 2016", "text": "So what exactly is Donald Trump hiding from voters? Pretty much everything. https://t.co/RGUqGN4I7i", "in_reply_to_screen_name": null, "retweet_count": 6232, "favorite_count": 10922, "source": "Twitter Web Client", "id_str": "777552290441859072", "is_retweet": false}, {"created_at": "Mon Oct 03 18:01:04 +0000 2016", "text": "A Wall Street money manager should not be able to pay a lower tax rate than a teacher or a nurse.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1169, "favorite_count": 3490, "source": "TweetDeck", "id_str": "783003950689705984", "is_retweet": false}, {"created_at": "Thu Sep 15 03:00:51 +0000 2016", "text": "When 40 million Americans are facing the same problem, it's a crisis. One candidate has a plan to address it. https://t.co/7pPwEHlhy7", "in_reply_to_screen_name": null, "retweet_count": 1923, "favorite_count": 4679, "source": "TweetDeck", "id_str": "776254425002278912", "is_retweet": false}, {"created_at": "Thu Jan 07 20:06:25 +0000 2016", "text": "Yesterday was a preview of what would happen under a Republican president. Every single GOP candidate would defund Planned Parenthood. -H", "in_reply_to_screen_name": null, "retweet_count": 823, "favorite_count": 1775, "source": "TweetDeck", "id_str": "685190775399931904", "is_retweet": false}, {"created_at": "Wed Sep 14 16:59:08 +0000 2016", "text": "19. In sum, how will Trump guarantee that if forced to choose between America's security and his own bank account, he won't pick the latter?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3118, "favorite_count": 5643, "source": "TweetDeck", "id_str": "776102997499797504", "is_retweet": false}, {"created_at": "Fri Mar 18 22:03:57 +0000 2016", "text": "We\u2019ve got to step up as a country and deal with this. The time to take action against the Zika virus is right now. https://t.co/Rq1kIclPEZ", "in_reply_to_screen_name": null, "retweet_count": 962, "favorite_count": 2241, "source": "TweetDeck", "id_str": "710949891938328576", "is_retweet": false}, {"created_at": "Mon Jan 18 03:54:02 +0000 2016", "text": "What\u2019s happening with the water in Flint, Michigan is an outrage. https://t.co/EHWuclQJGS #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1329, "favorite_count": 2207, "source": "TweetDeck", "id_str": "688932332011675649", "is_retweet": false}, {"created_at": "Tue Mar 15 17:33:21 +0000 2016", "text": "Want to help win in FL, IL, MO, NC, and OH? Find your friends on Facebook and make sure they get to the polls today! https://t.co/b7th28XXD4", "in_reply_to_screen_name": null, "retweet_count": 547, "favorite_count": 1026, "source": "TweetDeck", "id_str": "709794629743415297", "is_retweet": false}, {"created_at": "Sun Jul 31 16:02:15 +0000 2016", "text": "Sarah McBride, the first trans person to speak at a party convention: \"Despite our progress, so much work remains.\" https://t.co/Kkt982nCSM", "in_reply_to_screen_name": null, "retweet_count": 2176, "favorite_count": 7997, "source": "TweetDeck", "id_str": "759781226731438080", "is_retweet": false}, {"created_at": "Tue Jul 05 20:17:12 +0000 2016", "text": "\"She will be a stateswoman who makes us proud around the world. ... She knows what it takes to be Commander-in-Chief.\" \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1337, "favorite_count": 3792, "source": "TweetDeck", "id_str": "750423303949524992", "is_retweet": false}, {"created_at": "Thu Sep 15 21:16:27 +0000 2016", "text": "RT @SenGillibrand: Love this.\n\n\"@HillaryClinton has spent her life fighting for children\u2014here are 8 ways she\u2019s changed their lives.\" \n\nhttp\u2026", "in_reply_to_screen_name": null, "retweet_count": 2173, "favorite_count": 0, "source": "TweetDeck", "id_str": "776530140998295553", "is_retweet": true}, {"created_at": "Tue Apr 19 12:57:10 +0000 2016", "text": "New Yorkers head to the polls today. RT this if you\u2019re voting for Hillary. https://t.co/frhgx4Yu2s", "in_reply_to_screen_name": null, "retweet_count": 2361, "favorite_count": 4349, "source": "TweetDeck", "id_str": "722408699290132480", "is_retweet": false}, {"created_at": "Fri Jul 29 03:20:49 +0000 2016", "text": "\"I'm not here to take away your guns. I just don't want you to be shot by someone who shouldn't have a gun in the first place.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 15814, "favorite_count": 36462, "source": "TweetDeck", "id_str": "758864830119895041", "is_retweet": false}, {"created_at": "Tue Oct 25 23:05:47 +0000 2016", "text": "Words of advice from the 1969 @Wellesley College commencement speaker: Hillary Rodham. https://t.co/tTgeqxNqYm https://t.co/bs6DvFfkjH", "in_reply_to_screen_name": null, "retweet_count": 3601, "favorite_count": 7336, "source": "Media Studio", "id_str": "791053172093640706", "is_retweet": false}, {"created_at": "Thu Feb 04 03:52:04 +0000 2016", "text": "We need to fix our criminal justice system and address substance use disorders. Prison is not a substitute for treatment. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 845, "favorite_count": 1998, "source": "TweetDeck", "id_str": "695092432929701892", "is_retweet": false}, {"created_at": "Tue Sep 06 01:03:55 +0000 2016", "text": "\"The essence of his campaign is bigotry.\" \u2014@BernieSanders on Donald Trump in New Hampshire https://t.co/2eqNAvMvmv", "in_reply_to_screen_name": null, "retweet_count": 2776, "favorite_count": 6463, "source": "TweetDeck", "id_str": "772963506127765505", "is_retweet": false}, {"created_at": "Mon Jul 25 15:51:36 +0000 2016", "text": "\u201cI don\u2019t understand people who trash talk about America\u2026who act as if we are not yet the greatest country that has ever been created.\u201d", "in_reply_to_screen_name": null, "retweet_count": 1360, "favorite_count": 4260, "source": "TweetDeck", "id_str": "757604220661030912", "is_retweet": false}, {"created_at": "Sat Apr 02 18:08:39 +0000 2016", "text": ".@BusinessInsider: \u201cDo you trust Donald Trump with our military?\u201d\n\nHillary: \u201cOf course not.\u201d https://t.co/2qm7SVJSuR\nhttps://t.co/zjDxxTmNOI", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 2294, "source": "Twitter Web Client", "id_str": "716326494423764992", "is_retweet": false}, {"created_at": "Thu Sep 08 16:23:48 +0000 2016", "text": "RT @businessinsider: Hillary Clinton is supporting a bill that would protect benefits for former coal miners https://t.co/4gLC6U1swR https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773919776355848194", "is_retweet": true}, {"created_at": "Sat Mar 12 05:34:48 +0000 2016", "text": "Violence has no place in our politics. We should use our words and deeds to bring Americans together. https://t.co/FofjognpIA", "in_reply_to_screen_name": null, "retweet_count": 6181, "favorite_count": 12512, "source": "Twitter Web Client", "id_str": "708526634459078656", "is_retweet": false}, {"created_at": "Sun Apr 03 14:25:09 +0000 2016", "text": "A retired auto worker on why she\u2019s for Hillary: \u201cI like her strength even though she went through some challenges.\u201d https://t.co/JCmctKcvwz", "in_reply_to_screen_name": null, "retweet_count": 1070, "favorite_count": 2469, "source": "Twitter Web Client", "id_str": "716632634445733889", "is_retweet": false}, {"created_at": "Fri May 27 14:28:28 +0000 2016", "text": "1 de cada 4 personas en Puerto Rico podr\u00eda contraer el Zika este a\u00f1o. Esto es lo que\npodemos hacer para combatirlo. https://t.co/ME7fj2Miqr", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 647, "source": "TweetDeck", "id_str": "736202417608482816", "is_retweet": false}, {"created_at": "Wed Oct 12 01:07:31 +0000 2016", "text": "Lots of states have registration deadlines today\u2014and she's counting on you to turn out on November 8.\u2026 https://t.co/OTNGm4o64e", "in_reply_to_screen_name": null, "retweet_count": 1602, "favorite_count": 5136, "source": "TweetDeck", "id_str": "786010375284224000", "is_retweet": false}, {"created_at": "Tue Nov 01 14:14:02 +0000 2016", "text": "Anyone who sees and treats women this way is unfit to be president. https://t.co/aRXRfItr0r", "in_reply_to_screen_name": null, "retweet_count": 24290, "favorite_count": 38086, "source": "Media Studio", "id_str": "793456067573231617", "is_retweet": false}, {"created_at": "Sat Feb 06 16:28:21 +0000 2016", "text": "Time to #GOTVforHRC! Send an extra nudge to a NH voter to make sure they vote by texting NOTE to 47246\ud83d\udcf1 https://t.co/A7NsKbyZdr", "in_reply_to_screen_name": null, "retweet_count": 423, "favorite_count": 1086, "source": "Twitter Web Client", "id_str": "696007532767215616", "is_retweet": false}, {"created_at": "Wed Jul 13 17:04:45 +0000 2016", "text": "These things can be true at once:\n\nWe need criminal justice reform.\n\nWe need to support police.\n\nWe need to do more to stop gun violence.", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 4732, "source": "TweetDeck", "id_str": "753273975338364928", "is_retweet": false}, {"created_at": "Tue Sep 20 15:28:07 +0000 2016", "text": "RT @SenatorReid: Trump cannot be trusted with his own charity, but we are supposed to believe he can manage the nation\u2019s treasury? https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 4187, "favorite_count": 0, "source": "TweetDeck", "id_str": "778254419678859265", "is_retweet": true}, {"created_at": "Tue Jul 05 19:50:49 +0000 2016", "text": "\u201cI don\u2019t know about you, but we\u2019re fired up and ready to go!\u201d \u2014Hillary https://t.co/op0E8Xiw3Z", "in_reply_to_screen_name": null, "retweet_count": 1775, "favorite_count": 5320, "source": "TweetDeck", "id_str": "750416665855361024", "is_retweet": false}, {"created_at": "Wed Jun 29 20:17:19 +0000 2016", "text": "Cool ties, @realDonaldTrump. https://t.co/wKmKyEzjTh", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 2408, "source": "TweetDeck", "id_str": "748249006887829504", "is_retweet": false}, {"created_at": "Sun Aug 07 19:53:06 +0000 2016", "text": "RT @JoeBiden: No one wants to earn a Purple Heart. But to those who did, you have America's unending gratitude and admiration. Thank you. #\u2026", "in_reply_to_screen_name": null, "retweet_count": 7211, "favorite_count": 0, "source": "TweetDeck", "id_str": "762376039741919232", "is_retweet": true}, {"created_at": "Fri Jan 15 03:47:18 +0000 2016", "text": "A 10% flat tax? A CEO should never be paying the same rate as a kindergarten teacher. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 2028, "favorite_count": 4129, "source": "TweetDeck", "id_str": "687843474717171713", "is_retweet": false}, {"created_at": "Tue Jul 19 03:13:05 +0000 2016", "text": "Chip in $1 if you agree we can\u2019t let Trump \u201cwin so big.\u201d #RNCinCLE  https://t.co/VEDD5meehC\nhttps://t.co/EKipgiSDky", "in_reply_to_screen_name": null, "retweet_count": 954, "favorite_count": 2663, "source": "Twitter Web Client", "id_str": "755239006762250240", "is_retweet": false}, {"created_at": "Tue Jul 05 19:44:42 +0000 2016", "text": "\"When I look at @POTUS, I see someone who\u2014in spite of obstruction he\u2019s faced\u2014still reaches for common ground and common purpose.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1185, "favorite_count": 4665, "source": "TweetDeck", "id_str": "750415127015481344", "is_retweet": false}, {"created_at": "Tue Jul 26 22:15:07 +0000 2016", "text": "RT @HFA: The #RollCallVote is underway at the @DemConvention. You can join in from home! Text HILLARY to 47246 to voice your support right\u2026", "in_reply_to_screen_name": null, "retweet_count": 416, "favorite_count": 0, "source": "TweetDeck", "id_str": "758063122271891456", "is_retweet": true}, {"created_at": "Thu Oct 13 16:39:34 +0000 2016", "text": "\u201cThe measure of any society is how it treats its women and girls.\u201d \u2014@FLOTUS https://t.co/SwCSNpqfJ2", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1740, "favorite_count": 3126, "source": "TweetDeck", "id_str": "786607322982473728", "is_retweet": false}, {"created_at": "Mon Jun 13 17:35:34 +0000 2016", "text": "\"To all the LGBT people grieving today: you have millions of allies who will always have your back. I am one of them.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 4264, "favorite_count": 12090, "source": "TweetDeck", "id_str": "742410092457406464", "is_retweet": false}, {"created_at": "Thu Sep 08 00:53:02 +0000 2016", "text": "\"It is a correct tweet.\" \u2014Donald Trump, just now #NBCNewsForum  https://t.co/EyNuOmY8oF", "in_reply_to_screen_name": null, "retweet_count": 6732, "favorite_count": 8267, "source": "TweetDeck", "id_str": "773685541271379968", "is_retweet": false}, {"created_at": "Sat Mar 19 21:32:50 +0000 2016", "text": "Newspapers from Miami to Portland agree: Hillary is the best choice to be the Democratic nominee. https://t.co/y8nmQQBRtk", "in_reply_to_screen_name": null, "retweet_count": 1827, "favorite_count": 4845, "source": "Twitter Web Client", "id_str": "711304448308449280", "is_retweet": false}, {"created_at": "Sat Jun 11 23:40:27 +0000 2016", "text": "Trump the businessman? A total failure. He bankrupted his Atlantic City casinos (but pocketed millions for himself): https://t.co/fxpfFotuOa", "in_reply_to_screen_name": null, "retweet_count": 3295, "favorite_count": 6709, "source": "TweetDeck", "id_str": "741777144485969920", "is_retweet": false}, {"created_at": "Tue Nov 08 11:47:18 +0000 2016", "text": "Don't stand still. Vote today: https://t.co/jfd3CXLD1s #ElectionDay #MannequinChallenge https://t.co/4KAv2zu0rd", "in_reply_to_screen_name": null, "retweet_count": 54352, "favorite_count": 95352, "source": "Media Studio", "id_str": "795955854059171840", "is_retweet": false}, {"created_at": "Fri Sep 02 01:27:42 +0000 2016", "text": "RT @timkaine: Donald Trump's immigration plan makes it clear that he's more interested in dividing us than uniting us. https://t.co/BZTegQG\u2026", "in_reply_to_screen_name": null, "retweet_count": 3065, "favorite_count": 0, "source": "TweetDeck", "id_str": "771519937949081604", "is_retweet": true}, {"created_at": "Tue Apr 26 17:05:19 +0000 2016", "text": "Live in CT, DE, MD, PA, or RI? Go vote: Hillary needs you. Text WHERE to 47246 to find your polling place. https://t.co/xwSPICUcy6", "in_reply_to_screen_name": null, "retweet_count": 1028, "favorite_count": 2075, "source": "TweetDeck", "id_str": "725007863106682880", "is_retweet": false}, {"created_at": "Wed Oct 12 15:03:43 +0000 2016", "text": "RT @kendallybrown: I've been crying for the last 3 hours live tweeting #OHVotesEarly. We're really doing this, guys. We're electing the fir\u2026", "in_reply_to_screen_name": null, "retweet_count": 4839, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786220811606646784", "is_retweet": true}, {"created_at": "Thu Oct 20 02:49:53 +0000 2016", "text": "RT @elizabethforma: .@HillaryClinton proved tonight: She has brains, guts, thick skin, steady hands, &amp; most of all: basic decency. #ImWithH\u2026", "in_reply_to_screen_name": null, "retweet_count": 15606, "favorite_count": 0, "source": "TweetDeck", "id_str": "788935240668573696", "is_retweet": true}, {"created_at": "Tue Oct 25 13:13:50 +0000 2016", "text": "\"My name is Mae Wiggins. I was denied an apartment in the Trump buildings based on the color of my skin.\" https://t.co/ds8NkkV0T2", "in_reply_to_screen_name": null, "retweet_count": 15075, "favorite_count": 21123, "source": "Media Studio", "id_str": "790904200863617024", "is_retweet": false}, {"created_at": "Wed Oct 12 23:50:55 +0000 2016", "text": "RT @Hillary_esp: \"Como presidenta, solo Hillary Clinton proteger\u00e1 a los DREAMERS y familias como las nuestras\" \u2014@Astrid_NV. https://t.co/Y7\u2026", "in_reply_to_screen_name": null, "retweet_count": 813, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786353486703185921", "is_retweet": true}, {"created_at": "Wed Aug 10 21:07:02 +0000 2016", "text": "Young people were among the hardest hit during the great recession\u2014and the effects still linger. https://t.co/XFIZKrCHxF", "in_reply_to_screen_name": null, "retweet_count": 1282, "favorite_count": 3724, "source": "TweetDeck", "id_str": "763481807425773568", "is_retweet": false}, {"created_at": "Tue Nov 01 20:11:54 +0000 2016", "text": "Donald Trump is on tape bragging about barging in on undressed women backstage at beauty pageants to \"inspect\" them.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 928, "favorite_count": 1509, "source": "TweetDeck", "id_str": "793546124544008192", "is_retweet": false}, {"created_at": "Sat Jun 11 00:24:18 +0000 2016", "text": ".@realDonaldTrump says he\u2019ll be \u201cthe best for women.\u201d\n\nDon't think so. https://t.co/zsXgf8wQF2", "in_reply_to_screen_name": null, "retweet_count": 2791, "favorite_count": 8769, "source": "TweetDeck", "id_str": "741425791825776640", "is_retweet": false}, {"created_at": "Wed Jul 13 17:01:37 +0000 2016", "text": "\"We need to listen to those who say 'Black Lives Matter.' Too many black Americans...feel like their lives are disposable.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1081, "favorite_count": 2809, "source": "TweetDeck", "id_str": "753273187518087168", "is_retweet": false}, {"created_at": "Wed Mar 23 19:06:02 +0000 2016", "text": "When Republican candidates like Ted Cruz call for treating American Muslims like criminals, it\u2019s not just wrong\u2014it\u2019s counter-productive.", "in_reply_to_screen_name": null, "retweet_count": 1201, "favorite_count": 3063, "source": "TweetDeck", "id_str": "712717056458801152", "is_retweet": false}, {"created_at": "Tue Nov 08 02:20:51 +0000 2016", "text": "\"We don\u2019t want to shrink the vision of this country. We want to keep expanding it.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1134, "favorite_count": 2952, "source": "TweetDeck", "id_str": "795813304459468800", "is_retweet": false}, {"created_at": "Sat Aug 27 19:04:30 +0000 2016", "text": "RT @Yamiche: A must read today: The NYT digs deep into Donald Trump and his father's history of denying housing to blacks. https://t.co/c5G\u2026", "in_reply_to_screen_name": null, "retweet_count": 3036, "favorite_count": 0, "source": "TweetDeck", "id_str": "769611564320161792", "is_retweet": true}, {"created_at": "Thu Aug 25 17:34:22 +0000 2016", "text": "Why do so many Ku Klux Klan members support Trump?\n\n\"A lot of what he believes, we believe in.\" https://t.co/AqB3DLKL9f", "in_reply_to_screen_name": null, "retweet_count": 5388, "favorite_count": 6802, "source": "TweetDeck", "id_str": "768864106656956420", "is_retweet": false}, {"created_at": "Tue Jul 26 01:41:56 +0000 2016", "text": "\u201cPatriotism is love of country. But you can\u2019t love your country without loving your countrymen and your countrywomen.\u201d \u2014@CoryBooker", "in_reply_to_screen_name": null, "retweet_count": 2930, "favorite_count": 7042, "source": "TweetDeck", "id_str": "757752784447995904", "is_retweet": false}, {"created_at": "Mon Nov 07 20:43:06 +0000 2016", "text": "\"Look how far we've come from having no voice to being on the brink of making history.\" \u2014@Beyonce\u2026 https://t.co/MQs4Ep6WDt", "in_reply_to_screen_name": null, "retweet_count": 6982, "favorite_count": 14764, "source": "Media Studio", "id_str": "795728304384917505", "is_retweet": false}, {"created_at": "Thu Sep 08 23:07:22 +0000 2016", "text": "We have to work together to make sure every child has clean water to drink and air to breathe and good schools, no matter their zip code.", "in_reply_to_screen_name": null, "retweet_count": 1212, "favorite_count": 4470, "source": "TweetDeck", "id_str": "774021339095195648", "is_retweet": false}, {"created_at": "Mon Oct 10 02:14:44 +0000 2016", "text": "\"I know more about ISIS than the generals.\" \u2014Donald Trump, who clearly doesn't. #debate", "in_reply_to_screen_name": null, "retweet_count": 5022, "favorite_count": 14124, "source": "TweetDeck", "id_str": "785302513448878081", "is_retweet": false}, {"created_at": "Sat Jan 09 21:08:17 +0000 2016", "text": "Our next president could have the power to transform the Supreme Court for generations. https://t.co/nOCqr1doSV https://t.co/PTRKEtJgcT", "in_reply_to_screen_name": null, "retweet_count": 893, "favorite_count": 1446, "source": "TweetDeck", "id_str": "685931117539635201", "is_retweet": false}, {"created_at": "Wed Oct 12 22:59:16 +0000 2016", "text": "From rivals to colleagues to friends. Hillary and @POTUS, in photos: https://t.co/vOahLgn8AZ", "in_reply_to_screen_name": null, "retweet_count": 1287, "favorite_count": 4284, "source": "TweetDeck", "id_str": "786340489809260544", "is_retweet": false}, {"created_at": "Mon Oct 24 19:27:09 +0000 2016", "text": "A promise to \"Make America Great Again\" might mean more from someone who actually made his products in America. https://t.co/Q75vEdoq8m", "in_reply_to_screen_name": null, "retweet_count": 2034, "favorite_count": 5215, "source": "TweetDeck", "id_str": "790635762186330112", "is_retweet": false}, {"created_at": "Tue Nov 08 01:49:59 +0000 2016", "text": "\u201cThis election is on us; it is in our hands. If we get out and vote tomorrow, Hillary Clinton will win.\u201d \u2014@FLOTUS https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 665, "favorite_count": 1421, "source": "TweetDeck", "id_str": "795805536113594368", "is_retweet": false}, {"created_at": "Mon Jun 06 16:38:57 +0000 2016", "text": "72 years after #DDay, let's not just eulogize the brave men who gave their lives. Let's honor them by defending the values they fought for.", "in_reply_to_screen_name": null, "retweet_count": 1646, "favorite_count": 4588, "source": "TweetDeck", "id_str": "739859132380008448", "is_retweet": false}, {"created_at": "Tue Jun 21 16:34:45 +0000 2016", "text": "\"President Trump\" would undo so much of the progress we\u2019ve made over the past 8 years under President Obama.\n\nWe can't let that happen.", "in_reply_to_screen_name": null, "retweet_count": 1417, "favorite_count": 4483, "source": "TweetDeck", "id_str": "745293890798903298", "is_retweet": false}, {"created_at": "Mon May 02 17:50:10 +0000 2016", "text": "Puerto Rico enfrenta una crisis econ\u00f3mica y la persistente inacci\u00f3n del Congreso es irresponsable. Debemos actuar ya https://t.co/UkosCytiVq", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 323, "favorite_count": 508, "source": "TweetDeck", "id_str": "727193477696638977", "is_retweet": false}, {"created_at": "Wed Aug 31 23:08:33 +0000 2016", "text": "\u201cI will never lie to you.\u201d \u2014Donald Trump, August 18, 2016 https://t.co/O1GwI0FhzA", "in_reply_to_screen_name": null, "retweet_count": 4984, "favorite_count": 8178, "source": "TweetDeck", "id_str": "771122533609373700", "is_retweet": false}, {"created_at": "Tue Mar 22 14:09:56 +0000 2016", "text": "These terrorists seek to undermine the democratic values that are the foundation of our way of life. They will never succeed. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2479, "favorite_count": 4929, "source": "TweetDeck", "id_str": "712280152944865281", "is_retweet": false}, {"created_at": "Sat Mar 05 16:52:30 +0000 2016", "text": "It's time to stand up to pharmaceutical companies hiking the price of drugs for profit. https://t.co/as8UdrE1JK", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 1909, "source": "TweetDeck", "id_str": "706160470068207618", "is_retweet": false}, {"created_at": "Thu Sep 15 13:10:42 +0000 2016", "text": "RT @TJMShow: .@HillaryClinton stands by @RealDonaldTrump running a deplorable campaign.  His comments have been bigoted, mean and untrue.", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 0, "source": "TweetDeck", "id_str": "776407898238877696", "is_retweet": true}, {"created_at": "Mon Sep 19 14:21:29 +0000 2016", "text": "\u201cI\u2019m the only candidate in this race who\u2019s been part of the hard decisions to take terrorists off the battlefield. \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 959, "favorite_count": 2767, "source": "TweetDeck", "id_str": "777875261928927232", "is_retweet": false}, {"created_at": "Wed Nov 02 15:18:03 +0000 2016", "text": "We are not going to let big business and big corporations call the shots anymore. That is not working for us.\u2026 https://t.co/bNb5nBOfQV", "in_reply_to_screen_name": null, "retweet_count": 1570, "favorite_count": 4470, "source": "TweetDeck", "id_str": "793834564519075840", "is_retweet": false}, {"created_at": "Mon Oct 10 23:01:10 +0000 2016", "text": ".@ForeignPolicy has never endorsed a candidate for political office.\n\nUntil now: https://t.co/UdsK7rdqAy", "in_reply_to_screen_name": null, "retweet_count": 2851, "favorite_count": 7625, "source": "TweetDeck", "id_str": "785616190693597184", "is_retweet": false}, {"created_at": "Mon Nov 07 19:15:34 +0000 2016", "text": "Latino voters will have a powerful impact on this election\u2014and are already showing record turnout. Be part of this:\u2026 https://t.co/xn931No4p0", "in_reply_to_screen_name": null, "retweet_count": 7340, "favorite_count": 14400, "source": "Media Studio", "id_str": "795706274620940288", "is_retweet": false}, {"created_at": "Fri Aug 05 17:12:43 +0000 2016", "text": "\"We have to reject and stand up against the appeals to the kind of bigotry...that we see from Trump\u2019s campaign.\" \u2014Hillary #NABJNAHJ16", "in_reply_to_screen_name": null, "retweet_count": 1668, "favorite_count": 5635, "source": "TweetDeck", "id_str": "761610901178974208", "is_retweet": false}, {"created_at": "Wed Apr 20 01:56:20 +0000 2016", "text": "To our volunteers, organizers, and supporters who worked your hearts out in New York: This is your win. Thank you. https://t.co/sL5qKZgA8j", "in_reply_to_screen_name": null, "retweet_count": 2571, "favorite_count": 7510, "source": "TweetDeck", "id_str": "722604783408963586", "is_retweet": false}, {"created_at": "Mon Oct 03 13:42:40 +0000 2016", "text": "\"Hillary is running on the message of hope and unity that we need.\" \u2014@KingJames https://t.co/PcBChoxpf9", "in_reply_to_screen_name": null, "retweet_count": 3376, "favorite_count": 9526, "source": "Twitter for iPhone", "id_str": "782938924436033536", "is_retweet": false}, {"created_at": "Mon Apr 11 18:01:27 +0000 2016", "text": "We need a leader who will bring us together\u2014not drive us apart. https://t.co/0gD0lvmOpt", "in_reply_to_screen_name": null, "retweet_count": 1227, "favorite_count": 2644, "source": "TweetDeck", "id_str": "719586171911856128", "is_retweet": false}, {"created_at": "Thu Jul 21 23:05:35 +0000 2016", "text": "\"It's pretty obvious he doesn't know a lot about the issues.\" \u2014@SenateMajLdr on Trump\n\nWe couldn't agree more, Mitch https://t.co/YO81aW6XZB", "in_reply_to_screen_name": null, "retweet_count": 4040, "favorite_count": 7025, "source": "TweetDeck", "id_str": "756263886379155456", "is_retweet": false}, {"created_at": "Thu Apr 07 20:40:26 +0000 2016", "text": "\"Gay rights are human rights.\"\n\nWatch how Hillary helped advance gay rights around the world as secretary of state.\nhttps://t.co/AFmF4iTj49", "in_reply_to_screen_name": null, "retweet_count": 2681, "favorite_count": 5543, "source": "Twitter Web Client", "id_str": "718176631278272512", "is_retweet": false}, {"created_at": "Wed Mar 09 03:14:07 +0000 2016", "text": "\"If we reach for love and kindness instead of bluster and bigotry, we can see the best in each other, not the worst.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2451, "favorite_count": 5203, "source": "TweetDeck", "id_str": "707404069967699968", "is_retweet": false}, {"created_at": "Thu Jun 16 21:30:22 +0000 2016", "text": ".@oprah Thank you. It\u2019s an honor to have the support of someone who's shattered so many glass ceilings. https://t.co/U34EtHoYQD", "in_reply_to_screen_name": null, "retweet_count": 3014, "favorite_count": 8832, "source": "TweetDeck", "id_str": "743556345606057985", "is_retweet": false}, {"created_at": "Tue Sep 13 01:12:08 +0000 2016", "text": "We\u2019ll make in-state colleges and universities tuition-free for families making under $125,000/year.\n\nThat'll help more than 80% of families.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1290, "favorite_count": 3210, "source": "TweetDeck", "id_str": "775502290488791040", "is_retweet": false}, {"created_at": "Fri Jul 29 02:51:33 +0000 2016", "text": "\"No one gets through life alone. We have to look out for each other and lift each other up.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3590, "favorite_count": 7721, "source": "TweetDeck", "id_str": "758857467597959171", "is_retweet": false}, {"created_at": "Wed Oct 05 01:17:07 +0000 2016", "text": "RT @timkaine: Hillary Clinton\u2019s life has always been about putting others first\u2014Donald Trump\u2019s always been about putting himself first.", "in_reply_to_screen_name": null, "retweet_count": 1600, "favorite_count": 0, "source": "TweetDeck", "id_str": "783476074541936640", "is_retweet": true}, {"created_at": "Tue Jun 21 16:24:54 +0000 2016", "text": ".@elizabethforma and @MittRomney agree: Trump would put us into a deep recession. https://t.co/66kTxlywHU https://t.co/W2VMrpoSWH", "in_reply_to_screen_name": null, "retweet_count": 916, "favorite_count": 2241, "source": "TweetDeck", "id_str": "745291412904771584", "is_retweet": false}, {"created_at": "Thu Oct 20 02:29:40 +0000 2016", "text": "RT @TheBriefing2016: Trump's tax plan would add significantly to the national debt...$5.3 trillion to be exact. #debatenight https://t.co/b\u2026", "in_reply_to_screen_name": null, "retweet_count": 1687, "favorite_count": 0, "source": "TweetDeck", "id_str": "788930153686659072", "is_retweet": true}, {"created_at": "Tue Nov 01 19:51:32 +0000 2016", "text": "\"Let\u2019s work our hearts out so we can finally say 'Madam President.\u2019\u201d \u2014@MachadoOficial https://t.co/3TKJ4H68Kz https://t.co/3lehgELwQ4", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1385, "favorite_count": 2731, "source": "TweetDeck", "id_str": "793540999213711361", "is_retweet": false}, {"created_at": "Wed Oct 26 12:03:41 +0000 2016", "text": "Today is Hillary's birthday! Find out what she was doing the year you were born: https://t.co/xWnRW2boOg", "in_reply_to_screen_name": null, "retweet_count": 2544, "favorite_count": 9282, "source": "TweetDeck", "id_str": "791248936317091840", "is_retweet": false}, {"created_at": "Thu Sep 22 23:54:58 +0000 2016", "text": "\"I really regret doing this.\" \u2014Hillary on Between Two Ferns https://t.co/OmDyINNCrW", "in_reply_to_screen_name": null, "retweet_count": 14643, "favorite_count": 38029, "source": "TweetDeck", "id_str": "779106750133837824", "is_retweet": false}, {"created_at": "Sun May 01 14:00:42 +0000 2016", "text": "Raise the minimum wage.\nEnsure paid leave.\nProtect union rights.\n\nIf we want to raise incomes, we have to stand with workers. #MayDay", "in_reply_to_screen_name": null, "retweet_count": 2163, "favorite_count": 5288, "source": "Twitter Web Client", "id_str": "726773343664377856", "is_retweet": false}, {"created_at": "Sat Sep 24 02:08:19 +0000 2016", "text": "\"Hillary Clinton is one of the best prepared candidates to seek the presidency.\" \u2014@LATimes https://t.co/NG1am536OS", "in_reply_to_screen_name": null, "retweet_count": 2936, "favorite_count": 7336, "source": "TweetDeck", "id_str": "779502695187148800", "is_retweet": false}, {"created_at": "Wed Sep 28 20:08:17 +0000 2016", "text": "Hillary\u2019s college plan will help students preparing for college, those already in school, and those paying off debt. https://t.co/c0g8A5NYH7", "in_reply_to_screen_name": null, "retweet_count": 1909, "favorite_count": 4503, "source": "TweetDeck", "id_str": "781224026568003584", "is_retweet": false}, {"created_at": "Wed Jan 06 00:44:07 +0000 2016", "text": "In 2016, everything we\u2019ve accomplished together is on the line. https://t.co/KhhsQMSS5Q", "in_reply_to_screen_name": null, "retweet_count": 674, "favorite_count": 1977, "source": "TweetDeck", "id_str": "684535884675477508", "is_retweet": false}, {"created_at": "Mon Mar 14 13:02:42 +0000 2016", "text": "We make it about as hard to combine family and work as we could. We can change that.\nhttps://t.co/2zb3LxX2AG", "in_reply_to_screen_name": null, "retweet_count": 1037, "favorite_count": 2199, "source": "Twitter Web Client", "id_str": "709364131602640896", "is_retweet": false}, {"created_at": "Mon Oct 03 00:33:13 +0000 2016", "text": "Donald Trump might have gone decades without paying taxes\u2014but he\u2019s not afraid of telling other people to pay theirs. https://t.co/O2FeLvNJGm", "in_reply_to_screen_name": null, "retweet_count": 2774, "favorite_count": 6209, "source": "TweetDeck", "id_str": "782740251655696384", "is_retweet": false}, {"created_at": "Tue Sep 13 12:03:20 +0000 2016", "text": "Trump says \"you can't lead this nation if you have such a low opinion for its citizens.\"\n\nWhat Trump's also said: https://t.co/uDUUgpSW8z", "in_reply_to_screen_name": null, "retweet_count": 8610, "favorite_count": 13503, "source": "Twitter Web Client", "id_str": "775666170913521665", "is_retweet": false}, {"created_at": "Tue Nov 08 02:06:06 +0000 2016", "text": "\u201cDon\u2019t boo, vote!\u201d \u2014@POTUS https://t.co/jfd3CXLD1s https://t.co/LPGUUEty3E", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2139, "favorite_count": 4840, "source": "TweetDeck", "id_str": "795809591875555328", "is_retweet": false}, {"created_at": "Thu Nov 24 20:40:17 +0000 2016", "text": "I was greeted by this heartwarming display on the corner of my street today. Thank you to all of you who did this.\u2026 https://t.co/fWPOa4Bgzc", "in_reply_to_screen_name": null, "retweet_count": 52494, "favorite_count": 309773, "source": "Twitter for iPhone", "id_str": "801888191276089344", "is_retweet": false}, {"created_at": "Sat Oct 15 23:54:14 +0000 2016", "text": "RT @Hillary_esp: Celebramos la trayectoria de Sonia Sotomayor, una pionera que ha abierto el camino para muchos otros. #HispanicHeritageMon\u2026", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787441484991700992", "is_retweet": true}, {"created_at": "Mon Aug 22 13:00:46 +0000 2016", "text": "\"Everything I say I'm going to do, folks, I do.\" \u2014@realDonaldTrump\n\nHere's why that's a disaster for our economy: https://t.co/KYzPrHnMHv", "in_reply_to_screen_name": null, "retweet_count": 1126, "favorite_count": 2728, "source": "TweetDeck", "id_str": "767708089504194560", "is_retweet": false}, {"created_at": "Tue Jul 12 17:13:54 +0000 2016", "text": "\"Hillary Clinton will make an outstanding president and I am proud to stand with her today.\" \u2014@BernieSanders\nhttps://t.co/yNC6ALjJnX", "in_reply_to_screen_name": null, "retweet_count": 4321, "favorite_count": 9788, "source": "Twitter Web Client", "id_str": "752913890548199425", "is_retweet": false}, {"created_at": "Sun Jun 12 19:11:01 +0000 2016", "text": "\"We need to keep guns like the ones used last night out of the hands of terrorists or other violent criminals.\" \u2014Hillary on the FL attack", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 5523, "favorite_count": 13499, "source": "TweetDeck", "id_str": "742071728118059009", "is_retweet": false}, {"created_at": "Mon Mar 14 23:44:37 +0000 2016", "text": "It\u2019s not enough to make college more affordable. We need to help people with the student debt they already have. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1280, "favorite_count": 3451, "source": "TweetDeck", "id_str": "709525671257755652", "is_retweet": false}, {"created_at": "Mon May 16 14:17:10 +0000 2016", "text": "Every presidential nominee since 1976 has released their tax returns, but Trump has refused.\nhttps://t.co/yA5xukG8x5", "in_reply_to_screen_name": null, "retweet_count": 3293, "favorite_count": 4637, "source": "Twitter Web Client", "id_str": "732213306065223680", "is_retweet": false}, {"created_at": "Fri Jun 10 15:01:47 +0000 2016", "text": "\u201cI\u2019m ready to jump in this fight and make sure that Hillary Clinton is the next president\" \u2014@SenWarren: https://t.co/6MANlMY3oV", "in_reply_to_screen_name": null, "retweet_count": 1331, "favorite_count": 4529, "source": "TweetDeck", "id_str": "741284230823563264", "is_retweet": false}, {"created_at": "Thu Apr 07 02:40:11 +0000 2016", "text": "There's only one candidate in this race with more votes than Donald Trump. https://t.co/O5YkpXhy8y https://t.co/UW253MHt5f", "in_reply_to_screen_name": null, "retweet_count": 6070, "favorite_count": 14677, "source": "TweetDeck", "id_str": "717904776688771072", "is_retweet": false}, {"created_at": "Tue May 03 16:12:53 +0000 2016", "text": "What kind of president would Leslie Knope be?\n \n\"Full speed ahead!\"\nhttps://t.co/p3Y7ww5z6i", "in_reply_to_screen_name": null, "retweet_count": 1361, "favorite_count": 2966, "source": "Twitter Web Client", "id_str": "727531382885339137", "is_retweet": false}, {"created_at": "Sun Nov 06 00:29:24 +0000 2016", "text": "Text JOIN to 47246 and sign up to help us get out the vote. https://t.co/mUrVhU3YYL", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1074, "favorite_count": 2934, "source": "TweetDeck", "id_str": "795060477923627008", "is_retweet": false}, {"created_at": "Wed Jun 22 19:05:39 +0000 2016", "text": "Families shouldn\u2019t have to spend more than 10% of their income on child care. https://t.co/EYR8iWoYfb", "in_reply_to_screen_name": null, "retweet_count": 1511, "favorite_count": 4922, "source": "TweetDeck", "id_str": "745694255767822336", "is_retweet": false}, {"created_at": "Wed Oct 05 03:00:03 +0000 2016", "text": "RT @sean_p_thomas: Winner- @timkaine. More honesty, more facts. Fierce advocate for his running mate. #Pence wouldn't touch Donald with 10\u2026", "in_reply_to_screen_name": null, "retweet_count": 2422, "favorite_count": 0, "source": "TweetDeck", "id_str": "783501978974453761", "is_retweet": true}, {"created_at": "Sat Apr 23 15:12:06 +0000 2016", "text": "Does Trump think he can fool us into forgetting his hateful rhetoric? Sad! https://t.co/0Vvw0m36ZX", "in_reply_to_screen_name": null, "retweet_count": 1454, "favorite_count": 2652, "source": "TweetDeck", "id_str": "723892209729323008", "is_retweet": false}, {"created_at": "Thu Apr 28 17:12:59 +0000 2016", "text": "Capt. Kristen Griest is about to become the Army's first female infantry officer. Well done. https://t.co/mGDDZ9bTfI -H", "in_reply_to_screen_name": null, "retweet_count": 1047, "favorite_count": 2874, "source": "TweetDeck", "id_str": "725734568230305792", "is_retweet": false}, {"created_at": "Tue Aug 09 21:44:48 +0000 2016", "text": "RT @HillaryforIA: Welcome back, Madame Secretary.\n\nHillary heads back to Des Moines this Wednesday. RSVP: https://t.co/cwo0OodC6J. https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 0, "source": "TweetDeck", "id_str": "763128923639152640", "is_retweet": true}, {"created_at": "Wed Jul 06 16:35:16 +0000 2016", "text": "The Trump Marina Hotel Casino in Atlantic City was sold just a few years ago at a huge loss.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 690, "favorite_count": 1634, "source": "TweetDeck", "id_str": "750729840354099200", "is_retweet": false}, {"created_at": "Mon Mar 14 18:34:40 +0000 2016", "text": "Want to help Hillary win FL, IL, MO, NC, and OH? Tune in for a phone bank training on Facebook Live and get calling! https://t.co/USlv3ExHSF", "in_reply_to_screen_name": null, "retweet_count": 522, "favorite_count": 896, "source": "TweetDeck", "id_str": "709447670436372481", "is_retweet": false}, {"created_at": "Mon May 02 00:40:08 +0000 2016", "text": "\u201cSomething\u2019s wrong when so many black parents are burying their children.\u201d \u2014Hillary https://t.co/Td78zygG7a", "in_reply_to_screen_name": null, "retweet_count": 1518, "favorite_count": 2742, "source": "TweetDeck", "id_str": "726934261002047488", "is_retweet": false}, {"created_at": "Tue Jul 26 00:36:33 +0000 2016", "text": "RT @Hillary_esp: \"Cuando Donald Trump habla de deportar a 11 millones de personas, se refiere a\nseparar familias... como la m\u00eda y la de Kar\u2026", "in_reply_to_screen_name": null, "retweet_count": 480, "favorite_count": 0, "source": "TweetDeck", "id_str": "757736326821273605", "is_retweet": true}, {"created_at": "Wed Apr 20 21:04:55 +0000 2016", "text": "It's important that people are held accountable for water poisoning in Flint, but Congress needs to act now to help Flint families. -H", "in_reply_to_screen_name": null, "retweet_count": 1187, "favorite_count": 3001, "source": "TweetDeck", "id_str": "722893834435211265", "is_retweet": false}, {"created_at": "Sun Aug 14 23:43:40 +0000 2016", "text": "Yesterday, @ShotDiva made Olympic history with her gold medal in women's shot put (@TeamUSA's first!). https://t.co/ih1HYqnP8U", "in_reply_to_screen_name": null, "retweet_count": 2953, "favorite_count": 12459, "source": "TweetDeck", "id_str": "764970778852986880", "is_retweet": false}, {"created_at": "Thu Apr 28 17:46:30 +0000 2016", "text": "Candidate Trump opposes equal pay, paid leave, and Planned Parenthood.\n\nPresident Trump? Same.\nhttps://t.co/H85Ud5jyOe", "in_reply_to_screen_name": null, "retweet_count": 2045, "favorite_count": 3215, "source": "Twitter Web Client", "id_str": "725743003055185921", "is_retweet": false}, {"created_at": "Sat Jun 04 14:47:39 +0000 2016", "text": "Trump no tiene el derecho de definir qui\u00e9n es y no es parte de este pa\u00eds. Nos definen los valores\u2014no la intolerancia.", "in_reply_to_screen_name": null, "retweet_count": 1247, "favorite_count": 2408, "source": "Twitter for iPhone", "id_str": "739106345052438528", "is_retweet": false}, {"created_at": "Sat Apr 09 23:58:13 +0000 2016", "text": "Donald Trump says wages are too high. (Yeah, you read that right.)\nhttps://t.co/up8ZI1WULC", "in_reply_to_screen_name": null, "retweet_count": 1803, "favorite_count": 2786, "source": "Twitter Web Client", "id_str": "718951179565162496", "is_retweet": false}, {"created_at": "Tue Nov 08 02:02:35 +0000 2016", "text": "\u201cYou don\u2019t just have to vote against someone, you have somebody extraordinary to vote for.\u201d \u2014@POTUS https://t.co/o70dVreNPB", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2099, "favorite_count": 4837, "source": "TweetDeck", "id_str": "795808707410034688", "is_retweet": false}, {"created_at": "Sat Jul 30 00:19:17 +0000 2016", "text": "Donald Trump has painted a dark, divisive picture of America. We have 102 days to stop him from becoming president.\nhttps://t.co/hp3Bb0AS5Y", "in_reply_to_screen_name": null, "retweet_count": 4397, "favorite_count": 13690, "source": "Twitter Web Client", "id_str": "759181533743681536", "is_retweet": false}, {"created_at": "Mon Oct 10 02:23:00 +0000 2016", "text": "You did, in fact, say this. #debate https://t.co/WURWs6aJ5f", "in_reply_to_screen_name": null, "retweet_count": 13144, "favorite_count": 23944, "source": "TweetDeck", "id_str": "785304593655824384", "is_retweet": false}, {"created_at": "Thu Mar 10 02:59:24 +0000 2016", "text": "Will repeat this as often as needed: No bank should be too big to fail. No executive should be too big to jail. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 879, "favorite_count": 1873, "source": "TweetDeck", "id_str": "707762750773141509", "is_retweet": false}, {"created_at": "Fri Jul 22 04:02:47 +0000 2016", "text": "How will you feel if you wake up on Jan. 20 to President Trump? Chip in now to help keep him out of the White House: https://t.co/SAwvtVUn8U", "in_reply_to_screen_name": null, "retweet_count": 1430, "favorite_count": 3291, "source": "TweetDeck", "id_str": "756338678851567616", "is_retweet": false}, {"created_at": "Sun Jun 12 19:15:38 +0000 2016", "text": "\"This is a time to stand together and resolve to do everything we can to defend our communities and country.\" \u2014Hillary on the attack in FL", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3336, "favorite_count": 9201, "source": "TweetDeck", "id_str": "742072889860579329", "is_retweet": false}, {"created_at": "Wed Mar 30 16:44:29 +0000 2016", "text": "Our next president has to be just as passionate about defending our people and our country as about fixing our economy.", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 2093, "source": "TweetDeck", "id_str": "715218150162173952", "is_retweet": false}, {"created_at": "Fri Oct 21 01:40:57 +0000 2016", "text": "\u201cWe need to get better at finding ways to disagree on matters of policy, while agreeing on questions of decency.\u201d #AlSmithDinner", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2980, "favorite_count": 8993, "source": "TweetDeck", "id_str": "789280279206789122", "is_retweet": false}, {"created_at": "Sun Nov 06 17:00:46 +0000 2016", "text": "10 minutes of Donald Trump demeaning, objectifying, and insulting women. https://t.co/3TKJ4H68Kz https://t.co/bgQKjNJqwR", "in_reply_to_screen_name": null, "retweet_count": 4596, "favorite_count": 6281, "source": "TweetDeck", "id_str": "795309964290097152", "is_retweet": false}, {"created_at": "Fri Oct 14 15:30:43 +0000 2016", "text": "\"She's in the arena for you, fighting every day to make sure everybody gets a fair shake.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 565, "favorite_count": 1467, "source": "TweetDeck", "id_str": "786952383079284737", "is_retweet": false}, {"created_at": "Fri Oct 28 22:41:12 +0000 2016", "text": "\"You have a chance to elect a woman, our first female president, who has spent her entire life moving this country forward.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2130, "favorite_count": 6090, "source": "TweetDeck", "id_str": "792134145749159937", "is_retweet": false}, {"created_at": "Tue Jun 21 16:20:12 +0000 2016", "text": "\"If you\u2019re running for president, you should say what you want to do, how you\u2019re going to pay for it, and how you\u2019ll get it done.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1346, "favorite_count": 3504, "source": "TweetDeck", "id_str": "745290229200850944", "is_retweet": false}, {"created_at": "Tue May 03 19:32:52 +0000 2016", "text": "Donald Trump\u2019s tax plan would give $3.2 trillion to millionaires &amp; billionaires.\nTed Cruz would give them even more.\n\nWe can't afford that.", "in_reply_to_screen_name": null, "retweet_count": 1120, "favorite_count": 2459, "source": "TweetDeck", "id_str": "727581710376931328", "is_retweet": false}, {"created_at": "Thu Sep 08 00:48:33 +0000 2016", "text": "The worst part is, this isn\u2019t the first time Donald Trump has praised Russia and Putin. #NBCNewsForum https://t.co/N6ySNILYMx", "in_reply_to_screen_name": null, "retweet_count": 3864, "favorite_count": 5988, "source": "TweetDeck", "id_str": "773684415054708736", "is_retweet": false}, {"created_at": "Tue Sep 27 15:12:56 +0000 2016", "text": "One moment last night that proved\u2014again\u2014that Hillary's the only candidate ready to lead on the global stage: https://t.co/i4lrw7BpE9 #SheWon", "in_reply_to_screen_name": null, "retweet_count": 1553, "favorite_count": 5189, "source": "TweetDeck", "id_str": "780787312460464129", "is_retweet": false}, {"created_at": "Fri Jan 29 19:55:54 +0000 2016", "text": "Trump wasn\u2019t at the latest #GOPdebate\u2014but his ideas certainly were. https://t.co/BFjJKed8GQ", "in_reply_to_screen_name": null, "retweet_count": 171, "favorite_count": 373, "source": "TweetDeck", "id_str": "693160662210646017", "is_retweet": false}, {"created_at": "Thu Mar 03 20:55:42 +0000 2016", "text": "Kids come before corporations. Companies shouldn't get special loopholes that endanger families. -H https://t.co/QiL9D3KIi2", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 2287, "source": "TweetDeck", "id_str": "705496896635346944", "is_retweet": false}, {"created_at": "Sat Aug 27 23:54:38 +0000 2016", "text": "Families across America are feeling the strain from prescription drug price-gouging. Here's how we'll take this on: https://t.co/FOTswQ6lXT", "in_reply_to_screen_name": null, "retweet_count": 2337, "favorite_count": 5439, "source": "TweetDeck", "id_str": "769684579561201665", "is_retweet": false}, {"created_at": "Tue Oct 25 15:53:50 +0000 2016", "text": "RT @HFA: That presidential look. https://t.co/gKaguNYO7t", "in_reply_to_screen_name": null, "retweet_count": 1014, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "790944465976430598", "is_retweet": true}, {"created_at": "Thu Jun 23 15:48:30 +0000 2016", "text": "Today's heartbreaking #SCOTUS immigration ruling could tear apart 5 million families facing deportation. We must do better. -H", "in_reply_to_screen_name": null, "retweet_count": 4703, "favorite_count": 9323, "source": "TweetDeck", "id_str": "746007029546913792", "is_retweet": false}, {"created_at": "Fri May 06 13:05:35 +0000 2016", "text": "We're not going to round up millions of immigrants and deport them\u2014no matter how many times Trump says he wants to. https://t.co/HzFWUT1XFl", "in_reply_to_screen_name": null, "retweet_count": 2281, "favorite_count": 3689, "source": "TweetDeck", "id_str": "728571410763939840", "is_retweet": false}, {"created_at": "Fri Jul 22 03:11:00 +0000 2016", "text": "RT @TheBriefing2016: Fixed it for you. #RNCInCLE https://t.co/2hZP2qRWNj https://t.co/9zZll0Ftr4", "in_reply_to_screen_name": null, "retweet_count": 894, "favorite_count": 0, "source": "TweetDeck", "id_str": "756325645622312960", "is_retweet": true}, {"created_at": "Tue Oct 18 01:16:43 +0000 2016", "text": "Our progress is on the ballot.\nTolerance is on the ballot.\nDemocracy is on the ballot.\n\nMake a plan to vote:\u2026 https://t.co/ywyzFUKNZi", "in_reply_to_screen_name": null, "retweet_count": 6764, "favorite_count": 15711, "source": "Media Studio", "id_str": "788187016924106752", "is_retweet": false}, {"created_at": "Thu Aug 04 20:24:24 +0000 2016", "text": "\"If you're not registered, and you're eligible as an American citizen, please go sign up.\" \u2014Hillary in Nevada: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1880, "favorite_count": 4670, "source": "TweetDeck", "id_str": "761296750799908864", "is_retweet": false}, {"created_at": "Tue Nov 01 00:55:01 +0000 2016", "text": "With just 8 days left, this can\u2019t wait. RT if you agree Trump should immediately disclose all of his ties and conne\u2026 https://t.co/NkrtXsKjjK", "in_reply_to_screen_name": null, "retweet_count": 21088, "favorite_count": 21883, "source": "Media Studio", "id_str": "793254986641764356", "is_retweet": false}, {"created_at": "Tue Nov 08 14:22:38 +0000 2016", "text": "RT @JeremyShorr: She once told me girls couldn't be #astronauts or #presidents. Showed her #SallyRide. Hope to show her @HillaryClinton tom\u2026", "in_reply_to_screen_name": null, "retweet_count": 2948, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795994944339066882", "is_retweet": true}, {"created_at": "Mon Mar 28 21:15:10 +0000 2016", "text": "\"Today, I\u2019m adding my voice to the chorus asking Senator Grassley to step up and do his job. He should hold a hearing.\" \u2014Hillary #DoYourJob", "in_reply_to_screen_name": null, "retweet_count": 949, "favorite_count": 1899, "source": "TweetDeck", "id_str": "714561495082795008", "is_retweet": false}, {"created_at": "Sat Jul 23 15:51:26 +0000 2016", "text": "RT @HillaryforFL: The crowd @FIU eagerly awaits for @HillaryClinton and @TimKaine to take the stage. #StrongerTogether https://t.co/MqB95kn\u2026", "in_reply_to_screen_name": null, "retweet_count": 736, "favorite_count": 0, "source": "TweetDeck", "id_str": "756879404660301824", "is_retweet": true}, {"created_at": "Mon Oct 24 21:28:28 +0000 2016", "text": "When Trump trivializes the sacrifice of our military and veterans, he makes it clear: He has no idea what service t\u2026 https://t.co/taRFZh6Ny5", "in_reply_to_screen_name": null, "retweet_count": 8503, "favorite_count": 17316, "source": "Media Studio", "id_str": "790666293108244480", "is_retweet": false}, {"created_at": "Thu Jul 28 02:36:07 +0000 2016", "text": "RT @timkaine: Hillary's ready because of her heart. She's ready because of her experience. She's ready because she knows we're stronger tog\u2026", "in_reply_to_screen_name": null, "retweet_count": 1542, "favorite_count": 0, "source": "TweetDeck", "id_str": "758491193785225216", "is_retweet": true}, {"created_at": "Tue Sep 27 01:40:50 +0000 2016", "text": "\"It's about time this country had somebody running it who has an idea about money.\" \u2014Trump #debatenight https://t.co/dpDrKCHVCd", "in_reply_to_screen_name": null, "retweet_count": 2411, "favorite_count": 5867, "source": "TweetDeck", "id_str": "780582940732424192", "is_retweet": false}, {"created_at": "Thu Jun 09 15:00:41 +0000 2016", "text": "History &gt; bedtime. https://t.co/Au3gF3dRG0", "in_reply_to_screen_name": null, "retweet_count": 1469, "favorite_count": 5728, "source": "TweetDeck", "id_str": "740921566700163072", "is_retweet": false}, {"created_at": "Wed Oct 05 03:00:13 +0000 2016", "text": "RT @Vegalteno: Most imp lesson VP debate given by @timkaine \"let women make decisions over their own body.\" @GovPenceIN wants 2 force his p\u2026", "in_reply_to_screen_name": null, "retweet_count": 1365, "favorite_count": 0, "source": "TweetDeck", "id_str": "783502022381363200", "is_retweet": true}, {"created_at": "Sat Sep 03 02:35:32 +0000 2016", "text": "Donald Trump's plan on immigration has been clear all along: demonize immigrants, \"build a wall,\" deport millions. https://t.co/uSSd7XigYp", "in_reply_to_screen_name": null, "retweet_count": 3687, "favorite_count": 6708, "source": "TweetDeck", "id_str": "771899397437259776", "is_retweet": false}, {"created_at": "Fri Oct 21 21:10:59 +0000 2016", "text": "\u201cThere\u2019s something really exciting happening right now\u2014people are coming together\u2026to reject hate and division.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 812, "favorite_count": 1843, "source": "TweetDeck", "id_str": "789574728436609024", "is_retweet": false}, {"created_at": "Mon Feb 01 16:27:29 +0000 2016", "text": "This #BlackHistoryMonth, we honor those who sacrificed for equality &amp; fought for justice, and we recognize those who carry on the legacy. -H", "in_reply_to_screen_name": null, "retweet_count": 3155, "favorite_count": 3903, "source": "TweetDeck", "id_str": "694195375670976512", "is_retweet": false}, {"created_at": "Tue Feb 02 04:35:54 +0000 2016", "text": "\"I will not let [Republicans'] divisiveness\u2014their efforts to rip away the progress we\u2019ve made\u2014be successful.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 941, "favorite_count": 2088, "source": "TweetDeck", "id_str": "694378686104084480", "is_retweet": false}, {"created_at": "Sun Sep 18 00:22:15 +0000 2016", "text": "Presidential. https://t.co/tlfpcbVqkT", "in_reply_to_screen_name": null, "retweet_count": 4917, "favorite_count": 12783, "source": "TweetDeck", "id_str": "777301674377478144", "is_retweet": false}, {"created_at": "Thu Oct 20 20:40:20 +0000 2016", "text": "\"Go to https://t.co/tTgeqxNqYm because...there\u2019s only one way we lose this election, just one: if we don\u2019t turn out to vote.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 492, "favorite_count": 1164, "source": "TweetDeck", "id_str": "789204625207521280", "is_retweet": false}, {"created_at": "Fri Feb 12 20:16:19 +0000 2016", "text": "Excited to announce the #ImWithHer concert at Radio City with @katyperry, @eltonofficial, &amp; @AndraDayMusic! Join us: https://t.co/A2HshaIP6j", "in_reply_to_screen_name": null, "retweet_count": 1069, "favorite_count": 1915, "source": "TweetDeck", "id_str": "698239227092406272", "is_retweet": false}, {"created_at": "Thu Oct 13 17:35:41 +0000 2016", "text": "\"Now is the time for all of us to stand up and say enough is enough. This has got to stop right now.\" \u2014@FLOTUS on T\u2026 https://t.co/ANs1w2baVm", "in_reply_to_screen_name": null, "retweet_count": 11058, "favorite_count": 25886, "source": "TweetDeck", "id_str": "786621444935520256", "is_retweet": false}, {"created_at": "Fri Sep 09 13:57:54 +0000 2016", "text": "Making the wrong choice on climate change would be a disaster for our kids and grandkids. https://t.co/dhc0OABqml", "in_reply_to_screen_name": null, "retweet_count": 3857, "favorite_count": 10138, "source": "TweetDeck", "id_str": "774245447514873858", "is_retweet": false}, {"created_at": "Sat Sep 24 21:55:59 +0000 2016", "text": "\"I thought, this woman\u2014I want to ride with her.\" \u2014Roxie, a Republican and small business owner, on meeting Hillary https://t.co/s5zyaOBLXB", "in_reply_to_screen_name": null, "retweet_count": 4732, "favorite_count": 11487, "source": "TweetDeck", "id_str": "779801578723217408", "is_retweet": false}, {"created_at": "Thu Oct 20 21:25:21 +0000 2016", "text": "\"Our hope is grounded in hard work and hard-earned faith...that we are all precious and worthy, no matter where we come from.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 496, "favorite_count": 1308, "source": "TweetDeck", "id_str": "789215954211340288", "is_retweet": false}, {"created_at": "Fri Oct 28 02:57:37 +0000 2016", "text": "\ud83d\ude4c https://t.co/pWF9Evqr4j", "in_reply_to_screen_name": null, "retweet_count": 4712, "favorite_count": 19777, "source": "TweetDeck", "id_str": "791836288836042752", "is_retweet": false}, {"created_at": "Mon Oct 03 22:14:22 +0000 2016", "text": "Hillary\u2019s speaking live in Akron, Ohio. Tune in now: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 2543, "source": "TweetDeck", "id_str": "783067696099385345", "is_retweet": false}, {"created_at": "Thu Jul 28 03:27:53 +0000 2016", "text": "\"There has never been a man or a woman more qualified than Hillary Clinton to serve as president.\" \u2014@POTUS https://t.co/5xI4BTop7Y", "in_reply_to_screen_name": null, "retweet_count": 3283, "favorite_count": 7745, "source": "TweetDeck", "id_str": "758504220962201600", "is_retweet": false}, {"created_at": "Tue Jul 12 15:44:04 +0000 2016", "text": "Hillary \"knows that it is absurd that middle-class Americans are paying an effective tax rate higher than hedge fund millionaires.\u201d \u2014Bernie", "in_reply_to_screen_name": null, "retweet_count": 1008, "favorite_count": 3091, "source": "TweetDeck", "id_str": "752891283006447616", "is_retweet": false}, {"created_at": "Mon Mar 14 23:09:41 +0000 2016", "text": "Donald Trump is fanning the flames of violence. That isn\u2019t leadership. It\u2019s dangerous.  #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1756, "favorite_count": 3744, "source": "TweetDeck", "id_str": "709516883477798912", "is_retweet": false}, {"created_at": "Mon Sep 12 17:50:34 +0000 2016", "text": "RT @ClintonFdn: Leading charity watchdogs agree: the work of the @ClintonFdn earns the highest marks across the board. https://t.co/wOqMvnn\u2026", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 0, "source": "TweetDeck", "id_str": "775391163243237376", "is_retweet": true}, {"created_at": "Thu Nov 03 03:43:51 +0000 2016", "text": "We know that America is big-hearted, not small-minded. We want to lift people up, not tear each other down. https://t.co/jsBEPAXKqG", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1842, "favorite_count": 4403, "source": "TweetDeck", "id_str": "794022252182470656", "is_retweet": false}, {"created_at": "Sun Feb 21 20:29:21 +0000 2016", "text": "Flint wasn't just treated with indifference, it was treated with neglect, and that isn't acceptable. https://t.co/Eu5c9yYLkt", "in_reply_to_screen_name": null, "retweet_count": 748, "favorite_count": 1776, "source": "TweetDeck", "id_str": "701504001028845570", "is_retweet": false}, {"created_at": "Tue Mar 08 01:13:54 +0000 2016", "text": "\"Her first instinct is always...to ask, 'What can I do to make it better?'\" \u2014@billclinton\nhttps://t.co/Joi5eim0Js", "in_reply_to_screen_name": null, "retweet_count": 1080, "favorite_count": 2304, "source": "Twitter Web Client", "id_str": "707011428784287745", "is_retweet": false}, {"created_at": "Tue Sep 06 19:58:33 +0000 2016", "text": "We can take on the threat of climate change and make America a clean energy superpower.\n\nOr, we can do nothing. https://t.co/JlYmN61epB", "in_reply_to_screen_name": null, "retweet_count": 2604, "favorite_count": 5895, "source": "TweetDeck", "id_str": "773249047935197184", "is_retweet": false}, {"created_at": "Thu Jul 28 03:22:21 +0000 2016", "text": "\"She knows that for progress to happen, we have to listen to each other, and see ourselves in each other.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1352, "favorite_count": 4433, "source": "TweetDeck", "id_str": "758502829434793985", "is_retweet": false}, {"created_at": "Mon Mar 07 23:50:53 +0000 2016", "text": "We have to reform the criminal justice system. We also have to expand access to education, health care, jobs, and fair housing. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 595, "favorite_count": 1386, "source": "TweetDeck", "id_str": "706990535022616578", "is_retweet": false}, {"created_at": "Tue Jul 26 02:56:49 +0000 2016", "text": "RT @TheBriefing2016: \"I can't see him helping anyone but himself.\" \u2014Cheryl Lankford, single mom and Trump University victim #DemsInPhilly\nh\u2026", "in_reply_to_screen_name": null, "retweet_count": 1380, "favorite_count": 0, "source": "TweetDeck", "id_str": "757771628675751936", "is_retweet": true}, {"created_at": "Fri Nov 04 21:28:41 +0000 2016", "text": "\u201cIf he doesn\u2019t respect all Americans now, how can we trust him to serve all Americans in the future?\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1464, "favorite_count": 3259, "source": "TweetDeck", "id_str": "794652613304340480", "is_retweet": false}, {"created_at": "Mon Jun 06 19:11:37 +0000 2016", "text": "33,000 people die from gun violence each year.\n \nWe can save a lot of these lives.\nhttps://t.co/5HjNZxPvZ1", "in_reply_to_screen_name": null, "retweet_count": 1527, "favorite_count": 3213, "source": "Twitter Web Client", "id_str": "739897550963015680", "is_retweet": false}, {"created_at": "Wed Jul 06 14:25:07 +0000 2016", "text": "Learn more about Hillary's plan to give former students relief from student debt: https://t.co/pzGQeUv5OT https://t.co/yA6fRDivjL", "in_reply_to_screen_name": null, "retweet_count": 1236, "favorite_count": 2791, "source": "TweetDeck", "id_str": "750697086744719364", "is_retweet": false}, {"created_at": "Wed Aug 31 16:58:49 +0000 2016", "text": "We can\u2019t cozy up to dictators; we have to stand up to them.\n\nWe can\u2019t contain ISIS; we must defeat it. And we will.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 616, "favorite_count": 1126, "source": "TweetDeck", "id_str": "771029486502551552", "is_retweet": false}, {"created_at": "Fri Aug 05 16:47:11 +0000 2016", "text": "Trump is harkening back to the most shameful chapters of our history and appealing to the ugliest impulses of our society.", "in_reply_to_screen_name": null, "retweet_count": 1987, "favorite_count": 6157, "source": "TweetDeck", "id_str": "761604475752767490", "is_retweet": false}, {"created_at": "Wed Sep 07 11:52:44 +0000 2016", "text": "RT @dallasnews: We recommend @HillaryClinton for U.S. president https://t.co/eWtGJexQqz https://t.co/CazHEkM2pX", "in_reply_to_screen_name": null, "retweet_count": 4639, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "773489172904550400", "is_retweet": true}, {"created_at": "Tue May 31 21:12:51 +0000 2016", "text": "First: the @latimes.\nNow: @JerryBrownGov.\n\nHere's why Californians are voting for Hillary on June 7.\nhttps://t.co/KptrHYFvGA", "in_reply_to_screen_name": null, "retweet_count": 1191, "favorite_count": 2396, "source": "TweetDeck", "id_str": "737753732725772288", "is_retweet": false}, {"created_at": "Wed Jul 27 01:22:35 +0000 2016", "text": "\"I trusted her when my life was on the line, and she came through.\u201d \u20149/11 survivor, Lauren Manning https://t.co/pjsSri5VUs", "in_reply_to_screen_name": null, "retweet_count": 1660, "favorite_count": 5195, "source": "TweetDeck", "id_str": "758110302068178944", "is_retweet": false}, {"created_at": "Thu Jul 28 23:22:22 +0000 2016", "text": "It's all happening. Tune in for an exclusive look at the #DemsInPhilly as Hillary officially accepts the nomination.\nhttps://t.co/1Yu5RPLzVb", "in_reply_to_screen_name": null, "retweet_count": 1454, "favorite_count": 4948, "source": "Twitter Web Client", "id_str": "758804822954954752", "is_retweet": false}, {"created_at": "Wed Apr 13 23:52:36 +0000 2016", "text": "\"Hillary Clinton luchar\u00e1 por nosotros\". \u2014Tom Perez\nhttps://t.co/b5WCXtVkMv", "in_reply_to_screen_name": null, "retweet_count": 473, "favorite_count": 855, "source": "Twitter Web Client", "id_str": "720399316427223043", "is_retweet": false}, {"created_at": "Sat Aug 20 21:03:50 +0000 2016", "text": "Donald Trump has shown us who he is. We should believe him. https://t.co/TWj7QwEfVh", "in_reply_to_screen_name": null, "retweet_count": 4443, "favorite_count": 8100, "source": "TweetDeck", "id_str": "767104881253548034", "is_retweet": false}, {"created_at": "Thu Oct 20 21:19:16 +0000 2016", "text": "With just 19 days left in this campaign, @FLOTUS hits the trail for Hillary in Arizona. Watch live \u2192 https://t.co/D8ELAkkMcd", "in_reply_to_screen_name": null, "retweet_count": 989, "favorite_count": 4394, "source": "TweetDeck", "id_str": "789214423969828864", "is_retweet": false}, {"created_at": "Sat Nov 05 01:50:07 +0000 2016", "text": ".@Beyonce &amp;\n@S_C_ &amp;\nHillary &amp;\nYou?\nhttps://t.co/3TKJ4H68Kz https://t.co/DAxSZLuQUB", "in_reply_to_screen_name": null, "retweet_count": 6095, "favorite_count": 15702, "source": "TweetDeck", "id_str": "794718405949583360", "is_retweet": false}, {"created_at": "Tue Aug 23 01:05:18 +0000 2016", "text": "The stories behind some of the history-making women of @TeamUSA. https://t.co/S61LuCyMje https://t.co/dybz3cAJsg", "in_reply_to_screen_name": null, "retweet_count": 1659, "favorite_count": 4891, "source": "TweetDeck", "id_str": "767890423188746241", "is_retweet": false}, {"created_at": "Thu Oct 06 00:28:29 +0000 2016", "text": "We make it almost impossible for too many women to balance work and family. That needs to change:\u2026 https://t.co/S0qSTbimjx", "in_reply_to_screen_name": null, "retweet_count": 2496, "favorite_count": 6506, "source": "Media Studio", "id_str": "783826226087616517", "is_retweet": false}, {"created_at": "Wed Aug 17 23:09:34 +0000 2016", "text": "Donald Trump just hired the head of an extreme, right-wing \"news\" organization to run his campaign. https://t.co/tswSCdkiBy", "in_reply_to_screen_name": null, "retweet_count": 2018, "favorite_count": 3862, "source": "TweetDeck", "id_str": "766049361021300737", "is_retweet": false}, {"created_at": "Mon Oct 31 00:17:32 +0000 2016", "text": "RT @timkaine: Checked attending a World Series game off my bucket list.\n\nElecting the first woman president is next. https://t.co/B21QKpeiS\u2026", "in_reply_to_screen_name": null, "retweet_count": 3240, "favorite_count": 0, "source": "TweetDeck", "id_str": "792883168084914176", "is_retweet": true}, {"created_at": "Wed Aug 03 17:32:29 +0000 2016", "text": "Donald Trump's message to workers: You're fired.\nhttps://t.co/Fut2urP8nZ", "in_reply_to_screen_name": null, "retweet_count": 3137, "favorite_count": 5999, "source": "Twitter Web Client", "id_str": "760891100173180928", "is_retweet": false}, {"created_at": "Sat Jul 23 01:15:36 +0000 2016", "text": "RT @JeffFlake: Trying to count the ways I hate @timkaine. Drawing a blank. Congrats to a good man and a good friend.", "in_reply_to_screen_name": null, "retweet_count": 5414, "favorite_count": 0, "source": "TweetDeck", "id_str": "756658991820857344", "is_retweet": true}, {"created_at": "Sat Oct 15 19:10:48 +0000 2016", "text": "This election will have record turnout, because voters see through Trump\u2019s shameful attempts to undermine it just w\u2026 https://t.co/sz67JPKzjx", "in_reply_to_screen_name": null, "retweet_count": 5645, "favorite_count": 15849, "source": "TweetDeck", "id_str": "787370154065879040", "is_retweet": false}, {"created_at": "Sun Mar 27 00:41:28 +0000 2016", "text": "What happened in North Carolina is the latest reminder that the fight for LGBT equality is far from over. https://t.co/3ZVpqRtzJs", "in_reply_to_screen_name": null, "retweet_count": 2097, "favorite_count": 3980, "source": "TweetDeck", "id_str": "713888635783946240", "is_retweet": false}, {"created_at": "Wed Apr 27 18:50:30 +0000 2016", "text": "So if fighting for women is playing the #WomanCard, well... https://t.co/wUuidf8qoj", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2795, "favorite_count": 6024, "source": "TweetDeck", "id_str": "725396721115750400", "is_retweet": false}, {"created_at": "Thu Oct 27 18:58:21 +0000 2016", "text": "\"We have never before had a more qualified or prepared candidate for president than Hillary Clinton.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 552, "favorite_count": 1373, "source": "TweetDeck", "id_str": "791715677673512965", "is_retweet": false}, {"created_at": "Mon Mar 14 21:06:37 +0000 2016", "text": "\"Donald Trump is running a cynical campaign of hate and fear... he's encouraging violence and chaos.\"\nhttps://t.co/mrgw30frM6", "in_reply_to_screen_name": null, "retweet_count": 4566, "favorite_count": 6341, "source": "Twitter Web Client", "id_str": "709485911629701120", "is_retweet": false}, {"created_at": "Tue Mar 01 23:44:45 +0000 2016", "text": "Waiting in line to vote? Stay put\u2014Hillary\u2019s counting on you! RT to tell a friend. https://t.co/7wPUiHiNLD", "in_reply_to_screen_name": null, "retweet_count": 864, "favorite_count": 1499, "source": "TweetDeck", "id_str": "704814666162241536", "is_retweet": false}, {"created_at": "Tue Jun 14 16:31:00 +0000 2016", "text": "People of different faiths, backgrounds, sexual orientations, and gender identities are coming together to say: we won\u2019t let hate defeat us.", "in_reply_to_screen_name": null, "retweet_count": 2151, "favorite_count": 5118, "source": "TweetDeck", "id_str": "742756232411418624", "is_retweet": false}, {"created_at": "Thu Aug 25 14:01:32 +0000 2016", "text": "RT @johnpodesta: America's best idea 100 years ago is still our best idea today. Happy birthday to the @NatlParkService. #NPS100 https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 2494, "favorite_count": 0, "source": "TweetDeck", "id_str": "768810545688567808", "is_retweet": true}, {"created_at": "Thu Jan 14 23:44:59 +0000 2016", "text": "Always a great time with @jimmyfallon. Thanks for snapping with us! (\ud83d\udc7b: HillaryClinton) https://t.co/uAAUnvECQ7", "in_reply_to_screen_name": null, "retweet_count": 779, "favorite_count": 3013, "source": "TweetDeck", "id_str": "687782494993821696", "is_retweet": false}, {"created_at": "Mon May 02 00:52:01 +0000 2016", "text": "\"Systemic racism, inter-generational poverty, gun violence\u2014these aren\u2019t somebody else\u2019s problems. These are our problems.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1462, "favorite_count": 3101, "source": "TweetDeck", "id_str": "726937251461140482", "is_retweet": false}, {"created_at": "Tue Jan 26 20:18:11 +0000 2016", "text": "El virus Zika destaca la importancia de la educaci\u00f3n, investigaci\u00f3n y financiaci\u00f3n de la salud p\u00fablica. https://t.co/nK4ho7JunM", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 244, "favorite_count": 339, "source": "TweetDeck", "id_str": "692079104372400129", "is_retweet": false}, {"created_at": "Sun Jan 31 19:05:16 +0000 2016", "text": "Fighting to improve the lives of kids and families since day one of her career. https://t.co/ARRJmlzIip", "in_reply_to_screen_name": null, "retweet_count": 444, "favorite_count": 947, "source": "TweetDeck", "id_str": "693872695453286401", "is_retweet": false}, {"created_at": "Wed Jul 13 17:16:35 +0000 2016", "text": "Imagine if Trump had not just Twitter to go after critics and opponents, but also the IRS\u2014or our military. Do you think he\u2019d be restrained?", "in_reply_to_screen_name": null, "retweet_count": 2139, "favorite_count": 5031, "source": "TweetDeck", "id_str": "753276953780744193", "is_retweet": false}, {"created_at": "Tue Aug 02 00:02:03 +0000 2016", "text": "Trump wants to be our Commander-in-Chief. Here's how he's treated veterans thus far:\nhttps://t.co/iquFJ676Rj", "in_reply_to_screen_name": null, "retweet_count": 7237, "favorite_count": 11890, "source": "Twitter Web Client", "id_str": "760264360291815424", "is_retweet": false}, {"created_at": "Mon Aug 15 17:32:48 +0000 2016", "text": "\u201cAs Scranton has always had my back, we\u2014all of us\u2014are going to have your back, Hillary.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 534, "favorite_count": 2054, "source": "TweetDeck", "id_str": "765239834457800705", "is_retweet": false}, {"created_at": "Fri Oct 21 01:33:17 +0000 2016", "text": "\"I\u2019ve had to listen to Donald Trump for 3 full debates\u2026I have now stood next to Donald Trump longer than any of his campaign managers.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3180, "favorite_count": 9168, "source": "TweetDeck", "id_str": "789278350103736320", "is_retweet": false}, {"created_at": "Wed May 11 23:41:45 +0000 2016", "text": "It\u2019s hard to imagine how we\u2019re going to lift up families if we don't raise the national minimum wage. https://t.co/mibNHBnv65", "in_reply_to_screen_name": null, "retweet_count": 2030, "favorite_count": 4564, "source": "TweetDeck", "id_str": "730543448084852736", "is_retweet": false}, {"created_at": "Mon Oct 10 19:39:05 +0000 2016", "text": "If Trump wants to make America great again, he should start by buying American steel for his construction projects.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1369, "favorite_count": 3997, "source": "TweetDeck", "id_str": "785565335869063168", "is_retweet": false}, {"created_at": "Fri Jun 24 13:56:48 +0000 2016", "text": "\"We respect the choice the people of the United Kingdom have made.\" \u2014Hillary #BrexitVote https://t.co/58yM8oDkL6", "in_reply_to_screen_name": null, "retweet_count": 2655, "favorite_count": 6854, "source": "TweetDeck", "id_str": "746341305043783680", "is_retweet": false}, {"created_at": "Wed Apr 13 03:32:03 +0000 2016", "text": "#EqualPayDay means it's taken this long into 2016 for women, on average, to catch up to what men made in 2015. https://t.co/NcbueydX6J", "in_reply_to_screen_name": null, "retweet_count": 821, "favorite_count": 1505, "source": "TweetDeck", "id_str": "720092155520258048", "is_retweet": false}, {"created_at": "Wed Aug 17 18:40:09 +0000 2016", "text": "With just 83 days until Election Day, Trump hired one of the most extreme right-wing voices to run his campaign. https://t.co/geausYW6oD", "in_reply_to_screen_name": null, "retweet_count": 5184, "favorite_count": 13275, "source": "TweetDeck", "id_str": "765981557790244864", "is_retweet": false}, {"created_at": "Sat Jan 30 02:01:07 +0000 2016", "text": "\"Health care is a basic right. We are 90 percent covered\u2014we gotta get to 100 percent.\" https://t.co/ySCag7eW2j", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 1052, "source": "TweetDeck", "id_str": "693252569737506816", "is_retweet": false}, {"created_at": "Thu Jan 07 17:25:56 +0000 2016", "text": "LGBT kids don\u2019t need to be \u201ccured\u201d of anything. https://t.co/NMypo9ZaGY", "in_reply_to_screen_name": null, "retweet_count": 1829, "favorite_count": 3771, "source": "TweetDeck", "id_str": "685150388979396608", "is_retweet": false}, {"created_at": "Fri Aug 05 15:49:59 +0000 2016", "text": "RT @WhiteHouse: Good news: Our businesses have added 15 million jobs over the past 77 months \u2192 https://t.co/C8P76l6bVB https://t.co/p0SH7Jn\u2026", "in_reply_to_screen_name": null, "retweet_count": 1566, "favorite_count": 0, "source": "TweetDeck", "id_str": "761590080104435712", "is_retweet": true}, {"created_at": "Fri Mar 25 14:48:54 +0000 2016", "text": "\"The clear and urgent choice is Hillary Clinton.\" \u2014@RollingStone https://t.co/6Epineqwa7", "in_reply_to_screen_name": null, "retweet_count": 1314, "favorite_count": 2966, "source": "TweetDeck", "id_str": "713377121889030144", "is_retweet": false}, {"created_at": "Wed Oct 05 02:18:43 +0000 2016", "text": "Actually, @mike_pence, your running mate did say that. https://t.co/qtAiHWDqsr #VPDebate https://t.co/youtybAqic", "in_reply_to_screen_name": null, "retweet_count": 4051, "favorite_count": 7279, "source": "TweetDeck", "id_str": "783491578736283649", "is_retweet": false}, {"created_at": "Mon Sep 12 19:54:01 +0000 2016", "text": "RT @CollegeDems: \ud83c\udf93 Tuition\n\ud83d\udcda Books\n\ud83c\udfe1 Room and board\n\ud83c\udf55 Food\nCollege adds up. @HillaryClinton wants to help you save: https://t.co/uRn5JlFs8u", "in_reply_to_screen_name": null, "retweet_count": 585, "favorite_count": 0, "source": "TweetDeck", "id_str": "775422234148175882", "is_retweet": true}, {"created_at": "Fri Jul 29 03:02:29 +0000 2016", "text": "\u201cWith your help, I will carry all of your voices with us to the White House!\u201d \u2014Hillary https://t.co/g0ntLQkq6B", "in_reply_to_screen_name": null, "retweet_count": 1577, "favorite_count": 4458, "source": "TweetDeck", "id_str": "758860218537168900", "is_retweet": false}, {"created_at": "Wed Apr 06 15:49:27 +0000 2016", "text": "Watch live: Hillary speaks to the @AFLCIO in Philadelphia on how we can help more American workers succeed: https://t.co/l8fXj23LdE", "in_reply_to_screen_name": null, "retweet_count": 314, "favorite_count": 673, "source": "TweetDeck", "id_str": "717741014358827008", "is_retweet": false}, {"created_at": "Fri Jul 08 22:13:56 +0000 2016", "text": "There is something wrong with our country. There is too much violence...too much senseless killing, too many people dead who shouldn\u2019t be.", "in_reply_to_screen_name": null, "retweet_count": 2905, "favorite_count": 6989, "source": "TweetDeck", "id_str": "751539842564100096", "is_retweet": false}, {"created_at": "Wed Feb 24 02:13:44 +0000 2016", "text": "There is one candidate, in either party, who's prepared to keep us safe as commander in chief. She's on stage at the #DemTownHall right now.", "in_reply_to_screen_name": null, "retweet_count": 655, "favorite_count": 2335, "source": "TweetDeck", "id_str": "702315442526887936", "is_retweet": false}, {"created_at": "Wed Jun 22 18:31:11 +0000 2016", "text": "\"As we Methodists like to say: do all the good you can for all the people you can in all the ways you can.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1446, "favorite_count": 4141, "source": "TweetDeck", "id_str": "745685581028536320", "is_retweet": false}, {"created_at": "Sun Sep 18 01:19:56 +0000 2016", "text": "As @FLOTUS said, this election is about what kind of country we want to be and what we want to leave behind for future generations.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1426, "favorite_count": 4053, "source": "TweetDeck", "id_str": "777316191798980631", "is_retweet": false}, {"created_at": "Thu Aug 18 17:57:03 +0000 2016", "text": "\"@Wired sees only one person running for president who can do the job: Hillary Clinton.\" https://t.co/SQ7hsOaHyl", "in_reply_to_screen_name": null, "retweet_count": 1504, "favorite_count": 4293, "source": "TweetDeck", "id_str": "766333101203197953", "is_retweet": false}, {"created_at": "Tue Sep 27 01:50:42 +0000 2016", "text": "We are not going to bring New York\u2019s unconstitutional stop-and-frisk program nationwide. #debatenight", "in_reply_to_screen_name": null, "retweet_count": 6820, "favorite_count": 17265, "source": "TweetDeck", "id_str": "780585423764647936", "is_retweet": false}, {"created_at": "Wed Jul 27 02:36:00 +0000 2016", "text": "\u201cLooks to me like we elected the wrong Clinton.\u201d \u2014an Arkansas judge on Hillary\u2019s work on rural education as first lady of Arkansas", "in_reply_to_screen_name": null, "retweet_count": 1084, "favorite_count": 4654, "source": "TweetDeck", "id_str": "758128778472292353", "is_retweet": false}, {"created_at": "Sun May 08 01:45:53 +0000 2016", "text": "New #MadeForHistory designs from @DVF and @evafehren. Get them before they're gone \u2192 https://t.co/RzlHZ6LeHO https://t.co/Xkg0TiYNpo", "in_reply_to_screen_name": null, "retweet_count": 507, "favorite_count": 1286, "source": "TweetDeck", "id_str": "729125136524251136", "is_retweet": false}, {"created_at": "Sat Jun 11 19:42:57 +0000 2016", "text": "When Trump goes off his staff's script he insults anyone who challenges him. Judge for his heritage, senator for hers. Rs should disavow. -H", "in_reply_to_screen_name": null, "retweet_count": 3508, "favorite_count": 11096, "source": "TweetDeck", "id_str": "741717376845123584", "is_retweet": false}, {"created_at": "Sun Feb 28 01:25:46 +0000 2016", "text": "If you\u2019re proud to stand with Hillary all the way to the White House, chip in $1 to help her get there: https://t.co/GoyF7nhTCs", "in_reply_to_screen_name": null, "retweet_count": 533, "favorite_count": 1380, "source": "TweetDeck", "id_str": "703752924581781504", "is_retweet": false}, {"created_at": "Fri Apr 22 16:04:21 +0000 2016", "text": "\"It is not enough to be on the money. You need to be making the money.\" \u2014Hillary on ensuring equal pay for women", "in_reply_to_screen_name": null, "retweet_count": 970, "favorite_count": 2275, "source": "TweetDeck", "id_str": "723542968850886656", "is_retweet": false}, {"created_at": "Mon Nov 07 01:38:57 +0000 2016", "text": "Hillary and @JamesTaylor_com are live in New Hampshire with two days to go. Watch here: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 1457, "favorite_count": 5481, "source": "TweetDeck", "id_str": "795440369039187968", "is_retweet": false}, {"created_at": "Fri Sep 09 22:14:35 +0000 2016", "text": "At the 2016 DNC, @HRC Press Secretary @SarahEMcBride became the first openly trans person to speak at a convention. https://t.co/pdYSvHDVfJ", "in_reply_to_screen_name": null, "retweet_count": 1409, "favorite_count": 5141, "source": "TweetDeck", "id_str": "774370445437140992", "is_retweet": false}, {"created_at": "Tue Mar 15 18:51:44 +0000 2016", "text": "\"We can open the door to every person in this country again.\" \u2014@billclinton\nhttps://t.co/xD7KVXLxuG", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 2148, "source": "Twitter Web Client", "id_str": "709814354967834624", "is_retweet": false}, {"created_at": "Wed Jun 29 16:40:04 +0000 2016", "text": "In today's vote on Planned Parenthood, the NH Executive Council can choose families or a political agenda. Watching which side they pick. -H", "in_reply_to_screen_name": null, "retweet_count": 817, "favorite_count": 2970, "source": "TweetDeck", "id_str": "748194333535395841", "is_retweet": false}, {"created_at": "Wed Jul 27 14:52:50 +0000 2016", "text": "\"What I admire most about Hillary is that she never buckles under pressure.\" \u2014@FLOTUS https://t.co/mbg5H8QZA3 #DemsInPHL", "in_reply_to_screen_name": null, "retweet_count": 1503, "favorite_count": 4893, "source": "TweetDeck", "id_str": "758314209272823808", "is_retweet": false}, {"created_at": "Tue May 17 23:04:50 +0000 2016", "text": "Latest reckless idea from Trump: gut rules on Wall Street, and leave middle-class families out to dry. https://t.co/MXXH9JmfQj", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 1657, "source": "TweetDeck", "id_str": "732708484312137729", "is_retweet": false}, {"created_at": "Wed Apr 27 14:29:00 +0000 2016", "text": "Fighting for women's health care, equal pay, and paid leave.\nOr as Donald Trump says, playing the \"woman's card.\"\nhttps://t.co/Ask6loAOFO", "in_reply_to_screen_name": null, "retweet_count": 2780, "favorite_count": 5187, "source": "Twitter Web Client", "id_str": "725330911902863360", "is_retweet": false}, {"created_at": "Thu Sep 15 16:17:02 +0000 2016", "text": "RT @Evan_McMullin: An unsurprising Nazi reference from the \"alt-right\" movement's presidential campaign. This is the real Trump. https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 3076, "favorite_count": 0, "source": "TweetDeck", "id_str": "776454788645003264", "is_retweet": true}, {"created_at": "Thu Aug 25 19:29:21 +0000 2016", "text": "Trump would form an armed deportation force to round up millions of immigrants and kick them out of the country. https://t.co/UNOvmzzaDO", "in_reply_to_screen_name": null, "retweet_count": 988, "favorite_count": 1949, "source": "TweetDeck", "id_str": "768893044229869569", "is_retweet": false}, {"created_at": "Thu Jul 28 01:23:56 +0000 2016", "text": "\"No major party nominee in the history of this nation has known less or been less prepared to deal with...national security\" \u2014Biden on Trump", "in_reply_to_screen_name": null, "retweet_count": 3542, "favorite_count": 8696, "source": "TweetDeck", "id_str": "758473028527280128", "is_retweet": false}, {"created_at": "Sun Feb 07 19:42:25 +0000 2016", "text": "\u201cDo not grow weary doing good. Do not get discouraged. Do not give up.\u201d \u2014Hillary in Flint\nhttps://t.co/C4ggOmMyN2", "in_reply_to_screen_name": null, "retweet_count": 953, "favorite_count": 1723, "source": "Twitter Web Client", "id_str": "696418760278683648", "is_retweet": false}, {"created_at": "Mon Jan 04 20:39:00 +0000 2016", "text": "We\u2019ve got to get back to a place where people listen to and respect one another. https://t.co/1NDWG5V9H0", "in_reply_to_screen_name": null, "retweet_count": 2402, "favorite_count": 5109, "source": "TweetDeck", "id_str": "684111811298373638", "is_retweet": false}, {"created_at": "Fri Jan 29 13:50:45 +0000 2016", "text": "Congrats, Cedrick\u2014what an achievement for you, your family, and your teacher! https://t.co/nDAZfGZQ8d -H", "in_reply_to_screen_name": null, "retweet_count": 234, "favorite_count": 547, "source": "TweetDeck", "id_str": "693068768294105088", "is_retweet": false}, {"created_at": "Tue Nov 08 20:01:45 +0000 2016", "text": "Today's the day when we show how much stronger we are together. Once you\u2019ve voted, sign up for a volunteer shift: https://t.co/KUIKH9W2ct", "in_reply_to_screen_name": null, "retweet_count": 2945, "favorite_count": 9874, "source": "TweetDeck", "id_str": "796080287985926144", "is_retweet": false}, {"created_at": "Tue Feb 16 21:14:43 +0000 2016", "text": "\"Something\u2019s wrong when black kids get arrested for petty crimes but white CEOs get away with fleecing our entire country.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1450, "favorite_count": 2358, "source": "TweetDeck", "id_str": "699703477669388289", "is_retweet": false}, {"created_at": "Sat Feb 06 03:01:10 +0000 2016", "text": "\"I\u2019m a progressive who likes to get things done. And I\u2019ve learned that you have to be both a dreamer and a doer.\" \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 888, "favorite_count": 2053, "source": "TweetDeck", "id_str": "695804396689584130", "is_retweet": false}, {"created_at": "Sat Nov 05 16:41:33 +0000 2016", "text": "If you believe in a better, stronger, fairer America:\n\nVote. https://t.co/3TKJ4H68Kz https://t.co/txByLknaxT", "in_reply_to_screen_name": null, "retweet_count": 2719, "favorite_count": 7433, "source": "TweetDeck", "id_str": "794942742220697600", "is_retweet": false}, {"created_at": "Wed Jul 06 16:50:54 +0000 2016", "text": "\u201cNo major company has filed Chapter 11 more often in the last 30 years than Trump\u2019s casinos.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1854, "favorite_count": 3683, "source": "TweetDeck", "id_str": "750733773277425665", "is_retweet": false}, {"created_at": "Tue Mar 15 20:18:08 +0000 2016", "text": "Happy birthday to Supreme Court Justice, women\u2019s rights advocate, and icon Ruth Bader Ginsburg. https://t.co/lrFiVjKXyE", "in_reply_to_screen_name": null, "retweet_count": 4319, "favorite_count": 8130, "source": "TweetDeck", "id_str": "709836097434558464", "is_retweet": false}, {"created_at": "Thu Jul 28 03:42:09 +0000 2016", "text": "\"I\u2019m asking you to join me, to reject cynicism...to summon what\u2019s best in us; to elect Hillary Clinton as the next president\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 4142, "favorite_count": 12975, "source": "TweetDeck", "id_str": "758507811550728192", "is_retweet": false}, {"created_at": "Tue Oct 25 17:55:23 +0000 2016", "text": "RT @mayaharris_: Hillary is committed to #EndLeadPoisoningNow with a bold goal to eliminate lead as a public health threat. #LPPW2016 https\u2026", "in_reply_to_screen_name": null, "retweet_count": 559, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "790975056235102208", "is_retweet": true}, {"created_at": "Fri Mar 18 19:39:08 +0000 2016", "text": "I'm incredibly grateful that people are giving what they can afford\u201494% of donations are $100 or under. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 805, "favorite_count": 2130, "source": "TweetDeck", "id_str": "710913445500231680", "is_retweet": false}, {"created_at": "Fri Aug 26 19:22:56 +0000 2016", "text": "So what has the @ClintonFdn been up to? Helping millions of people get more affordable medicine to treat HIV/AIDS.\nhttps://t.co/fhwF7iKUXp", "in_reply_to_screen_name": null, "retweet_count": 3063, "favorite_count": 7083, "source": "Twitter Web Client", "id_str": "769253817128849408", "is_retweet": false}, {"created_at": "Mon Jun 27 15:01:49 +0000 2016", "text": "We can\u2019t let the student debt crisis continue.\n\nWe\u2019ve got to give hard-working students and families relief. https://t.co/A4pWb3fOf4", "in_reply_to_screen_name": null, "retweet_count": 800, "favorite_count": 2185, "source": "TweetDeck", "id_str": "747444832998658049", "is_retweet": false}, {"created_at": "Tue Sep 13 20:56:43 +0000 2016", "text": "Trump and Pence's courting of white supremacists isn't a game: It's normalizing racism. And it's deplorable. https://t.co/91UqoXW7Z6", "in_reply_to_screen_name": null, "retweet_count": 8112, "favorite_count": 14635, "source": "Twitter Web Client", "id_str": "775800400188506112", "is_retweet": false}, {"created_at": "Mon Sep 05 22:25:11 +0000 2016", "text": "RT @LizRomanoff: 21 years ago @HillaryClinton's speech pushed the political discourse and forced a global dialogue on gender equality https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1240, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "772923560021094400", "is_retweet": true}, {"created_at": "Mon Oct 31 18:42:05 +0000 2016", "text": "\u201c[Launching a nuclear weapon] can take as little as 4 minutes. 4 minutes. That\u2019s why...Trump should never be put in charge.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 809, "favorite_count": 1425, "source": "TweetDeck", "id_str": "793161133721026561", "is_retweet": false}, {"created_at": "Thu May 26 18:03:38 +0000 2016", "text": "\u201cNow we know what a \u2018good result\u2019 is to Donald Trump\u2014he gets his, and you get hurt.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 684, "favorite_count": 1454, "source": "TweetDeck", "id_str": "735894176534007808", "is_retweet": false}, {"created_at": "Tue Apr 19 00:09:51 +0000 2016", "text": "Push forward into the unknown, @StephenAtHome. Watch Hillary on @colbertlateshow at 11:30pm ET. #LSSC\nhttps://t.co/SokqHNxkKP", "in_reply_to_screen_name": null, "retweet_count": 1095, "favorite_count": 2768, "source": "Twitter Web Client", "id_str": "722215597845532673", "is_retweet": false}, {"created_at": "Tue Jan 12 02:38:47 +0000 2016", "text": "\"Reproductive rights are a fundamental human right. No government should tell a woman what she can do with her body.\" \u2014Hillary at #DemForum", "in_reply_to_screen_name": null, "retweet_count": 1877, "favorite_count": 3706, "source": "TweetDeck", "id_str": "686739066080129024", "is_retweet": false}, {"created_at": "Wed Oct 05 14:04:33 +0000 2016", "text": "In Mike Pence's defense, we wouldn't want to defend Donald Trump, either. #VPDebate https://t.co/Z2jV6FNzFl", "in_reply_to_screen_name": null, "retweet_count": 14499, "favorite_count": 26449, "source": "Media Studio", "id_str": "783669207040946176", "is_retweet": false}, {"created_at": "Sat Feb 20 23:20:29 +0000 2016", "text": "Americans are right to be angry. But we\u2019re also hungry for real solutions.", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 1675, "source": "TweetDeck", "id_str": "701184679903436800", "is_retweet": false}, {"created_at": "Thu Oct 20 02:54:19 +0000 2016", "text": "20 days left. Let's win this.\n\nMake your custom video to show the world why you believe that #LoveTrumpsHate: https://t.co/QQBKlxyU4D", "in_reply_to_screen_name": null, "retweet_count": 2711, "favorite_count": 9711, "source": "Twitter Web Client", "id_str": "788936355250405376", "is_retweet": false}, {"created_at": "Mon Oct 31 18:43:45 +0000 2016", "text": "What kind of a person brags on 9/11 that, now that the Twin Towers had fallen, a building he owned was the tallest in Lower Manhattan?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1346, "favorite_count": 2492, "source": "TweetDeck", "id_str": "793161553143103488", "is_retweet": false}, {"created_at": "Tue Apr 19 14:05:35 +0000 2016", "text": "We asked New Yorkers what they really think of Donald Trump.\n\nThey didn\u2019t hold back. https://t.co/jqhLAPqyRf https://t.co/lP0Tc9OiNs", "in_reply_to_screen_name": null, "retweet_count": 872, "favorite_count": 1949, "source": "TweetDeck", "id_str": "722425918044680192", "is_retweet": false}, {"created_at": "Thu Jul 28 22:05:54 +0000 2016", "text": "RT @TheBriefing2016: Watch Michael Bloomberg sum up a whole lot about that's wrong with Donald Trump in less than a minute: https://t.co/Kb\u2026", "in_reply_to_screen_name": null, "retweet_count": 1279, "favorite_count": 0, "source": "TweetDeck", "id_str": "758785580054503428", "is_retweet": true}, {"created_at": "Thu Oct 20 01:27:31 +0000 2016", "text": "Trump's major policy proposal is to \"build a wall\" and have Mexico pay for it. He choked. Enough said. #DebateNight https://t.co/TakOp35wZl", "in_reply_to_screen_name": null, "retweet_count": 2514, "favorite_count": 5644, "source": "TweetDeck", "id_str": "788914509348016132", "is_retweet": false}, {"created_at": "Thu Mar 10 17:14:30 +0000 2016", "text": "If efforts to roll back women's rights seem relentless, you're right: States have enacted 282 abortion restrictions since 2010. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 970, "favorite_count": 1770, "source": "TweetDeck", "id_str": "707977945743278080", "is_retweet": false}, {"created_at": "Mon Mar 07 23:28:37 +0000 2016", "text": "Last quarter we raised $18 million for Democrats across the country. Progress must happen at all levels of government. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1305, "source": "TweetDeck", "id_str": "706984931185041424", "is_retweet": false}, {"created_at": "Mon Feb 01 20:59:40 +0000 2016", "text": "A few moments with @billclinton behind the scenes in Iowa.\nhttps://t.co/DHEywD437B", "in_reply_to_screen_name": null, "retweet_count": 710, "favorite_count": 1587, "source": "Twitter Web Client", "id_str": "694263870328741888", "is_retweet": false}, {"created_at": "Sun Nov 06 18:02:06 +0000 2016", "text": "The photos that tell the story of Hillary\u2019s career and what she stands for. https://t.co/N0jBiu0fz1", "in_reply_to_screen_name": null, "retweet_count": 2353, "favorite_count": 5386, "source": "TweetDeck", "id_str": "795325398850609160", "is_retweet": false}, {"created_at": "Wed Aug 03 21:47:25 +0000 2016", "text": "Anyone who can be provoked by a tweet shouldn\u2019t be anywhere near nuclear weapons.", "in_reply_to_screen_name": null, "retweet_count": 15378, "favorite_count": 39604, "source": "TweetDeck", "id_str": "760955255542743042", "is_retweet": false}, {"created_at": "Wed Feb 10 14:07:30 +0000 2016", "text": "You\u2019re the reason we\u2019re going to win this nomination and then win this election together. https://t.co/jZTCMLXC8N", "in_reply_to_screen_name": null, "retweet_count": 694, "favorite_count": 1906, "source": "Twitter for iPhone", "id_str": "697421638716018688", "is_retweet": false}, {"created_at": "Fri Jul 22 03:42:00 +0000 2016", "text": "As of tonight, only one thing is standing between Donald Trump and the presidency: all of us. Get your free sticker: https://t.co/dHZrxCNx4T", "in_reply_to_screen_name": null, "retweet_count": 3021, "favorite_count": 6509, "source": "TweetDeck", "id_str": "756333445358481412", "is_retweet": false}, {"created_at": "Tue Jul 26 02:19:26 +0000 2016", "text": "\u201cBecause of Hillary Clinton, my daughters\u2026now take for granted that a woman can be president of the United States.\u201d \u2014@FLOTUS #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 4868, "favorite_count": 12010, "source": "TweetDeck", "id_str": "757762219300052992", "is_retweet": false}, {"created_at": "Wed Sep 28 19:44:07 +0000 2016", "text": "You can go to https://t.co/tTgeqxNqYm right now to make sure you\u2019re registered to vote.", "in_reply_to_screen_name": null, "retweet_count": 921, "favorite_count": 1962, "source": "TweetDeck", "id_str": "781217948023320576", "is_retweet": false}, {"created_at": "Wed Nov 02 12:50:08 +0000 2016", "text": "When you're 27 million strong, no one can tell you that you don't belong. https://t.co/3TKJ4H68Kz https://t.co/eRt172xZ5b", "in_reply_to_screen_name": null, "retweet_count": 3306, "favorite_count": 8379, "source": "Media Studio", "id_str": "793797340943482880", "is_retweet": false}, {"created_at": "Fri Oct 21 21:05:48 +0000 2016", "text": "Donald Trump refused to say that he\u2019d respect the results of this election. By doing that, he\u2019s threatening our democracy.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1643, "favorite_count": 2381, "source": "TweetDeck", "id_str": "789573422716182529", "is_retweet": false}, {"created_at": "Mon Oct 31 18:48:09 +0000 2016", "text": "\"Ask yourself: In a crisis, who would you trust? Who would listen to good advice, keep a level head, and make the right call?\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1019, "favorite_count": 2238, "source": "TweetDeck", "id_str": "793162660456099844", "is_retweet": false}, {"created_at": "Tue Jan 05 20:00:43 +0000 2016", "text": "\"You rise or fall on the people who are with you.\" -@BillClinton\n\nIf you\u2019re with Hillary, text VOLUNTEER to 47246.\nhttps://t.co/9g2QQoQclG", "in_reply_to_screen_name": null, "retweet_count": 453, "favorite_count": 930, "source": "Twitter Web Client", "id_str": "684464562762985472", "is_retweet": false}, {"created_at": "Thu May 19 18:10:00 +0000 2016", "text": "\"Trump took out a field that couldn\u2019t criticize him on issues because they fundamentally agreed with him.\" \u2014Hillary on the GOP primary", "in_reply_to_screen_name": null, "retweet_count": 885, "favorite_count": 2193, "source": "TweetDeck", "id_str": "733359063581478912", "is_retweet": false}, {"created_at": "Fri Oct 21 21:14:33 +0000 2016", "text": "\u201cHe has put Chinese steelworkers to work, not American steelworkers, and we\u2019re going to change that.\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 786, "favorite_count": 1739, "source": "TweetDeck", "id_str": "789575624167923713", "is_retweet": false}, {"created_at": "Fri Mar 04 20:04:14 +0000 2016", "text": "\"The biggest insult of all was to the American people. The economy was basically an afterthought.\" \u2014Hillary on the #GOPdebate in Detroit", "in_reply_to_screen_name": null, "retweet_count": 563, "favorite_count": 1349, "source": "TweetDeck", "id_str": "705846335208091652", "is_retweet": false}, {"created_at": "Wed Apr 27 18:32:08 +0000 2016", "text": "They might make flashy headlines, but Trump's comments aren't a joke. Hillary can handle these attacks. Millions of women shouldn't have to.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1003, "favorite_count": 1893, "source": "TweetDeck", "id_str": "725392101203173377", "is_retweet": false}, {"created_at": "Tue Aug 30 14:54:21 +0000 2016", "text": "Give the Trump family a huge tax cut or take care of our veterans? Not a hard choice. https://t.co/en3lDEN7ME https://t.co/CP4pEz14ln", "in_reply_to_screen_name": null, "retweet_count": 2243, "favorite_count": 4780, "source": "TweetDeck", "id_str": "770635776556167168", "is_retweet": false}, {"created_at": "Mon Nov 07 17:52:52 +0000 2016", "text": "\"Tomorrow is the election, but that is just the beginning.\" \u2014Hillary https://t.co/i6NFjnrb35 https://t.co/cYI3OuFMEA", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1775, "favorite_count": 5255, "source": "TweetDeck", "id_str": "795685466519511042", "is_retweet": false}, {"created_at": "Thu Sep 01 15:46:22 +0000 2016", "text": "Tune in now to watch @JoeBiden hit the trail for Hillary in Ohio: https://t.co/FjCws9BTYy", "in_reply_to_screen_name": null, "retweet_count": 574, "favorite_count": 1843, "source": "TweetDeck", "id_str": "771373643066544129", "is_retweet": false}, {"created_at": "Tue Sep 13 17:59:11 +0000 2016", "text": "\"I believe there has never been a man or woman more qualified than Hillary Clinton to serve as our president.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1605, "favorite_count": 5242, "source": "TweetDeck", "id_str": "775755720516050944", "is_retweet": false}, {"created_at": "Tue Sep 27 18:05:27 +0000 2016", "text": "One candidate made it clear he wasn\u2019t prepared for last night\u2019s debate. The other made it clear she\u2019s prepared to b\u2026 https://t.co/InYZBmnbBM", "in_reply_to_screen_name": null, "retweet_count": 4358, "favorite_count": 13399, "source": "Media Studio", "id_str": "780830729760485378", "is_retweet": false}, {"created_at": "Sat Feb 20 19:00:17 +0000 2016", "text": "Let\u2019s do this, Nevada. https://t.co/39foMYJXFP https://t.co/mBmTdn2IPE", "in_reply_to_screen_name": null, "retweet_count": 520, "favorite_count": 1263, "source": "TweetDeck", "id_str": "701119196898467841", "is_retweet": false}, {"created_at": "Sun Sep 25 21:11:20 +0000 2016", "text": "Imagine Donald Trump sitting in the Situation Room making life or death decisions on behalf of the United States. https://t.co/YFraVXr5Zf", "in_reply_to_screen_name": null, "retweet_count": 10392, "favorite_count": 17127, "source": "Media Studio", "id_str": "780152733240135681", "is_retweet": false}, {"created_at": "Wed Mar 23 15:41:15 +0000 2016", "text": "We can be strong and smart without advocating torture or bigotry. https://t.co/hT9Ri0pZpv", "in_reply_to_screen_name": null, "retweet_count": 1393, "favorite_count": 3142, "source": "TweetDeck", "id_str": "712665521829908482", "is_retweet": false}, {"created_at": "Tue Oct 04 19:07:12 +0000 2016", "text": "Contributing nothing to our military, public schools, kids' health care, and more doesn't make you \"smart.\" https://t.co/HKAvxfCigr", "in_reply_to_screen_name": null, "retweet_count": 3678, "favorite_count": 7196, "source": "Media Studio", "id_str": "783382982463631360", "is_retweet": false}, {"created_at": "Fri Sep 30 16:25:52 +0000 2016", "text": "However you serve, it feels great to be a part of something bigger than yourself\u2014to work toward making something good happen in the world.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 761, "favorite_count": 2146, "source": "TweetDeck", "id_str": "781892832520966144", "is_retweet": false}, {"created_at": "Wed Aug 03 21:51:34 +0000 2016", "text": "\"I will take on the gun lobby for commonsense gun safety reform.\u201d \u2014Hillary: https://t.co/TVwy0XqOKH", "in_reply_to_screen_name": null, "retweet_count": 1444, "favorite_count": 4875, "source": "TweetDeck", "id_str": "760956299916050432", "is_retweet": false}, {"created_at": "Mon Jun 13 21:35:56 +0000 2016", "text": "Tenemos que unirnos, sentir orgullo juntos. No hay mejor respuesta para los terroristas y a todos aquellos que odian https://t.co/wQVmDQ321o", "in_reply_to_screen_name": null, "retweet_count": 2280, "favorite_count": 3824, "source": "TweetDeck", "id_str": "742470584861401088", "is_retweet": false}, {"created_at": "Mon Feb 01 13:03:23 +0000 2016", "text": "Today\u2019s the day! Ready to stand with Hillary? Say #ImWithHer now: https://t.co/hs6TCNNBVS", "in_reply_to_screen_name": null, "retweet_count": 512, "favorite_count": 1062, "source": "TweetDeck", "id_str": "694144010831695872", "is_retweet": false}, {"created_at": "Tue Oct 25 00:25:09 +0000 2016", "text": "In honor of Trump's relentless pursuit of any conspiracy theory, presenting a stylish update to his famous hats:\u2026 https://t.co/e2hwAqC2LX", "in_reply_to_screen_name": null, "retweet_count": 2054, "favorite_count": 5592, "source": "TweetDeck", "id_str": "790710757172383745", "is_retweet": false}, {"created_at": "Fri Sep 09 19:36:10 +0000 2016", "text": "North Korea\u2019s decision to conduct another nuclear test is outrageous and unacceptable. https://t.co/i8h9j2oiIC", "in_reply_to_screen_name": null, "retweet_count": 2330, "favorite_count": 5896, "source": "TweetDeck", "id_str": "774330575230472192", "is_retweet": false}, {"created_at": "Sat Sep 03 23:04:58 +0000 2016", "text": "Thanks, @POTUS, for reaffirming the law to protect women's health\u2014whichever provider you choose. https://t.co/e4o34UDvJc", "in_reply_to_screen_name": null, "retweet_count": 2406, "favorite_count": 7581, "source": "TweetDeck", "id_str": "772208796928212993", "is_retweet": false}, {"created_at": "Tue Mar 15 11:42:03 +0000 2016", "text": "FL, IL, MO, NC, and OH: Hillary's counting on you to vote today. Confirm your polling place: https://t.co/QCusRViuWx", "in_reply_to_screen_name": null, "retweet_count": 1425, "favorite_count": 2522, "source": "TweetDeck", "id_str": "709706219905228801", "is_retweet": false}, {"created_at": "Wed Sep 07 00:31:00 +0000 2016", "text": "We should be helping more immigrant families stay together, not tearing them apart. https://t.co/BGU5uxx06g", "in_reply_to_screen_name": null, "retweet_count": 1697, "favorite_count": 4447, "source": "TweetDeck", "id_str": "773317611207688192", "is_retweet": false}, {"created_at": "Tue Nov 08 05:58:27 +0000 2016", "text": "\u201cI believe that she will win!\nI believe that she will win!\u201d https://t.co/DhNoz11ARV", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4022, "favorite_count": 7734, "source": "TweetDeck", "id_str": "795868063761657856", "is_retweet": false}, {"created_at": "Wed Nov 09 16:50:23 +0000 2016", "text": "\"This loss hurts. But please never stop believing that fighting for what\u2019s right is worth it.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 144942, "favorite_count": 297269, "source": "TweetDeck", "id_str": "796394515582095361", "is_retweet": false}, {"created_at": "Fri Sep 16 01:24:48 +0000 2016", "text": "Donald Trump still refuses to admit President Obama was born in the United States. https://t.co/LB6y7Iecsb", "in_reply_to_screen_name": null, "retweet_count": 3785, "favorite_count": 6552, "source": "Twitter Web Client", "id_str": "776592638338273280", "is_retweet": false}, {"created_at": "Thu Nov 03 20:02:35 +0000 2016", "text": "\"I truly believe that you deserve a candidate you can vote for, not just someone to vote against.\u201d \u2014Hillary https://t.co/udXAf6cNFu", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 727, "favorite_count": 1655, "source": "TweetDeck", "id_str": "794268555835539459", "is_retweet": false}, {"created_at": "Mon Apr 11 19:37:04 +0000 2016", "text": "33,000 Americans die from gun violence each year. No other developed country comes close. https://t.co/EqR2TiaxCh https://t.co/Xz08UAYpCg", "in_reply_to_screen_name": null, "retweet_count": 1789, "favorite_count": 2386, "source": "TweetDeck", "id_str": "719610237314080768", "is_retweet": false}, {"created_at": "Thu Sep 22 20:30:07 +0000 2016", "text": "The man who could be your next president may be deeply indebted to another country. Do you trust him to run ours? https://t.co/5TU9olTqd5", "in_reply_to_screen_name": null, "retweet_count": 7671, "favorite_count": 10877, "source": "Twitter Web Client", "id_str": "779055195607166977", "is_retweet": false}, {"created_at": "Thu Feb 25 21:20:13 +0000 2016", "text": "@transforhillary honored to have your support. Together we'll take a stand for safety, respect, and full equality for trans Americans.", "in_reply_to_screen_name": "transforhillary", "retweet_count": 156, "favorite_count": 292, "source": "TweetDeck", "id_str": "702966350642352128", "is_retweet": false}, {"created_at": "Sat Jul 02 21:04:31 +0000 2016", "text": "Just like he shouldn\u2019t have his finger on the nuclear button, Trump shouldn\u2019t have his hands on our economy. https://t.co/REhieod2uo", "in_reply_to_screen_name": null, "retweet_count": 2087, "favorite_count": 5408, "source": "Twitter Web Client", "id_str": "749348045914079232", "is_retweet": false}, {"created_at": "Thu Aug 11 18:01:25 +0000 2016", "text": "Let\u2019s fight to make college tuition-free for the middle class and debt-free for everyone: https://t.co/BNZJ6ScplY", "in_reply_to_screen_name": null, "retweet_count": 722, "favorite_count": 2375, "source": "TweetDeck", "id_str": "763797484699283456", "is_retweet": false}, {"created_at": "Mon Feb 29 18:33:34 +0000 2016", "text": "Time is running out to tell Hillary you're with her before Super Tuesday! Commit now: https://t.co/GlRSYxcpjO https://t.co/28khHoohFH", "in_reply_to_screen_name": null, "retweet_count": 800, "favorite_count": 2274, "source": "TweetDeck", "id_str": "704373965683294208", "is_retweet": false}, {"created_at": "Fri Oct 14 15:44:45 +0000 2016", "text": "\"She knows that in a democracy as big and diverse as this, we can't demonize each other.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 514, "favorite_count": 1438, "source": "TweetDeck", "id_str": "786955912409907200", "is_retweet": false}, {"created_at": "Tue Oct 25 19:07:54 +0000 2016", "text": "Donald Trump is unqualified to be Commander-in-Chief. A president doesn\u2019t call our military a \u201ctotal disaster.\u201d https://t.co/B66Yf4gylz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 844, "favorite_count": 1484, "source": "TweetDeck", "id_str": "790993304930357251", "is_retweet": false}, {"created_at": "Mon Oct 31 23:32:18 +0000 2016", "text": "It's time for Trump to answer serious questions about his ties to Russia. https://t.co/D8oSmyVAR4 https://t.co/07dRyEmPjX", "in_reply_to_screen_name": null, "retweet_count": 13516, "favorite_count": 15976, "source": "TweetDeck", "id_str": "793234169576947712", "is_retweet": false}, {"created_at": "Wed Aug 10 19:40:42 +0000 2016", "text": "Donald Trump has spent his career stiffing small businesses, refusing to pay them what they\u2019re owed. https://t.co/un2YiRLEYF", "in_reply_to_screen_name": null, "retweet_count": 6233, "favorite_count": 9680, "source": "TweetDeck", "id_str": "763460083313434625", "is_retweet": false}, {"created_at": "Tue Oct 11 22:18:04 +0000 2016", "text": "Hillary just introduced a new plan to help lift families with children out of poverty: https://t.co/lrVTNbd0zf", "in_reply_to_screen_name": null, "retweet_count": 1811, "favorite_count": 5182, "source": "TweetDeck", "id_str": "785967731422134272", "is_retweet": false}, {"created_at": "Fri Sep 16 16:57:56 +0000 2016", "text": "Leading the birther movement is deplorable. Attempting to say it \"did a great service\" to the president who Trump attacked is asinine.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3664, "favorite_count": 8291, "source": "TweetDeck", "id_str": "776827470200930304", "is_retweet": false}, {"created_at": "Thu Sep 08 02:48:25 +0000 2016", "text": "RT @voxdotcom: Trump to Matt Lauer on Iraq: \"I was totally against the war.\" Here's proof Trump is lying: https://t.co/6ZhgJMUhs3 https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 3023, "favorite_count": 0, "source": "TweetDeck", "id_str": "773714580421873664", "is_retweet": true}, {"created_at": "Tue Oct 04 22:04:58 +0000 2016", "text": "Before Mike Pence takes the debate stage to defend his running mate, remember the time Trump couldn't decide whethe\u2026 https://t.co/cz1o4Y3T8v", "in_reply_to_screen_name": null, "retweet_count": 2696, "favorite_count": 6160, "source": "Media Studio", "id_str": "783427721648967681", "is_retweet": false}, {"created_at": "Mon Jan 18 20:26:52 +0000 2016", "text": "Dr. King's fight for equality in education, in economic opportunity, and in our criminal justice system is still our fight today. -H", "in_reply_to_screen_name": null, "retweet_count": 1086, "favorite_count": 2126, "source": "TweetDeck", "id_str": "689182189314043909", "is_retweet": false}, {"created_at": "Sat Apr 23 19:03:04 +0000 2016", "text": "Tenemos que actuar ahora para proteger a los puertorrique\u00f1os (del Zika), especialmente a las mujeres embarazadas. https://t.co/h93oQDo5sq", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 811, "source": "TweetDeck", "id_str": "723950334100393987", "is_retweet": false}, {"created_at": "Thu Jul 14 15:57:36 +0000 2016", "text": ".@realDonaldTrump said a federal judge can't be trusted because of his \"Mexican heritage.\" That just fans the flames of racial division.", "in_reply_to_screen_name": null, "retweet_count": 996, "favorite_count": 2700, "source": "TweetDeck", "id_str": "753619464034324480", "is_retweet": false}, {"created_at": "Sun Oct 23 23:20:00 +0000 2016", "text": "\"I will defend women's rights to make their own health care decisions.\" \u2014Hillary https://t.co/BAbTwyL97U", "in_reply_to_screen_name": null, "retweet_count": 2480, "favorite_count": 8982, "source": "TweetDeck", "id_str": "790331970404376577", "is_retweet": false}, {"created_at": "Tue Jul 26 01:39:39 +0000 2016", "text": "\u201cGenerations of heroic Americans have made our nation more inclusive, more expansive, and more just.\u201d \u2014@CoryBooker #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1105, "favorite_count": 3358, "source": "TweetDeck", "id_str": "757752209668997120", "is_retweet": false}, {"created_at": "Wed May 25 21:46:52 +0000 2016", "text": "LGBT kids are perfect the way they are. They deserve love\u2014not harmful \"conversion therapy.\" Thanks @GovPeterShumlin. https://t.co/gFVgyqxKda", "in_reply_to_screen_name": null, "retweet_count": 1699, "favorite_count": 3882, "source": "TweetDeck", "id_str": "735587968610631681", "is_retweet": false}, {"created_at": "Sun Oct 30 14:43:18 +0000 2016", "text": "Education is at stake.  \nThe environment is at stake.  \nLGBT equality are at stake.  \nEqual pay is at stake.\u2026 https://t.co/CFLT94MHUp", "in_reply_to_screen_name": null, "retweet_count": 6479, "favorite_count": 15600, "source": "Media Studio", "id_str": "792738655857053697", "is_retweet": false}, {"created_at": "Tue Sep 27 03:03:24 +0000 2016", "text": "RT @ezraklein: Clinton won this debate in part because she had more stamina for this than Trump. He flagged badly after 30 minutes. She did\u2026", "in_reply_to_screen_name": null, "retweet_count": 8375, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780603720191148032", "is_retweet": true}, {"created_at": "Tue Jul 05 20:30:28 +0000 2016", "text": "Thanks, Obama. https://t.co/qL1JqkJHpX", "in_reply_to_screen_name": null, "retweet_count": 5851, "favorite_count": 16635, "source": "Twitter Web Client", "id_str": "750426641344724992", "is_retweet": false}, {"created_at": "Thu Jul 28 03:39:20 +0000 2016", "text": "\"Tonight, I ask you to do for Hillary Clinton what you did for me. I ask you to carry her the same way you carried me.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3259, "favorite_count": 9430, "source": "TweetDeck", "id_str": "758507103057223685", "is_retweet": false}, {"created_at": "Thu Sep 08 00:37:41 +0000 2016", "text": "RT @BuzzFeed: In 2002, Donald Trump said he supported invading Iraq https://t.co/B3071OFSQy https://t.co/On1ZfL88eC", "in_reply_to_screen_name": null, "retweet_count": 1460, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773681680397860864", "is_retweet": true}, {"created_at": "Fri Jan 22 00:19:38 +0000 2016", "text": "\"In a political landscape this hostile to reproductive rights, words matter\u200a\u2014\u200aas do their absence.\" -NARAL's @ilyseh https://t.co/5AWRomXyv2", "in_reply_to_screen_name": null, "retweet_count": 458, "favorite_count": 894, "source": "TweetDeck", "id_str": "690327929264406529", "is_retweet": false}, {"created_at": "Mon Oct 10 20:59:07 +0000 2016", "text": "Six moments from last night's debate that prove Trump is totally unfit to be president. https://t.co/folGdwMZru", "in_reply_to_screen_name": null, "retweet_count": 1654, "favorite_count": 4900, "source": "TweetDeck", "id_str": "785585473460772868", "is_retweet": false}, {"created_at": "Thu Aug 25 23:53:23 +0000 2016", "text": "Trump's bigoted rhetoric and policy proposals aren't a dog whistle. We hear him loud and clear.\nhttps://t.co/fPLy9wtTrM", "in_reply_to_screen_name": null, "retweet_count": 5837, "favorite_count": 11014, "source": "Twitter Web Client", "id_str": "768959490930581506", "is_retweet": false}, {"created_at": "Wed Mar 16 01:07:44 +0000 2016", "text": "We\u2019re going to stand up for American workers and make sure no one takes advantage of us\u2014not China, Wall Street, or over-paid executives.", "in_reply_to_screen_name": null, "retweet_count": 1019, "favorite_count": 2982, "source": "TweetDeck", "id_str": "709908976851406848", "is_retweet": false}, {"created_at": "Thu Oct 20 01:24:04 +0000 2016", "text": "\"Hombres\"? #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 18749, "favorite_count": 33240, "source": "TweetDeck", "id_str": "788913644553826305", "is_retweet": false}, {"created_at": "Wed Jun 01 00:58:41 +0000 2016", "text": "You never know what you'll see at a Hillary rally.\nhttps://t.co/lDJ8DSSdaU", "in_reply_to_screen_name": null, "retweet_count": 2344, "favorite_count": 5741, "source": "Twitter Web Client", "id_str": "737810565356093440", "is_retweet": false}, {"created_at": "Fri Sep 30 20:14:04 +0000 2016", "text": "\"His latest Twitter meltdown is unhinged, even for him.\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1065, "favorite_count": 3041, "source": "TweetDeck", "id_str": "781950260516122625", "is_retweet": false}, {"created_at": "Fri Jan 29 02:58:03 +0000 2016", "text": "#GOPdebate makes it clear. There's only one thing standing between Republicans &amp; repeal of the Affordable Care Act: a Democratic president.", "in_reply_to_screen_name": null, "retweet_count": 556, "favorite_count": 1362, "source": "TweetDeck", "id_str": "692904511598411778", "is_retweet": false}, {"created_at": "Wed Jun 22 19:03:24 +0000 2016", "text": "We\u2019ll make companies that ship jobs overseas give back tax breaks they received here at home.", "in_reply_to_screen_name": null, "retweet_count": 601, "favorite_count": 2131, "source": "TweetDeck", "id_str": "745693690887307264", "is_retweet": false}, {"created_at": "Sat Apr 09 20:56:28 +0000 2016", "text": "If you read one thing today, make it this. https://t.co/xM3Q8J72sn by @EricaSmegs https://t.co/eNcOO50E4t", "in_reply_to_screen_name": null, "retweet_count": 1022, "favorite_count": 2025, "source": "Twitter Web Client", "id_str": "718905440378187776", "is_retweet": false}, {"created_at": "Fri Nov 04 13:12:03 +0000 2016", "text": "Make sure Trump isn't rewarded for running the most divisive campaign in history: https://t.co/3TKJ4H68Kz https://t.co/TU5M5GDOyq", "in_reply_to_screen_name": null, "retweet_count": 1924, "favorite_count": 4793, "source": "TweetDeck", "id_str": "794527630787837952", "is_retweet": false}, {"created_at": "Thu May 12 13:08:28 +0000 2016", "text": "Donald Trump has released just one detailed proposal: a tax plan written by billionaires, for billionaires.\nhttps://t.co/GX13ND67zV", "in_reply_to_screen_name": null, "retweet_count": 1703, "favorite_count": 2917, "source": "Twitter Web Client", "id_str": "730746465274855424", "is_retweet": false}, {"created_at": "Tue Nov 08 01:56:57 +0000 2016", "text": "\u201cHello Philadelphia! Are you fired up? Are you ready to go?\u201d \u2014@POTUS https://t.co/m3diE0KsAY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 593, "favorite_count": 1779, "source": "TweetDeck", "id_str": "795807286375682048", "is_retweet": false}, {"created_at": "Wed Aug 10 21:48:20 +0000 2016", "text": "Let's make it easier for young people to start businesses and fulfill their dreams. https://t.co/cJzNCnaahh https://t.co/vZHW9VZKDT", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 810, "favorite_count": 1749, "source": "TweetDeck", "id_str": "763492199480918016", "is_retweet": false}, {"created_at": "Mon Jul 25 18:41:05 +0000 2016", "text": "RT @algore: I am not able to attend this year\u2019s Democratic convention, but I will be voting for Hillary Clinton. (1/3)", "in_reply_to_screen_name": null, "retweet_count": 4611, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "757646871343009792", "is_retweet": true}, {"created_at": "Thu Jul 21 14:55:22 +0000 2016", "text": "Introducing #TrumpYourself: Discover what @realDonaldTrump thinks about people like you. https://t.co/cSY7ozT4tr https://t.co/KvVt2tGwFd", "in_reply_to_screen_name": null, "retweet_count": 2938, "favorite_count": 5132, "source": "TweetDeck", "id_str": "756140516698456065", "is_retweet": false}, {"created_at": "Sun Jul 31 19:57:26 +0000 2016", "text": "RT @mayaharris_: He\u2019s also made clear he\u2019s fully committed to Hillary's policy agenda, which he understands includes repeal of Hyde. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 631, "favorite_count": 0, "source": "TweetDeck", "id_str": "759840412890783744", "is_retweet": true}, {"created_at": "Sun Jan 17 14:30:10 +0000 2016", "text": "\"We have a lot of friends in this race, but we have one true champion.\" -@cecilerichards https://t.co/zOJ19LUQVf", "in_reply_to_screen_name": null, "retweet_count": 303, "favorite_count": 782, "source": "TweetDeck", "id_str": "688730034736115713", "is_retweet": false}, {"created_at": "Tue Nov 08 02:27:21 +0000 2016", "text": "\"I am not going to let anybody rip up the progress that we\u2019ve made.\u201d \u2014Hillary https://t.co/8wuWIUfBst", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1985, "favorite_count": 4733, "source": "TweetDeck", "id_str": "795814936970756097", "is_retweet": false}, {"created_at": "Sat Aug 13 02:26:25 +0000 2016", "text": "As track and field begins, we're honoring Wilma Rudolph: the first U.S. woman to win 3 track golds in one Olympics. https://t.co/HW10MpbVuR", "in_reply_to_screen_name": null, "retweet_count": 4721, "favorite_count": 15604, "source": "Twitter Web Client", "id_str": "764286957547577344", "is_retweet": false}, {"created_at": "Tue Jul 26 03:22:21 +0000 2016", "text": "\"I served with her in the United States Senate and know her as a fierce advocate for the rights of children.\u201d \u2014@BernieSanders #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2390, "favorite_count": 9240, "source": "TweetDeck", "id_str": "757778054815047680", "is_retweet": false}, {"created_at": "Tue Aug 16 17:42:55 +0000 2016", "text": "\u201c@TeamUSA is showing the world what this country stands for. I am proud of our team.\" \u2014Hillary in Philadelphia: https://t.co/byKmrx9XZy", "in_reply_to_screen_name": null, "retweet_count": 678, "favorite_count": 2873, "source": "TweetDeck", "id_str": "765604769310400516", "is_retweet": false}, {"created_at": "Thu Jul 28 03:58:40 +0000 2016", "text": "We love you back, @POTUS. https://t.co/S3dEsjwXCo", "in_reply_to_screen_name": null, "retweet_count": 24480, "favorite_count": 72055, "source": "TweetDeck", "id_str": "758511969850777600", "is_retweet": false}, {"created_at": "Sat Jul 23 01:38:30 +0000 2016", "text": "Meet @TimKaine\u2014Hillary's running mate and the next vice president of the United States. https://t.co/igt3AKcMhK", "in_reply_to_screen_name": null, "retweet_count": 2200, "favorite_count": 6421, "source": "TweetDeck", "id_str": "756664755528540160", "is_retweet": false}, {"created_at": "Wed Apr 06 02:12:25 +0000 2016", "text": "Congrats to @BernieSanders on winning Wisconsin. To all the voters and volunteers who poured your hearts into this campaign: Forward! -H", "in_reply_to_screen_name": null, "retweet_count": 3530, "favorite_count": 11151, "source": "TweetDeck", "id_str": "717535401490137088", "is_retweet": false}, {"created_at": "Mon Jul 11 02:48:43 +0000 2016", "text": "\"Hillary is not somebody who fears the future. She believes that it is ours to shape.\" \u2014@POTUS https://t.co/cSAdZFNa4G", "in_reply_to_screen_name": null, "retweet_count": 2771, "favorite_count": 9260, "source": "TweetDeck", "id_str": "752333772322959360", "is_retweet": false}, {"created_at": "Wed Jun 08 17:54:05 +0000 2016", "text": "Front pages from around the country on a big day. https://t.co/bNrJXn967S https://t.co/JA2R2R9drQ", "in_reply_to_screen_name": null, "retweet_count": 2409, "favorite_count": 6174, "source": "TweetDeck", "id_str": "740602815261908992", "is_retweet": false}, {"created_at": "Fri Jul 22 22:48:07 +0000 2016", "text": "Donald Trump told lie after lie last night because it's all he has to offer the American people. https://t.co/wXllN0KVHl", "in_reply_to_screen_name": null, "retweet_count": 2372, "favorite_count": 5347, "source": "TweetDeck", "id_str": "756621878995935232", "is_retweet": false}, {"created_at": "Sun Apr 10 17:00:12 +0000 2016", "text": "Every American deserves to live free from discrimination\u2014no matter who they are or who they love.\nhttps://t.co/cGLaZqFvmW", "in_reply_to_screen_name": null, "retweet_count": 3263, "favorite_count": 6692, "source": "Twitter Web Client", "id_str": "719208369404268544", "is_retweet": false}, {"created_at": "Tue Oct 11 21:42:22 +0000 2016", "text": "If you\u2019re able, chip in to help the families affected by Hurricane Matthew: https://t.co/GLfx0zJkcb -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 833, "favorite_count": 2594, "source": "Twitter Web Client", "id_str": "785958746010681344", "is_retweet": false}, {"created_at": "Tue Oct 04 20:30:13 +0000 2016", "text": "Our veterans and military families deserve better than what Donald Trump says about them. https://t.co/1gbXA2gvas", "in_reply_to_screen_name": null, "retweet_count": 1746, "favorite_count": 4248, "source": "Media Studio", "id_str": "783403875395072000", "is_retweet": false}, {"created_at": "Thu Oct 27 18:30:44 +0000 2016", "text": "You don't want to miss this. Join Hillary and @FLOTUS on the trail together for the first time in NC \u2192 https://t.co/hj6ff24fiW", "in_reply_to_screen_name": null, "retweet_count": 1147, "favorite_count": 4567, "source": "TweetDeck", "id_str": "791708728378753024", "is_retweet": false}, {"created_at": "Mon Oct 03 16:42:57 +0000 2016", "text": "Millions of Americans work hard and pay their taxes. So why doesn't Donald Trump pay his? https://t.co/WLSzIz0ewG", "in_reply_to_screen_name": null, "retweet_count": 4186, "favorite_count": 8867, "source": "Media Studio", "id_str": "782984294557941760", "is_retweet": false}, {"created_at": "Mon Jul 04 14:56:31 +0000 2016", "text": "Here's to 240 years of progress. https://t.co/rxZa7Niodt", "in_reply_to_screen_name": null, "retweet_count": 2569, "favorite_count": 6469, "source": "TweetDeck", "id_str": "749980211760996352", "is_retweet": false}, {"created_at": "Wed May 11 16:31:31 +0000 2016", "text": "Millions of families struggle to afford quality child care.\n\nIt's time they got some help.\nhttps://t.co/N5ybZ5qa84", "in_reply_to_screen_name": null, "retweet_count": 641, "favorite_count": 1394, "source": "TweetDeck", "id_str": "730435176287903744", "is_retweet": false}, {"created_at": "Tue Sep 06 19:03:48 +0000 2016", "text": "Donald Trump is totally unfit and unqualified to be president of the United States: https://t.co/Ozc1g9BJO0", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 724, "favorite_count": 1433, "source": "TweetDeck", "id_str": "773235267402600448", "is_retweet": false}, {"created_at": "Tue Jul 26 21:40:34 +0000 2016", "text": "RT @RandiBrazeau: It took 240 years but 2016 will be the year of the first woman POTUS!!! Great day to be an American Woman! #ImWithHer #De\u2026", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 0, "source": "TweetDeck", "id_str": "758054429744566272", "is_retweet": true}, {"created_at": "Wed Nov 02 19:47:25 +0000 2016", "text": "Watch live: @POTUS hits the trail for Hillary in North Carolina with just 6 days to go \u2192 https://t.co/mIBRcUOR6X", "in_reply_to_screen_name": null, "retweet_count": 740, "favorite_count": 2466, "source": "TweetDeck", "id_str": "793902352101179397", "is_retweet": false}, {"created_at": "Wed Oct 26 16:27:44 +0000 2016", "text": "\"When you work full-time, you shouldn\u2019t still be living in poverty, worrying about whether you can put food on the table.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1286, "favorite_count": 4092, "source": "TweetDeck", "id_str": "791315386717376512", "is_retweet": false}, {"created_at": "Thu Aug 25 19:42:53 +0000 2016", "text": "This election is too important for anyone to sit out.\n\nText JOIN to 47246 or go to https://t.co/L7Dd6Uu8yR. Let\u2019s go win this, together.", "in_reply_to_screen_name": null, "retweet_count": 1193, "favorite_count": 2729, "source": "TweetDeck", "id_str": "768896448629014532", "is_retweet": false}, {"created_at": "Thu Aug 04 13:57:30 +0000 2016", "text": "Happy birthday, @POTUS. https://t.co/5u1HAPnDI9", "in_reply_to_screen_name": null, "retweet_count": 7225, "favorite_count": 26814, "source": "TweetDeck", "id_str": "761199386227511296", "is_retweet": false}, {"created_at": "Tue Apr 05 23:14:25 +0000 2016", "text": "We're going to make paid family leave the law of the land. Glad to see New York and San Francisco leading the way. https://t.co/tCGswTXzir", "in_reply_to_screen_name": null, "retweet_count": 890, "favorite_count": 2298, "source": "TweetDeck", "id_str": "717490606336040960", "is_retweet": false}, {"created_at": "Tue Jun 14 16:29:48 +0000 2016", "text": "\"I believe that despite those differences of opinion, we\u2019re all on the same team...There\u2019s more that unites us than divides us.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 859, "favorite_count": 2670, "source": "TweetDeck", "id_str": "742755930736054272", "is_retweet": false}, {"created_at": "Thu Sep 15 22:18:48 +0000 2016", "text": "Just 54 days left and we don\u2019t have a minute to lose. Text JOIN to 47246 and let\u2019s go win this\u2014together. https://t.co/hGRsvLiGO2", "in_reply_to_screen_name": null, "retweet_count": 1977, "favorite_count": 5735, "source": "Twitter Web Client", "id_str": "776545831361142784", "is_retweet": false}, {"created_at": "Wed Apr 27 02:37:28 +0000 2016", "text": "Thank you, Connecticut. https://t.co/dEF36fIGyu", "in_reply_to_screen_name": null, "retweet_count": 1632, "favorite_count": 4479, "source": "TweetDeck", "id_str": "725151852262768640", "is_retweet": false}, {"created_at": "Mon Oct 10 01:59:32 +0000 2016", "text": "Trump has gotten one thing right about the economy. #debate https://t.co/9MZcuwwDp5", "in_reply_to_screen_name": null, "retweet_count": 5477, "favorite_count": 9315, "source": "TweetDeck", "id_str": "785298690990809088", "is_retweet": false}, {"created_at": "Thu Oct 20 21:38:32 +0000 2016", "text": "\"When you hear folks...saying this election is 'rigged,' understand that they are trying to get you to stay home.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 904, "favorite_count": 1921, "source": "TweetDeck", "id_str": "789219273197686784", "is_retweet": false}, {"created_at": "Mon Jan 18 23:21:05 +0000 2016", "text": "The next president has to be able to stand up to Republicans and stop their backward agenda. https://t.co/GBAmiJ8Pm9", "in_reply_to_screen_name": null, "retweet_count": 1398, "favorite_count": 3355, "source": "TweetDeck", "id_str": "689226031996256258", "is_retweet": false}, {"created_at": "Mon Oct 03 17:45:51 +0000 2016", "text": "RT @HFA: \u201cWhen the middle class thrives and our country is strong, businesses thrive too. And when it doesn\u2019t, we don\u2019t.\u201d \u2014@HillaryClinton", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 0, "source": "TweetDeck", "id_str": "783000121323692033", "is_retweet": true}, {"created_at": "Sun Feb 28 00:47:37 +0000 2016", "text": "\"Today you sent a message: In America, when we stand together, there is no barrier too big to break.\" \u2014Hillary in South Carolina", "in_reply_to_screen_name": null, "retweet_count": 804, "favorite_count": 1986, "source": "TweetDeck", "id_str": "703743319986348032", "is_retweet": false}, {"created_at": "Thu May 19 18:07:26 +0000 2016", "text": "\u201cI\u2019m going after him exactly on those issues and statements that are divisive and dangerous.\u201d \u2014Hillary on @realDonaldTrump", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 1588, "source": "TweetDeck", "id_str": "733358419101487106", "is_retweet": false}, {"created_at": "Wed Feb 10 02:14:20 +0000 2016", "text": "\"We\u2019re going to fight for every vote in every state. We\u2019re going to fight for real solutions that make a real difference in people\u2019s lives.\"", "in_reply_to_screen_name": null, "retweet_count": 678, "favorite_count": 1592, "source": "TweetDeck", "id_str": "697242161348263938", "is_retweet": false}, {"created_at": "Sat Feb 20 23:18:20 +0000 2016", "text": "This is your campaign. It is a campaign to break down every barrier that holds you back.", "in_reply_to_screen_name": null, "retweet_count": 587, "favorite_count": 1621, "source": "TweetDeck", "id_str": "701184136778752000", "is_retweet": false}, {"created_at": "Sun Jan 03 22:12:10 +0000 2016", "text": "We need a president who will stand up to the gun lobby. Add your name if you agree: https://t.co/P3EDH8nues", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 566, "favorite_count": 1681, "source": "TweetDeck", "id_str": "683772869889888256", "is_retweet": false}, {"created_at": "Thu Jul 28 03:29:17 +0000 2016", "text": "\"Hillary Clinton is that woman in the arena.\n\nShe\u2019s been there for us, even if we haven\u2019t always noticed.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1985, "favorite_count": 6494, "source": "TweetDeck", "id_str": "758504576035262464", "is_retweet": false}, {"created_at": "Sat Jan 30 02:58:06 +0000 2016", "text": "\u00a1No te lo pierdas! https://t.co/3XUt4kNJff", "in_reply_to_screen_name": null, "retweet_count": 189, "favorite_count": 298, "source": "TweetDeck", "id_str": "693266910121562112", "is_retweet": false}, {"created_at": "Mon Oct 24 17:31:38 +0000 2016", "text": "\"Donald Trump aggressively disrespects more than half the people in this country.\u201d \u2014@ElizabethForMA https://t.co/Lvsb5mkLSt", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 601, "favorite_count": 1202, "source": "TweetDeck", "id_str": "790606692547452932", "is_retweet": false}, {"created_at": "Mon Apr 04 16:56:54 +0000 2016", "text": "Donald Trump says that wages are too high, but we know better. Americans deserve a raise. #RaiseTheWage", "in_reply_to_screen_name": null, "retweet_count": 985, "favorite_count": 2666, "source": "TweetDeck", "id_str": "717033211763802112", "is_retweet": false}, {"created_at": "Wed Jul 27 23:56:52 +0000 2016", "text": "\u201cShe stood up to the NRA, and Hillary Clinton pledged to take Washington back from the gun lobby.\u201d \u2014@ChrisMurphyCT #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 660, "favorite_count": 2255, "source": "TweetDeck", "id_str": "758451119840460800", "is_retweet": false}, {"created_at": "Wed Jun 22 23:50:00 +0000 2016", "text": "You*\n\n*offer not valid for Muslims, women, Latinos, African Americans, LGBT Americans, middle-class families ... https://t.co/FTFYAyUFfp", "in_reply_to_screen_name": null, "retweet_count": 30676, "favorite_count": 49846, "source": "TweetDeck", "id_str": "745765814557638656", "is_retweet": false}, {"created_at": "Wed Jun 15 13:59:14 +0000 2016", "text": "Donald Trump is an expert at distracting people from the fact that he has nothing substantive to say for himself. https://t.co/1ZHvalDS3R", "in_reply_to_screen_name": null, "retweet_count": 6838, "favorite_count": 17415, "source": "TweetDeck", "id_str": "743080427569741824", "is_retweet": false}, {"created_at": "Tue Nov 01 20:19:41 +0000 2016", "text": "What\u2019s on the ballot this year:\nOur future.\nOur security.\nOur values.\nWho we are as a country.\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1423, "favorite_count": 3029, "source": "TweetDeck", "id_str": "793548085381267456", "is_retweet": false}, {"created_at": "Mon Jan 11 21:24:56 +0000 2016", "text": "Thank you, @GabbyGiffords and @ShuttleCDRKelly. https://t.co/Zs2I7tRBgw https://t.co/CObRkBvbxQ", "in_reply_to_screen_name": null, "retweet_count": 606, "favorite_count": 1257, "source": "TweetDeck", "id_str": "686660084366204928", "is_retweet": false}, {"created_at": "Fri Oct 21 21:28:47 +0000 2016", "text": "\"Let\u2019s go out and prove that love trumps hate!\u201d \u2014Hillary https://t.co/tTgeqxNqYm https://t.co/OmeUg5bDbr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1769, "favorite_count": 4662, "source": "TweetDeck", "id_str": "789579206468534272", "is_retweet": false}, {"created_at": "Sat Oct 01 01:24:21 +0000 2016", "text": "Trump wants to bring NYC's old, unconstitutional stop-and-frisk policy\u2014aka racial profiling\u2014to a city near you. https://t.co/XWHj5xRSiH", "in_reply_to_screen_name": null, "retweet_count": 2428, "favorite_count": 4543, "source": "Twitter for iPhone", "id_str": "782028346637029376", "is_retweet": false}, {"created_at": "Mon Nov 07 17:57:58 +0000 2016", "text": "Vote for an America where we build bridges, not walls.\n\nTogether, let\u2019s prove that love trumps hate.\u2026 https://t.co/ZCV69HA6gp", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2089, "favorite_count": 4745, "source": "TweetDeck", "id_str": "795686748433092608", "is_retweet": false}, {"created_at": "Wed Apr 06 02:31:56 +0000 2016", "text": "If you\u2019re with Hillary, now\u2019s the time to say so. Chip in $1, and let's go win this nomination. https://t.co/M0CpXUpOHc", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 1680, "source": "TweetDeck", "id_str": "717540313762570242", "is_retweet": false}, {"created_at": "Wed Nov 02 23:07:55 +0000 2016", "text": "\"Girls would grow up with a president who...brags about doing things to them without their consent.\" \u2014Hillary on Donald Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2241, "favorite_count": 5111, "source": "TweetDeck", "id_str": "793952809423171585", "is_retweet": false}, {"created_at": "Wed Oct 19 23:44:50 +0000 2016", "text": "When it comes to policy plans, there's no comparing Hillary and Trump. #DebateNight https://t.co/LbSCHp6bNM", "in_reply_to_screen_name": null, "retweet_count": 970, "favorite_count": 2619, "source": "TweetDeck", "id_str": "788888671583866880", "is_retweet": false}, {"created_at": "Thu Sep 08 01:40:44 +0000 2016", "text": "Actually, that\u2019s just what taking the office of President seriously looks like. https://t.co/Pyn92mesom", "in_reply_to_screen_name": null, "retweet_count": 12927, "favorite_count": 35142, "source": "TweetDeck", "id_str": "773697548389380097", "is_retweet": false}, {"created_at": "Sun Aug 28 16:18:29 +0000 2016", "text": "53 years ago, Dr. King told us his dream. Today, let's recommit ourselves to the march toward equality for all. https://t.co/YNicCxIZrU -H", "in_reply_to_screen_name": null, "retweet_count": 3055, "favorite_count": 8591, "source": "TweetDeck", "id_str": "769932174191648770", "is_retweet": false}, {"created_at": "Wed Jun 22 18:54:15 +0000 2016", "text": "Every child should have a path to success:\nPre-K: https://t.co/LI6Zh7Db2N\nSchool: https://t.co/KWTLAEJ3tz\nCollege: https://t.co/A4pWb3fOf4", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 1577, "source": "TweetDeck", "id_str": "745691387912392705", "is_retweet": false}, {"created_at": "Wed Jun 22 19:01:12 +0000 2016", "text": "\"I will make it a national priority for more companies to share profits with employees. On top of, not instead of, good wages.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 3215, "source": "TweetDeck", "id_str": "745693134131179520", "is_retweet": false}, {"created_at": "Mon Feb 01 04:48:04 +0000 2016", "text": ".@billclinton took over Hillary\u2019s Snapchat to take you behind the scenes in Iowa. https://t.co/JMkSKnTXeR https://t.co/feLI34lNcJ", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 1345, "source": "TweetDeck", "id_str": "694019362471030784", "is_retweet": false}, {"created_at": "Wed Oct 05 14:49:07 +0000 2016", "text": "RT @NRA: The choice is pretty simple...\u00a0\n #VPDebate https://t.co/Xikq1GBdlm", "in_reply_to_screen_name": null, "retweet_count": 485, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783680423884951552", "is_retweet": true}, {"created_at": "Thu Sep 15 02:36:11 +0000 2016", "text": "RT @librarycongress: Congratulations to Carla Hayden, sworn in today as 14th #LibrarianOfCongress! Follow her at @LibnOfCongress https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 624, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "776248216597721088", "is_retweet": true}, {"created_at": "Tue Sep 27 03:52:39 +0000 2016", "text": "RT @madeleine: .@timkaine That's what we @Wellesley girls do! And it's so clear @HillaryClinton is the only candidate prepared to be presid\u2026", "in_reply_to_screen_name": null, "retweet_count": 3255, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780616114120294400", "is_retweet": true}, {"created_at": "Tue Feb 16 21:44:25 +0000 2016", "text": "\"We need to recognize our privilege and practice humility, rather than assume that our experiences are everyone\u2019s experiences.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1520, "favorite_count": 2240, "source": "TweetDeck", "id_str": "699710951562596355", "is_retweet": false}, {"created_at": "Fri Apr 29 01:10:51 +0000 2016", "text": "If fighting for women is \"playing the #WomanCard,\" what card is Trump playing?\nhttps://t.co/PRoFKATQAE", "in_reply_to_screen_name": null, "retweet_count": 1878, "favorite_count": 3591, "source": "Twitter Web Client", "id_str": "725854829172514816", "is_retweet": false}, {"created_at": "Mon May 02 00:55:07 +0000 2016", "text": "\"We cannot let Barack Obama\u2019s legacy fall into Donald Trump\u2019s hands.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2278, "favorite_count": 5397, "source": "TweetDeck", "id_str": "726938033493299200", "is_retweet": false}, {"created_at": "Sat Aug 20 02:05:02 +0000 2016", "text": "Trump says he hires the best people. This is what he means: https://t.co/FvCVcmLLCY", "in_reply_to_screen_name": null, "retweet_count": 1804, "favorite_count": 3586, "source": "TweetDeck", "id_str": "766818291344113664", "is_retweet": false}, {"created_at": "Fri Jul 22 15:47:59 +0000 2016", "text": "RT @MHarrisPerry: I\u2019ve watched every moment of political conventions since 1984. Tonight I left early. I was afraid. https://t.co/Td9Uf0iVq\u2026", "in_reply_to_screen_name": null, "retweet_count": 2541, "favorite_count": 0, "source": "TweetDeck", "id_str": "756516146027913216", "is_retweet": true}, {"created_at": "Tue Oct 11 15:01:15 +0000 2016", "text": "18,000 strong turned out in Columbus last night. Make sure you and your friends register and turn out to vote:\u2026 https://t.co/Zzv5KBAAo6", "in_reply_to_screen_name": null, "retweet_count": 3005, "favorite_count": 9940, "source": "TweetDeck", "id_str": "785857803315453952", "is_retweet": false}, {"created_at": "Mon Aug 15 17:51:18 +0000 2016", "text": "\"Donald Trump has no clue what it takes to lead this great country.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 1079, "favorite_count": 3208, "source": "TweetDeck", "id_str": "765244489120219136", "is_retweet": false}, {"created_at": "Wed Jul 13 17:09:56 +0000 2016", "text": "In times like these, we need a president who can help pull us\ntogether, not split us apart.\n\nAnd that's why Donald Trump is so dangerous.", "in_reply_to_screen_name": null, "retweet_count": 1718, "favorite_count": 4311, "source": "TweetDeck", "id_str": "753275280077316096", "is_retweet": false}, {"created_at": "Mon Sep 26 00:50:28 +0000 2016", "text": "Today, the sacrifices of Gold Star families weigh heavier on my mind. Thank you. I will fight to get you the care &amp; benefits you deserve. -H", "in_reply_to_screen_name": null, "retweet_count": 2561, "favorite_count": 8994, "source": "TweetDeck", "id_str": "780207878229598208", "is_retweet": false}, {"created_at": "Fri Aug 05 16:42:51 +0000 2016", "text": "We\u2019ve got to help every family afford the books, computers, and internet access that our kids need to learn in the 21st century.", "in_reply_to_screen_name": null, "retweet_count": 932, "favorite_count": 3437, "source": "TweetDeck", "id_str": "761603383782412289", "is_retweet": false}, {"created_at": "Mon Oct 10 02:02:57 +0000 2016", "text": "Trump: \"Health care\u2014why didn't she do something about it?\"\n\nHere's Hillary in 1993, testifying for health care refo\u2026 https://t.co/HGfkq4M4rp", "in_reply_to_screen_name": null, "retweet_count": 17748, "favorite_count": 36928, "source": "TweetDeck", "id_str": "785299551339089921", "is_retweet": false}, {"created_at": "Fri Feb 26 03:49:15 +0000 2016", "text": "No matter which Republican is nominated, we can\u2019t afford to let him in the White House. Add your name if you agree. https://t.co/pGL3xPDce8", "in_reply_to_screen_name": null, "retweet_count": 1470, "favorite_count": 3872, "source": "TweetDeck", "id_str": "703064254535049217", "is_retweet": false}, {"created_at": "Thu Jul 28 03:01:28 +0000 2016", "text": "\u201cBy so many measures, our country is stronger and more prosperous than it was when we started.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 877, "favorite_count": 2950, "source": "TweetDeck", "id_str": "758497573716066305", "is_retweet": false}, {"created_at": "Tue Nov 08 16:03:58 +0000 2016", "text": "RT @POTUS: Today, progress is on the ballot. Go vote - then make sure your friends, your family, and everyone you know votes too.", "in_reply_to_screen_name": null, "retweet_count": 58369, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796020446693101568", "is_retweet": true}, {"created_at": "Sun Sep 25 19:55:58 +0000 2016", "text": "\"[Hillary] is one of the most qualified people ever to run for the office, and she easily earns our endorsement.\u201d\u2026 https://t.co/AhBE0UuJPO", "in_reply_to_screen_name": null, "retweet_count": 2670, "favorite_count": 6610, "source": "TweetDeck", "id_str": "780133767063146497", "is_retweet": false}, {"created_at": "Sat Jul 23 17:33:40 +0000 2016", "text": "\"What does Donald Trump say about these great Americans?\n\nHe calls the American military 'a disaster.\u2019\u201d \u2014@TimKaine", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 2252, "source": "TweetDeck", "id_str": "756905129396273152", "is_retweet": false}, {"created_at": "Wed Jul 27 23:01:05 +0000 2016", "text": "\"Middle-class families fighting to give your kids a better life: Democrats stand in your corner.\" \u2014@SenatorReid #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 611, "favorite_count": 2302, "source": "TweetDeck", "id_str": "758437078036348933", "is_retweet": false}, {"created_at": "Wed Jan 27 14:06:07 +0000 2016", "text": "A president should do everything she can not just to protect reproductive rights, but to advance them.", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 2616, "source": "Twitter for iPhone", "id_str": "692347859111428096", "is_retweet": false}, {"created_at": "Fri Feb 12 03:25:52 +0000 2016", "text": "A vote in 2002 is not a plan to defeat ISIS in 2016. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1000, "favorite_count": 2223, "source": "Twitter Web Client", "id_str": "697984942987472896", "is_retweet": false}, {"created_at": "Mon Sep 12 18:22:30 +0000 2016", "text": "Trump's calling for trillion dollar tax cuts for Wall Street.\n\nIt's time for them to pay their fair share. https://t.co/y8vyESIOES", "in_reply_to_screen_name": null, "retweet_count": 1952, "favorite_count": 4826, "source": "TweetDeck", "id_str": "775399200053952516", "is_retweet": false}, {"created_at": "Sun Sep 18 21:20:25 +0000 2016", "text": "\"I strongly condemn the apparent terrorist attacks in Minnesota, New Jersey, and New York.\" https://t.co/NSy3fkcu1c", "in_reply_to_screen_name": null, "retweet_count": 2718, "favorite_count": 7342, "source": "Twitter for iPhone", "id_str": "777618304332627968", "is_retweet": false}, {"created_at": "Thu Aug 25 19:28:07 +0000 2016", "text": "Donald Trump is temperamentally unfit to be president of the United States.", "in_reply_to_screen_name": null, "retweet_count": 1769, "favorite_count": 4851, "source": "TweetDeck", "id_str": "768892730785267713", "is_retweet": false}, {"created_at": "Sat Feb 06 02:35:01 +0000 2016", "text": "Watch live: Hillary speaks at the #NHdems2016 dinner in Manchester, 4 days before the NH primary \u2192 https://t.co/DSeua0cu4U #FITN", "in_reply_to_screen_name": null, "retweet_count": 180, "favorite_count": 412, "source": "TweetDeck", "id_str": "695797815591772160", "is_retweet": false}, {"created_at": "Mon Oct 03 17:38:19 +0000 2016", "text": "Honest work deserves honest pay. Everyone should have the right to join a strong union that will always have your back.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 701, "favorite_count": 2011, "source": "TweetDeck", "id_str": "782998227436134400", "is_retweet": false}, {"created_at": "Thu Oct 27 19:05:22 +0000 2016", "text": "\"We want a president who understands that this nation was built by people who came here from all corners of the world.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 657, "favorite_count": 1465, "source": "TweetDeck", "id_str": "791717444872200192", "is_retweet": false}, {"created_at": "Mon Jun 06 19:54:28 +0000 2016", "text": "\"Nobody's going to be left in this country that he's exempted from insults.\" \u2014Hillary on Trump in California: https://t.co/M66GAOEeal", "in_reply_to_screen_name": null, "retweet_count": 1018, "favorite_count": 2145, "source": "TweetDeck", "id_str": "739908334560681984", "is_retweet": false}, {"created_at": "Mon Feb 08 19:29:21 +0000 2016", "text": ".@billclinton is taking over Hillary\u2019s Instagram today from NH! First stop, breakfast: https://t.co/N09gfgmFmN https://t.co/1hhGfoyP2w", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 1084, "source": "TweetDeck", "id_str": "696777858354696192", "is_retweet": false}, {"created_at": "Mon Nov 07 15:07:36 +0000 2016", "text": "Our children and grandchildren will look back at the choice we make on Tuesday. Let's make them proud.\u2026 https://t.co/c6mG8OZ1yr", "in_reply_to_screen_name": null, "retweet_count": 5377, "favorite_count": 12239, "source": "Media Studio", "id_str": "795643875251593216", "is_retweet": false}, {"created_at": "Wed Nov 02 20:11:42 +0000 2016", "text": "\"She believes we can summon what\u2019s best in each of us and make this country better for all of us.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 769, "favorite_count": 1895, "source": "TweetDeck", "id_str": "793908465211174912", "is_retweet": false}, {"created_at": "Thu Oct 20 03:41:13 +0000 2016", "text": "3/3. #SheWon https://t.co/jMIDESup7K", "in_reply_to_screen_name": null, "retweet_count": 13791, "favorite_count": 40179, "source": "Twitter Web Client", "id_str": "788948158466367488", "is_retweet": false}, {"created_at": "Tue Sep 27 21:25:31 +0000 2016", "text": "When Donald Trump goes low...register to vote: https://t.co/tTgeqxNqYm https://t.co/DXz9dEwsZS", "in_reply_to_screen_name": null, "retweet_count": 2902, "favorite_count": 7300, "source": "TweetDeck", "id_str": "780881075891531776", "is_retweet": false}, {"created_at": "Thu May 12 02:28:07 +0000 2016", "text": "\"I am the king of debt, I do love debt, I love playing with it.\" \u2014@RealDonaldTrump https://t.co/ssVajpX6Yf", "in_reply_to_screen_name": null, "retweet_count": 1699, "favorite_count": 2419, "source": "TweetDeck", "id_str": "730585314209742848", "is_retweet": false}, {"created_at": "Tue Oct 25 16:58:47 +0000 2016", "text": "Americans\u2019 wages just hit an all-time high.\n\nWe need to build on this progress\u2014not turn back: https://t.co/ozm7qkDkjA", "in_reply_to_screen_name": null, "retweet_count": 1446, "favorite_count": 4044, "source": "TweetDeck", "id_str": "790960810969403392", "is_retweet": false}, {"created_at": "Mon Sep 05 19:48:21 +0000 2016", "text": "One candidate would stand up for workers and their families. The other? Not so much. https://t.co/EtDBJgyNX7", "in_reply_to_screen_name": null, "retweet_count": 2794, "favorite_count": 6538, "source": "TweetDeck", "id_str": "772884092132192256", "is_retweet": false}, {"created_at": "Mon Jun 27 19:32:58 +0000 2016", "text": "\"You can\u2019t just talk someone into trusting you. You\u2019ve got to earn it ... I believe what you say matters.\" \u2014Hillary https://t.co/0JaHehp9ig", "in_reply_to_screen_name": null, "retweet_count": 2155, "favorite_count": 7556, "source": "TweetDeck", "id_str": "747513069874589696", "is_retweet": false}, {"created_at": "Thu Jun 23 15:53:35 +0000 2016", "text": "Desgarradora decisi\u00f3n de #CorteSuprema de inmigraci\u00f3n podr\u00eda separar 5 millones de familias en riesgo de deportaci\u00f3n. Tenemos que hacer m\u00e1s.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 784, "favorite_count": 1417, "source": "TweetDeck", "id_str": "746008308713152514", "is_retweet": false}, {"created_at": "Mon Aug 15 17:23:01 +0000 2016", "text": "Providing a \u201cTrump Kids Club\u201d for your paying customers is not the same thing as providing real child care for your workers.", "in_reply_to_screen_name": null, "retweet_count": 987, "favorite_count": 3087, "source": "TweetDeck", "id_str": "765237372644646914", "is_retweet": false}, {"created_at": "Wed Aug 17 21:13:07 +0000 2016", "text": "We can't let @realDonaldTrump become our next president. https://t.co/1zdOOMfync https://t.co/ZvUEIBDGMa", "in_reply_to_screen_name": null, "retweet_count": 1874, "favorite_count": 4800, "source": "TweetDeck", "id_str": "766020053464707073", "is_retweet": false}, {"created_at": "Thu Mar 10 02:29:19 +0000 2016", "text": "\u201cIt\u2019s time we end family detention.\u201d \u2014Hillary #DemDebate https://t.co/sUSUOim4fc", "in_reply_to_screen_name": null, "retweet_count": 659, "favorite_count": 1397, "source": "TweetDeck", "id_str": "707755183325974528", "is_retweet": false}, {"created_at": "Sun Mar 06 02:18:33 +0000 2016", "text": "\"I am thrilled we\u2019re adding to our pledged delegate count. I\u2019m grateful to everyone who turned out to support us.\" \u2014Hillary in Detroit", "in_reply_to_screen_name": null, "retweet_count": 1037, "favorite_count": 3693, "source": "Twitter Web Client", "id_str": "706302922255106048", "is_retweet": false}, {"created_at": "Thu Oct 20 12:01:32 +0000 2016", "text": "It's appalling that a presidential nominee of a major party is undermining the pillar of our democracy\u2014just because\u2026 https://t.co/KrPGYQyfgb", "in_reply_to_screen_name": null, "retweet_count": 11739, "favorite_count": 32534, "source": "Media Studio", "id_str": "789074067399831552", "is_retweet": false}, {"created_at": "Wed Oct 26 15:35:27 +0000 2016", "text": "RT @ChelseaClinton: Happy Birthday Mom! I hope that one day Charlotte &amp; Aidan are as proud to be my children as I am to be your daughter ht\u2026", "in_reply_to_screen_name": null, "retweet_count": 6327, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791302227956727808", "is_retweet": true}, {"created_at": "Wed Aug 10 22:01:03 +0000 2016", "text": "We're also going to make sure future generations inherit a cleaner planet\u2014and create millions of jobs along the way. https://t.co/HvrbycAnAy", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1131, "favorite_count": 2945, "source": "TweetDeck", "id_str": "763495402729504768", "is_retweet": false}, {"created_at": "Fri Oct 21 21:09:55 +0000 2016", "text": "\u201cMore than 3 million people have already voted, including many of you right here in Ohio.\u201d \u2014Hillary\n\nJoin them: https://t.co/FGde4kwoHv", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 469, "favorite_count": 1098, "source": "TweetDeck", "id_str": "789574461804646401", "is_retweet": false}, {"created_at": "Tue Oct 25 14:00:43 +0000 2016", "text": "\u201cIn these final weeks of the election season, find someone to tell about Clinton\u2019s lifetime of service.\u201d\u2014@wigazette https://t.co/ez5nbWrBef", "in_reply_to_screen_name": null, "retweet_count": 1095, "favorite_count": 3244, "source": "TweetDeck", "id_str": "790915998778007552", "is_retweet": false}, {"created_at": "Sat Feb 27 20:01:17 +0000 2016", "text": "Hillary spoke with students at @MorrisColl1908 about student debt and HBCUs: https://t.co/TlJq4WkiFB https://t.co/rSTBETpdHq", "in_reply_to_screen_name": null, "retweet_count": 279, "favorite_count": 744, "source": "Twitter Web Client", "id_str": "703671263965925376", "is_retweet": false}, {"created_at": "Thu May 19 17:55:54 +0000 2016", "text": "\"Do you think Donald Trump is qualified to be president?\" \u2014@ChrisCuomo\n\n\"No, I do not.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1109, "favorite_count": 2562, "source": "TweetDeck", "id_str": "733355514411814912", "is_retweet": false}, {"created_at": "Sun Jul 31 03:00:45 +0000 2016", "text": "RT @JohnKasich: There's only one way to talk about Gold Star parents: with honor and respect. Capt. Khan is a hero. Together, we should pra\u2026", "in_reply_to_screen_name": null, "retweet_count": 16711, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "759584558522232832", "is_retweet": true}, {"created_at": "Mon Aug 29 21:11:49 +0000 2016", "text": "Qumber's parents came to this country for the American Dream. Trump is a threat to all they've achieved: https://t.co/YYXwtX2b4b", "in_reply_to_screen_name": null, "retweet_count": 1232, "favorite_count": 3125, "source": "TweetDeck", "id_str": "770368382227116036", "is_retweet": false}, {"created_at": "Fri Jan 15 03:29:49 +0000 2016", "text": "This is Muslim Americans' country too. The next president should know that\u2014and act like it. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1803, "favorite_count": 3782, "source": "TweetDeck", "id_str": "687839074552537090", "is_retweet": false}, {"created_at": "Sat Feb 27 15:58:26 +0000 2016", "text": "Today\u2019s the day! As South Carolina heads to the polls, let Hillary know you're with her. #ImWithHer https://t.co/Cg9B4bAzr1", "in_reply_to_screen_name": null, "retweet_count": 927, "favorite_count": 2072, "source": "Twitter Web Client", "id_str": "703610149777383424", "is_retweet": false}, {"created_at": "Thu Jul 28 01:10:17 +0000 2016", "text": "\"Every day we\u2019re grateful to Barack and Michelle for asking us to join them on this incredible journey.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 941, "favorite_count": 3778, "source": "TweetDeck", "id_str": "758469594197725184", "is_retweet": false}, {"created_at": "Thu Jun 09 19:57:17 +0000 2016", "text": "\"I know how hard this job can be. That\u2019s why I know she\u2019ll be so good at it.\" \u2014@POTUS https://t.co/RDjefd0t9f", "in_reply_to_screen_name": null, "retweet_count": 4916, "favorite_count": 13617, "source": "TweetDeck", "id_str": "740996208827731968", "is_retweet": false}, {"created_at": "Mon Oct 03 18:05:54 +0000 2016", "text": "No one should have to choose between paying the rent and filling their prescriptions. https://t.co/xaLokyZggT", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 808, "favorite_count": 2243, "source": "TweetDeck", "id_str": "783005170972102658", "is_retweet": false}, {"created_at": "Tue Aug 02 21:40:56 +0000 2016", "text": "RT @TammyforIL: .@realdonaldtrump, this is how one usually looks when you are awarded the Purple Heart. Nothing easy about it. https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 23508, "favorite_count": 0, "source": "TweetDeck", "id_str": "760591234780000256", "is_retweet": true}, {"created_at": "Fri Jul 29 03:04:54 +0000 2016", "text": "\"Comprehensive immigration reform will grow our economy and keep families together, and it\u2019s the right thing to do.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1732, "favorite_count": 5190, "source": "TweetDeck", "id_str": "758860827701096448", "is_retweet": false}, {"created_at": "Mon Aug 08 16:37:15 +0000 2016", "text": "RT @SenSanders: At a time of massive income and wealth inequality, it is absurd to provide huge tax breaks to the very rich.", "in_reply_to_screen_name": null, "retweet_count": 3386, "favorite_count": 0, "source": "TweetDeck", "id_str": "762689140513210368", "is_retweet": true}, {"created_at": "Thu Sep 01 01:15:12 +0000 2016", "text": "A wall that Mexico will pay for: a bad idea from an even worse negotiator. https://t.co/RZfOKe45RO", "in_reply_to_screen_name": null, "retweet_count": 7347, "favorite_count": 13276, "source": "Twitter Web Client", "id_str": "771154406037450752", "is_retweet": false}, {"created_at": "Tue Oct 25 18:52:00 +0000 2016", "text": "With just 14 days until Election Day, join Hillary live for a rally in Florida \u2192 https://t.co/EsqAmcnrnC\n\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1249, "favorite_count": 4399, "source": "TweetDeck", "id_str": "790989303031730176", "is_retweet": false}, {"created_at": "Tue Sep 13 18:39:10 +0000 2016", "text": "\"Donald Trump says stuff every day that used to be considered as disqualifying for being president.\" \u2014@POTUS https://t.co/1b8ZjmZuXr", "in_reply_to_screen_name": null, "retweet_count": 6881, "favorite_count": 15490, "source": "Twitter Web Client", "id_str": "775765784232689665", "is_retweet": false}, {"created_at": "Sat Feb 06 02:47:37 +0000 2016", "text": "\"I want to break down all the barriers holding Americans back...but [our] problems can\u2019t be reduced to Wall Street and Washington.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 572, "favorite_count": 1316, "source": "TweetDeck", "id_str": "695800988117106688", "is_retweet": false}, {"created_at": "Sat Oct 15 14:14:18 +0000 2016", "text": "\"I'm going to be the voice of the voiceless.\" \u2014Gwen Carr, mother of Eric Garner, on her work to reform policing pra\u2026 https://t.co/t2AMLWiTN3", "in_reply_to_screen_name": null, "retweet_count": 3945, "favorite_count": 11469, "source": "Media Studio", "id_str": "787295537850621952", "is_retweet": false}, {"created_at": "Mon Mar 14 01:09:02 +0000 2016", "text": "\"Donald Trump is responsible for what happens at his events. He\u2019s been not just inciting violence, but applauding it.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 3243, "favorite_count": 6854, "source": "TweetDeck", "id_str": "709184530234658816", "is_retweet": false}, {"created_at": "Mon Oct 31 19:39:43 +0000 2016", "text": "RT @CNBC: FBI's Comey opposed naming Russians, citing election timing: Source https://t.co/DELFvrfspj (via @EamonJavers)", "in_reply_to_screen_name": null, "retweet_count": 2759, "favorite_count": 0, "source": "TweetDeck", "id_str": "793175638643445760", "is_retweet": true}, {"created_at": "Mon Aug 08 21:32:14 +0000 2016", "text": "RT @elizabethforma: Even @realDonaldTrump's childcare plan gives billionaires w/ a nanny a tax break while millions of low-income household\u2026", "in_reply_to_screen_name": null, "retweet_count": 6289, "favorite_count": 0, "source": "TweetDeck", "id_str": "762763375378071552", "is_retweet": true}, {"created_at": "Wed Sep 14 16:34:22 +0000 2016", "text": "5. How can you be tough on Iran, given your business partnership with someone connected to Iranian money laundering? https://t.co/1AdDm2kfvy", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3063, "favorite_count": 4621, "source": "TweetDeck", "id_str": "776096766412353536", "is_retweet": false}, {"created_at": "Fri Sep 16 03:20:31 +0000 2016", "text": "President Obama\u2019s successor cannot and will not be the man who led the racist birther movement. Period.", "in_reply_to_screen_name": null, "retweet_count": 13374, "favorite_count": 33143, "source": "TweetDeck", "id_str": "776621762545156096", "is_retweet": false}, {"created_at": "Thu Aug 11 19:20:15 +0000 2016", "text": "RT @mpshapiro: .@HillaryClinton hits the Trump Loophole - his backdoor tax break for billionaires like himself. Read about it here: https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 1248, "favorite_count": 0, "source": "TweetDeck", "id_str": "763817323476180997", "is_retweet": true}, {"created_at": "Tue Aug 02 01:17:23 +0000 2016", "text": "Road trip: Tag along on Hillary and @TimKaine's bus tour through Ohio and Pennsylvania \u2192 https://t.co/oA2spAUmu9 https://t.co/xj3HOYaFBc", "in_reply_to_screen_name": null, "retweet_count": 1021, "favorite_count": 4496, "source": "Twitter Web Client", "id_str": "760283320626315266", "is_retweet": false}, {"created_at": "Sat Sep 17 00:54:04 +0000 2016", "text": "It's great to be back on the campaign trail. https://t.co/vm1KX2uOXt", "in_reply_to_screen_name": null, "retweet_count": 2541, "favorite_count": 13343, "source": "TweetDeck", "id_str": "776947295896084481", "is_retweet": false}, {"created_at": "Mon Jul 25 20:15:07 +0000 2016", "text": "We\u2019re ready to kick off a historic #DemConvention.\n\nWatch live: https://t.co/Ax4cwouKdl https://t.co/2c8OPq1dto", "in_reply_to_screen_name": null, "retweet_count": 1227, "favorite_count": 3910, "source": "TweetDeck", "id_str": "757670537544040452", "is_retweet": false}, {"created_at": "Sun Jan 03 21:39:53 +0000 2016", "text": "A Republican president would delight in reversing @POTUS's progress. We can\u2019t let that happen.\nhttps://t.co/LFmcRdN7OO", "in_reply_to_screen_name": null, "retweet_count": 728, "favorite_count": 1967, "source": "Twitter Web Client", "id_str": "683764746269556736", "is_retweet": false}, {"created_at": "Fri Apr 29 02:07:12 +0000 2016", "text": "Want one? Chip in now: https://t.co/7zG2HrebW3 #WomanCard https://t.co/tEnbvq5a9r", "in_reply_to_screen_name": null, "retweet_count": 1130, "favorite_count": 2404, "source": "Twitter for iPhone", "id_str": "725869008994635778", "is_retweet": false}, {"created_at": "Tue Feb 09 12:30:17 +0000 2016", "text": "Good morning, New Hampshire! See you at the polls. https://t.co/LXQelTC3XX", "in_reply_to_screen_name": null, "retweet_count": 640, "favorite_count": 1613, "source": "TweetDeck", "id_str": "697034785269661696", "is_retweet": false}, {"created_at": "Mon Oct 10 01:38:29 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump's healthcare plan: \"something terrific.\"\n\nThat's it.\n\nSeriously. \n\nIt's gonna be so good. \n\n#Debate\n\nhttp\u2026", "in_reply_to_screen_name": null, "retweet_count": 2047, "favorite_count": 0, "source": "TweetDeck", "id_str": "785293394096578560", "is_retweet": true}, {"created_at": "Tue Sep 27 00:31:10 +0000 2016", "text": "If you're with Hillary, now's the time to show it. Chip in before tonight's debate to have her back: https://t.co/OftmbqRvyQ #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 1268, "favorite_count": 3987, "source": "TweetDeck", "id_str": "780565409623924736", "is_retweet": false}, {"created_at": "Tue Jul 19 19:19:57 +0000 2016", "text": "\"He's built his empire on other people's backs.\" \u2014A small business owner who Donald Trump still owes $30,000\nhttps://t.co/i51CBQqWCk", "in_reply_to_screen_name": null, "retweet_count": 3220, "favorite_count": 5007, "source": "Twitter Web Client", "id_str": "755482327266897920", "is_retweet": false}, {"created_at": "Wed Aug 03 21:48:43 +0000 2016", "text": "As president I will defend and protect America\u2019s public lands. https://t.co/Jb7DXwL9WS", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 3564, "source": "TweetDeck", "id_str": "760955582375464960", "is_retweet": false}, {"created_at": "Wed Jul 27 01:57:56 +0000 2016", "text": "\"This fall, we must do everything we can to make sure that Hillary becomes our next Commander-in- Chief.\" \u2014@Madeleine #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1023, "favorite_count": 3850, "source": "TweetDeck", "id_str": "758119198795194370", "is_retweet": false}, {"created_at": "Tue Jul 26 16:18:14 +0000 2016", "text": "\"When we are indivisible, we are invincible.\" \u2014@CoryBooker at the @DemConvention last night #DemsInPHL https://t.co/L145Ovu1uZ", "in_reply_to_screen_name": null, "retweet_count": 1644, "favorite_count": 4978, "source": "TweetDeck", "id_str": "757973312706318336", "is_retweet": false}, {"created_at": "Sun Jun 26 14:57:04 +0000 2016", "text": "One year later (still one of our favorite maps). https://t.co/JJMrMOtiQc", "in_reply_to_screen_name": null, "retweet_count": 2486, "favorite_count": 7261, "source": "TweetDeck", "id_str": "747081249118949376", "is_retweet": false}, {"created_at": "Fri Aug 05 00:00:00 +0000 2016", "text": "None of us can raise a family, build a business, heal a community, or lift a country alone. It takes a village. https://t.co/wOdhhdd0pb", "in_reply_to_screen_name": null, "retweet_count": 4487, "favorite_count": 16596, "source": "TweetDeck", "id_str": "761351010728153089", "is_retweet": false}, {"created_at": "Wed Jul 06 21:43:17 +0000 2016", "text": "Let's make sure @realDonaldTrump never has the chance to bankrupt America the way he bankrupted his businesses.\nhttps://t.co/BNSO5xAPJE", "in_reply_to_screen_name": null, "retweet_count": 2642, "favorite_count": 6089, "source": "Twitter Web Client", "id_str": "750807357009997824", "is_retweet": false}, {"created_at": "Mon Oct 03 16:14:22 +0000 2016", "text": "\"I knew then that she was destined for great things.\" An interview with Hillary's lifelong friend, Betsy Ebeling: https://t.co/G8pBAguuha", "in_reply_to_screen_name": null, "retweet_count": 793, "favorite_count": 2710, "source": "TweetDeck", "id_str": "782977099950911488", "is_retweet": false}, {"created_at": "Wed Oct 05 01:35:29 +0000 2016", "text": "Implicit bias is real. It hurts Americans. Anyone who'd outright deny its existence is unfit for the White House. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 7137, "favorite_count": 15452, "source": "TweetDeck", "id_str": "783480699894521856", "is_retweet": false}, {"created_at": "Thu Sep 22 15:17:46 +0000 2016", "text": "RT @RachaelGass: Holding back tears right now. For those of us that didn't grow up with #ADA this is amazing. #imwithher #CripTheVote", "in_reply_to_screen_name": null, "retweet_count": 447, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778976591770714112", "is_retweet": true}, {"created_at": "Sat Jan 23 01:21:32 +0000 2016", "text": "On #Roe43, the future of reproductive rights in America is more vulnerable than ever before. https://t.co/c9kERiSXsE", "in_reply_to_screen_name": null, "retweet_count": 462, "favorite_count": 899, "source": "TweetDeck", "id_str": "690705894775078912", "is_retweet": false}, {"created_at": "Fri Jul 29 01:14:22 +0000 2016", "text": "Watch live: Get an exclusive look at the @DemConvention before Hillary officially accepts the nomination \u2192 https://t.co/XGg70hpYLL", "in_reply_to_screen_name": null, "retweet_count": 429, "favorite_count": 1515, "source": "TweetDeck", "id_str": "758833008967163904", "is_retweet": false}, {"created_at": "Mon Sep 26 21:59:16 +0000 2016", "text": "Here are 35 questions Trump still needs to answer. https://t.co/rdMYbHGhwA #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 1693, "favorite_count": 2923, "source": "TweetDeck", "id_str": "780527183030849536", "is_retweet": false}, {"created_at": "Wed Oct 05 02:29:18 +0000 2016", "text": "\"We support Roe v. Wade. We support the constitutional right of American women to...make their own decision about pregnancy.\" \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 5594, "favorite_count": 15937, "source": "TweetDeck", "id_str": "783494242974986240", "is_retweet": false}, {"created_at": "Wed Sep 07 11:32:34 +0000 2016", "text": "\"I know more about ISIS than the generals do.\" \u2014Donald Trump\n\nNo, you don't. https://t.co/6tFKlsqyyk", "in_reply_to_screen_name": null, "retweet_count": 3258, "favorite_count": 7396, "source": "Twitter Web Client", "id_str": "773484097159192576", "is_retweet": false}, {"created_at": "Wed Jan 06 02:56:17 +0000 2016", "text": ".@billclinton shares memories from when he first met Hillary: https://t.co/n2a3iUx06p https://t.co/b8veWMzc4U", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 1137, "source": "TweetDeck", "id_str": "684569143488692224", "is_retweet": false}, {"created_at": "Mon Jun 06 15:54:57 +0000 2016", "text": "Donald Trump should come out of the towers he names after himself and actually talk and listen to people. https://t.co/PmWTePt3C0", "in_reply_to_screen_name": null, "retweet_count": 2847, "favorite_count": 9087, "source": "TweetDeck", "id_str": "739848057559351296", "is_retweet": false}, {"created_at": "Sun Feb 07 14:18:11 +0000 2016", "text": "Thousands of people are saying #ImWithHer before the New Hampshire primary! Don't miss your chance: https://t.co/1bEcFYGN0W", "in_reply_to_screen_name": null, "retweet_count": 596, "favorite_count": 1496, "source": "TweetDeck", "id_str": "696337160945975296", "is_retweet": false}, {"created_at": "Tue Jul 12 15:50:35 +0000 2016", "text": "\"This election must be about bringing our people together, not dividing us up.\" \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 910, "favorite_count": 2322, "source": "TweetDeck", "id_str": "752892924023693312", "is_retweet": false}, {"created_at": "Tue May 10 20:19:26 +0000 2016", "text": "\"Enough is enough. It\u2019s time we make quality child care affordable for all working families.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 933, "favorite_count": 2660, "source": "TweetDeck", "id_str": "730130145802125312", "is_retweet": false}, {"created_at": "Fri Apr 01 20:35:17 +0000 2016", "text": "14.4 million new jobs\u2014and 11 other numbers that show how far we\u2019ve come under @POTUS: https://t.co/BGfkH8xxYH https://t.co/Aad2ZvkIbI", "in_reply_to_screen_name": null, "retweet_count": 1511, "favorite_count": 3080, "source": "TweetDeck", "id_str": "716001006044184577", "is_retweet": false}, {"created_at": "Sat Oct 29 23:51:16 +0000 2016", "text": "RT @johnpodesta: You've probably heard about a bewildering letter sent to Congressional leaders by the FBI Director. Get the facts. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 4327, "favorite_count": 0, "source": "TweetDeck", "id_str": "792514169513926656", "is_retweet": true}, {"created_at": "Fri Sep 16 18:56:34 +0000 2016", "text": "On National Prisoners of War Remembrance Day, a POW shares what it means when Trump insults veterans. https://t.co/0dVB5B0gbC", "in_reply_to_screen_name": null, "retweet_count": 5652, "favorite_count": 8623, "source": "Twitter Web Client", "id_str": "776857325625745409", "is_retweet": false}, {"created_at": "Sat Jul 23 17:30:17 +0000 2016", "text": "RT @Hillary_esp: \u201cY bienvenidos a todos, bienvenidos a todos a nuestro pa\u00eds porque somos americanos todos\u201d\u2014@TimKaine.", "in_reply_to_screen_name": null, "retweet_count": 587, "favorite_count": 0, "source": "TweetDeck", "id_str": "756904280179744768", "is_retweet": true}, {"created_at": "Sat Nov 05 19:06:11 +0000 2016", "text": "When they go low...we vote: https://t.co/3TKJ4HnJC7 https://t.co/xQ6ETiGMmX", "in_reply_to_screen_name": null, "retweet_count": 4500, "favorite_count": 10245, "source": "Media Studio", "id_str": "794979138842963969", "is_retweet": false}, {"created_at": "Fri Mar 11 21:24:30 +0000 2016", "text": "Hillary Clinton\u2019s statement on her comments about the Reagans' record on HIV and AIDS: https://t.co/RtIs0zpJfk", "in_reply_to_screen_name": null, "retweet_count": 4534, "favorite_count": 7550, "source": "TweetDeck", "id_str": "708403247795539968", "is_retweet": false}, {"created_at": "Fri Jul 29 03:01:18 +0000 2016", "text": "\"My primary mission as president will be to create more opportunity and more good jobs with rising wages right here in the United States.\"", "in_reply_to_screen_name": null, "retweet_count": 1486, "favorite_count": 5060, "source": "TweetDeck", "id_str": "758859920871559168", "is_retweet": false}, {"created_at": "Sat Feb 20 23:21:49 +0000 2016", "text": "The truth is, we aren\u2019t a single-issue country. We need more than a plan for the big banks. The middle class needs a raise.", "in_reply_to_screen_name": null, "retweet_count": 823, "favorite_count": 2099, "source": "TweetDeck", "id_str": "701185014860533760", "is_retweet": false}, {"created_at": "Sat May 21 21:07:06 +0000 2016", "text": "Para muchos, los ingresos ya no rinden tanto como antes. https://t.co/LDgXCjGSpw", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 1229, "source": "TweetDeck", "id_str": "734128406841827328", "is_retweet": false}, {"created_at": "Wed Oct 05 01:50:15 +0000 2016", "text": "RT @TheBriefing2016: Here's everything Mike Pence and Donald Trump have offered on defeating ISIS. #VPDebate https://t.co/oSIsPPoOye", "in_reply_to_screen_name": null, "retweet_count": 2024, "favorite_count": 0, "source": "TweetDeck", "id_str": "783484416165314560", "is_retweet": true}, {"created_at": "Wed Apr 13 15:25:36 +0000 2016", "text": "Even in states with strict gun laws, illegal weapons are often just a bus ride away. We have to fix this: https://t.co/ohOn4a2FPN", "in_reply_to_screen_name": null, "retweet_count": 629, "favorite_count": 1121, "source": "TweetDeck", "id_str": "720271725506785280", "is_retweet": false}, {"created_at": "Tue Nov 08 12:01:49 +0000 2016", "text": "It's Election Day! Millions of Americans have cast their votes for Hillary\u2014join them and confirm where you vote: https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": null, "retweet_count": 2704, "favorite_count": 7634, "source": "TweetDeck", "id_str": "795959509537722369", "is_retweet": false}, {"created_at": "Sun Feb 07 23:22:03 +0000 2016", "text": "Time to #GOTVforHRC! Call 3 Hillary supporters in NH and remind them to vote on Tuesday. You don't even need a \ud83d\udcf1! https://t.co/g8y5sy29UP", "in_reply_to_screen_name": null, "retweet_count": 341, "favorite_count": 885, "source": "TweetDeck", "id_str": "696474029411012609", "is_retweet": false}, {"created_at": "Fri Oct 28 19:10:25 +0000 2016", "text": "\"Make no mistake: Women\u2019s health and rights\u2014our futures, the futures of our daughters and granddaughters\u2014are on the ballot.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 929, "favorite_count": 2023, "source": "TweetDeck", "id_str": "792081100617183232", "is_retweet": false}, {"created_at": "Thu Aug 11 18:16:04 +0000 2016", "text": "Trump wants to give trillions in tax breaks to people like himself.\n\nInstead, let\u2019s invest in our veterans, kids, schools and police.", "in_reply_to_screen_name": null, "retweet_count": 2150, "favorite_count": 6957, "source": "TweetDeck", "id_str": "763801168950820868", "is_retweet": false}, {"created_at": "Fri Jul 29 17:32:54 +0000 2016", "text": "\"This has been such an exciting...week!\n\nWe heard the man from Hope, Bill Clinton &amp; the man of hope, Barack Obama.\" https://t.co/gefWILX2iW", "in_reply_to_screen_name": null, "retweet_count": 3637, "favorite_count": 16799, "source": "TweetDeck", "id_str": "759079265233149953", "is_retweet": false}, {"created_at": "Fri Feb 12 03:54:34 +0000 2016", "text": "If you think Hillary is the best person to be president, chip in $1: https://t.co/9jA40Mt3DS #DemDebate https://t.co/yLVle09kRy", "in_reply_to_screen_name": null, "retweet_count": 718, "favorite_count": 1610, "source": "TweetDeck", "id_str": "697992161887916032", "is_retweet": false}, {"created_at": "Tue Jul 19 13:00:47 +0000 2016", "text": "Trump bulldozed his way into this nomination by sowing hate\u2014add your name to tell him that's not who we are. https://t.co/Hmi5wxOXpz", "in_reply_to_screen_name": null, "retweet_count": 1200, "favorite_count": 3087, "source": "Twitter for iPhone", "id_str": "755386904955191296", "is_retweet": false}, {"created_at": "Mon Sep 26 17:38:25 +0000 2016", "text": "Everything you need to know before watching tonight's debate: https://t.co/Z4gcpSDfZa https://t.co/bymTtB2Et7", "in_reply_to_screen_name": null, "retweet_count": 2021, "favorite_count": 3476, "source": "TweetDeck", "id_str": "780461537932771328", "is_retweet": false}, {"created_at": "Mon Feb 01 14:12:35 +0000 2016", "text": "It's #IAcaucus day! If you're standing with Hillary, let her know why by tweeting with #ImWithHer. https://t.co/v8oqbV86zz", "in_reply_to_screen_name": null, "retweet_count": 1072, "favorite_count": 1937, "source": "Twitter Web Client", "id_str": "694161426882105344", "is_retweet": false}, {"created_at": "Sat Aug 20 19:14:54 +0000 2016", "text": "Trump\u2019s tax plan could give his own family a $4 billion tax break. Here's what we could do with that money instead: https://t.co/89rNgjYcGk", "in_reply_to_screen_name": null, "retweet_count": 2503, "favorite_count": 5146, "source": "TweetDeck", "id_str": "767077465797918723", "is_retweet": false}, {"created_at": "Fri Jul 29 02:35:39 +0000 2016", "text": "\"I want to thank Bernie Sanders. Bernie, your campaign inspired millions of Americans.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1810, "favorite_count": 5948, "source": "TweetDeck", "id_str": "758853465086894082", "is_retweet": false}, {"created_at": "Thu Jan 28 02:09:09 +0000 2016", "text": "Leaving no door un-knocked in Iowa. Say you're with Hillary: https://t.co/Kqz0bQ7DOO (\ud83d\udcf7: @sarahhwang95) https://t.co/besxiCk9bI", "in_reply_to_screen_name": null, "retweet_count": 364, "favorite_count": 1135, "source": "TweetDeck", "id_str": "692529816537534466", "is_retweet": false}, {"created_at": "Sat Jan 02 20:20:19 +0000 2016", "text": "A young man in NH asked: How are you going to make sure me and my brothers are safe from gun violence at school?\nhttps://t.co/Xpje1zUmvN", "in_reply_to_screen_name": null, "retweet_count": 689, "favorite_count": 1413, "source": "Twitter Web Client", "id_str": "683382333429256192", "is_retweet": false}, {"created_at": "Thu Jul 28 23:03:33 +0000 2016", "text": "\u201cHer words gave me strength during one of the toughest tests of my life.\u201d \u2014@Clairecmc on Hillary https://t.co/LeiYRzGleD", "in_reply_to_screen_name": null, "retweet_count": 760, "favorite_count": 2765, "source": "TweetDeck", "id_str": "758800089242439680", "is_retweet": false}, {"created_at": "Wed Aug 10 21:38:23 +0000 2016", "text": "And, unlike @realDonaldTrump, we're gonna make it easier for people who *aren't* celebrities to get apprenticeships. https://t.co/SdCUIITwuY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 823, "favorite_count": 2122, "source": "TweetDeck", "id_str": "763489695439450112", "is_retweet": false}, {"created_at": "Fri Aug 19 20:16:31 +0000 2016", "text": "Today is @BillClinton's birthday! It's not too late to sign his card here: https://t.co/30Uxor2066", "in_reply_to_screen_name": null, "retweet_count": 823, "favorite_count": 3894, "source": "TweetDeck", "id_str": "766730585087893505", "is_retweet": false}, {"created_at": "Thu May 05 19:49:54 +0000 2016", "text": "\u201cI love Hispanics!\u201d \u2014Trump, 52 minutes ago https://t.co/b9mv7nUduN\n\n\u201cThey\u2019re gonna be deported.\u201d \u2014Trump, yesterday https://t.co/HzFWUT1XFl", "in_reply_to_screen_name": null, "retweet_count": 5949, "favorite_count": 6822, "source": "TweetDeck", "id_str": "728310772208697344", "is_retweet": false}, {"created_at": "Wed Jul 20 02:23:47 +0000 2016", "text": "You're too kind, @SenCapito. #RNCinCLE https://t.co/Onui0YFCNh", "in_reply_to_screen_name": null, "retweet_count": 2374, "favorite_count": 6683, "source": "TweetDeck", "id_str": "755588987033645056", "is_retweet": false}, {"created_at": "Mon May 23 18:21:54 +0000 2016", "text": "\u201cThe only thing standing between Donald Trump and the Oval Office is all of us.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1631, "favorite_count": 3531, "source": "TweetDeck", "id_str": "734811611395948546", "is_retweet": false}, {"created_at": "Wed Jul 27 23:57:57 +0000 2016", "text": "\u201cThere is no reason to feel helpless about the horrifying trajectory of cascading massacres\u2026We can change this.\u201d \u2014@ChrisMurphyCT", "in_reply_to_screen_name": null, "retweet_count": 706, "favorite_count": 2383, "source": "TweetDeck", "id_str": "758451390033387525", "is_retweet": false}, {"created_at": "Thu Sep 08 23:27:18 +0000 2016", "text": "We need a president who understands that none of us has all the answers and no one person can fix our problems alone.", "in_reply_to_screen_name": null, "retweet_count": 2117, "favorite_count": 7646, "source": "TweetDeck", "id_str": "774026353645584384", "is_retweet": false}, {"created_at": "Thu Feb 18 00:40:04 +0000 2016", "text": "Hillary quiere reformar nuestro sistema migratorio para mantener fuerte la uni\u00f3n familiar.", "in_reply_to_screen_name": null, "retweet_count": 388, "favorite_count": 762, "source": "TweetDeck", "id_str": "700117541700681728", "is_retweet": false}, {"created_at": "Wed Sep 21 18:58:14 +0000 2016", "text": "RT @HFA: One of Hillary's first jobs out of law school was to find out why kids with disabilities weren't in school. https://t.co/vPMCYQmbls", "in_reply_to_screen_name": null, "retweet_count": 1040, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778669685474811904", "is_retweet": true}, {"created_at": "Mon Oct 10 16:56:07 +0000 2016", "text": "He went low; she went high. https://t.co/DBquZmsaQl", "in_reply_to_screen_name": null, "retweet_count": 2308, "favorite_count": 8600, "source": "TweetDeck", "id_str": "785524321691271168", "is_retweet": false}, {"created_at": "Fri Apr 01 23:01:40 +0000 2016", "text": "Trump's attacks on women's health are just as bad as the rest of the GOP candidates'. https://t.co/fpYTypTym9 https://t.co/4TxbhvME8a", "in_reply_to_screen_name": null, "retweet_count": 1638, "favorite_count": 2935, "source": "Twitter Web Client", "id_str": "716037846575001600", "is_retweet": false}, {"created_at": "Thu Jan 07 20:07:28 +0000 2016", "text": "I'll take on Republicans or anyone who tries to interfere with women's health. Proud to have @PPact's support in this important election. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 718, "favorite_count": 1855, "source": "TweetDeck", "id_str": "685191037652996097", "is_retweet": false}, {"created_at": "Tue Mar 22 01:47:38 +0000 2016", "text": "\"I want to stop the raids and the round-ups. I don't believe we should be breaking up families and deporting mothers and fathers.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 3539, "source": "Twitter Web Client", "id_str": "712093345049403392", "is_retweet": false}, {"created_at": "Tue Jun 28 01:17:01 +0000 2016", "text": "Today's #SCOTUS decision upholding reproductive rights is a major victory\u2014but we can't take it for granted. https://t.co/ouzojIS937", "in_reply_to_screen_name": null, "retweet_count": 1155, "favorite_count": 3481, "source": "TweetDeck", "id_str": "747599650664943616", "is_retweet": false}, {"created_at": "Fri Apr 15 13:17:10 +0000 2016", "text": "Women's rights aren't a \"distraction.\" They're at the heart of who we are\u2014and we need to defend them. https://t.co/sbJ3ooWAH3", "in_reply_to_screen_name": null, "retweet_count": 2631, "favorite_count": 5370, "source": "TweetDeck", "id_str": "720964183009988608", "is_retweet": false}, {"created_at": "Fri Oct 07 23:29:20 +0000 2016", "text": "RT @JebBush: As the grandfather of two precious girls, I find that no apology can excuse away Donald Trump's reprehensible comments degradi\u2026", "in_reply_to_screen_name": null, "retweet_count": 62493, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784536113251835905", "is_retweet": true}, {"created_at": "Sat Jul 23 18:03:34 +0000 2016", "text": "\"You\u2019re right, he doesn\u2019t trash talk everybody. He likes Vladimir Putin.\u201d \u2014@TimKaine on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 1870, "favorite_count": 4907, "source": "TweetDeck", "id_str": "756912653709275137", "is_retweet": false}, {"created_at": "Wed Nov 02 20:02:50 +0000 2016", "text": "\"If you disrespect women before you were president, you will disrespect women when you\u2019re in office.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1489, "favorite_count": 3002, "source": "TweetDeck", "id_str": "793906234248327169", "is_retweet": false}, {"created_at": "Sat Oct 29 20:31:39 +0000 2016", "text": "\"No matter what they throw at us in these last days, we won\u2019t back down. We won\u2019t be distracted.\u201d \u2014Hillary: https://t.co/2ib8g1gWVm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1577, "favorite_count": 3390, "source": "TweetDeck", "id_str": "792463933026213888", "is_retweet": false}, {"created_at": "Fri Jul 01 19:03:23 +0000 2016", "text": "You could give a speech to nominate the first woman president at @DemConvention. Enter now for your chance to win. https://t.co/GGpri1wC4M", "in_reply_to_screen_name": null, "retweet_count": 956, "favorite_count": 2727, "source": "TweetDeck", "id_str": "748955177281925120", "is_retweet": false}, {"created_at": "Fri Jul 29 03:12:27 +0000 2016", "text": "\"Remember what the president said last night: Don\u2019t boo, vote!\u201d \u2014Hillary: https://t.co/xahMq2KuSY", "in_reply_to_screen_name": null, "retweet_count": 3863, "favorite_count": 8263, "source": "TweetDeck", "id_str": "758862726391148544", "is_retweet": false}, {"created_at": "Wed Jun 29 00:13:05 +0000 2016", "text": "Live from Los Angeles: Watch Hillary's town hall with @YouTube digital content creators.  \u2192 https://t.co/ERJwSRkPJM #CreatorsAskHRC", "in_reply_to_screen_name": null, "retweet_count": 760, "favorite_count": 1991, "source": "TweetDeck", "id_str": "747945951403335681", "is_retweet": false}, {"created_at": "Wed Mar 30 22:53:08 +0000 2016", "text": "Every woman\u2014regardless of income or zip code\u2014deserves access to health care. If you don't get that, you have no business being president.", "in_reply_to_screen_name": null, "retweet_count": 3884, "favorite_count": 8870, "source": "TweetDeck", "id_str": "715310922584219653", "is_retweet": false}, {"created_at": "Wed Oct 05 01:12:58 +0000 2016", "text": "RT @timkaine: \u201cWe trust her with the most important thing in our life: We have a son deployed overseas\u201d \u2014Tim on Hillary #VPDebate  https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 0, "source": "TweetDeck", "id_str": "783475030378307584", "is_retweet": true}, {"created_at": "Tue Sep 27 01:54:38 +0000 2016", "text": "We\u2019ve got to address the systemic racism in our criminal justice system and end private prisons. #DebateNight https://t.co/8afCXJAAjI", "in_reply_to_screen_name": null, "retweet_count": 2572, "favorite_count": 6028, "source": "TweetDeck", "id_str": "780586416476676098", "is_retweet": false}, {"created_at": "Sun Jul 03 23:10:33 +0000 2016", "text": "A message from @realDonaldTrump on America.\nhttps://t.co/Fq27JEgHLf", "in_reply_to_screen_name": null, "retweet_count": 2164, "favorite_count": 4042, "source": "Twitter Web Client", "id_str": "749742151903289344", "is_retweet": false}, {"created_at": "Tue Sep 06 18:51:27 +0000 2016", "text": "Anybody working full-time should not be living in poverty. It\u2019s time to raise the minimum wage. https://t.co/o3fMNv77ai", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 659, "favorite_count": 1312, "source": "TweetDeck", "id_str": "773232158404177920", "is_retweet": false}, {"created_at": "Mon Apr 04 15:48:41 +0000 2016", "text": "In our democracy, every one of our voices should count. Glad the Supreme Court affirmed this fundamental right. https://t.co/FTjvOF9VML", "in_reply_to_screen_name": null, "retweet_count": 1181, "favorite_count": 2280, "source": "Twitter Web Client", "id_str": "717016046893461505", "is_retweet": false}, {"created_at": "Fri Jul 29 03:19:27 +0000 2016", "text": "\"If we\u2019re serious about keeping our country safe, we also can\u2019t afford to have a president who\u2019s in the pocket of the gun lobby.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3304, "favorite_count": 9773, "source": "TweetDeck", "id_str": "758864487717810176", "is_retweet": false}, {"created_at": "Tue Feb 09 20:51:15 +0000 2016", "text": "Say \u201cHillary\u201d! https://t.co/Wv9oqaiX5e", "in_reply_to_screen_name": null, "retweet_count": 644, "favorite_count": 1821, "source": "TweetDeck", "id_str": "697160858099650561", "is_retweet": false}, {"created_at": "Sun May 29 14:10:44 +0000 2016", "text": "Watch Hillary wonk out with a nurse in New Jersey over solving one of the world's most serious problems.\nhttps://t.co/0Ej6gaWzIf", "in_reply_to_screen_name": null, "retweet_count": 2065, "favorite_count": 4922, "source": "Twitter Web Client", "id_str": "736922729429901313", "is_retweet": false}, {"created_at": "Sun Oct 30 18:15:26 +0000 2016", "text": "\"Who pretends to help kids with HIV/AIDS in order to make themselves look good?\u201d \u2014Hillary on Trump https://t.co/p3EUMewYTw", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1133, "favorite_count": 2040, "source": "TweetDeck", "id_str": "792792040992022528", "is_retweet": false}, {"created_at": "Wed Aug 03 02:30:03 +0000 2016", "text": "22 memorable moments from the Democratic Convention that you probably missed: https://t.co/xnvFiEKlJC https://t.co/bLqoDfFfvc", "in_reply_to_screen_name": null, "retweet_count": 2559, "favorite_count": 9211, "source": "TweetDeck", "id_str": "760663995275677696", "is_retweet": false}, {"created_at": "Wed Sep 28 16:21:07 +0000 2016", "text": "Trump's plan:\nCut taxes for billionaires &amp; millionaires like him.\nRaise taxes for millions of middle-class families. https://t.co/K7xJQzIyeY", "in_reply_to_screen_name": null, "retweet_count": 2337, "favorite_count": 4026, "source": "TweetDeck", "id_str": "781166858657468417", "is_retweet": false}, {"created_at": "Thu Oct 20 02:44:07 +0000 2016", "text": "RT @CoryBooker: A strong performance by Clinton. She is the clear winner tonight. 20 days until a HRC election victory and a victory for ou\u2026", "in_reply_to_screen_name": null, "retweet_count": 2775, "favorite_count": 0, "source": "TweetDeck", "id_str": "788933789934350336", "is_retweet": true}, {"created_at": "Thu Aug 25 19:40:51 +0000 2016", "text": "\"Every day, more Americans are standing up and saying 'enough is enough'\u2014including a lot of Republicans. I\u2019m honored to have their support.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1211, "favorite_count": 3369, "source": "TweetDeck", "id_str": "768895938320601088", "is_retweet": false}, {"created_at": "Wed Sep 28 14:31:46 +0000 2016", "text": "In its 120-year history, @azcentral has never endorsed a Democrat.\n\nHere's why the paper just endorsed Hillary: https://t.co/n3GOmEin4N", "in_reply_to_screen_name": null, "retweet_count": 2700, "favorite_count": 6946, "source": "TweetDeck", "id_str": "781139339849891840", "is_retweet": false}, {"created_at": "Wed Jul 27 03:01:16 +0000 2016", "text": "RT @ElizabethBanks: WATCH: me + friends supporting @HillaryClinton @DemConvention #StrongerTogether #DemsinPhilly\nhttps://t.co/0QU7KsdCka", "in_reply_to_screen_name": null, "retweet_count": 10224, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758135135506145281", "is_retweet": true}, {"created_at": "Mon Jul 18 16:48:32 +0000 2016", "text": "\"Killing police officers is a terrible crime...anyone who kills a police officer and anyone who helps must be held accountable.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 975, "favorite_count": 3307, "source": "TweetDeck", "id_str": "755081831880466432", "is_retweet": false}, {"created_at": "Wed Jul 27 22:54:18 +0000 2016", "text": "RT @emilyslist: \"Hillary Clinton may be our 1st woman president. But she will not be our last. Once that barrier falls, it will never... be\u2026", "in_reply_to_screen_name": null, "retweet_count": 605, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758435372921651200", "is_retweet": true}, {"created_at": "Wed Jun 08 02:42:29 +0000 2016", "text": "\"This campaign is about making sure there are no ceilings\u2014no limits\u2014on any of us.\" \u2014Hillary #ImWithHer https://t.co/HtFmnfoJxc", "in_reply_to_screen_name": null, "retweet_count": 3206, "favorite_count": 8151, "source": "TweetDeck", "id_str": "740373403283099648", "is_retweet": false}, {"created_at": "Sat Jul 16 20:03:06 +0000 2016", "text": "What kind of president do we want our kids looking up to? https://t.co/pdphHQmYCM", "in_reply_to_screen_name": null, "retweet_count": 9263, "favorite_count": 20132, "source": "Twitter for iPhone", "id_str": "754406021024612352", "is_retweet": false}, {"created_at": "Sat Sep 17 22:40:48 +0000 2016", "text": "\"I want you to know that I see you, and I\u2019m with you.\" \u2014Hillary to the Latino community at @CHCI https://t.co/t2F93Ml785", "in_reply_to_screen_name": null, "retweet_count": 1582, "favorite_count": 4223, "source": "TweetDeck", "id_str": "777276144353705984", "is_retweet": false}, {"created_at": "Sun Mar 13 01:47:07 +0000 2016", "text": "A note on the fight against HIV and AIDS\u2014and the people who really started the conversation. https://t.co/7nT47FqDep", "in_reply_to_screen_name": null, "retweet_count": 2236, "favorite_count": 3640, "source": "Twitter for iPhone", "id_str": "708831725678419972", "is_retweet": false}, {"created_at": "Wed Mar 02 01:54:53 +0000 2016", "text": "This country belongs to all of us\u2014not just to those at the top. Not just to people who look one way, worship one way, or even think one way.", "in_reply_to_screen_name": null, "retweet_count": 1279, "favorite_count": 2569, "source": "TweetDeck", "id_str": "704847414461648897", "is_retweet": false}, {"created_at": "Mon Aug 22 23:23:21 +0000 2016", "text": "\u201cIf I have the opportunity, I\u2019ll do whatever I can to make things a little easier for you.\" \u2014Hillary to young women https://t.co/6xfdyQ3H4Y", "in_reply_to_screen_name": null, "retweet_count": 1972, "favorite_count": 5727, "source": "TweetDeck", "id_str": "767864768166240256", "is_retweet": false}, {"created_at": "Tue Apr 19 15:17:19 +0000 2016", "text": "First stop on New York primary day. #iVoted #PrimaryDay https://t.co/K6dKcM7nwB", "in_reply_to_screen_name": null, "retweet_count": 1539, "favorite_count": 4259, "source": "TweetDeck", "id_str": "722443970912108544", "is_retweet": false}, {"created_at": "Tue Jul 26 18:29:23 +0000 2016", "text": "RT if last night made you proud to be a Democrat. #DemsinPHL\nhttps://t.co/qDyNq9q3kH", "in_reply_to_screen_name": null, "retweet_count": 10246, "favorite_count": 14499, "source": "Twitter Web Client", "id_str": "758006314446360576", "is_retweet": false}, {"created_at": "Thu Sep 08 00:41:50 +0000 2016", "text": "\u201cI have a very good brain.\u201d \u2014Donald Trump on his foreign policy advisors\n\n(Himself.) https://t.co/48MePwjHh9", "in_reply_to_screen_name": null, "retweet_count": 1957, "favorite_count": 3572, "source": "TweetDeck", "id_str": "773682724527824897", "is_retweet": false}, {"created_at": "Sun Jul 31 00:40:32 +0000 2016", "text": "The American people have always made this country great. https://t.co/agqzKq3jOi", "in_reply_to_screen_name": null, "retweet_count": 3753, "favorite_count": 12303, "source": "Twitter Web Client", "id_str": "759549269368041472", "is_retweet": false}, {"created_at": "Sun Jul 24 21:07:42 +0000 2016", "text": "\"Do all the good you can\u2014measure your life by the positive effect you can have on other people\u2019s lives.\" \u2014@TimKaine https://t.co/f7iNc22nPU", "in_reply_to_screen_name": null, "retweet_count": 3287, "favorite_count": 9355, "source": "TweetDeck", "id_str": "757321383374417921", "is_retweet": false}, {"created_at": "Thu Oct 20 20:49:26 +0000 2016", "text": "\"Donald Trump doesn\u2019t have anything to offer but anger, and grievance, and blame.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 842, "favorite_count": 2038, "source": "TweetDeck", "id_str": "789206918065782784", "is_retweet": false}, {"created_at": "Wed Feb 24 01:25:09 +0000 2016", "text": "A chilling explainer from @voxdotcom on the state of gun violence in America. https://t.co/rA3zGuqEpH", "in_reply_to_screen_name": null, "retweet_count": 936, "favorite_count": 1341, "source": "TweetDeck", "id_str": "702303217510694913", "is_retweet": false}, {"created_at": "Tue Sep 27 02:08:29 +0000 2016", "text": "When Donald Trump goes low, we go high. #DebateNight https://t.co/5MUlOMJqWM", "in_reply_to_screen_name": null, "retweet_count": 6067, "favorite_count": 16355, "source": "TweetDeck", "id_str": "780589899518967808", "is_retweet": false}, {"created_at": "Fri Aug 12 16:30:56 +0000 2016", "text": "RT @timkaine: Housing discrimination cuts right to the heart of who we are as a society. We need to do all we can to fight it: https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 1214, "favorite_count": 0, "source": "TweetDeck", "id_str": "764137101004795904", "is_retweet": true}, {"created_at": "Fri Apr 22 18:26:14 +0000 2016", "text": "The climate is changing.\nRepublican policies aren't.\n\nRT if you agree we need to #ActOnClimate.\nhttps://t.co/8UUzG6RbVt", "in_reply_to_screen_name": null, "retweet_count": 2390, "favorite_count": 3047, "source": "Twitter Web Client", "id_str": "723578677556965376", "is_retweet": false}, {"created_at": "Tue May 10 19:53:18 +0000 2016", "text": "Hillary's in Kentucky today talking with families about child care. Tune in to watch live: https://t.co/D1eYgSaIzU https://t.co/9igrQ68nU4", "in_reply_to_screen_name": null, "retweet_count": 534, "favorite_count": 1244, "source": "TweetDeck", "id_str": "730123569074733056", "is_retweet": false}, {"created_at": "Wed Sep 14 16:51:39 +0000 2016", "text": "15. To what extent are you and your family currently contractually tied to payments from foreign business partners, or governments?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2500, "favorite_count": 4198, "source": "TweetDeck", "id_str": "776101114341126145", "is_retweet": false}, {"created_at": "Mon Jan 18 03:35:45 +0000 2016", "text": "The threats we face are real. The next president will take office in a year\u2014and he or she needs a real plan to defeat terrorism. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 566, "favorite_count": 1480, "source": "TweetDeck", "id_str": "688927731636109313", "is_retweet": false}, {"created_at": "Sat Oct 01 16:49:00 +0000 2016", "text": "Great step forward by the Obama administration. It\u2019s past time for Congress to guarantee paid sick leave for everyo\u2026 https://t.co/kYSmvVsfsY", "in_reply_to_screen_name": null, "retweet_count": 2663, "favorite_count": 8251, "source": "Twitter Web Client", "id_str": "782261041589784577", "is_retweet": false}, {"created_at": "Sun Oct 30 19:25:39 +0000 2016", "text": "Who are you fighting for? Donate in their honor to help Hillary win: https://t.co/ax9b67Skrr", "in_reply_to_screen_name": null, "retweet_count": 943, "favorite_count": 3069, "source": "TweetDeck", "id_str": "792809712349741056", "is_retweet": false}, {"created_at": "Tue Oct 18 13:57:57 +0000 2016", "text": "RT @harpersbazaarus: .@HillaryClinton kicks off BAZAAR's #WomenWhoDare issue with a powerful and inspiring essay about her mother: https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1019, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788378589196611584", "is_retweet": true}, {"created_at": "Wed Aug 31 17:12:29 +0000 2016", "text": "Too many veterans and their families aren\u2019t getting the mental health services they need. Our plan to fix that: https://t.co/sb8i2wu8wt", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 591, "favorite_count": 1216, "source": "TweetDeck", "id_str": "771032928772063232", "is_retweet": false}, {"created_at": "Fri Feb 05 03:56:34 +0000 2016", "text": "There is no place in America for second-class citizenship. #DemDebate https://t.co/00Oz8md48G", "in_reply_to_screen_name": null, "retweet_count": 725, "favorite_count": 1471, "source": "TweetDeck", "id_str": "695455950392709121", "is_retweet": false}, {"created_at": "Wed Oct 05 01:31:00 +0000 2016", "text": "When Mike Pence says he and Donald Trump won't raise taxes, he's lying. https://t.co/EZhrqmjfOF #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 2633, "favorite_count": 4614, "source": "TweetDeck", "id_str": "783479569907089408", "is_retweet": false}, {"created_at": "Mon Sep 19 15:44:12 +0000 2016", "text": "\u201cThis threat is real, but so is our resolve. Americans will not cower. We will prevail.\u201d \u2014Hillary https://t.co/eADlIG9aQL", "in_reply_to_screen_name": null, "retweet_count": 1542, "favorite_count": 3931, "source": "TweetDeck", "id_str": "777896080080003072", "is_retweet": false}, {"created_at": "Sat Jan 16 17:21:48 +0000 2016", "text": "\u201cThis is incredibly personal.\u201d\nhttps://t.co/TN5ndQ5MKw", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 943, "source": "Twitter Web Client", "id_str": "688410839888560128", "is_retweet": false}, {"created_at": "Tue Aug 23 02:03:13 +0000 2016", "text": "Have a beer with @TimKaine in the second episode of With Her, the official campaign podcast. Listen here: https://t.co/3B2EmKpQ1M", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 2529, "source": "TweetDeck", "id_str": "767904999590522880", "is_retweet": false}, {"created_at": "Thu Jul 28 03:15:55 +0000 2016", "text": "\"Hillary Clinton is respected around the world, not just by leaders, but by the people they serve.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1565, "favorite_count": 5095, "source": "TweetDeck", "id_str": "758501211012210689", "is_retweet": false}, {"created_at": "Mon Oct 17 01:35:58 +0000 2016", "text": "Photos that help remind us that this election is about building a country we can all be proud of\u2014together. https://t.co/IfICuWqDgL", "in_reply_to_screen_name": null, "retweet_count": 2080, "favorite_count": 7342, "source": "TweetDeck", "id_str": "787829472351383553", "is_retweet": false}, {"created_at": "Mon Oct 10 05:07:50 +0000 2016", "text": "RT @paulkrugman: Let's be clear: a candidate for president promised to put his opponent in jail if he wins. Everything else is secondary.", "in_reply_to_screen_name": null, "retweet_count": 24277, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785346078807916544", "is_retweet": true}, {"created_at": "Wed Jul 27 23:52:01 +0000 2016", "text": "RT @dominiclowell: Christine Leinonen is a symbol of strength for all Americans, especially #LGBT people. My heart is with her and her son,\u2026", "in_reply_to_screen_name": null, "retweet_count": 430, "favorite_count": 0, "source": "TweetDeck", "id_str": "758449896173232130", "is_retweet": true}, {"created_at": "Thu Oct 20 21:37:46 +0000 2016", "text": "\"Hillary has comprehensive policies to help people. Her opponent has tweets.\n\nYou decide.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 587, "favorite_count": 1466, "source": "TweetDeck", "id_str": "789219080544854017", "is_retweet": false}, {"created_at": "Wed Sep 07 17:09:07 +0000 2016", "text": "We can't afford a president who would sabotage our efforts to fight climate change. https://t.co/bvya51W44z", "in_reply_to_screen_name": null, "retweet_count": 1797, "favorite_count": 4273, "source": "TweetDeck", "id_str": "773568795214548993", "is_retweet": false}, {"created_at": "Sun Sep 04 14:22:01 +0000 2016", "text": "\"That\u2019s a special thing about Hillary\u2014when there\u2019s a job worth doing, she doesn\u2019t abandon it.\" \u2014President Carter https://t.co/6JYbmzWeGy", "in_reply_to_screen_name": null, "retweet_count": 3255, "favorite_count": 8128, "source": "Twitter for iPhone", "id_str": "772439580691861504", "is_retweet": false}, {"created_at": "Wed Jul 27 18:36:48 +0000 2016", "text": "\"Hillary will make us stronger together. You know it because she\u2019s spent a lifetime doing it.\" \u2014@BillClinton https://t.co/U0y83WGCr2", "in_reply_to_screen_name": null, "retweet_count": 2608, "favorite_count": 9140, "source": "TweetDeck", "id_str": "758370570069237760", "is_retweet": false}, {"created_at": "Mon Oct 17 21:39:22 +0000 2016", "text": "RT @CMichaelHuntley: Beyonce ended a performance with an urgent plea to young people everywhere about this November.  https://t.co/azeigO0p\u2026", "in_reply_to_screen_name": null, "retweet_count": 1152, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788132318934396930", "is_retweet": true}, {"created_at": "Thu Jan 28 18:15:15 +0000 2016", "text": "To everyone raising their voice to support this campaign: It means more than you know. Thank you. -H \nhttps://t.co/Kbs5l9QIF0", "in_reply_to_screen_name": null, "retweet_count": 769, "favorite_count": 1717, "source": "TweetDeck", "id_str": "692772944351748096", "is_retweet": false}, {"created_at": "Mon Sep 12 18:52:04 +0000 2016", "text": "Debt shouldn't hold people back from going to college.\n\nLet's make sure it doesn\u2019t. https://t.co/Y9Q5eveR2N https://t.co/xOQHVsVmj1", "in_reply_to_screen_name": null, "retweet_count": 1686, "favorite_count": 4830, "source": "TweetDeck", "id_str": "775406640661168129", "is_retweet": false}, {"created_at": "Thu Oct 06 23:17:45 +0000 2016", "text": "\"Vote!\" \u2014@EvaLongoria\n\nTag a friend who should see this message. https://t.co/tTgeqxNqYm https://t.co/YzLwZVgIXu", "in_reply_to_screen_name": null, "retweet_count": 3076, "favorite_count": 6424, "source": "Media Studio", "id_str": "784170813687758848", "is_retweet": false}, {"created_at": "Sun Feb 14 01:10:00 +0000 2016", "text": "Statement on the passing of Supreme Court Justice Antonin Scalia: https://t.co/xazj9dDd5c", "in_reply_to_screen_name": null, "retweet_count": 3308, "favorite_count": 4731, "source": "TweetDeck", "id_str": "698675522956607488", "is_retweet": false}, {"created_at": "Mon Aug 15 15:54:56 +0000 2016", "text": "Four years in, DACA has helped more than 700,000 undocumented people to live without fear. Let's build on it: https://t.co/Xw6IkKPSIQ", "in_reply_to_screen_name": null, "retweet_count": 909, "favorite_count": 2570, "source": "TweetDeck", "id_str": "765215206289080320", "is_retweet": false}, {"created_at": "Wed Aug 17 02:59:17 +0000 2016", "text": "Today, @Simone_Biles landed a spot in history as the first woman from @USAGym to win 4 golds. Well done, Simone! https://t.co/WldxYrC2ep", "in_reply_to_screen_name": null, "retweet_count": 4847, "favorite_count": 20101, "source": "TweetDeck", "id_str": "765744781129547777", "is_retweet": false}, {"created_at": "Fri Jul 15 16:06:14 +0000 2016", "text": "Oficial: @realDonaldTrump acaba de escoger a Mike Pence para ser su vicepresidente. Aqu\u00ed lo que debes saber de \u00e9l:\nhttps://t.co/aTbevohA7w", "in_reply_to_screen_name": null, "retweet_count": 660, "favorite_count": 952, "source": "Twitter Web Client", "id_str": "753984024960339969", "is_retweet": false}, {"created_at": "Thu Oct 20 13:58:54 +0000 2016", "text": "Trump wouldn't say if he'll accept the outcome of the election. That\u2019s horrifying\u2014but part of a pattern. https://t.co/OrT9W4bSGW", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 5414, "source": "TweetDeck", "id_str": "789103604741341184", "is_retweet": false}, {"created_at": "Sun Mar 06 15:28:25 +0000 2016", "text": "Maine, it\u2019s Caucus Day! Live in the Pine Tree State? Confirm your caucus location here: https://t.co/AvREkN6ssp https://t.co/jOuX98CSjo", "in_reply_to_screen_name": null, "retweet_count": 597, "favorite_count": 1361, "source": "Twitter Web Client", "id_str": "706501696206327808", "is_retweet": false}, {"created_at": "Sat Jul 23 17:43:43 +0000 2016", "text": "RT @Hillary_esp: \"Aprend\u00ed los valores de mi pueblo, de la fe, familia y trabajo\"- @TimKaine sobre su experiencia en Honduras.", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 0, "source": "TweetDeck", "id_str": "756907659555635200", "is_retweet": true}, {"created_at": "Sun Aug 07 14:13:42 +0000 2016", "text": "So proud of you, Karla.\nhttps://t.co/iSQBiY8PyA", "in_reply_to_screen_name": null, "retweet_count": 2196, "favorite_count": 6375, "source": "Twitter Web Client", "id_str": "762290625270075392", "is_retweet": false}, {"created_at": "Tue Sep 13 18:14:28 +0000 2016", "text": "\"We cannot take this election for granted. We\u2019ve got to fight for this thing.\u201d \u2014@POTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1017, "favorite_count": 2387, "source": "TweetDeck", "id_str": "775759568727076864", "is_retweet": false}, {"created_at": "Wed Feb 17 23:06:21 +0000 2016", "text": "The inequities that persist in our justice system undermine our shared vision of what America can and should be. https://t.co/4JWUaySa9q", "in_reply_to_screen_name": null, "retweet_count": 929, "favorite_count": 2054, "source": "TweetDeck", "id_str": "700093957619978240", "is_retweet": false}, {"created_at": "Tue May 31 23:51:42 +0000 2016", "text": "Taking care of our veterans is part of our solemn duty as Americans: https://t.co/cteQMGWzpE https://t.co/WsnW9E811n", "in_reply_to_screen_name": null, "retweet_count": 779, "favorite_count": 2203, "source": "TweetDeck", "id_str": "737793708133888000", "is_retweet": false}, {"created_at": "Tue Sep 20 17:35:09 +0000 2016", "text": "Another unarmed Black man was shot in a police incident. This should be intolerable. We have so much work to do. #TerenceCrutcher -H", "in_reply_to_screen_name": null, "retweet_count": 11802, "favorite_count": 24515, "source": "Twitter Web Client", "id_str": "778286389448339457", "is_retweet": false}, {"created_at": "Mon Oct 10 01:58:37 +0000 2016", "text": "RT @TheBriefing2016: Trump would give his own family a $4 billion tax cut. \n\nBillion.\n\nWith a \"b\". #debate \n\nhttps://t.co/dwWKAHkCZx", "in_reply_to_screen_name": null, "retweet_count": 1109, "favorite_count": 0, "source": "TweetDeck", "id_str": "785298458001477633", "is_retweet": true}, {"created_at": "Thu Oct 06 18:06:23 +0000 2016", "text": "RT @TheAtlantic: The Atlantic makes our third presidential endorsement. Read it here: https://t.co/9ZcbSAmD0j https://t.co/lcG6u02Kgv", "in_reply_to_screen_name": null, "retweet_count": 4627, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784092453288701957", "is_retweet": true}, {"created_at": "Fri Feb 26 23:33:51 +0000 2016", "text": "It's outrageous that students are being asked to pay interest rates higher than you would pay to buy a house.\nhttps://t.co/yTOUBVi82w", "in_reply_to_screen_name": null, "retweet_count": 1366, "favorite_count": 2478, "source": "Twitter Web Client", "id_str": "703362369561341952", "is_retweet": false}, {"created_at": "Mon Oct 10 02:07:03 +0000 2016", "text": "RT @TheBriefing2016: 2010s: Donald Trump was playing hard ball with the lawyers of the families he hurt. Hillary Clinton was playing hard b\u2026", "in_reply_to_screen_name": null, "retweet_count": 988, "favorite_count": 0, "source": "TweetDeck", "id_str": "785300579983687680", "is_retweet": true}, {"created_at": "Sat Nov 05 02:40:59 +0000 2016", "text": "RT @dougmillsnyt: .@HillaryClinton with JAY Z and Beyonce in Cleveland at the concert https://t.co/e8e8eofTsq", "in_reply_to_screen_name": null, "retweet_count": 3181, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794731205467971584", "is_retweet": true}, {"created_at": "Tue Oct 04 22:55:36 +0000 2016", "text": "If Trump's decisiveness in choosing Mike Pence as his running mate is any indication, he'll be great at making hard\u2026 https://t.co/KATfOSrAn8", "in_reply_to_screen_name": null, "retweet_count": 3075, "favorite_count": 7061, "source": "Media Studio", "id_str": "783440463122554880", "is_retweet": false}, {"created_at": "Fri Jul 22 02:38:50 +0000 2016", "text": ".@TheEconomist ranked a Donald Trump presidency as the third greatest threat to the global economy. #RNCinCLE https://t.co/XyvcFbZ6s1", "in_reply_to_screen_name": null, "retweet_count": 11361, "favorite_count": 14393, "source": "Twitter Web Client", "id_str": "756317550909292544", "is_retweet": false}, {"created_at": "Sat Jan 02 18:24:24 +0000 2016", "text": "You can\u2019t argue with the facts: The economy does better with a Democrat in the White House.\nhttps://t.co/zswlwsLAam", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 1937, "source": "Twitter Web Client", "id_str": "683353163416514560", "is_retweet": false}, {"created_at": "Wed Jan 13 02:22:41 +0000 2016", "text": ".@POTUS is confirming what we know: Our economy\u2014and our country\u2014are stronger under a Democratic president. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1509, "favorite_count": 3153, "source": "Twitter Web Client", "id_str": "687097406371033088", "is_retweet": false}, {"created_at": "Sun Jul 24 22:00:03 +0000 2016", "text": "People had some fun with a new game we invented: Sad! Libs. https://t.co/9jsm3Nc8cb", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 1924, "source": "TweetDeck", "id_str": "757334554466258945", "is_retweet": false}, {"created_at": "Sat Sep 10 19:04:34 +0000 2016", "text": "Except for African Americans, Muslims, Latinos, immigrants, women, veterans\u2014and any so-called \"losers\" or \"dummies.\" https://t.co/rbBg2rXZdm", "in_reply_to_screen_name": null, "retweet_count": 51001, "favorite_count": 88432, "source": "TweetDeck", "id_str": "774685012335726592", "is_retweet": false}, {"created_at": "Thu Aug 11 17:55:12 +0000 2016", "text": "We\u2019re going to invest $10 billion in \u201cMake it in America\u201d partnerships to support American manufacturing: https://t.co/21iaJ5hq7X", "in_reply_to_screen_name": null, "retweet_count": 607, "favorite_count": 1849, "source": "TweetDeck", "id_str": "763795918936236032", "is_retweet": false}, {"created_at": "Fri Aug 12 12:13:08 +0000 2016", "text": "Why is @realDonaldTrump refusing to release his tax returns? Some ideas:\nhttps://t.co/M4MSBo6c9O", "in_reply_to_screen_name": null, "retweet_count": 5705, "favorite_count": 9607, "source": "Twitter Web Client", "id_str": "764072221933318144", "is_retweet": false}, {"created_at": "Fri Feb 19 03:53:56 +0000 2016", "text": "You voted for it. https://t.co/nyKoMaIhBb #DemTownHall  https://t.co/FGYCEH8pIf", "in_reply_to_screen_name": null, "retweet_count": 2612, "favorite_count": 3850, "source": "Twitter Web Client", "id_str": "700528718066819072", "is_retweet": false}, {"created_at": "Thu Oct 20 17:02:01 +0000 2016", "text": "At last night's debate, Trump showed again and again that he doesn't have a clue about what makes America great. https://t.co/r5oDWYARU6", "in_reply_to_screen_name": null, "retweet_count": 2028, "favorite_count": 6787, "source": "TweetDeck", "id_str": "789149686661779456", "is_retweet": false}, {"created_at": "Wed Mar 09 16:18:14 +0000 2016", "text": "Have student debt? Here are five ways Hillary wants to help. https://t.co/5mfwoGXKAx", "in_reply_to_screen_name": null, "retweet_count": 1317, "favorite_count": 2503, "source": "TweetDeck", "id_str": "707601396519051265", "is_retweet": false}, {"created_at": "Tue Jan 12 02:27:34 +0000 2016", "text": "\"I do not think raids are an appropriate tool to enforce immigration laws...They are sowing discord and fear.\" \u2014Hillary at #DemForum", "in_reply_to_screen_name": null, "retweet_count": 432, "favorite_count": 1036, "source": "TweetDeck", "id_str": "686736244534067200", "is_retweet": false}, {"created_at": "Tue Mar 22 17:10:09 +0000 2016", "text": "Every family deserves access to clean, safe water\u2014no matter where they live. #WorldWaterDay https://t.co/6HRQtrLEnf", "in_reply_to_screen_name": null, "retweet_count": 1513, "favorite_count": 4012, "source": "TweetDeck", "id_str": "712325505391960064", "is_retweet": false}, {"created_at": "Thu Aug 11 18:22:36 +0000 2016", "text": "Strengthening unions doesn\u2019t just serve their members\u2014it leads to better pay, benefits, and working conditions for all employees.", "in_reply_to_screen_name": null, "retweet_count": 2273, "favorite_count": 6180, "source": "TweetDeck", "id_str": "763802816762802176", "is_retweet": false}, {"created_at": "Fri Jul 29 02:33:49 +0000 2016", "text": "\"America is stronger because of President Obama's leadership, and I am better because of his friendship.\" \u2014Hillary https://t.co/d1Kv4iUHqo", "in_reply_to_screen_name": null, "retweet_count": 4569, "favorite_count": 16707, "source": "TweetDeck", "id_str": "758853003180843008", "is_retweet": false}, {"created_at": "Mon Sep 19 16:52:41 +0000 2016", "text": "We're facing a candidate with a history of discrimination in his businesses, who retweets white supremacists, and led the birther movement.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1344, "favorite_count": 2564, "source": "TweetDeck", "id_str": "777913311459418112", "is_retweet": false}, {"created_at": "Fri Feb 12 03:14:02 +0000 2016", "text": "We need to knock down the barriers of racism, sexism, and discrimination holding Americans back. #DemDebate\nhttps://t.co/PZoo7SqlA7", "in_reply_to_screen_name": null, "retweet_count": 1084, "favorite_count": 1986, "source": "Twitter Web Client", "id_str": "697981964649762816", "is_retweet": false}, {"created_at": "Thu May 26 17:40:15 +0000 2016", "text": "Happening now: Watch Hillary speak at the @UFCW conference in Las Vegas \u2192 https://t.co/l8fXj23LdE https://t.co/5Q98sk6QGv", "in_reply_to_screen_name": null, "retweet_count": 375, "favorite_count": 954, "source": "TweetDeck", "id_str": "735888289656385537", "is_retweet": false}, {"created_at": "Fri Jul 01 16:08:29 +0000 2016", "text": "Trump Institute taught Donald Trump's real business strategy: cheating innocent Americans out of hard-earned money. https://t.co/AuWq0XJ8Zc", "in_reply_to_screen_name": null, "retweet_count": 1471, "favorite_count": 2770, "source": "TweetDeck", "id_str": "748911159835758594", "is_retweet": false}, {"created_at": "Wed Mar 16 05:31:30 +0000 2016", "text": "We did it.\n\nTo every volunteer, supporter, and donor who worked your heart out: Thank you. Let's do this. https://t.co/nQDtSvnc4k", "in_reply_to_screen_name": null, "retweet_count": 2951, "favorite_count": 9989, "source": "TweetDeck", "id_str": "709975358716641280", "is_retweet": false}, {"created_at": "Tue Oct 04 02:58:45 +0000 2016", "text": "We had our best analysts create a calculator to see how much you'd pay in taxes if you paid the same as Trump: https://t.co/BskIktnp3Y", "in_reply_to_screen_name": null, "retweet_count": 1308, "favorite_count": 3205, "source": "TweetDeck", "id_str": "783139267048529920", "is_retweet": false}, {"created_at": "Fri Apr 15 02:42:38 +0000 2016", "text": "No American should have to take out a loan to pay tuition at a public college. We should also help people with existing student debt.", "in_reply_to_screen_name": null, "retweet_count": 1130, "favorite_count": 2957, "source": "TweetDeck", "id_str": "720804496964718592", "is_retweet": false}, {"created_at": "Thu Jul 28 03:13:24 +0000 2016", "text": "\u201cTim Kaine is as good a man, as humble and committed a public servant, as anyone I know. He will be a great vice president.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1999, "favorite_count": 7312, "source": "TweetDeck", "id_str": "758500575650676736", "is_retweet": false}, {"created_at": "Thu Mar 31 15:14:30 +0000 2016", "text": ".@realDonaldTrump said women should be punished for having an abortion.\n\nWe can't let him be president.\nhttps://t.co/hC8CuMC8xu", "in_reply_to_screen_name": null, "retweet_count": 4006, "favorite_count": 7141, "source": "Twitter Web Client", "id_str": "715557893513158656", "is_retweet": false}, {"created_at": "Sat Oct 15 17:53:30 +0000 2016", "text": "Chip in now to get your free sticker, inspired by @FLOTUS: https://t.co/r6GJ3jExd7", "in_reply_to_screen_name": null, "retweet_count": 833, "favorite_count": 3195, "source": "TweetDeck", "id_str": "787350703215902721", "is_retweet": false}, {"created_at": "Sun Jan 24 19:53:14 +0000 2016", "text": "No matter who you are, what you look like, or who you love\u2014you deserve a president who will fight for you.\nhttps://t.co/b8Topzr1jG", "in_reply_to_screen_name": null, "retweet_count": 1430, "favorite_count": 2904, "source": "Twitter Web Client", "id_str": "691348050875326464", "is_retweet": false}, {"created_at": "Fri Feb 12 17:32:49 +0000 2016", "text": "If we solved our problems with Wall Street tomorrow, we'd still have discrimination holding too many Americans back.\nhttps://t.co/ugd33vD7xn", "in_reply_to_screen_name": null, "retweet_count": 1267, "favorite_count": 2211, "source": "Twitter Web Client", "id_str": "698198084728193024", "is_retweet": false}, {"created_at": "Tue Apr 05 20:36:05 +0000 2016", "text": "When you shortchange women, you shortchange all of us. We need to close the pay gap once and for all. https://t.co/TtZHbEtESR", "in_reply_to_screen_name": null, "retweet_count": 1539, "favorite_count": 3261, "source": "TweetDeck", "id_str": "717450761387515905", "is_retweet": false}, {"created_at": "Tue Aug 02 02:01:57 +0000 2016", "text": "Barack, Michelle, Joe, Bernie, Elizabeth, Bill, Tim, Hillary, and more: Watch the best moments from the DNC.\nhttps://t.co/EWJr9oXweD", "in_reply_to_screen_name": null, "retweet_count": 6186, "favorite_count": 16211, "source": "Twitter Web Client", "id_str": "760294537101058049", "is_retweet": false}, {"created_at": "Mon Oct 10 01:51:19 +0000 2016", "text": "RT @TheBriefing2016: The US government took the unprecedented step of declaring that the Russian government is behind these hacks. https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 869, "favorite_count": 0, "source": "TweetDeck", "id_str": "785296621164752896", "is_retweet": true}, {"created_at": "Mon Jan 25 01:21:15 +0000 2016", "text": "You can\u2019t confront income inequality without confronting gender inequality. https://t.co/qPKjK7uCJH https://t.co/pbCyx5JL48", "in_reply_to_screen_name": null, "retweet_count": 1078, "favorite_count": 2171, "source": "TweetDeck", "id_str": "691430599618330624", "is_retweet": false}, {"created_at": "Wed Aug 17 20:08:12 +0000 2016", "text": "Trump boasts the support of some of the most extreme voices in politics. Now one of them runs his campaign: https://t.co/A6h02WDYfd", "in_reply_to_screen_name": null, "retweet_count": 1753, "favorite_count": 3450, "source": "TweetDeck", "id_str": "766003719213314048", "is_retweet": false}, {"created_at": "Sun Sep 18 01:16:22 +0000 2016", "text": "\"I\u2019m going to close my campaign the way I began my career\u2026focused on opportunities for children and fairness for families.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1194, "favorite_count": 3187, "source": "TweetDeck", "id_str": "777315293936881664", "is_retweet": false}, {"created_at": "Wed Jul 06 19:06:11 +0000 2016", "text": "Who got hurt when Trump abandoned Atlantic City?\n\u2714\ufe0fSmall businesses\n\u2714\ufe0fVendors\n\u2714\ufe0fLocal builders\n\u2714\ufe0fCasino workers\nhttps://t.co/ZpbJL2SRP3", "in_reply_to_screen_name": null, "retweet_count": 2499, "favorite_count": 4270, "source": "Twitter Web Client", "id_str": "750767819554381824", "is_retweet": false}, {"created_at": "Fri Jan 01 02:58:30 +0000 2016", "text": "Chip in $1 before 2016 to keep the momentum going! https://t.co/qwgk4o35w8 https://t.co/zNfDr4MbL6", "in_reply_to_screen_name": null, "retweet_count": 242, "favorite_count": 735, "source": "Twitter for iPhone", "id_str": "682757765090152448", "is_retweet": false}, {"created_at": "Thu Oct 27 18:41:08 +0000 2016", "text": ".@FLOTUS is \u201csomeone who reminds us to work hard, stay true to our values, and never stop fighting for what we believe in.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 586, "favorite_count": 1563, "source": "TweetDeck", "id_str": "791711343283937280", "is_retweet": false}, {"created_at": "Wed Aug 17 19:31:16 +0000 2016", "text": "RT @HFA: Hillary has concrete plans to help America succeed.\n\nTrump would...build a wall. https://t.co/9s8GSxmXdf https://t.co/UDnxd5Gh8z", "in_reply_to_screen_name": null, "retweet_count": 648, "favorite_count": 0, "source": "TweetDeck", "id_str": "765994423276736513", "is_retweet": true}, {"created_at": "Wed Oct 19 17:12:57 +0000 2016", "text": "A #debate preview that says it all. https://t.co/vnn4VMByLB", "in_reply_to_screen_name": null, "retweet_count": 2110, "favorite_count": 4786, "source": "Media Studio", "id_str": "788790049232023557", "is_retweet": false}, {"created_at": "Sat Oct 01 17:31:24 +0000 2016", "text": "\"It was overwhelming, in every sense of that word.\" \u2014Betsy, Hillary's oldest friend, on casting the Illinois delega\u2026 https://t.co/QA3ZxSpi4n", "in_reply_to_screen_name": null, "retweet_count": 2745, "favorite_count": 9192, "source": "Media Studio", "id_str": "782271712008298498", "is_retweet": false}, {"created_at": "Mon Oct 10 01:18:01 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump's pattern of behavior with women, as described by Donald Trump...decades ago. #debate https://t.co/wcTrAB\u2026", "in_reply_to_screen_name": null, "retweet_count": 1392, "favorite_count": 0, "source": "TweetDeck", "id_str": "785288241167597568", "is_retweet": true}, {"created_at": "Sun Oct 09 20:12:51 +0000 2016", "text": "RT @timkaine: Election Day is less than one month away. Go to https://t.co/B21QKpeiSj and make sure you're registered today. https://t.co/e\u2026", "in_reply_to_screen_name": null, "retweet_count": 1951, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785211446321905665", "is_retweet": true}, {"created_at": "Sat Feb 06 03:50:14 +0000 2016", "text": "You should never have to choose between your family &amp; your paycheck. Proud of all we accomplished with #FMLA23\u2014next, paid leave for all. -H", "in_reply_to_screen_name": null, "retweet_count": 757, "favorite_count": 2169, "source": "TweetDeck", "id_str": "695816747048398848", "is_retweet": false}, {"created_at": "Fri Oct 14 14:35:35 +0000 2016", "text": "What's \"smart\" about not funding America's military, schools, or health care for kids? https://t.co/whcL5OfeaW", "in_reply_to_screen_name": null, "retweet_count": 1176, "favorite_count": 3369, "source": "TweetDeck", "id_str": "786938507717640193", "is_retweet": false}, {"created_at": "Wed Aug 10 21:27:39 +0000 2016", "text": "Young Americans have the most to gain from Hillary's economic plan\u2014and the most to lose under Trump's policies. https://t.co/V1u6kLTjNy", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 962, "favorite_count": 2024, "source": "TweetDeck", "id_str": "763486995448532992", "is_retweet": false}, {"created_at": "Wed Jul 27 02:38:28 +0000 2016", "text": "\u201cShe\u2019s a changemaker. That\u2019s what she does.\u201d \u2014@BillClinton on Hillary helping 8 million kids get health coverage https://t.co/gDzYTl6Zy3", "in_reply_to_screen_name": null, "retweet_count": 4419, "favorite_count": 14689, "source": "TweetDeck", "id_str": "758129399480717314", "is_retweet": false}, {"created_at": "Mon Oct 24 18:11:38 +0000 2016", "text": "\"He lost $1 billion running a casino. Who does that?\u201d \u2014Hillary on Trump: https://t.co/cijmdjCj0t", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 975, "favorite_count": 2675, "source": "TweetDeck", "id_str": "790616758436630528", "is_retweet": false}, {"created_at": "Sat Jul 30 20:09:32 +0000 2016", "text": "We have the most productive workers in the world. We just need to give our people a chance to succeed: https://t.co/AONn3gbach", "in_reply_to_screen_name": null, "retweet_count": 1004, "favorite_count": 3650, "source": "TweetDeck", "id_str": "759481071511764992", "is_retweet": false}, {"created_at": "Sat Jul 16 21:43:03 +0000 2016", "text": "We\u2019ve got to say with one voice that Latinos are a vital part of the American community.\nhttps://t.co/IfxluhqpKQ", "in_reply_to_screen_name": null, "retweet_count": 2424, "favorite_count": 5979, "source": "Twitter Web Client", "id_str": "754431177335779329", "is_retweet": false}, {"created_at": "Mon Aug 15 18:00:07 +0000 2016", "text": "\"It\u2019s a recipe for playing into the hands of terrorists and their propaganda.\u201d \u2014@JoeBiden on Trump\u2019s foreign policy rhetoric", "in_reply_to_screen_name": null, "retweet_count": 772, "favorite_count": 2527, "source": "TweetDeck", "id_str": "765246708548771840", "is_retweet": false}, {"created_at": "Wed Jun 22 18:36:36 +0000 2016", "text": "Too many corporations seem to have forgotten: It\u2019s wrong to take taxpayer dollars with one hand and give out pink slips with the other.", "in_reply_to_screen_name": null, "retweet_count": 943, "favorite_count": 3160, "source": "TweetDeck", "id_str": "745686946396127232", "is_retweet": false}, {"created_at": "Wed Sep 28 19:30:51 +0000 2016", "text": "\u201cWe ran a campaign about issues, not insults.\u201d \u2014Hillary on her primary campaign with @BernieSanders: https://t.co/puVZP5iFRE", "in_reply_to_screen_name": null, "retweet_count": 906, "favorite_count": 3054, "source": "TweetDeck", "id_str": "781214609575440384", "is_retweet": false}, {"created_at": "Sun Sep 04 23:33:39 +0000 2016", "text": "There's going to be no one left in Washington for Trump to work with who he hasn\u2019t insulted. https://t.co/rW6ZWJTNoR", "in_reply_to_screen_name": null, "retweet_count": 4293, "favorite_count": 10939, "source": "Twitter for iPhone", "id_str": "772578400208842752", "is_retweet": false}, {"created_at": "Tue Feb 02 17:00:07 +0000 2016", "text": "Watch live: Hillary speaks in Nashua, NH after a historic win in Iowa. 7 days to the #FITN primary! https://t.co/04vi1GUs8l", "in_reply_to_screen_name": null, "retweet_count": 221, "favorite_count": 447, "source": "TweetDeck", "id_str": "694565973198802944", "is_retweet": false}, {"created_at": "Wed Mar 30 19:00:33 +0000 2016", "text": "Just when you thought it couldn't get worse. Horrific and telling. -H  https://t.co/Qi8TutsOw9", "in_reply_to_screen_name": null, "retweet_count": 7740, "favorite_count": 8976, "source": "TweetDeck", "id_str": "715252393248620544", "is_retweet": false}, {"created_at": "Tue Sep 27 01:13:45 +0000 2016", "text": "Having a small business owner for a dad may not get you multi-million-dollar bailouts, but it does teach you the va\u2026 https://t.co/3LV3pmjRBI", "in_reply_to_screen_name": null, "retweet_count": 2584, "favorite_count": 9498, "source": "TweetDeck", "id_str": "780576124023762944", "is_retweet": false}, {"created_at": "Tue Jan 19 01:07:26 +0000 2016", "text": "Catch Hillary on @maddow tonight at 9pm ET!", "in_reply_to_screen_name": null, "retweet_count": 265, "favorite_count": 786, "source": "TweetDeck", "id_str": "689252793903878144", "is_retweet": false}, {"created_at": "Fri Feb 26 02:03:56 +0000 2016", "text": "We should build a path to citizenship, not a wall on the border. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 817, "favorite_count": 1960, "source": "TweetDeck", "id_str": "703037753219551232", "is_retweet": false}, {"created_at": "Sat Jul 30 19:53:25 +0000 2016", "text": "Listen in from Johnstown, PA as Hillary and @TimKaine discuss innovation and manufacturing: https://t.co/ESV9yL7umg", "in_reply_to_screen_name": null, "retweet_count": 529, "favorite_count": 2026, "source": "TweetDeck", "id_str": "759477013216432128", "is_retweet": false}, {"created_at": "Thu Aug 25 19:14:32 +0000 2016", "text": "Live from Reno: Hillary discusses why @realDonaldTrump's divisive rhetoric is so dangerous to our future \u2192 https://t.co/ha9uCsizby", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 1468, "source": "TweetDeck", "id_str": "768889314889633792", "is_retweet": false}, {"created_at": "Fri Sep 16 13:57:32 +0000 2016", "text": "The next 53 days will shape the next 50 years.\n\nThe future of our children and grandchildren hangs in the balance. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 785, "favorite_count": 1678, "source": "TweetDeck", "id_str": "776782073143099392", "is_retweet": false}, {"created_at": "Mon Nov 07 01:54:00 +0000 2016", "text": "\u201cWe should all be grateful that this remarkable family decided to make America their home.\u201d \u2014Hillary on the Khan family", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 991, "favorite_count": 2835, "source": "TweetDeck", "id_str": "795444156315340802", "is_retweet": false}, {"created_at": "Tue Nov 08 02:28:38 +0000 2016", "text": "\u201cWe need your help, knocking on doors and making phone calls, helping to turn people out.\u201d \u2014Hillary https://t.co/iWKBOE1i18", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1367, "favorite_count": 3965, "source": "TweetDeck", "id_str": "795815260322230272", "is_retweet": false}, {"created_at": "Mon Feb 01 18:48:07 +0000 2016", "text": "At 102 years old, Iowan Ruline Steininger has pretty much seen it all\u2014except for this. https://t.co/q3sUJDuPJH", "in_reply_to_screen_name": null, "retweet_count": 364, "favorite_count": 877, "source": "TweetDeck", "id_str": "694230767858089985", "is_retweet": false}, {"created_at": "Fri Mar 18 20:19:36 +0000 2016", "text": "A super quick update on the Democratic primary race: https://t.co/laUNEK8jG0", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 2241, "source": "TweetDeck", "id_str": "710923629106700288", "is_retweet": false}, {"created_at": "Mon Oct 10 01:42:27 +0000 2016", "text": "The vast majority of Muslim Americans want to help fight terrorism. We are not at war with Islam.\n\nTrump is playing into terrorists' hands.", "in_reply_to_screen_name": null, "retweet_count": 7015, "favorite_count": 16515, "source": "TweetDeck", "id_str": "785294390348673024", "is_retweet": false}, {"created_at": "Tue Aug 30 01:27:18 +0000 2016", "text": "The choice in November: a president with real plans to combat climate change\u2014or one who calls it a hoax. https://t.co/tc5AokipbC", "in_reply_to_screen_name": null, "retweet_count": 4105, "favorite_count": 9890, "source": "TweetDeck", "id_str": "770432675672887296", "is_retweet": false}, {"created_at": "Fri Oct 21 21:11:51 +0000 2016", "text": "\"I want to be every single American\u2019s president\u2026I believe we can disagree without being disagreeable.\u201d \u2014Hillary #StrongerTogether", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 657, "favorite_count": 1610, "source": "TweetDeck", "id_str": "789574947685498880", "is_retweet": false}, {"created_at": "Mon Oct 10 02:33:35 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump promises he'll revive steel manufacturing in the US. \n\nHe himself doesn't always use US steel. #Debate  h\u2026", "in_reply_to_screen_name": null, "retweet_count": 2548, "favorite_count": 0, "source": "TweetDeck", "id_str": "785307258771111938", "is_retweet": true}, {"created_at": "Fri Apr 01 00:23:38 +0000 2016", "text": "Let\u2019s keep fighting for the safety, respect, and full equality for all trans people. https://t.co/z5DUs2kaII #TransDayofVisibility", "in_reply_to_screen_name": null, "retweet_count": 951, "favorite_count": 2133, "source": "TweetDeck", "id_str": "715696086120136704", "is_retweet": false}, {"created_at": "Wed Sep 07 16:34:35 +0000 2016", "text": "RT @Hillary_esp: \"Hillary tiene la experiencia y conf\u00edo en ella...Para m\u00ed, primero pa\u00eds\"\u2014 exsecretario republicano de Comercio. https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 598, "favorite_count": 0, "source": "TweetDeck", "id_str": "773560103354134529", "is_retweet": true}, {"created_at": "Tue May 17 21:08:12 +0000 2016", "text": "For too many families, paychecks aren't stretching as far as they used to. Let's change that. https://t.co/mOoR9HnVlX", "in_reply_to_screen_name": null, "retweet_count": 1764, "favorite_count": 4587, "source": "TweetDeck", "id_str": "732679134606962689", "is_retweet": false}, {"created_at": "Tue May 24 16:13:32 +0000 2016", "text": "When Trump got his wish for a housing crash, millions of Americans lost their homes.\n\nThis guy can't be president. https://t.co/tnngHNVqoL", "in_reply_to_screen_name": null, "retweet_count": 2488, "favorite_count": 3411, "source": "TweetDeck", "id_str": "735141691259293697", "is_retweet": false}, {"created_at": "Tue Sep 27 03:14:49 +0000 2016", "text": "RT @ChadHGriffin: Tonight, we heard from two candidates -- but only one president. #ImWithHer", "in_reply_to_screen_name": null, "retweet_count": 7441, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780606592337252352", "is_retweet": true}, {"created_at": "Wed Jul 27 02:19:27 +0000 2016", "text": "\"She became so involved in children\u2019s issues that she...took an extra year in law school, working at the Child Study Center.\u201d \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 994, "favorite_count": 3733, "source": "TweetDeck", "id_str": "758124613188644864", "is_retweet": false}, {"created_at": "Mon Jan 04 19:13:17 +0000 2016", "text": "\u201cI don\u2019t want to keep operating on children who\u2019ve been shot.\u201d https://t.co/nooVwimhhj", "in_reply_to_screen_name": null, "retweet_count": 286, "favorite_count": 650, "source": "TweetDeck", "id_str": "684090238600351744", "is_retweet": false}, {"created_at": "Fri Apr 01 00:54:27 +0000 2016", "text": "Our diversity and willingness to change have been making America great for decades. #TBT\nhttps://t.co/bEHdQE0UUY", "in_reply_to_screen_name": null, "retweet_count": 1371, "favorite_count": 2912, "source": "Twitter Web Client", "id_str": "715703842411716609", "is_retweet": false}, {"created_at": "Fri Jul 29 17:35:27 +0000 2016", "text": "\"Our Founders came together to create one nation because they knew what we know: We are stronger together.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1534, "favorite_count": 6223, "source": "TweetDeck", "id_str": "759079908169613312", "is_retweet": false}, {"created_at": "Sat Jan 23 18:06:37 +0000 2016", "text": "\u201cWe worked with Hillary Clinton. Here\u2019s how we know she\u2019s committed to fighting climate change.\u201d https://t.co/XPNGa8UVAd", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 796, "source": "TweetDeck", "id_str": "690958832655294464", "is_retweet": false}, {"created_at": "Thu Jul 14 16:01:40 +0000 2016", "text": "When our kids are scared by our politicians and policy debates, it\u2019s a sign something has gone badly off the rails. https://t.co/pdphHQEzuk", "in_reply_to_screen_name": null, "retweet_count": 3989, "favorite_count": 7194, "source": "TweetDeck", "id_str": "753620486257569792", "is_retweet": false}, {"created_at": "Wed Nov 02 02:11:23 +0000 2016", "text": "Fighting for kids in foster care has been one of the causes of Hillary's career, all the way back to law school. https://t.co/PKCBkcEPSW", "in_reply_to_screen_name": null, "retweet_count": 3392, "favorite_count": 8719, "source": "TweetDeck", "id_str": "793636594393710597", "is_retweet": false}, {"created_at": "Mon Apr 04 18:01:51 +0000 2016", "text": "Hardworking Americans deserve a raise. It\u2019s time to increase the minimum wage: https://t.co/unSRWuUp23 https://t.co/V4fMT8rtl6", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 2462, "source": "TweetDeck", "id_str": "717049558191247360", "is_retweet": false}, {"created_at": "Mon Sep 19 16:42:40 +0000 2016", "text": "RT @HFA: \"No one will work harder to make your life better. I\u2019ll never stop, no matter how tough it gets.\" \u2014Hillary https://t.co/TyXrp8PgsW", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 0, "source": "TweetDeck", "id_str": "777910791110623232", "is_retweet": true}, {"created_at": "Sun Nov 06 21:45:21 +0000 2016", "text": "\"America is great because America is good, and if we\u2026lift each other up, instead of tearing each other down, we can be even greater.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1520, "favorite_count": 3280, "source": "TweetDeck", "id_str": "795381583113027584", "is_retweet": false}, {"created_at": "Tue Feb 16 23:15:18 +0000 2016", "text": "Los l\u00edderes deben estar listos para cualquier cosa. Hillary tiene la experiencia y es la candidata m\u00e1s preparada.", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 829, "source": "TweetDeck", "id_str": "699733821500039168", "is_retweet": false}, {"created_at": "Mon Oct 10 01:53:41 +0000 2016", "text": "\"Almost every foreign policy decision [Trump] makes will raise serious conflicts of interest.\" \u2014@kurteichenwald https://t.co/rmTos7en9t", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 3447, "source": "TweetDeck", "id_str": "785297216256737280", "is_retweet": false}, {"created_at": "Tue Jan 12 21:39:53 +0000 2016", "text": "At #DemForum, Hillary said she supports repealing the Hyde Amendment. Why that matters: https://t.co/8JbqdhGr5u https://t.co/bqHaW07dLA", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 857, "source": "TweetDeck", "id_str": "687026235336167424", "is_retweet": false}, {"created_at": "Thu Sep 01 19:44:35 +0000 2016", "text": "\"There will be no softening whatsoever.\" \u2014the @WashingtonPost on Trump's most alarming immigration speech yet https://t.co/RxuZC8hWzy", "in_reply_to_screen_name": null, "retweet_count": 1153, "favorite_count": 2490, "source": "TweetDeck", "id_str": "771433590689267712", "is_retweet": false}, {"created_at": "Wed Jul 06 16:10:15 +0000 2016", "text": "Trump made millions while bankrupting his businesses, laying off workers, and stiffing contractors. Here's how:\nhttps://t.co/OZ0eTD6oiC", "in_reply_to_screen_name": null, "retweet_count": 2675, "favorite_count": 3850, "source": "Twitter Web Client", "id_str": "750723543118147585", "is_retweet": false}, {"created_at": "Wed Oct 05 15:10:31 +0000 2016", "text": "RT @jbarro: Let's dispel with this fiction that Tim Kaine doesn't know what he's doing. https://t.co/dLHOcNI4GN", "in_reply_to_screen_name": null, "retweet_count": 1044, "favorite_count": 0, "source": "TweetDeck", "id_str": "783685806099689476", "is_retweet": true}, {"created_at": "Wed Apr 06 20:07:05 +0000 2016", "text": "Women should be paid equally to men. Period. Thanks for leading the fight on paycheck fairness, @SenatorBarb. -H https://t.co/D4ckKgID2p", "in_reply_to_screen_name": null, "retweet_count": 1238, "favorite_count": 2707, "source": "TweetDeck", "id_str": "717805848467210241", "is_retweet": false}, {"created_at": "Tue Aug 30 19:38:10 +0000 2016", "text": "The @ClintonFdn is saving lives around the world. https://t.co/jxl9vQ68lk", "in_reply_to_screen_name": null, "retweet_count": 1885, "favorite_count": 4384, "source": "TweetDeck", "id_str": "770707199450636288", "is_retweet": false}, {"created_at": "Tue May 24 02:09:43 +0000 2016", "text": "There's so much more that unites us than divides us. It's time to come together to stop Donald Trump. https://t.co/aPDfBHHCaU", "in_reply_to_screen_name": null, "retweet_count": 3971, "favorite_count": 8979, "source": "Twitter Web Client", "id_str": "734929339276496897", "is_retweet": false}, {"created_at": "Wed Jul 13 17:12:19 +0000 2016", "text": "\"When kids are scared by political candidates and policy debates, it\u2019s a sign something has gone badly wrong.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1049, "favorite_count": 2894, "source": "TweetDeck", "id_str": "753275877622943746", "is_retweet": false}, {"created_at": "Sun Mar 06 22:05:54 +0000 2016", "text": "Let\u2019s not forget that there are lots of Flints out there. Places where poor people and people of color have been left out and left behind.", "in_reply_to_screen_name": null, "retweet_count": 1327, "favorite_count": 2891, "source": "TweetDeck", "id_str": "706601727471050752", "is_retweet": false}, {"created_at": "Mon Mar 14 02:01:28 +0000 2016", "text": "It's absolutely unacceptable that the gun industry can't be held accountable when they endanger Americans. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 3546, "source": "TweetDeck", "id_str": "709197723032035328", "is_retweet": false}, {"created_at": "Tue Jan 12 02:33:19 +0000 2016", "text": "\"We've got to disrupt the school to prison pipeline\u2014we need a cradle to college pipeline.\" \u2014Hillary at #DemForum", "in_reply_to_screen_name": null, "retweet_count": 454, "favorite_count": 1091, "source": "TweetDeck", "id_str": "686737693968064512", "is_retweet": false}, {"created_at": "Wed Apr 20 02:39:02 +0000 2016", "text": "\u201cThe motto of this state is \u2018Excelsior\u2019\u2013ever upward. So let\u2019s go out and win this election and all rise together.\u201d https://t.co/YOH1Pk63OF", "in_reply_to_screen_name": null, "retweet_count": 1683, "favorite_count": 4527, "source": "TweetDeck", "id_str": "722615531258396672", "is_retweet": false}, {"created_at": "Sat Jun 18 00:13:43 +0000 2016", "text": "Gun violence and hate aren't isolated\u2014homophobia in Orlando, racism in Charleston. We need to fight them together. https://t.co/HcBJzknBz7", "in_reply_to_screen_name": null, "retweet_count": 4538, "favorite_count": 11909, "source": "Twitter for iPhone", "id_str": "743959844315602945", "is_retweet": false}, {"created_at": "Mon Apr 18 16:25:37 +0000 2016", "text": ".@TomColicchio, thanks for your work on this issue. Your zip code shouldn't determine your ability to access healthy, affordable food.", "in_reply_to_screen_name": "tomcolicchio", "retweet_count": 446, "favorite_count": 1130, "source": "TweetDeck", "id_str": "722098770188611584", "is_retweet": false}, {"created_at": "Sat Oct 15 18:33:37 +0000 2016", "text": "RT @heraldleader: Editorial endorsement: Hillary Clinton is the clear choice for president https://t.co/r3qoAZ6EpV https://t.co/iqZ98u4fv4", "in_reply_to_screen_name": null, "retweet_count": 2393, "favorite_count": 0, "source": "TweetDeck", "id_str": "787360799551528960", "is_retweet": true}, {"created_at": "Fri Sep 16 19:16:27 +0000 2016", "text": "\"Hillary has the resilience it takes to do this job, see when she gets knocked down\u2026she gets right back up.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 1232, "favorite_count": 3825, "source": "TweetDeck", "id_str": "776862331682877440", "is_retweet": false}, {"created_at": "Sun Jun 12 19:30:03 +0000 2016", "text": "Declaraciones de Hillary Clinton sobre el ataque en Orlando. https://t.co/onc4230GUH", "in_reply_to_screen_name": null, "retweet_count": 784, "favorite_count": 2088, "source": "TweetDeck", "id_str": "742076519380594688", "is_retweet": false}, {"created_at": "Sun Nov 06 22:04:25 +0000 2016", "text": "RT @colinjones: Here is LeBron introducing Hillary: \"We have to get out and make sure we vote\" https://t.co/LUuSuKRdlx", "in_reply_to_screen_name": null, "retweet_count": 7454, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795386382176911360", "is_retweet": true}, {"created_at": "Wed Jul 13 17:21:12 +0000 2016", "text": "\"Let\u2019s be more than allies to each other. Let\u2019s take on each other\u2019s struggles as our own.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 812, "favorite_count": 2154, "source": "TweetDeck", "id_str": "753278114646687745", "is_retweet": false}, {"created_at": "Sat May 07 13:51:22 +0000 2016", "text": "62 reasons why Donald Trump should never become president (from members of his own party). https://t.co/0gYEctRjSe", "in_reply_to_screen_name": null, "retweet_count": 2203, "favorite_count": 3297, "source": "TweetDeck", "id_str": "728945320823033857", "is_retweet": false}, {"created_at": "Fri Nov 04 15:17:47 +0000 2016", "text": "Will Ferrell: comedian, actor, just your average millennial. https://t.co/ExfbQX3AS1", "in_reply_to_screen_name": null, "retweet_count": 16415, "favorite_count": 34908, "source": "Media Studio", "id_str": "794559273833377792", "is_retweet": false}, {"created_at": "Sun Feb 07 18:54:05 +0000 2016", "text": "Civil rights activist Fannie Lou Hamer dedicated her life to securing voting rights &amp; ending racial injustice. #BHM https://t.co/dQYPhqA1vD", "in_reply_to_screen_name": null, "retweet_count": 1126, "favorite_count": 2199, "source": "TweetDeck", "id_str": "696406595442515969", "is_retweet": false}, {"created_at": "Wed Apr 27 18:44:35 +0000 2016", "text": "Trump's rhetoric is just the beginning. He's dismissed equal pay. Wouldn't support paid family leave. Would defund Planned Parenthood.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 905, "favorite_count": 1787, "source": "TweetDeck", "id_str": "725395233681334272", "is_retweet": false}, {"created_at": "Fri Sep 16 17:06:11 +0000 2016", "text": "This shouldn't have to be said: You don\u2019t just get to say someone else did the worst things you\u2019ve done. It doesn\u2019t work. No one buys it.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1905, "favorite_count": 4172, "source": "TweetDeck", "id_str": "776829545093660672", "is_retweet": false}, {"created_at": "Tue Mar 15 15:22:16 +0000 2016", "text": "We\u2019re live blogging mini-Super Tuesday on Facebook as FL, IL, MO, NC, and OH head to the polls. Follow along: https://t.co/wBoP6I3l7p", "in_reply_to_screen_name": null, "retweet_count": 496, "favorite_count": 1040, "source": "TweetDeck", "id_str": "709761642565918721", "is_retweet": false}, {"created_at": "Thu Apr 14 02:23:11 +0000 2016", "text": "Donald Trump says wages are too high. Really? Hardworking Americans don't think so. https://t.co/5oEK9UhGI1 https://t.co/1z0tuCedJa", "in_reply_to_screen_name": null, "retweet_count": 1280, "favorite_count": 2961, "source": "TweetDeck", "id_str": "720437215751495680", "is_retweet": false}, {"created_at": "Thu Oct 20 23:22:23 +0000 2016", "text": "Between the three presidential debates, Trump told roughly one lie for every 50 seconds he spoke. https://t.co/FbhB0zDkyj", "in_reply_to_screen_name": null, "retweet_count": 3814, "favorite_count": 8837, "source": "TweetDeck", "id_str": "789245408837074944", "is_retweet": false}, {"created_at": "Sun Feb 14 02:54:47 +0000 2016", "text": "\"All of us Democrats have a responsibility to make sure a Republican doesn\u2019t win and rip away all the progress we've made.\" \u2014Hillary in CO", "in_reply_to_screen_name": null, "retweet_count": 1432, "favorite_count": 3507, "source": "TweetDeck", "id_str": "698701892868825088", "is_retweet": false}, {"created_at": "Mon Sep 19 02:54:08 +0000 2016", "text": "\"We have got to do everything we can to make sure that Hillary Clinton is elected president.\" \u2014@BernieSanders https://t.co/t1uxcoVJT5", "in_reply_to_screen_name": null, "retweet_count": 7555, "favorite_count": 15850, "source": "Twitter Web Client", "id_str": "777702286499860480", "is_retweet": false}, {"created_at": "Tue Sep 06 18:40:14 +0000 2016", "text": "\"I want to be a president for all Americans, not just for some Americans; Democrats, Republicans, Independents.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 733, "favorite_count": 1795, "source": "TweetDeck", "id_str": "773229338347073536", "is_retweet": false}, {"created_at": "Tue Jun 21 16:58:07 +0000 2016", "text": "We need to build an economy that ensures everyone gets an equal shot and no one is left behind. Join us: https://t.co/zjlNqBaiHP", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 2576, "source": "TweetDeck", "id_str": "745299771175362560", "is_retweet": false}, {"created_at": "Tue Nov 01 19:42:40 +0000 2016", "text": "One week to go.\n\nWatch Hillary talk about what's at stake for women in this election on the trail in Florida \u2192 https://t.co/IbH5hqobxD", "in_reply_to_screen_name": null, "retweet_count": 1593, "favorite_count": 4768, "source": "TweetDeck", "id_str": "793538768250793984", "is_retweet": false}, {"created_at": "Mon Jul 25 15:41:49 +0000 2016", "text": "\"Americans aren\u2019t just choosing a president, we\u2019re also choosing a Commander-in-Chief.\" \u2014Hillary to the @VFWHQ", "in_reply_to_screen_name": null, "retweet_count": 713, "favorite_count": 2416, "source": "TweetDeck", "id_str": "757601757312716805", "is_retweet": false}, {"created_at": "Mon Jul 11 23:01:39 +0000 2016", "text": "\"Her way of dealing with the stories she hears is not just to repeat the story but to do something about the story.\" https://t.co/jje8cWi5Ep", "in_reply_to_screen_name": null, "retweet_count": 985, "favorite_count": 2572, "source": "TweetDeck", "id_str": "752639017733197824", "is_retweet": false}, {"created_at": "Thu Jun 16 15:24:33 +0000 2016", "text": "One year ago today, @realDonaldTrump announced his campaign for president.\n\nAnd what a year it's been.\nhttps://t.co/fYf3Ke7srE", "in_reply_to_screen_name": null, "retweet_count": 5365, "favorite_count": 9264, "source": "Twitter Web Client", "id_str": "743464285972533249", "is_retweet": false}, {"created_at": "Tue Jul 05 20:09:56 +0000 2016", "text": "\"If your concern is who's going to look out for working families...the other side's got nothing to offer you.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1128, "favorite_count": 3018, "source": "TweetDeck", "id_str": "750421474851352576", "is_retweet": false}, {"created_at": "Tue Jun 14 17:46:36 +0000 2016", "text": "Today's #NetNeutrality decision is a big win for consumers, innovation, and freedom of expression on the internet: https://t.co/FcXI66zHDF", "in_reply_to_screen_name": null, "retweet_count": 928, "favorite_count": 2176, "source": "TweetDeck", "id_str": "742775258948767744", "is_retweet": false}, {"created_at": "Fri Jan 15 03:00:30 +0000 2016", "text": "Comprehensive background checks would ensure those who can responsibly own guns do\u2014and those who can\u2019t, don't. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 1891, "source": "TweetDeck", "id_str": "687831697946181632", "is_retweet": false}, {"created_at": "Thu Feb 04 03:53:40 +0000 2016", "text": "\"I am somebody who actually wants to produce real results in people's lives. I am a progressive who gets results.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 757, "favorite_count": 1732, "source": "TweetDeck", "id_str": "695092834504941572", "is_retweet": false}, {"created_at": "Wed Oct 05 01:24:24 +0000 2016", "text": "Reminder: Donald Trump may not have paid any federal income taxes for 18 years, but wants to give his family a $4 billion tax cut. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 2736, "favorite_count": 6412, "source": "TweetDeck", "id_str": "783477911085080576", "is_retweet": false}, {"created_at": "Wed Mar 30 16:48:40 +0000 2016", "text": "New York is home to 20 million people. We don\u2019t all look the same. We don\u2019t all sound the same or worship the same, but we pull together.", "in_reply_to_screen_name": null, "retweet_count": 1072, "favorite_count": 2525, "source": "TweetDeck", "id_str": "715219203658113024", "is_retweet": false}, {"created_at": "Mon Sep 26 12:40:02 +0000 2016", "text": "Trump can't win tonight's debate by lying to the American people. https://t.co/uRkyip3Rfe", "in_reply_to_screen_name": null, "retweet_count": 6536, "favorite_count": 11113, "source": "Media Studio", "id_str": "780386445844422656", "is_retweet": false}, {"created_at": "Sun Feb 07 00:32:05 +0000 2016", "text": "Knocking on doors and talking to voters in snowy Manchester, New Hampshire. https://t.co/2dbemcv5rW", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 2054, "source": "TweetDeck", "id_str": "696129268116402177", "is_retweet": false}, {"created_at": "Sun Nov 06 03:02:20 +0000 2016", "text": "We face a serious choice on Tuesday: Will we act to protect the planet for our kids and grandkids, or do nothing?\u2026 https://t.co/MZXqJ4kVo3", "in_reply_to_screen_name": null, "retweet_count": 3391, "favorite_count": 8637, "source": "TweetDeck", "id_str": "795098968061526016", "is_retweet": false}, {"created_at": "Fri Feb 19 01:01:18 +0000 2016", "text": "It's 2016. Women deserve equal pay. Thanks for leading this effort in Oklahoma, @RepEmilyVirgin &amp; @jdunnington. -H \nhttps://t.co/Yx08aITbu1", "in_reply_to_screen_name": null, "retweet_count": 631, "favorite_count": 1598, "source": "TweetDeck", "id_str": "700485273247940609", "is_retweet": false}, {"created_at": "Mon Feb 15 19:39:47 +0000 2016", "text": "If we claim we are for families, then we have to fix our immigration system. We can\u2019t wait any longer for a path to full, equal citizenship.", "in_reply_to_screen_name": null, "retweet_count": 908, "favorite_count": 2145, "source": "TweetDeck", "id_str": "699317199027249152", "is_retweet": false}, {"created_at": "Tue Jun 21 16:52:03 +0000 2016", "text": ".@realDonaldTrump, only someone who\u2019s never actually faced the consequences of his mistakes would brag, \u201cI play with bankruptcy.\u201d", "in_reply_to_screen_name": null, "retweet_count": 1752, "favorite_count": 4411, "source": "TweetDeck", "id_str": "745298244192862209", "is_retweet": false}, {"created_at": "Fri Aug 12 18:51:05 +0000 2016", "text": "RT @HFA: RT if you agree: Every student should learn computer science. https://t.co/IzFbWB4I1I", "in_reply_to_screen_name": null, "retweet_count": 1828, "favorite_count": 0, "source": "TweetDeck", "id_str": "764172372408664067", "is_retweet": true}, {"created_at": "Thu Apr 07 15:46:38 +0000 2016", "text": "Hillary worked to expand health care for millions of children: https://t.co/HgfcWvdB9s", "in_reply_to_screen_name": null, "retweet_count": 662, "favorite_count": 1547, "source": "TweetDeck", "id_str": "718102692170764288", "is_retweet": false}, {"created_at": "Mon Mar 07 23:57:12 +0000 2016", "text": "For everyone who already has student debt, Hillary has a plan to help you, too: https://t.co/A4pWb3fOf4 #DemTownHall https://t.co/ISOHYjNu4x", "in_reply_to_screen_name": null, "retweet_count": 619, "favorite_count": 1267, "source": "TweetDeck", "id_str": "706992123242029057", "is_retweet": false}, {"created_at": "Wed Jul 27 21:57:24 +0000 2016", "text": "RT @billclinton: So proud to tell #DemsInPhilly last night why @HillaryClinton is still the best darn changemaker I've ever known. https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 5356, "favorite_count": 0, "source": "TweetDeck", "id_str": "758421052913483776", "is_retweet": true}, {"created_at": "Tue Apr 12 23:36:46 +0000 2016", "text": "Reminder for Republican legislators in PA: Every woman should be free to make her own health care decisions. https://t.co/1YvFMoc8dB", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 1676, "source": "TweetDeck", "id_str": "720032946548293634", "is_retweet": false}, {"created_at": "Fri Oct 07 00:57:34 +0000 2016", "text": "\"Latinas still make 55 cents for every dollar a white man makes. That\u2019s just totally unacceptable.\" \u2014Hillary https://t.co/tHzJGDJ74e", "in_reply_to_screen_name": null, "retweet_count": 2463, "favorite_count": 6397, "source": "Twitter for iPhone", "id_str": "784195929901559808", "is_retweet": false}, {"created_at": "Mon Oct 31 19:08:17 +0000 2016", "text": "Sometimes the fate of the greatest nations comes down to single moments in time. This is one of those moments. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1328, "favorite_count": 2950, "source": "TweetDeck", "id_str": "793167730178396162", "is_retweet": false}, {"created_at": "Fri May 13 14:06:46 +0000 2016", "text": "It's a simple idea: Those who have benefited the most from our economy should pay their fair share in taxes. https://t.co/2nSFZtgYFJ", "in_reply_to_screen_name": null, "retweet_count": 2425, "favorite_count": 5689, "source": "TweetDeck", "id_str": "731123523813552134", "is_retweet": false}, {"created_at": "Wed Mar 30 16:42:23 +0000 2016", "text": "\"This is NY. Nobody dreams bigger than we do. But this is a city that likes to get things done. That\u2019s what we want from our president too.\"", "in_reply_to_screen_name": null, "retweet_count": 714, "favorite_count": 1868, "source": "TweetDeck", "id_str": "715217620325150720", "is_retweet": false}, {"created_at": "Tue Jul 12 15:51:27 +0000 2016", "text": "\"We become stronger when black and white, Latino, Asian American, Native American\u2014all of us\u2014stand together.\u201d \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 1062, "favorite_count": 2697, "source": "TweetDeck", "id_str": "752893139808030720", "is_retweet": false}, {"created_at": "Wed Jun 29 19:27:50 +0000 2016", "text": "They were made in places like:\n\nMexico\nChina\nVietnam\nHonduras\nHong Kong\nTaiwan\nSouth Korea\nSingapore\nBangladesh\nOman https://t.co/eeEzySq9gl", "in_reply_to_screen_name": null, "retweet_count": 10278, "favorite_count": 18872, "source": "Twitter Web Client", "id_str": "748236552346697728", "is_retweet": false}, {"created_at": "Fri Sep 16 17:10:07 +0000 2016", "text": "The birther lie is what turned Trump from an ordinary reality TV star into a political figure. That origin story can't be unwritten.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2578, "favorite_count": 4772, "source": "TweetDeck", "id_str": "776830537767981056", "is_retweet": false}, {"created_at": "Thu May 05 18:43:25 +0000 2016", "text": "\"I want more Americans to believe again we are all in this together.\"\nhttps://t.co/VECLFeVoyC", "in_reply_to_screen_name": null, "retweet_count": 1477, "favorite_count": 2900, "source": "Twitter Web Client", "id_str": "728294044632129537", "is_retweet": false}, {"created_at": "Tue May 17 00:54:30 +0000 2016", "text": "Making it harder to vote goes against everything we stand for as Americans. Why would you brag about it? https://t.co/6sTKwRA1PG", "in_reply_to_screen_name": null, "retweet_count": 1361, "favorite_count": 2512, "source": "Twitter for iPhone", "id_str": "732373696787152896", "is_retweet": false}, {"created_at": "Tue Nov 01 15:06:03 +0000 2016", "text": "After his lawyers advised against it, Trump used a \"legally dubious\" strategy to avoid paying taxes for years. https://t.co/j6GmJWqqrC", "in_reply_to_screen_name": null, "retweet_count": 3450, "favorite_count": 5415, "source": "TweetDeck", "id_str": "793469155211087872", "is_retweet": false}, {"created_at": "Mon Oct 10 01:56:56 +0000 2016", "text": "Donald always takes care of Donald and people like Donald. https://t.co/sSYRYr6xrG #debate", "in_reply_to_screen_name": null, "retweet_count": 2237, "favorite_count": 4938, "source": "TweetDeck", "id_str": "785298033948909568", "is_retweet": false}, {"created_at": "Thu Jun 30 01:14:57 +0000 2016", "text": "We're not going back, @realDonaldTrump. https://t.co/ogoALlSV8M", "in_reply_to_screen_name": null, "retweet_count": 6306, "favorite_count": 14676, "source": "TweetDeck", "id_str": "748323908072448000", "is_retweet": false}, {"created_at": "Sun Feb 07 01:58:46 +0000 2016", "text": "When Republican candidates describe deporting millions of immigrants &amp; repealing the ACA as \"leadership.\" #GOPdebate https://t.co/8SfzUrYTYX", "in_reply_to_screen_name": null, "retweet_count": 1199, "favorite_count": 2321, "source": "Twitter Web Client", "id_str": "696151083643703296", "is_retweet": false}, {"created_at": "Wed Mar 30 16:41:52 +0000 2016", "text": "Some folks may have the luxury to hold out for \u201cthe perfect.\u201d But a lot of Americans are hurting right now and they can\u2019t wait for that.", "in_reply_to_screen_name": null, "retweet_count": 992, "favorite_count": 2279, "source": "TweetDeck", "id_str": "715217490368827396", "is_retweet": false}, {"created_at": "Sun Aug 28 23:53:54 +0000 2016", "text": "Trump's housing company would mark black renters' applications with a \"C\" for \"colored\"\u2014then reject them. https://t.co/HzOwQNrnKi", "in_reply_to_screen_name": null, "retweet_count": 3461, "favorite_count": 5078, "source": "TweetDeck", "id_str": "770046784722829312", "is_retweet": false}, {"created_at": "Fri Aug 12 22:47:27 +0000 2016", "text": "RT @timkaine: Just released my tax returns, @realDonaldTrump. Where are yours? https://t.co/PgQ6XIGTqg", "in_reply_to_screen_name": null, "retweet_count": 5144, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "764231854690013189", "is_retweet": true}, {"created_at": "Wed May 11 23:12:50 +0000 2016", "text": "Trump's policies that affect women are even more offensive than his comments on women\u2014and that's saying something.\nhttps://t.co/YfUdtygL4h", "in_reply_to_screen_name": null, "retweet_count": 2154, "favorite_count": 3184, "source": "Twitter Web Client", "id_str": "730536172456271872", "is_retweet": false}, {"created_at": "Tue Feb 16 21:49:01 +0000 2016", "text": "We need real plans to combat systemic racism and remove the barriers holding African Americans back. Hillary's plan: https://t.co/8EsDQhjJgU", "in_reply_to_screen_name": null, "retweet_count": 776, "favorite_count": 1277, "source": "TweetDeck", "id_str": "699712107336568832", "is_retweet": false}, {"created_at": "Mon Aug 08 15:50:59 +0000 2016", "text": "Today's bombing of a hospital in Pakistan is despicable. We have to stand up against terror and come together to prevent these attacks. -H", "in_reply_to_screen_name": null, "retweet_count": 3099, "favorite_count": 9992, "source": "TweetDeck", "id_str": "762677497691566081", "is_retweet": false}, {"created_at": "Fri May 06 19:06:31 +0000 2016", "text": "Imaginemos un ma\u00f1ana en el que ning\u00fan ni\u00f1o crezca bajo las sombras de la discriminaci\u00f3n o la deportaci\u00f3n.\nhttps://t.co/WKMGJ0kE5k", "in_reply_to_screen_name": null, "retweet_count": 906, "favorite_count": 1680, "source": "Twitter Web Client", "id_str": "728662243957596160", "is_retweet": false}, {"created_at": "Tue Feb 02 17:39:44 +0000 2016", "text": "Text CONGRATS to 47246 to tell Hillary you'll be by her side for the next part of this campaign. https://t.co/FHoAPFiji8", "in_reply_to_screen_name": null, "retweet_count": 2867, "favorite_count": 8166, "source": "TweetDeck", "id_str": "694575943931797505", "is_retweet": false}, {"created_at": "Thu Feb 04 14:32:54 +0000 2016", "text": "There's no excuse for racism and violence on a college campus. https://t.co/ADVghl4iEv -H", "in_reply_to_screen_name": null, "retweet_count": 590, "favorite_count": 1019, "source": "TweetDeck", "id_str": "695253700697329664", "is_retweet": false}, {"created_at": "Wed Oct 05 17:44:30 +0000 2016", "text": "RT @HuffingtonPost: Tim Kaine schooled Mike Pence on abortion at the #VPDebate https://t.co/AoaZ9L6e9W https://t.co/Ht84kr2nDx", "in_reply_to_screen_name": null, "retweet_count": 940, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783724557597339648", "is_retweet": true}, {"created_at": "Thu Aug 25 19:36:38 +0000 2016", "text": "There\u2019s an old Mexican proverb that says \u201cTell me with whom you walk, and I will tell you who you are.\u201d\n\nWe know who Trump is.", "in_reply_to_screen_name": null, "retweet_count": 12205, "favorite_count": 19171, "source": "TweetDeck", "id_str": "768894878105427968", "is_retweet": false}, {"created_at": "Wed Jun 22 19:14:37 +0000 2016", "text": "Instead of pitting people against each other, we need to enlist everyone in building our country together.", "in_reply_to_screen_name": null, "retweet_count": 1348, "favorite_count": 4349, "source": "TweetDeck", "id_str": "745696513314127872", "is_retweet": false}, {"created_at": "Thu Oct 20 02:41:28 +0000 2016", "text": "We are about to elect a president\u2014and only one candidate tonight showed she has what it takes. Chip in now: https://t.co/dFFICBH9K5 #SheWon", "in_reply_to_screen_name": null, "retweet_count": 4109, "favorite_count": 13626, "source": "TweetDeck", "id_str": "788933120116613120", "is_retweet": false}, {"created_at": "Sat Apr 16 21:12:12 +0000 2016", "text": "\"If a young man believes that he might be a senator or president...you don't have to tell them not to join a gang.\" https://t.co/qMSMOfFETT", "in_reply_to_screen_name": null, "retweet_count": 998, "favorite_count": 2194, "source": "Twitter Web Client", "id_str": "721446117720858625", "is_retweet": false}, {"created_at": "Thu Apr 28 12:57:30 +0000 2016", "text": "\"Everything I say, I'm going to do, folks.\" \u2014@realDonaldTrump\nhttps://t.co/NFyovQpH8v", "in_reply_to_screen_name": null, "retweet_count": 3112, "favorite_count": 4148, "source": "Twitter Web Client", "id_str": "725670275887431680", "is_retweet": false}, {"created_at": "Wed Aug 24 01:22:19 +0000 2016", "text": "\"No matter how daunting the odds, she never\u2014ever\u2014quits. That is the Hillary I know.\" \u2014@POTUS\nhttps://t.co/2EpcMtnTXR", "in_reply_to_screen_name": null, "retweet_count": 3490, "favorite_count": 10264, "source": "Twitter Web Client", "id_str": "768257096290742272", "is_retweet": false}, {"created_at": "Thu Jun 02 21:31:26 +0000 2016", "text": "What happens to the moral example we set\u2014for the world and for our own children\u2014if our president engages in bigotry?\nhttps://t.co/EkShquTR42", "in_reply_to_screen_name": null, "retweet_count": 2132, "favorite_count": 4124, "source": "Twitter Web Client", "id_str": "738483185240023040", "is_retweet": false}, {"created_at": "Sat Apr 16 00:52:23 +0000 2016", "text": "Thinking of Boston as we remember the bombing 3 years ago. Your strength and resilience will always defeat acts of terror. #OneBostonDay -H", "in_reply_to_screen_name": null, "retweet_count": 1427, "favorite_count": 3980, "source": "TweetDeck", "id_str": "721139139303841792", "is_retweet": false}, {"created_at": "Fri Jul 29 03:34:27 +0000 2016", "text": "RT @POTUS: Great speech. She's tested. She's ready. She never quits. That's why Hillary should be our next @POTUS. (She'll get the Twitter\u2026", "in_reply_to_screen_name": null, "retweet_count": 62266, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758868264218861568", "is_retweet": true}, {"created_at": "Sat Feb 06 17:31:21 +0000 2016", "text": "A moment backstage in Manchester, NH: \"I'm taking care of my mom, she has Alzheimer's.\"\nhttps://t.co/8Vt1y9tIyj", "in_reply_to_screen_name": null, "retweet_count": 839, "favorite_count": 1578, "source": "Twitter Web Client", "id_str": "696023384568700928", "is_retweet": false}, {"created_at": "Sun Oct 09 15:44:39 +0000 2016", "text": "RT this if you're proud to have Hillary's back tonight. https://t.co/bw5kdfxfbw https://t.co/fcrZ3i3U4V", "in_reply_to_screen_name": null, "retweet_count": 36275, "favorite_count": 41626, "source": "TweetDeck", "id_str": "785143951149899777", "is_retweet": false}, {"created_at": "Thu Sep 08 12:09:47 +0000 2016", "text": "There's only one candidate in this election who's ready to be America's Commander-in-Chief. https://t.co/NarHADLKi2", "in_reply_to_screen_name": null, "retweet_count": 2793, "favorite_count": 8210, "source": "TweetDeck", "id_str": "773855854831493121", "is_retweet": false}, {"created_at": "Wed Mar 23 20:23:56 +0000 2016", "text": "\"Would you mind if I tell your story?\" How the Affordable Care Act made a difference for Joanne's family.\nhttps://t.co/FE7nWwCOZ7", "in_reply_to_screen_name": null, "retweet_count": 1313, "favorite_count": 2828, "source": "Twitter Web Client", "id_str": "712736659318571008", "is_retweet": false}, {"created_at": "Sun Oct 16 23:56:17 +0000 2016", "text": "We make our country greater when we widen the circle of opportunity and invite more people in:\u2026 https://t.co/FmUWoDvOSl", "in_reply_to_screen_name": null, "retweet_count": 2243, "favorite_count": 7503, "source": "TweetDeck", "id_str": "787804388182065152", "is_retweet": false}, {"created_at": "Tue Oct 04 21:51:39 +0000 2016", "text": "Post-traumatic stress isn't something strong people can handle &amp; weak people can't.\n\nTrump\u2019s comments aren't just ignorant, they\u2019re harmful.", "in_reply_to_screen_name": null, "retweet_count": 4111, "favorite_count": 10793, "source": "TweetDeck", "id_str": "783424369754304512", "is_retweet": false}, {"created_at": "Tue Sep 20 02:05:47 +0000 2016", "text": "Catch @FallonTonight at 11:35pm ET to see letters from some of Hillary's biggest fans. https://t.co/muVNwgLSRs", "in_reply_to_screen_name": null, "retweet_count": 1634, "favorite_count": 6065, "source": "TweetDeck", "id_str": "778052507037609984", "is_retweet": false}, {"created_at": "Tue Oct 25 16:20:22 +0000 2016", "text": "Tomorrow is Hillary's birthday! Make sure your name is on her card: https://t.co/d9Nvr0HANk", "in_reply_to_screen_name": null, "retweet_count": 1134, "favorite_count": 4661, "source": "TweetDeck", "id_str": "790951141890719745", "is_retweet": false}, {"created_at": "Tue Nov 01 02:42:48 +0000 2016", "text": "\"The thought of Donald Trump with nuclear weapons scares me to death. It should scare everyone.\" https://t.co/E77BgjQGj7", "in_reply_to_screen_name": null, "retweet_count": 9377, "favorite_count": 18327, "source": "Media Studio", "id_str": "793282113114034176", "is_retweet": false}, {"created_at": "Fri Jul 22 02:52:42 +0000 2016", "text": "Trump is right about one thing. #RNCinCLE https://t.co/oU8lr9hqMd", "in_reply_to_screen_name": null, "retweet_count": 7678, "favorite_count": 12612, "source": "TweetDeck", "id_str": "756321039609651200", "is_retweet": false}, {"created_at": "Thu Jul 14 19:48:06 +0000 2016", "text": "Watch live as Hillary and Senator @TimKaine take the stage in Virginia \u2192 https://t.co/vKTzxN7tON", "in_reply_to_screen_name": null, "retweet_count": 385, "favorite_count": 1207, "source": "TweetDeck", "id_str": "753677469752909824", "is_retweet": false}, {"created_at": "Tue Jun 07 01:13:26 +0000 2016", "text": "We are on the brink of a historic moment, but we still have work to do.\n\nLet's keep fighting for every vote: https://t.co/tDsxrpu6EO", "in_reply_to_screen_name": null, "retweet_count": 4270, "favorite_count": 10867, "source": "TweetDeck", "id_str": "739988606970920960", "is_retweet": false}, {"created_at": "Thu Oct 20 21:34:46 +0000 2016", "text": "\"When you're president...knowing what you're doing is a good thing.\n\nAnd Hillary Clinton absolutely knows what she's doing.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 534, "favorite_count": 1503, "source": "TweetDeck", "id_str": "789218324911620096", "is_retweet": false}, {"created_at": "Tue Sep 27 01:17:44 +0000 2016", "text": "Economists project that Trump\u2019s plans would add more than $5,000,000,000,000 to the national debt. That's \"trillion\" with a \"T.\"", "in_reply_to_screen_name": null, "retweet_count": 3300, "favorite_count": 6323, "source": "TweetDeck", "id_str": "780577128005963776", "is_retweet": false}, {"created_at": "Wed Jan 13 02:18:12 +0000 2016", "text": ".@POTUS is right: Progress isn't inevitable. We have a choice between pushing forward\u2014or undoing all the work we've done. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 2482, "source": "TweetDeck", "id_str": "687096275729297409", "is_retweet": false}, {"created_at": "Tue Jul 26 00:07:45 +0000 2016", "text": "We need comprehensive immigration reform to keep families like Karla's together. #DemsInPhilly\nhttps://t.co/mc29cTNnSu", "in_reply_to_screen_name": null, "retweet_count": 2447, "favorite_count": 5733, "source": "Twitter Web Client", "id_str": "757729082498912256", "is_retweet": false}, {"created_at": "Fri Sep 23 22:51:32 +0000 2016", "text": "RT @timkaine: I wouldn't tolerate anyone talking to my daughter like that, and she wouldn't either. https://t.co/ZExu0ZacWS", "in_reply_to_screen_name": null, "retweet_count": 10472, "favorite_count": 0, "source": "TweetDeck", "id_str": "779453173610213376", "is_retweet": true}, {"created_at": "Tue Mar 15 21:01:24 +0000 2016", "text": "Time for some delegate math. Here\u2019s why it matters that Hillary won the Northern Mariana Islands caucus. https://t.co/VB9LnmRYAE", "in_reply_to_screen_name": null, "retweet_count": 500, "favorite_count": 1191, "source": "TweetDeck", "id_str": "709846984757288960", "is_retweet": false}, {"created_at": "Wed Apr 06 03:09:05 +0000 2016", "text": "El \"plan\" de Trump para que M\u00e9xico pague por el muro es rid\u00edculo, ofensivo y castigar\u00eda a familias. No es correcto. https://t.co/iiigMg3Vdd", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 634, "favorite_count": 978, "source": "TweetDeck", "id_str": "717549661444292608", "is_retweet": false}, {"created_at": "Sat Jan 23 14:56:47 +0000 2016", "text": "\"The people I've met can't wait...we need to roll up our sleeves and start making progress right now.\"\nhttps://t.co/QR6J6nZopd", "in_reply_to_screen_name": null, "retweet_count": 1157, "favorite_count": 2209, "source": "Twitter Web Client", "id_str": "690911059603927040", "is_retweet": false}, {"created_at": "Fri Jun 24 14:41:38 +0000 2016", "text": "\"This time of uncertainty only underscores the need for calm, steady, experienced leadership in the White House.\" \u2014Hillary #BrexitVote", "in_reply_to_screen_name": null, "retweet_count": 3447, "favorite_count": 9112, "source": "TweetDeck", "id_str": "746352589407674368", "is_retweet": false}, {"created_at": "Sun Feb 28 18:44:12 +0000 2016", "text": "After becoming the first woman to win the SC primary, Hillary spoke to a packed house. Here's what she had to say: https://t.co/HmZozyjR7t", "in_reply_to_screen_name": null, "retweet_count": 778, "favorite_count": 1920, "source": "TweetDeck", "id_str": "704014251325845504", "is_retweet": false}, {"created_at": "Sun Aug 07 17:15:55 +0000 2016", "text": "\"She will deliver on the most important duty of a president\u2014keeping our nation safe.\" \u2014Michael Morell on Hillary https://t.co/zmI3BOCH9Y", "in_reply_to_screen_name": null, "retweet_count": 2259, "favorite_count": 6058, "source": "TweetDeck", "id_str": "762336483290251264", "is_retweet": false}, {"created_at": "Mon Oct 10 01:50:36 +0000 2016", "text": "RT @timkaine: Donald\u2014you can\u2019t show us your plans because you have none. #Debate", "in_reply_to_screen_name": null, "retweet_count": 7017, "favorite_count": 0, "source": "TweetDeck", "id_str": "785296443162632192", "is_retweet": true}, {"created_at": "Tue Mar 15 18:20:39 +0000 2016", "text": "No one should work full-time and struggle to get by. Idahoans, like all Americans, deserve a living wage. -H \nhttps://t.co/N5BcI0VhXh", "in_reply_to_screen_name": null, "retweet_count": 608, "favorite_count": 1415, "source": "TweetDeck", "id_str": "709806532494553088", "is_retweet": false}, {"created_at": "Tue Oct 11 17:27:31 +0000 2016", "text": "Coming out often takes incredible courage. On #NationalComingOutDay, let's honor that courage by showing LGBT Ameri\u2026 https://t.co/0CJwesashh", "in_reply_to_screen_name": null, "retweet_count": 10491, "favorite_count": 29672, "source": "TweetDeck", "id_str": "785894612686757888", "is_retweet": false}, {"created_at": "Fri Oct 14 16:15:28 +0000 2016", "text": "\"Everyone knows how bright she is and how resilient she is, but...they're going to see how much she cares.\" \u2014\u2026 https://t.co/KEYOkacIVw", "in_reply_to_screen_name": null, "retweet_count": 3919, "favorite_count": 11407, "source": "Media Studio", "id_str": "786963642080227328", "is_retweet": false}, {"created_at": "Thu Sep 08 23:08:27 +0000 2016", "text": "None of us can sit back while the epidemic of gun violence ravages our country. https://t.co/PSLPh3Ihnt", "in_reply_to_screen_name": null, "retweet_count": 1499, "favorite_count": 3634, "source": "TweetDeck", "id_str": "774021612924465160", "is_retweet": false}, {"created_at": "Tue Jul 26 02:05:50 +0000 2016", "text": "Happening now: Watch @FLOTUS speak at the #DemConvention: https://t.co/AQaQTNCxdl", "in_reply_to_screen_name": null, "retweet_count": 713, "favorite_count": 2670, "source": "TweetDeck", "id_str": "757758798723506176", "is_retweet": false}, {"created_at": "Thu Feb 25 18:48:17 +0000 2016", "text": "\u201cWe endorsed her because she endorsed us.\u201d https://t.co/BExsVDdGjb", "in_reply_to_screen_name": null, "retweet_count": 619, "favorite_count": 1315, "source": "TweetDeck", "id_str": "702928116642144256", "is_retweet": false}, {"created_at": "Wed Aug 31 00:07:51 +0000 2016", "text": "RT @timkaine: It\u2019s time to come clean, Donald. Release your tax returns. Explain your business interests. https://t.co/HnHkt4BaGa https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 2921, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "770775070436421632", "is_retweet": true}, {"created_at": "Sun Sep 25 20:44:51 +0000 2016", "text": "RT @JoeBiden: Take it from those who have been there - Trump is not ready for the responsibility of being president: https://t.co/MCmcwcOwju", "in_reply_to_screen_name": null, "retweet_count": 7787, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780146068990357508", "is_retweet": true}, {"created_at": "Sat Oct 08 21:10:15 +0000 2016", "text": "What a woman president would mean to teenage girls: https://t.co/X4kOT0lfv8", "in_reply_to_screen_name": null, "retweet_count": 2758, "favorite_count": 8226, "source": "TweetDeck", "id_str": "784863499998654464", "is_retweet": false}, {"created_at": "Sat Jul 23 00:17:43 +0000 2016", "text": ".@TimKaine is a relentless optimist who believes no problem is unsolvable if you put in the work to solve it.\nhttps://t.co/pui1WFEVpS", "in_reply_to_screen_name": null, "retweet_count": 5001, "favorite_count": 10685, "source": "Twitter Web Client", "id_str": "756644427293007872", "is_retweet": false}, {"created_at": "Mon Aug 15 13:59:15 +0000 2016", "text": "If Donald Trump becomes president, he'll game America's whole tax system to make himself richer. Seriously. https://t.co/s82te3rlRP", "in_reply_to_screen_name": null, "retweet_count": 1852, "favorite_count": 4134, "source": "TweetDeck", "id_str": "765186092597477377", "is_retweet": false}, {"created_at": "Mon Aug 01 18:07:12 +0000 2016", "text": "RT @WhiteHouse: \"No one\u2014no one\u2014has given more for our freedom and security than our Gold Star families.\" \u2014@POTUS at @DAVHQ https://t.co/4xO\u2026", "in_reply_to_screen_name": null, "retweet_count": 1372, "favorite_count": 0, "source": "TweetDeck", "id_str": "760175062632759296", "is_retweet": true}, {"created_at": "Mon Nov 07 21:21:56 +0000 2016", "text": "\"Are you ready to vote tomorrow, Michigan? Are you ready to help get your friends to vote?\u201d \u2014Hillary\u2026 https://t.co/aJGjAvIDNj", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 817, "favorite_count": 2181, "source": "TweetDeck", "id_str": "795738076286959616", "is_retweet": false}, {"created_at": "Sun Aug 21 18:52:11 +0000 2016", "text": "Congrats to Flint, Michigan's @ClaressaShields on her second Olympic gold medal for @TeamUSA. https://t.co/u2RA7GoDiy", "in_reply_to_screen_name": null, "retweet_count": 2618, "favorite_count": 8959, "source": "TweetDeck", "id_str": "767434140497084416", "is_retweet": false}, {"created_at": "Sat Jul 23 00:24:20 +0000 2016", "text": "RT @Hillary_esp: Encantada de anunciar mi candidato a la vicepresidencia @TimKaine quien ha dedicado su vida a luchar por los dem\u00e1s-H https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1900, "favorite_count": 0, "source": "TweetDeck", "id_str": "756646092687671296", "is_retweet": true}, {"created_at": "Fri Feb 05 23:19:27 +0000 2016", "text": "4 days until the NH primary! Join Team #GOTVforHRC\u2014we'll send you one thing to do each day to help Hillary win \u27a1 https://t.co/mIZiG2vV4g", "in_reply_to_screen_name": null, "retweet_count": 261, "favorite_count": 638, "source": "TweetDeck", "id_str": "695748598974308353", "is_retweet": false}, {"created_at": "Fri Sep 30 16:31:06 +0000 2016", "text": "RT @HFA: We'll grow @AmeriCorps from 75,000 annual volunteers to 250,000 and double the scholarship that volunteers earn through their serv\u2026", "in_reply_to_screen_name": null, "retweet_count": 792, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781894148265836544", "is_retweet": true}, {"created_at": "Thu Jun 16 22:16:29 +0000 2016", "text": "Thank you, @SpencerJCox. Despite our differences, if we stand together, hate can never defeat us. https://t.co/3o9wyU1Ref", "in_reply_to_screen_name": null, "retweet_count": 1563, "favorite_count": 4826, "source": "TweetDeck", "id_str": "743567954739142656", "is_retweet": false}, {"created_at": "Mon Aug 15 17:14:15 +0000 2016", "text": "\"No matter where life takes me I always remember I am the granddaughter of a factory worker and the daughter of a small business owner.\"", "in_reply_to_screen_name": null, "retweet_count": 1154, "favorite_count": 4881, "source": "TweetDeck", "id_str": "765235166012932096", "is_retweet": false}, {"created_at": "Sun Feb 28 00:25:38 +0000 2016", "text": "RT if you're standing with her all the way to the White House. https://t.co/wLloeLckNT", "in_reply_to_screen_name": null, "retweet_count": 10128, "favorite_count": 12969, "source": "TweetDeck", "id_str": "703737790304002048", "is_retweet": false}, {"created_at": "Wed Jun 22 19:12:13 +0000 2016", "text": "We can\u2019t let Trump bankrupt America the way he did his casinos.\n\nWe need a new chapter in the American Dream \u2013 and it can\u2019t be Chapter 11.", "in_reply_to_screen_name": null, "retweet_count": 1772, "favorite_count": 5038, "source": "TweetDeck", "id_str": "745695909103702016", "is_retweet": false}, {"created_at": "Sat Oct 22 22:02:44 +0000 2016", "text": "\"When your children and grandchildren ask what you did in 2016...I hope you\u2019ll say you voted for a better America.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2131, "favorite_count": 7171, "source": "TweetDeck", "id_str": "789950140039700482", "is_retweet": false}, {"created_at": "Thu Feb 18 04:05:20 +0000 2016", "text": "We honor Sandra Bland's memory by acting to reform policing practices. Proud to have her mom Geneva on this team. https://t.co/aDNqXUbecH", "in_reply_to_screen_name": null, "retweet_count": 1107, "favorite_count": 2659, "source": "TweetDeck", "id_str": "700169200837529600", "is_retweet": false}, {"created_at": "Thu Sep 08 23:12:48 +0000 2016", "text": "Every child should be able to live up to their God-given potential, no matter where they come from, what they look like, or who they love.", "in_reply_to_screen_name": null, "retweet_count": 1852, "favorite_count": 5993, "source": "TweetDeck", "id_str": "774022705515368448", "is_retweet": false}, {"created_at": "Tue Sep 27 17:40:05 +0000 2016", "text": "\"You can go to https://t.co/tTgeqxNqYm to make sure you are registered. And I hope you all will.\u201d \u2014Hillary #NationalVoterRegistrationDay", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 804, "favorite_count": 1563, "source": "TweetDeck", "id_str": "780824346310877184", "is_retweet": false}, {"created_at": "Tue Feb 16 20:09:35 +0000 2016", "text": "We need a president who will tackle all the issues we face, from systemic racism to LGBT discrimination.\nhttps://t.co/W6FBozyUhL", "in_reply_to_screen_name": null, "retweet_count": 777, "favorite_count": 1594, "source": "Twitter Web Client", "id_str": "699687085356126208", "is_retweet": false}, {"created_at": "Thu Aug 18 19:18:50 +0000 2016", "text": "Donald Trump promised to release his tax returns if he ran for office.\n \nNow? \"It's none of your business.\"\nhttps://t.co/ihL7TlW0Xh", "in_reply_to_screen_name": null, "retweet_count": 5603, "favorite_count": 9404, "source": "Twitter Web Client", "id_str": "766353681885212672", "is_retweet": false}, {"created_at": "Thu Oct 27 00:20:20 +0000 2016", "text": "It's Hillary's birthday! Don't forget to sign her card: https://t.co/yzV8qQJsUk https://t.co/LeJQEH7ndL", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 7900, "source": "TweetDeck", "id_str": "791434319923449856", "is_retweet": false}, {"created_at": "Thu Sep 01 23:58:36 +0000 2016", "text": "RT @JoeBiden: Folks, we've got to elect @HillaryClinton and take back the Senate. Let's roll up our sleeves and get to work. -Joe https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 3508, "favorite_count": 0, "source": "TweetDeck", "id_str": "771497518790283264", "is_retweet": true}, {"created_at": "Tue Oct 25 18:58:54 +0000 2016", "text": "\"I\u2019ve tried to run a campaign based on issues. He\u2019s run a campaign based on insults.\u201d \u2014Hillary on Trump https://t.co/utlmSKmREv", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 677, "favorite_count": 1564, "source": "TweetDeck", "id_str": "790991041117708288", "is_retweet": false}, {"created_at": "Fri Sep 30 15:44:57 +0000 2016", "text": "RT @Hillary_esp: Alicia merece respeto por enfrentar con valent\u00eda los ataques de Trump. \u00bfY \u00e9l tiene el descaro de culparla y decir que \u00e9l l\u2026", "in_reply_to_screen_name": null, "retweet_count": 676, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781882532690272256", "is_retweet": true}, {"created_at": "Fri Sep 30 15:11:59 +0000 2016", "text": "While Donald continues day 5 of his Machado meltdown, we'll be in Florida talking about national service. You'll want to watch.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 5057, "favorite_count": 16292, "source": "TweetDeck", "id_str": "781874238915481600", "is_retweet": false}, {"created_at": "Fri Mar 11 20:17:14 +0000 2016", "text": "Confused about the Democratic primary process? Our delegate strategist breaks it down: https://t.co/c7JPIlS8R5", "in_reply_to_screen_name": null, "retweet_count": 454, "favorite_count": 903, "source": "TweetDeck", "id_str": "708386319764951040", "is_retweet": false}, {"created_at": "Thu Aug 04 22:05:34 +0000 2016", "text": "We know a guy with a binder, @realDonaldTrump. (He might not take your calls, though.) https://t.co/dxmFcISmaz", "in_reply_to_screen_name": null, "retweet_count": 6395, "favorite_count": 15739, "source": "TweetDeck", "id_str": "761322212716609536", "is_retweet": false}, {"created_at": "Tue Jul 26 02:39:51 +0000 2016", "text": "\u201cThat\u2019s Donald Trump\u2019s America\u2014an America of fear and hate.\u201d \u2014@ElizabethforMA #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1522, "favorite_count": 4024, "source": "TweetDeck", "id_str": "757767359843147776", "is_retweet": false}, {"created_at": "Sat Oct 22 21:48:04 +0000 2016", "text": "\"Whether you agree or disagree with me, whether you vote for me or not, I believe we can disagree without being disagreeable.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1497, "favorite_count": 4159, "source": "TweetDeck", "id_str": "789946450176315392", "is_retweet": false}, {"created_at": "Wed Sep 21 18:59:55 +0000 2016", "text": "None of us gets through life alone. We all have to look out for each other and lift each other up.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 845, "favorite_count": 1810, "source": "TweetDeck", "id_str": "778670110319972353", "is_retweet": false}, {"created_at": "Tue Jan 05 00:05:15 +0000 2016", "text": "12-year-old Olivia made good on her promise to be the youngest volunteer at campaign HQ. Watch the video: https://t.co/QfQ8JufaeA", "in_reply_to_screen_name": null, "retweet_count": 309, "favorite_count": 849, "source": "TweetDeck", "id_str": "684163716024262656", "is_retweet": false}, {"created_at": "Tue Sep 27 01:39:14 +0000 2016", "text": "Paying zero in taxes doesn\u2019t make you \"smart.\"\n\nIt makes you a tax evader. https://t.co/g9nQkSRvTB", "in_reply_to_screen_name": null, "retweet_count": 20140, "favorite_count": 34666, "source": "TweetDeck", "id_str": "780582541019475968", "is_retweet": false}, {"created_at": "Fri Sep 30 20:22:31 +0000 2016", "text": "RT @Hillary_esp: A Trump \"le resulta m\u00e1s f\u00e1cil insultar a mujeres que hablar con el presidente de M\u00e9xico sobre construir la muralla\" \u2014Hilla\u2026", "in_reply_to_screen_name": null, "retweet_count": 975, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781952387942678528", "is_retweet": true}, {"created_at": "Fri Oct 07 01:18:57 +0000 2016", "text": "@leedanielsent Thanks, Lee! Great to have you on this team. -H", "in_reply_to_screen_name": "leedanielsent", "retweet_count": 176, "favorite_count": 605, "source": "Twitter for iPhone", "id_str": "784201313257127936", "is_retweet": false}, {"created_at": "Mon Feb 29 17:22:36 +0000 2016", "text": "These mothers are reclaiming the narrative around their children\u2019s deaths. https://t.co/R6dOTR2lC9 https://t.co/Ad7OqoOpO7", "in_reply_to_screen_name": null, "retweet_count": 745, "favorite_count": 1447, "source": "TweetDeck", "id_str": "704356104764071936", "is_retweet": false}, {"created_at": "Thu Aug 11 17:15:59 +0000 2016", "text": "No, Barack Obama is not the founder of ISIS.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 11900, "favorite_count": 21936, "source": "Twitter Web Client", "id_str": "763786048702967808", "is_retweet": false}, {"created_at": "Wed May 25 14:24:10 +0000 2016", "text": "Mientras 5 millones de personas perd\u00edan sus hogares, Trump esperaba enriquecerse de este desplome a costa de ellos.\nhttps://t.co/9trerS1rdR", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 943, "source": "Twitter Web Client", "id_str": "735476558949801984", "is_retweet": false}, {"created_at": "Thu Mar 17 15:14:15 +0000 2016", "text": "It's 2016. Every student should have access to computer science classes.", "in_reply_to_screen_name": null, "retweet_count": 984, "favorite_count": 2863, "source": "TweetDeck", "id_str": "710484400732028929", "is_retweet": false}, {"created_at": "Wed Jun 01 17:07:40 +0000 2016", "text": "The Trump University con says a lot about Trump. If you can't trust him with your personal finances\u2014how can we trust him with our country?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1368, "favorite_count": 2439, "source": "TweetDeck", "id_str": "738054416847245313", "is_retweet": false}, {"created_at": "Mon Oct 03 17:42:49 +0000 2016", "text": "Corporations that benefit from all that America has to offer should feel a sense of responsibility toward shareholders AND workers.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 702, "favorite_count": 2180, "source": "TweetDeck", "id_str": "782999359889768448", "is_retweet": false}, {"created_at": "Thu Jun 16 23:19:10 +0000 2016", "text": "\"It is cruel and terrible that her life was cut short by a violent act of political intolerance\" \u2014Hillary on Jo Cox: https://t.co/FUShBg11it", "in_reply_to_screen_name": null, "retweet_count": 2248, "favorite_count": 5096, "source": "TweetDeck", "id_str": "743583729138995200", "is_retweet": false}, {"created_at": "Tue Jan 05 23:43:46 +0000 2016", "text": "\u201cShe just makes things happen.\u201d \u2014@billclinton on the trail in New Hampshire this week. https://t.co/J29CQWtvh5", "in_reply_to_screen_name": null, "retweet_count": 463, "favorite_count": 1655, "source": "TweetDeck", "id_str": "684520697113231360", "is_retweet": false}, {"created_at": "Sun Oct 23 02:22:21 +0000 2016", "text": "\u201cTwo words give us hope: Madam President.\" \u2014@VogueMagazine https://t.co/RCACiLsFVc https://t.co/aaYwwVFasi", "in_reply_to_screen_name": null, "retweet_count": 4005, "favorite_count": 16529, "source": "TweetDeck", "id_str": "790015475241590784", "is_retweet": false}, {"created_at": "Tue Sep 20 19:22:07 +0000 2016", "text": "It's time to tell @WellsFargo that Wall Street works for Main Street\u2014not the other way around. https://t.co/mYuTS4qgF4", "in_reply_to_screen_name": null, "retweet_count": 1219, "favorite_count": 3160, "source": "TweetDeck", "id_str": "778313305500819456", "is_retweet": false}, {"created_at": "Tue Sep 27 02:24:39 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump says he has better temperament than Hillary Clinton.\n\nFact check: He is Donald Trump. \n\n#debate", "in_reply_to_screen_name": null, "retweet_count": 5531, "favorite_count": 0, "source": "TweetDeck", "id_str": "780593967737999361", "is_retweet": true}, {"created_at": "Sat Aug 06 22:12:53 +0000 2016", "text": "RT @barb_kinney: This is what I saw while photographing @HillaryClinton, @POTUS and more at the #DemConvention. https://t.co/jY0RO1XNJX", "in_reply_to_screen_name": null, "retweet_count": 1071, "favorite_count": 0, "source": "TweetDeck", "id_str": "762048829403389952", "is_retweet": true}, {"created_at": "Mon Aug 15 17:27:55 +0000 2016", "text": "\"A man you can bait with a tweet is not a man you can trust with nuclear weapons.\u201d \u2014Hillary on @realDonaldTrump", "in_reply_to_screen_name": null, "retweet_count": 1218, "favorite_count": 3814, "source": "TweetDeck", "id_str": "765238605837111300", "is_retweet": false}, {"created_at": "Mon Oct 24 01:05:40 +0000 2016", "text": "The president takes an oath to \"preserve, protect, and defend the Constitution.\" \n\nDoes Trump know what's in it? https://t.co/9Mvxq2BAz2", "in_reply_to_screen_name": null, "retweet_count": 1473, "favorite_count": 4046, "source": "TweetDeck", "id_str": "790358562405027840", "is_retweet": false}, {"created_at": "Mon Oct 03 16:22:34 +0000 2016", "text": "RT @BuzzFeedNews: Trump suggests that soldiers who suffer from PTSD aren't \"strong\" https://t.co/YCWn1Xo6bM https://t.co/7bkEIJ5F4q", "in_reply_to_screen_name": null, "retweet_count": 1939, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "782979162793451521", "is_retweet": true}, {"created_at": "Mon Oct 03 03:09:29 +0000 2016", "text": "According to @NYTimes, Trump may contribute less to our military and college students than the undocumented immigrants he wants to deport.", "in_reply_to_screen_name": null, "retweet_count": 11554, "favorite_count": 23439, "source": "TweetDeck", "id_str": "782779577240256512", "is_retweet": false}, {"created_at": "Wed Mar 30 16:26:54 +0000 2016", "text": "Any candidate seriously competing to be president should seriously campaign everywhere. That\u2019s what we\u2019ve done.", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 1634, "source": "TweetDeck", "id_str": "715213723061735424", "is_retweet": false}, {"created_at": "Tue Oct 04 18:34:44 +0000 2016", "text": "RT @NYDailyNews: \"I still have nightmares. And they are very real\" \u2014 A soldier who struggled with PTSD educates @realDonaldTrump https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1506, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783374814102814720", "is_retweet": true}, {"created_at": "Thu Nov 03 03:18:01 +0000 2016", "text": "6 days until the most important election of our lifetimes. https://t.co/3TKJ4H68Kz\n\nJoin Hillary live in Arizona \u2192 https://t.co/rCODSadFN8", "in_reply_to_screen_name": null, "retweet_count": 1757, "favorite_count": 5705, "source": "TweetDeck", "id_str": "794015750902128640", "is_retweet": false}, {"created_at": "Mon Aug 22 20:08:07 +0000 2016", "text": "RT @Refinery29: Read more of @HillaryClinton's message to young women here: https://t.co/HSlUR8bI6n https://t.co/awSbJQzkC6", "in_reply_to_screen_name": null, "retweet_count": 921, "favorite_count": 0, "source": "TweetDeck", "id_str": "767815635334299653", "is_retweet": true}, {"created_at": "Thu Jun 09 17:56:36 +0000 2016", "text": "Honored to have you with me, @POTUS. I'm fired up and ready to go! -H", "in_reply_to_screen_name": null, "retweet_count": 10110, "favorite_count": 27739, "source": "TweetDeck", "id_str": "740965834470916097", "is_retweet": false}, {"created_at": "Wed Oct 19 18:04:54 +0000 2016", "text": "If this man's resume landed on your desk, would you hire him for anything? https://t.co/y8mWl3kkXe", "in_reply_to_screen_name": null, "retweet_count": 1574, "favorite_count": 3683, "source": "TweetDeck", "id_str": "788803123565498369", "is_retweet": false}, {"created_at": "Wed Sep 14 00:07:09 +0000 2016", "text": "RT @TheBriefing2016: Like most of Trump\u2019s plans, the details of his paid leave proposal aren't serious. https://t.co/os0sznIEju", "in_reply_to_screen_name": null, "retweet_count": 1117, "favorite_count": 0, "source": "TweetDeck", "id_str": "775848325199323136", "is_retweet": true}, {"created_at": "Tue Mar 01 12:01:46 +0000 2016", "text": "It\u2019s #SuperTuesday and thousands are heading to the polls. RT to let them know why you're with her! https://t.co/pxI4U0XZ5n", "in_reply_to_screen_name": null, "retweet_count": 2660, "favorite_count": 3949, "source": "TweetDeck", "id_str": "704637754806820868", "is_retweet": false}, {"created_at": "Tue Sep 27 02:06:51 +0000 2016", "text": "When a man is sued for discriminating against black tenants &amp; pushes birtherism, he's giving you an idea of what kind of president he'd be.", "in_reply_to_screen_name": null, "retweet_count": 13617, "favorite_count": 26725, "source": "TweetDeck", "id_str": "780589488271687681", "is_retweet": false}, {"created_at": "Fri Oct 21 01:29:28 +0000 2016", "text": "\"This dinner brings together a collection of sensible, committed, mainstream Republicans, or, as we now call them: Hillary supporters.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2258, "favorite_count": 6202, "source": "TweetDeck", "id_str": "789277391067738113", "is_retweet": false}, {"created_at": "Fri Jun 24 14:06:32 +0000 2016", "text": "Our first task has to be to make sure that the economic uncertainty created by these events does not hurt working families. #BrexitVote", "in_reply_to_screen_name": null, "retweet_count": 2591, "favorite_count": 7466, "source": "TweetDeck", "id_str": "746343756123738112", "is_retweet": false}, {"created_at": "Thu Sep 29 18:27:43 +0000 2016", "text": "No parent should pay more than 10% of their income on quality child care.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 597, "favorite_count": 1774, "source": "TweetDeck", "id_str": "781561107609772032", "is_retweet": false}, {"created_at": "Fri Sep 16 19:24:58 +0000 2016", "text": "\u201cOn November 8, you will decide whether we have a president who believes in science and will fight climate change\u2014or not.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2532, "favorite_count": 6692, "source": "TweetDeck", "id_str": "776864472841453568", "is_retweet": false}, {"created_at": "Wed Nov 02 17:43:38 +0000 2016", "text": "Our choice is between the most qualified candidate in decades\u2014and a man who once started a Twitter war with Cher.\u2026 https://t.co/tDCfb4FPTA", "in_reply_to_screen_name": null, "retweet_count": 4804, "favorite_count": 10921, "source": "TweetDeck", "id_str": "793871203538726912", "is_retweet": false}, {"created_at": "Wed Oct 05 01:27:00 +0000 2016", "text": "RT @timkaine: Trump stood on the debate stage last week and said not paying taxes \u201cmakes me smart.\u201d\n\nGuess that makes all the rest of us st\u2026", "in_reply_to_screen_name": null, "retweet_count": 2411, "favorite_count": 0, "source": "TweetDeck", "id_str": "783478562938613760", "is_retweet": true}, {"created_at": "Thu May 26 17:52:23 +0000 2016", "text": "\u201cWe\u2019ve got to do more to raise families\u2019 incomes.\n \nWe can start by raising the federal minimum wage.\u201d \u2014Hillary https://t.co/U3KALhOd26", "in_reply_to_screen_name": null, "retweet_count": 1786, "favorite_count": 4845, "source": "TweetDeck", "id_str": "735891345915707394", "is_retweet": false}, {"created_at": "Thu Aug 18 13:00:49 +0000 2016", "text": "Does Trump actually pay his fair share in taxes? Until he releases his tax returns, voters won't know for sure. https://t.co/UrZYsUo712", "in_reply_to_screen_name": null, "retweet_count": 2290, "favorite_count": 5048, "source": "TweetDeck", "id_str": "766258549634785280", "is_retweet": false}, {"created_at": "Mon Jan 04 00:06:51 +0000 2016", "text": "There is power in sharing our struggles\u2014and the fight against diseases like Alzheimer\u2019s is one we can win.\nhttps://t.co/88l0UFbTkF", "in_reply_to_screen_name": null, "retweet_count": 552, "favorite_count": 1461, "source": "Twitter Web Client", "id_str": "683801728609681408", "is_retweet": false}, {"created_at": "Mon Jan 18 02:51:53 +0000 2016", "text": "\"There needs to be a concerted effort to address the systemic racism in our criminal justice system.\" #DemDebate\nhttps://t.co/B9NlbPDs1c", "in_reply_to_screen_name": null, "retweet_count": 921, "favorite_count": 1642, "source": "Twitter Web Client", "id_str": "688916691321925634", "is_retweet": false}, {"created_at": "Sun Jul 10 21:34:02 +0000 2016", "text": "When Donald Trump's casinos failed, hundreds of people lost their jobs, but he walked away with millions. https://t.co/WYJGCCVBzu", "in_reply_to_screen_name": null, "retweet_count": 2326, "favorite_count": 4593, "source": "TweetDeck", "id_str": "752254577844649984", "is_retweet": false}, {"created_at": "Sat Jul 30 17:45:01 +0000 2016", "text": "RT @Ann_OLeary: Today in 1965, Pres Johnson signed Medicare &amp; Medicaid into law. We must protect &amp; strengthen these critical programs. That\u2026", "in_reply_to_screen_name": null, "retweet_count": 1171, "favorite_count": 0, "source": "TweetDeck", "id_str": "759444703397969920", "is_retweet": true}, {"created_at": "Wed Jan 20 18:33:49 +0000 2016", "text": "In exactly one year, we\u2019ll make history\u2014or turn back the clock on the progress we've made. https://t.co/7FfyihVoEH", "in_reply_to_screen_name": null, "retweet_count": 1637, "favorite_count": 3692, "source": "TweetDeck", "id_str": "689878511377588224", "is_retweet": false}, {"created_at": "Fri Feb 26 21:34:06 +0000 2016", "text": "Living without discrimination should be a right for all, not a privilege for some. Hear hear, @AbbyWambach. https://t.co/Amwn4r43xt", "in_reply_to_screen_name": null, "retweet_count": 617, "favorite_count": 1367, "source": "TweetDeck", "id_str": "703332234934231042", "is_retweet": false}, {"created_at": "Thu May 19 22:53:03 +0000 2016", "text": "Un recordatorio importante. https://t.co/X2mYv1lOZK", "in_reply_to_screen_name": null, "retweet_count": 397, "favorite_count": 727, "source": "TweetDeck", "id_str": "733430295786049536", "is_retweet": false}, {"created_at": "Fri Jan 29 18:09:43 +0000 2016", "text": "Hillary is handing over her Snapchat account to @billclinton today! Don\u2019t miss it: https://t.co/upx5tZdvKe https://t.co/qOHp1meLsC", "in_reply_to_screen_name": null, "retweet_count": 457, "favorite_count": 1284, "source": "TweetDeck", "id_str": "693133936914997249", "is_retweet": false}, {"created_at": "Fri Sep 30 14:51:40 +0000 2016", "text": "This is...unhinged, even for Trump. A few notes. https://t.co/WURWs6aJ5f", "in_reply_to_screen_name": null, "retweet_count": 12881, "favorite_count": 31533, "source": "TweetDeck", "id_str": "781869125903773696", "is_retweet": false}, {"created_at": "Wed Jun 08 02:37:16 +0000 2016", "text": "This election isn\u2019t about the same old fights between Democrats and Republicans\u2014it\u2019s about who we are as Americans. https://t.co/uHSSsV1S1k", "in_reply_to_screen_name": null, "retweet_count": 3820, "favorite_count": 12330, "source": "TweetDeck", "id_str": "740372092630237184", "is_retweet": false}, {"created_at": "Fri Jun 10 15:15:25 +0000 2016", "text": "We're hiring across the country to bring home a win in November. Apply to join our team: https://t.co/Zy7vPFrsdz\nhttps://t.co/cyOUwBhuIq", "in_reply_to_screen_name": null, "retweet_count": 1277, "favorite_count": 2763, "source": "Twitter Web Client", "id_str": "741287661206392832", "is_retweet": false}, {"created_at": "Wed Aug 31 20:56:19 +0000 2016", "text": "RT @Hillary_esp: El plan de Trump sobre inmigraci\u00f3n ha sido claro: demonizar inmigrantes, \"construir la muralla\", deportar millones. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 3696, "favorite_count": 0, "source": "TweetDeck", "id_str": "771089254978031622", "is_retweet": true}, {"created_at": "Mon Aug 08 22:37:46 +0000 2016", "text": "RT @Quora: Presidential &amp; VP candidates @HillaryClinton &amp; @timkaine are now answering in their Session! https://t.co/jVxzCWBXX3 https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 0, "source": "TweetDeck", "id_str": "762779867452760065", "is_retweet": true}, {"created_at": "Thu Oct 20 01:13:40 +0000 2016", "text": "\"I see no conflict in saving people\u2019s lives and defending the 2nd Amendment.\" #DebateNight https://t.co/SCWq1z3m6C", "in_reply_to_screen_name": null, "retweet_count": 5462, "favorite_count": 10837, "source": "TweetDeck", "id_str": "788911026288943104", "is_retweet": false}, {"created_at": "Tue Aug 30 18:16:51 +0000 2016", "text": "Mike Pence\u2019s governorship has been devastating to Indiana women. Just ask one of them: https://t.co/nu0DSiPQNf", "in_reply_to_screen_name": null, "retweet_count": 1939, "favorite_count": 3248, "source": "TweetDeck", "id_str": "770686736221499392", "is_retweet": false}, {"created_at": "Tue Jan 19 19:50:13 +0000 2016", "text": "Our fight for equality must continue to ensure transgender people are treated with equal rights and dignity. https://t.co/6iBKP2XWtI", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 3095, "source": "TweetDeck", "id_str": "689535352327962624", "is_retweet": false}, {"created_at": "Tue May 17 22:28:55 +0000 2016", "text": "On the International Day Against Homophobia and Transphobia, let's recommit to ending violence and hate against LGBT people worldwide.", "in_reply_to_screen_name": null, "retweet_count": 2930, "favorite_count": 6328, "source": "TweetDeck", "id_str": "732699446790762496", "is_retweet": false}, {"created_at": "Thu Aug 11 17:44:44 +0000 2016", "text": "When Trump visited Detroit on Monday he talked only of failure, poverty, and crime.\n\nHe\u2019s missing so much about what makes Michigan great.", "in_reply_to_screen_name": null, "retweet_count": 2109, "favorite_count": 7875, "source": "TweetDeck", "id_str": "763793285219438592", "is_retweet": false}, {"created_at": "Tue Jun 21 16:32:34 +0000 2016", "text": "\u201cThe full faith and credit of the United States is not something we can just gamble away.\u201d \u2014Hillary on Trump's reckless economic plan", "in_reply_to_screen_name": null, "retweet_count": 993, "favorite_count": 3084, "source": "TweetDeck", "id_str": "745293342741782528", "is_retweet": false}, {"created_at": "Fri Jul 22 22:14:50 +0000 2016", "text": "\"The best way I can sum up what I hope this election will lead to...is: Love trumps hate.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3265, "favorite_count": 9071, "source": "TweetDeck", "id_str": "756613499959275525", "is_retweet": false}, {"created_at": "Sat Oct 22 02:15:17 +0000 2016", "text": "RT @EllisonCampaign: Our diversity is not a weakness. It is our strength. @HillaryClinton understands that. #StrongerTogether. https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 1180, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789651307426635776", "is_retweet": true}, {"created_at": "Thu Sep 15 19:47:43 +0000 2016", "text": "Hillary\u2019s running for people who are trying to do hard things and need a helping hand, people like Janelle Turner. https://t.co/Dg4gQwOt1C", "in_reply_to_screen_name": null, "retweet_count": 2123, "favorite_count": 5722, "source": "Twitter Web Client", "id_str": "776507809559085057", "is_retweet": false}, {"created_at": "Tue Aug 02 15:32:27 +0000 2016", "text": "12 moments from the past week that will make you proud to be a Democrat: https://t.co/rNqHyg5CrL", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 3611, "source": "TweetDeck", "id_str": "760498503755960320", "is_retweet": false}, {"created_at": "Sun Sep 18 01:11:41 +0000 2016", "text": "Tune in now to watch Hillary speak to the @OfficialCBC: https://t.co/NJuB7JkyDL", "in_reply_to_screen_name": null, "retweet_count": 667, "favorite_count": 2216, "source": "TweetDeck", "id_str": "777314115996020736", "is_retweet": false}, {"created_at": "Thu Jul 28 03:00:05 +0000 2016", "text": "\"After a century of trying, we declared that health care in America is not a privilege for a few. It is a right for everybody.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1099, "favorite_count": 3412, "source": "TweetDeck", "id_str": "758497226318606336", "is_retweet": false}, {"created_at": "Fri Oct 28 19:17:43 +0000 2016", "text": "Trump wants to give trillions in tax cuts to millionaires and corporations. It\u2019s trickle-down economics on steroids. https://t.co/qqEnK144FO", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1040, "favorite_count": 2098, "source": "TweetDeck", "id_str": "792082939068768256", "is_retweet": false}, {"created_at": "Mon Oct 31 18:37:11 +0000 2016", "text": "With just 8 days until Election Day, Hillary is speaking in Ohio. Join her live: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 1130, "favorite_count": 4310, "source": "TweetDeck", "id_str": "793159901954576384", "is_retweet": false}, {"created_at": "Thu Jan 07 14:00:37 +0000 2016", "text": "Anyone who wants to be president should have a plan to make a real difference for Americans with autism. https://t.co/U15k05EOV0", "in_reply_to_screen_name": null, "retweet_count": 561, "favorite_count": 1404, "source": "Twitter for iPhone", "id_str": "685098717670686720", "is_retweet": false}, {"created_at": "Tue Apr 26 20:38:13 +0000 2016", "text": "We are not a post-racial society. We still struggle with racism\u2014and it's not only wrong, it's holding us back.\nhttps://t.co/MnjdPHuYdO", "in_reply_to_screen_name": null, "retweet_count": 1132, "favorite_count": 2281, "source": "Twitter Web Client", "id_str": "725061441712099329", "is_retweet": false}, {"created_at": "Wed May 04 14:12:33 +0000 2016", "text": "There's only one candidate left who can stop a Trump presidency.\n\nChip in now if you've got Hillary's back: https://t.co/HkpiIXhekF", "in_reply_to_screen_name": null, "retweet_count": 1072, "favorite_count": 2692, "source": "TweetDeck", "id_str": "727863490757668864", "is_retweet": false}, {"created_at": "Wed Mar 09 02:39:36 +0000 2016", "text": "\u201cEvery child should have a good school and a great teacher, no matter what ZIP code they\u2019re from.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1319, "favorite_count": 3165, "source": "TweetDeck", "id_str": "707395380233818112", "is_retweet": false}, {"created_at": "Sun Feb 07 04:20:06 +0000 2016", "text": "3 days until NH heads to the polls! Here\u2019s one thing you can do right now to help Hillary\u2014no matter where you live. https://t.co/9LIIi7iiZc", "in_reply_to_screen_name": null, "retweet_count": 2920, "favorite_count": 1265, "source": "TweetDeck", "id_str": "696186649798004736", "is_retweet": false}, {"created_at": "Wed Apr 13 14:13:06 +0000 2016", "text": "\u201cNew York Democrats...have in Clinton a superprepared warrior realist.\u201d \u2014@NYDailyNews endorsing Hillary: https://t.co/nOorRZ5hBX", "in_reply_to_screen_name": null, "retweet_count": 1167, "favorite_count": 2282, "source": "TweetDeck", "id_str": "720253482205360128", "is_retweet": false}, {"created_at": "Fri Nov 04 18:24:17 +0000 2016", "text": "We can\u2019t. https://t.co/4Xf8kqOnea", "in_reply_to_screen_name": null, "retweet_count": 16886, "favorite_count": 43973, "source": "TweetDeck", "id_str": "794606208233652224", "is_retweet": false}, {"created_at": "Thu Jan 28 14:30:31 +0000 2016", "text": "Join thousands of people saying #ImWithHer before the Iowa caucus: https://t.co/4n7jlSQLW2", "in_reply_to_screen_name": null, "retweet_count": 375, "favorite_count": 823, "source": "TweetDeck", "id_str": "692716385970057219", "is_retweet": false}, {"created_at": "Tue Oct 11 00:05:29 +0000 2016", "text": "RT @dougmillsnyt: .@HillaryClinton on the campus of The Ohio State University. https://t.co/gRpPGuZwDk", "in_reply_to_screen_name": null, "retweet_count": 6454, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785632375635976196", "is_retweet": true}, {"created_at": "Wed Jan 27 19:44:18 +0000 2016", "text": "5 days to Iowa! https://t.co/h3XKnK2KBH", "in_reply_to_screen_name": null, "retweet_count": 2770, "favorite_count": 1079, "source": "TweetDeck", "id_str": "692432965524131842", "is_retweet": false}, {"created_at": "Wed Apr 13 17:10:42 +0000 2016", "text": "\u201cWhat happened in Flint would never have happened in a wealthy, white suburb of Detroit.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 702, "favorite_count": 1691, "source": "TweetDeck", "id_str": "720298177937539073", "is_retweet": false}, {"created_at": "Sat Jul 23 17:11:20 +0000 2016", "text": "Live from Miami: Hillary takes the stage in her first appearance with her running mate, @TimKaine \u2192 https://t.co/9CipfTScI9", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 1507, "source": "TweetDeck", "id_str": "756899510064975872", "is_retweet": false}, {"created_at": "Mon Feb 22 18:05:43 +0000 2016", "text": "What\u2019s at stake in this election is whether or not we\u2019re going to help every kid reach their potential.\nhttps://t.co/8tbBPtVz8k", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 1563, "source": "Twitter Web Client", "id_str": "701830242680180736", "is_retweet": false}, {"created_at": "Tue Feb 09 21:59:03 +0000 2016", "text": "The New Hampshire cold won\u2019t stop us! Say you\u2019re with her: https://t.co/QsOMLc1aCX https://t.co/fr8M7yuMOe", "in_reply_to_screen_name": null, "retweet_count": 459, "favorite_count": 1224, "source": "TweetDeck", "id_str": "697177917734846464", "is_retweet": false}, {"created_at": "Thu May 12 15:12:11 +0000 2016", "text": "\"I\u2019ve been called many things by many people. 'Quitter' is not one of them.\" #TBT https://t.co/wUjSOxc85I", "in_reply_to_screen_name": null, "retweet_count": 786, "favorite_count": 2066, "source": "TweetDeck", "id_str": "730777600902242304", "is_retweet": false}, {"created_at": "Thu Jan 14 15:55:28 +0000 2016", "text": ".@lorellapraeli on the human cost of our broken immigration system and her mother's first trip to Peru in 16 years. https://t.co/9eKO6wGQy2", "in_reply_to_screen_name": null, "retweet_count": 214, "favorite_count": 472, "source": "TweetDeck", "id_str": "687664336773509121", "is_retweet": false}, {"created_at": "Tue Nov 08 21:02:19 +0000 2016", "text": "Our neighbors in battleground states need your help. Make calls to remind Hillary supporters to go vote: https://t.co/Iyboc4TNeA", "in_reply_to_screen_name": null, "retweet_count": 1802, "favorite_count": 6181, "source": "TweetDeck", "id_str": "796095529637789696", "is_retweet": false}, {"created_at": "Mon May 09 16:03:20 +0000 2016", "text": "When Hillary introduced this innovative preschool program to Arkansas families, it spread across the nation.\nhttps://t.co/d4IJXAURGi", "in_reply_to_screen_name": null, "retweet_count": 1796, "favorite_count": 3153, "source": "Twitter Web Client", "id_str": "729703306021326848", "is_retweet": false}, {"created_at": "Wed Jul 27 22:42:06 +0000 2016", "text": "\"This is not merely unacceptable or wrong, though it is both. What happened in Flint is immoral.\" \u2014Hillary\nhttps://t.co/YLJqE1Kz6Q", "in_reply_to_screen_name": null, "retweet_count": 1256, "favorite_count": 3301, "source": "Twitter Web Client", "id_str": "758432301353017344", "is_retweet": false}, {"created_at": "Mon Nov 07 02:18:27 +0000 2016", "text": "\u201cThis election is about you\u2026\n\nyour dreams,\nyour aspirations,\nyour hopes,\nyour family,\nyour community.\u201d \u2014Hillary\n\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1767, "favorite_count": 4674, "source": "TweetDeck", "id_str": "795450312328880129", "is_retweet": false}, {"created_at": "Sun Jun 26 21:12:25 +0000 2016", "text": "\"There are more mass shootings in the United States than any other country in the world...We cannot accept this. Not now\u2014not ever.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2109, "favorite_count": 6759, "source": "TweetDeck", "id_str": "747175708800188417", "is_retweet": false}, {"created_at": "Mon Aug 08 19:45:28 +0000 2016", "text": "We've got to stand up against climate deniers.\n\nThere isn't a problem we can't solve if we put our minds to it: https://t.co/2KQRq50PP8", "in_reply_to_screen_name": null, "retweet_count": 1130, "favorite_count": 3598, "source": "TweetDeck", "id_str": "762736507279052801", "is_retweet": false}, {"created_at": "Mon Jul 18 17:04:57 +0000 2016", "text": "\"Ending systemic racism requires contributions from us all, especially those of us who haven\u2019t experienced it ourselves.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1469, "favorite_count": 3951, "source": "TweetDeck", "id_str": "755085964314308609", "is_retweet": false}, {"created_at": "Fri Jun 17 12:39:27 +0000 2016", "text": "Helpful. https://t.co/zB9dY1Of3P", "in_reply_to_screen_name": null, "retweet_count": 1495, "favorite_count": 6382, "source": "Twitter Web Client", "id_str": "743785125918420992", "is_retweet": false}, {"created_at": "Tue Jul 26 01:58:47 +0000 2016", "text": "RT @HFA: \"Let us declare again, that we will be a free people. Free from fear and intimidation.\" \u2014@CoryBooker #DemsInPhilly https://t.co/6B\u2026", "in_reply_to_screen_name": null, "retweet_count": 1328, "favorite_count": 0, "source": "TweetDeck", "id_str": "757757024482582528", "is_retweet": true}, {"created_at": "Fri Sep 30 16:54:10 +0000 2016", "text": "RT @HillaryforFL: \"39 days left. Do we lift each other up or do we tear each other down?\" \u2014Hillary https://t.co/99CFjfLtnk", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781899954126225408", "is_retweet": true}, {"created_at": "Wed Sep 07 20:18:47 +0000 2016", "text": "The U.S. presidency isn't an entry-level job.\n\nHow Hillary's time as our secretary of state shows she's ready: https://t.co/6akMEX6pRs", "in_reply_to_screen_name": null, "retweet_count": 3439, "favorite_count": 8132, "source": "Twitter Web Client", "id_str": "773616523990761472", "is_retweet": false}, {"created_at": "Thu Jan 28 18:54:24 +0000 2016", "text": "\u201cIt\u2019s clear she knows how to get things accomplished in these crazy political times.\" \u2014@IAStartingLine https://t.co/H8SNRrEIXW", "in_reply_to_screen_name": null, "retweet_count": 326, "favorite_count": 781, "source": "TweetDeck", "id_str": "692782797535207424", "is_retweet": false}, {"created_at": "Tue Jul 19 02:10:05 +0000 2016", "text": "Republicans have a lot of nice things to say\u2014when it's not an election year. Thanks, Mayor Giuliani. #RNCinCLE https://t.co/h24PKVqPFE", "in_reply_to_screen_name": null, "retweet_count": 15578, "favorite_count": 28966, "source": "TweetDeck", "id_str": "755223154168066050", "is_retweet": false}, {"created_at": "Fri Sep 30 16:39:58 +0000 2016", "text": "National service has always been a bipartisan goal. When it's hard to find common ground, it\u2019s important we come together where we can.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 697, "favorite_count": 2320, "source": "TweetDeck", "id_str": "781896381594120194", "is_retweet": false}, {"created_at": "Mon Aug 15 17:05:35 +0000 2016", "text": ".@JoeBiden\u2019s hitting the trail with Hillary in Scranton, folks. Tune in now: https://t.co/zFvHUT7UQ2 https://t.co/xbqUILQKGB", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 2229, "source": "TweetDeck", "id_str": "765232984031109120", "is_retweet": false}, {"created_at": "Fri Oct 28 22:12:34 +0000 2016", "text": "\"I want to be a president for everyone in this country\u2014Democrats, Republicans, Independents\u2026I\u2019m going to work just as hard for everybody.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1250, "favorite_count": 3189, "source": "TweetDeck", "id_str": "792126942094950408", "is_retweet": false}, {"created_at": "Wed Jan 13 03:21:45 +0000 2016", "text": "We can't let Republicans rip away @POTUS\u2019 progress. Add your name if you agree: https://t.co/3r4JckRjLq", "in_reply_to_screen_name": null, "retweet_count": 922, "favorite_count": 2819, "source": "TweetDeck", "id_str": "687112266974650369", "is_retweet": false}, {"created_at": "Fri Mar 18 17:01:53 +0000 2016", "text": "Empezar y manejar un negocio peque\u00f1o deber\u00eda ser m\u00e1s f\u00e1cil.", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 787, "source": "TweetDeck", "id_str": "710873873659666433", "is_retweet": false}, {"created_at": "Mon Oct 17 00:54:59 +0000 2016", "text": "RT @RaquelWillis_: If you need motivation to vote, here's Beyonc\u00e9 giving an impromptu word about #Election2016. https://t.co/78AaQDWkc3", "in_reply_to_screen_name": null, "retweet_count": 11320, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787819158444572672", "is_retweet": true}, {"created_at": "Tue Oct 18 16:25:29 +0000 2016", "text": "RT @voguemagazine: Vogue endorses @HillaryClinton for president of the United States: https://t.co/4zstNuUu16 https://t.co/k9tS50Gxy5", "in_reply_to_screen_name": null, "retweet_count": 5654, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788415716559032320", "is_retweet": true}, {"created_at": "Tue Oct 04 22:36:53 +0000 2016", "text": "Mike Pence has actually signed into law hateful policies like those touted by Donald Trump. https://t.co/0d5C1tBxmc", "in_reply_to_screen_name": null, "retweet_count": 1196, "favorite_count": 2278, "source": "TweetDeck", "id_str": "783435753141440513", "is_retweet": false}, {"created_at": "Wed Oct 12 18:13:43 +0000 2016", "text": "Progress is on the ballot. https://t.co/tTgeqy51PU https://t.co/6zg9Lr2wJJ", "in_reply_to_screen_name": null, "retweet_count": 3177, "favorite_count": 6753, "source": "Media Studio", "id_str": "786268627691372544", "is_retweet": false}, {"created_at": "Wed May 25 18:05:21 +0000 2016", "text": "Donald Trump doesn't seem to actually care about making America great so much as he seems to care about making himself look great.", "in_reply_to_screen_name": null, "retweet_count": 1966, "favorite_count": 4717, "source": "TweetDeck", "id_str": "735532221956788225", "is_retweet": false}, {"created_at": "Thu Jul 28 03:29:41 +0000 2016", "text": "\u201cDemocracy isn\u2019t a spectator sport. America isn\u2019t about 'yes he will.' It\u2019s about 'yes we can.\u2019\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 4681, "favorite_count": 10668, "source": "TweetDeck", "id_str": "758504673972191232", "is_retweet": false}, {"created_at": "Mon Mar 07 23:42:31 +0000 2016", "text": "Roe v. Wade and the Constitution guarantee women the right to safe, legal abortion. Politicians have no right to restrict it. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1599, "favorite_count": 3732, "source": "TweetDeck", "id_str": "706988429586898947", "is_retweet": false}, {"created_at": "Wed Oct 05 13:17:21 +0000 2016", "text": "Even Mike Pence couldn\u2019t defend the terrible things Trump\u2019s said and done\u2014so instead, he lied about them. https://t.co/XrNPaOVdm5", "in_reply_to_screen_name": null, "retweet_count": 2554, "favorite_count": 5787, "source": "TweetDeck", "id_str": "783657327396265985", "is_retweet": false}, {"created_at": "Mon Nov 07 12:57:58 +0000 2016", "text": "Tomorrow caps an amazing journey, but the work we have to do is just beginning. https://t.co/ulXFcHXcTS", "in_reply_to_screen_name": null, "retweet_count": 2810, "favorite_count": 8330, "source": "TweetDeck", "id_str": "795611251602821120", "is_retweet": false}, {"created_at": "Wed Jan 20 02:16:21 +0000 2016", "text": "Sarah Palin's got Trump's back. If you want to keep Republicans like them out of the White House, add your name now: https://t.co/sL83uGwu1q", "in_reply_to_screen_name": null, "retweet_count": 1065, "favorite_count": 2742, "source": "TweetDeck", "id_str": "689632527309479938", "is_retweet": false}, {"created_at": "Sat Feb 20 21:04:34 +0000 2016", "text": "Nevada: If you\u2019re in line and have a question or need help at your caucus location, call 1-702-550-8008. #NVDemsCaucus", "in_reply_to_screen_name": null, "retweet_count": 489, "favorite_count": 916, "source": "Twitter Web Client", "id_str": "701150474007945218", "is_retweet": false}, {"created_at": "Sun Oct 30 16:32:06 +0000 2016", "text": "Yesterday, FBI Director Comey bowed to partisan pressure and released a vague and inappropriate letter to Congress.\u2026 https://t.co/BNDgVzlTyi", "in_reply_to_screen_name": null, "retweet_count": 16850, "favorite_count": 27808, "source": "Media Studio", "id_str": "792766036772872192", "is_retweet": false}, {"created_at": "Sun Oct 23 13:13:48 +0000 2016", "text": "Newspapers across the country are almost exclusively endorsing Hillary over Trump. https://t.co/gaQgj0Xyjg", "in_reply_to_screen_name": null, "retweet_count": 2138, "favorite_count": 7490, "source": "TweetDeck", "id_str": "790179415049302016", "is_retweet": false}, {"created_at": "Mon Jun 27 15:18:23 +0000 2016", "text": "Trump rails against other countries and talks about making America great, but his own products are made in places that aren\u2019t named America.", "in_reply_to_screen_name": null, "retweet_count": 2268, "favorite_count": 5678, "source": "TweetDeck", "id_str": "747449000857636864", "is_retweet": false}, {"created_at": "Sun Mar 13 14:11:42 +0000 2016", "text": "You shouldn\u2019t have to grow up in a wealthy family to have music and art classes available at your school.", "in_reply_to_screen_name": null, "retweet_count": 3207, "favorite_count": 8215, "source": "Twitter for iPhone", "id_str": "709019106192842752", "is_retweet": false}, {"created_at": "Thu Jan 28 03:46:27 +0000 2016", "text": "Grateful to have a moment of reflection and community with faith leaders from across the country in Philadelphia today. Thank you all. -H", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1735, "source": "TweetDeck", "id_str": "692554304369090562", "is_retweet": false}, {"created_at": "Mon Oct 17 22:17:56 +0000 2016", "text": "Election Day is almost here. Make a plan to join your friends and millions across the country to vote on November 8\u2026 https://t.co/qo68WvJuCB", "in_reply_to_screen_name": null, "retweet_count": 2192, "favorite_count": 5683, "source": "TweetDeck", "id_str": "788142024671301638", "is_retweet": false}, {"created_at": "Wed Nov 02 22:49:04 +0000 2016", "text": "Hillary is in Las Vegas, just 6 days from Election Day. Tune in to watch her live: https://t.co/dkg7pwiNMt", "in_reply_to_screen_name": null, "retweet_count": 1164, "favorite_count": 4309, "source": "TweetDeck", "id_str": "793948064591609856", "is_retweet": false}, {"created_at": "Mon Feb 08 20:17:11 +0000 2016", "text": "This campaign is about building the kind of future we want the next generations to come into.\nhttps://t.co/zOkDSS3dj0", "in_reply_to_screen_name": null, "retweet_count": 506, "favorite_count": 814, "source": "Twitter Web Client", "id_str": "696789897579892736", "is_retweet": false}, {"created_at": "Sat Jun 11 18:11:56 +0000 2016", "text": "Trump University: Pad Donald's pockets and put your own finances at risk\u2014all for the low price of $35,000!\nhttps://t.co/6NHo9RTyHz", "in_reply_to_screen_name": null, "retweet_count": 4316, "favorite_count": 7186, "source": "Twitter Web Client", "id_str": "741694471000072192", "is_retweet": false}, {"created_at": "Tue Mar 01 22:01:04 +0000 2016", "text": "Just a few hours left, Super Tuesday voters! Confirm your polling place here and head over. https://t.co/E6qaFqOOtC https://t.co/HoF8IfH1os", "in_reply_to_screen_name": null, "retweet_count": 710, "favorite_count": 1320, "source": "TweetDeck", "id_str": "704788573552287748", "is_retweet": false}, {"created_at": "Wed Apr 20 02:24:46 +0000 2016", "text": "\u201cThe race for the Democratic nomination is in the home stretch and our goal is in sight.\u201d https://t.co/7F8wqQhCAl", "in_reply_to_screen_name": null, "retweet_count": 1068, "favorite_count": 3284, "source": "TweetDeck", "id_str": "722611938233098244", "is_retweet": false}, {"created_at": "Tue May 31 16:23:53 +0000 2016", "text": "\"I want to be sure that it is Hillary Clinton who takes the oath of office, not Donald Trump.\" \u2014 @JerryBrownGov: https://t.co/NDAUs6a8bp", "in_reply_to_screen_name": null, "retweet_count": 1207, "favorite_count": 3076, "source": "TweetDeck", "id_str": "737681012713525249", "is_retweet": false}, {"created_at": "Fri Oct 28 19:15:06 +0000 2016", "text": "Our kids deserve good schools with good teachers, no matter what ZIP code they live in. https://t.co/DSYABCknlj", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 770, "favorite_count": 1636, "source": "TweetDeck", "id_str": "792082281271820289", "is_retweet": false}, {"created_at": "Tue Jan 26 19:10:09 +0000 2016", "text": "The Zika virus underscores the importance of public health education, funding and research. What you should know: https://t.co/YpwmVnkr0J -H", "in_reply_to_screen_name": null, "retweet_count": 667, "favorite_count": 922, "source": "TweetDeck", "id_str": "692061982833377280", "is_retweet": false}, {"created_at": "Sat Jul 30 20:34:33 +0000 2016", "text": "Our Commander-in-Chief shouldn\u2019t insult and deride our generals, retired or otherwise.\n\nThat really should go without saying.", "in_reply_to_screen_name": null, "retweet_count": 5975, "favorite_count": 21136, "source": "TweetDeck", "id_str": "759487366277001216", "is_retweet": false}, {"created_at": "Wed Feb 17 17:08:26 +0000 2016", "text": "\"She was making points about privilege that minorities always make, but it packed such a different punch.\" -@rembert https://t.co/0h0A9uUib6", "in_reply_to_screen_name": null, "retweet_count": 543, "favorite_count": 1009, "source": "TweetDeck", "id_str": "700003887294652416", "is_retweet": false}, {"created_at": "Tue May 10 15:02:06 +0000 2016", "text": "No family should have to pay more than 10% of its income on child care. https://t.co/HDlh3ddbb4", "in_reply_to_screen_name": null, "retweet_count": 687, "favorite_count": 1372, "source": "TweetDeck", "id_str": "730050287000489988", "is_retweet": false}, {"created_at": "Fri Feb 05 21:35:27 +0000 2016", "text": "Families need a president who will deliver results. We can\u2019t wait for promises that can\u2019t be kept. #DemDebate\nhttps://t.co/EFidyDBRmt", "in_reply_to_screen_name": null, "retweet_count": 638, "favorite_count": 1269, "source": "Twitter Web Client", "id_str": "695722427125370880", "is_retweet": false}, {"created_at": "Wed Jul 13 21:23:28 +0000 2016", "text": "\"We need a leader who will push us all to make our society more tolerant, inclusive, and fair.\" \u2014@MarkKellyTyler https://t.co/UkzFXzbklO", "in_reply_to_screen_name": null, "retweet_count": 599, "favorite_count": 1607, "source": "TweetDeck", "id_str": "753339081388593152", "is_retweet": false}, {"created_at": "Wed May 25 18:50:40 +0000 2016", "text": "Trump's wall on the border would likely cost at least $25 billion. \n\nSome things we could do instead: https://t.co/RDbkkyVNB6", "in_reply_to_screen_name": null, "retweet_count": 3250, "favorite_count": 5335, "source": "TweetDeck", "id_str": "735543623136186368", "is_retweet": false}, {"created_at": "Sun Jan 03 17:06:42 +0000 2016", "text": "Americans need a president who has what it takes to get the job done. https://t.co/L6b9pNodQ2", "in_reply_to_screen_name": null, "retweet_count": 717, "favorite_count": 2006, "source": "TweetDeck", "id_str": "683695996136755200", "is_retweet": false}, {"created_at": "Fri Jun 10 17:05:08 +0000 2016", "text": "Ever notice the politicians who oppose birth control and abortion also oppose policies that make it easier to raise a child\u2014like paid leave?", "in_reply_to_screen_name": null, "retweet_count": 4830, "favorite_count": 11546, "source": "TweetDeck", "id_str": "741315271655317504", "is_retweet": false}, {"created_at": "Sat Jul 16 13:56:36 +0000 2016", "text": "Donald Trump:\nAlways divisive.\nNot so decisive.\nhttps://t.co/4EFCQjT5FW", "in_reply_to_screen_name": null, "retweet_count": 3192, "favorite_count": 5876, "source": "Twitter Web Client", "id_str": "754313788938072064", "is_retweet": false}, {"created_at": "Mon Oct 10 01:26:00 +0000 2016", "text": "If Hillary tried to fact-check Donald in real time, she wouldn't have time for anything else. So, here: https://t.co/NLPH8sbAGn #debate", "in_reply_to_screen_name": null, "retweet_count": 4302, "favorite_count": 6981, "source": "TweetDeck", "id_str": "785290249186443264", "is_retweet": false}, {"created_at": "Thu Jan 21 02:53:17 +0000 2016", "text": "\"I'm fighting for everyone who's ever been knocked down but refused to be knocked out.\"\nhttps://t.co/Y9f4dIFlLW", "in_reply_to_screen_name": null, "retweet_count": 1327, "favorite_count": 2534, "source": "Twitter Web Client", "id_str": "690004205910695936", "is_retweet": false}, {"created_at": "Sun Oct 23 01:36:55 +0000 2016", "text": "Just 17 days left. Join Hillary and @TimKaine on the trail in Philadelphia: https://t.co/jJfSVzYjAZ", "in_reply_to_screen_name": null, "retweet_count": 852, "favorite_count": 4345, "source": "TweetDeck", "id_str": "790004042659426305", "is_retweet": false}, {"created_at": "Thu Jul 28 02:33:36 +0000 2016", "text": "RT @timkaine: \"Folks, you cannot believe one word that comes out of Donald Trump's mouth.\"", "in_reply_to_screen_name": null, "retweet_count": 1346, "favorite_count": 0, "source": "TweetDeck", "id_str": "758490562701864960", "is_retweet": true}, {"created_at": "Sat Jun 18 15:42:24 +0000 2016", "text": "If your business or organization is hiring and needs someone to get the job done, hire a veteran.\nhttps://t.co/sKlNiCFtMM", "in_reply_to_screen_name": null, "retweet_count": 1789, "favorite_count": 5114, "source": "Twitter Web Client", "id_str": "744193553375498241", "is_retweet": false}, {"created_at": "Wed Jun 22 19:07:27 +0000 2016", "text": "\u201cProgress is possible \u2026 I know Republicans and Democrats can work together, because I\u2019ve done it.\u201d \u2014Hillary https://t.co/a21aYF7NUj", "in_reply_to_screen_name": null, "retweet_count": 860, "favorite_count": 2426, "source": "TweetDeck", "id_str": "745694706798043137", "is_retweet": false}, {"created_at": "Sat Jul 30 20:11:16 +0000 2016", "text": "Don\u2019t believe anyone who says \u201cI alone can fix it.\u201d\n\nThose were actually Donald Trump\u2019s words at the Republican convention in Cleveland.", "in_reply_to_screen_name": null, "retweet_count": 2046, "favorite_count": 8422, "source": "TweetDeck", "id_str": "759481506612047872", "is_retweet": false}, {"created_at": "Wed Jun 08 02:49:18 +0000 2016", "text": "We made history tonight\u2014but we have more work to do. Chip in if you've got Hillary's back: https://t.co/iQy1FYwUkM", "in_reply_to_screen_name": null, "retweet_count": 1368, "favorite_count": 4229, "source": "TweetDeck", "id_str": "740375119684591616", "is_retweet": false}, {"created_at": "Tue Jul 26 02:21:30 +0000 2016", "text": "\"We need to pour every last ounce of our passion and our strength and our love for this country into electing Hillary Clinton.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2635, "favorite_count": 8127, "source": "TweetDeck", "id_str": "757762738433191936", "is_retweet": false}, {"created_at": "Tue Jul 12 15:52:03 +0000 2016", "text": "\"We produced, by far, the most progressive platform in the history of the Democratic Party.\" \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 797, "favorite_count": 2297, "source": "TweetDeck", "id_str": "752893292405219328", "is_retweet": false}, {"created_at": "Fri Mar 04 20:14:30 +0000 2016", "text": "\"If you cheat your employees, exploit your customers, pollute our environment, or rip off taxpayers, we will hold you accountable.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 932, "favorite_count": 2328, "source": "TweetDeck", "id_str": "705848918282792960", "is_retweet": false}, {"created_at": "Tue Aug 16 00:13:04 +0000 2016", "text": "\"The place of your birth should never be a barrier.\" A letter to young undocumented people on DACA's anniversary: https://t.co/4dDrLvefeM", "in_reply_to_screen_name": null, "retweet_count": 1244, "favorite_count": 3490, "source": "TweetDeck", "id_str": "765340564569161728", "is_retweet": false}, {"created_at": "Wed May 04 20:00:15 +0000 2016", "text": "Stonewall: the birthplace of a movement, and soon a national monument for equality. https://t.co/Yb1u1tUcR4 #ThanksObama", "in_reply_to_screen_name": null, "retweet_count": 1175, "favorite_count": 2385, "source": "TweetDeck", "id_str": "727950990863958021", "is_retweet": false}, {"created_at": "Mon Aug 29 20:09:35 +0000 2016", "text": "Too many Americans living with mental illness have been left to face it on their own. https://t.co/KyCFVylvB8 https://t.co/rayf9ADJKl", "in_reply_to_screen_name": null, "retweet_count": 1968, "favorite_count": 4304, "source": "TweetDeck", "id_str": "770352719060238336", "is_retweet": false}, {"created_at": "Wed Sep 21 18:55:58 +0000 2016", "text": "RT @HFA: Not that long ago, if you had a disability, it defined your entire life. Basic, essential things that others could do, you couldn\u2019\u2026", "in_reply_to_screen_name": null, "retweet_count": 489, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778669114063806464", "is_retweet": true}, {"created_at": "Tue Feb 02 04:57:48 +0000 2016", "text": "Hillary agradece desde el fondo de su coraz\u00f3n el esfuerzo de todos en Iowa.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 383, "favorite_count": 850, "source": "Twitter Web Client", "id_str": "694384200074579968", "is_retweet": false}, {"created_at": "Fri Nov 04 21:23:33 +0000 2016", "text": "It\u2019s on all of us to pay it forward\u2014to make sure every kid in every zip code can get ahead. https://t.co/Nt2tQJObvL", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 706, "favorite_count": 1511, "source": "TweetDeck", "id_str": "794651321639010304", "is_retweet": false}, {"created_at": "Mon Oct 10 02:13:14 +0000 2016", "text": "RT @TheBriefing2016: Given whatever that was...shouldn't be surprising that this is Donald Trump's actual ISIS plan. #debate https://t.co/v\u2026", "in_reply_to_screen_name": null, "retweet_count": 2075, "favorite_count": 0, "source": "TweetDeck", "id_str": "785302136246657026", "is_retweet": true}, {"created_at": "Mon Oct 10 04:05:06 +0000 2016", "text": "Tonight, Trump dismissed his comments about groping women as \"locker room talk.\"\n\nBut words matter. https://t.co/u4wo2Leyol", "in_reply_to_screen_name": null, "retweet_count": 4915, "favorite_count": 14572, "source": "TweetDeck", "id_str": "785330289304305667", "is_retweet": false}, {"created_at": "Fri Jul 08 22:21:31 +0000 2016", "text": "\"I will bring law enforcement and communities together to develop national guidelines on the use of force by police officers.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1701, "favorite_count": 4720, "source": "TweetDeck", "id_str": "751541751521869824", "is_retweet": false}, {"created_at": "Wed Sep 14 16:47:00 +0000 2016", "text": "12. How can we be sure you'd be willing to be tough on any nation if necessary, if it would put your interests and profits at risk?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2555, "favorite_count": 4250, "source": "TweetDeck", "id_str": "776099941999607808", "is_retweet": false}, {"created_at": "Fri Mar 11 00:11:26 +0000 2016", "text": "Here's what you need to know about the state of the Democratic primary race, in 6 seconds. https://t.co/Hj6r9A5p2X", "in_reply_to_screen_name": null, "retweet_count": 941, "favorite_count": 2058, "source": "TweetDeck", "id_str": "708082871622365184", "is_retweet": false}, {"created_at": "Mon Apr 11 15:58:43 +0000 2016", "text": "Donald Trump says we can solve America\u2019s problems by turning against each other. He's dead wrong.\nhttps://t.co/0Ajcnie16h", "in_reply_to_screen_name": null, "retweet_count": 1726, "favorite_count": 3558, "source": "Twitter Web Client", "id_str": "719555285518430208", "is_retweet": false}, {"created_at": "Sat Feb 06 02:54:20 +0000 2016", "text": "\"Sen. Sanders &amp; I share big, progressive goals for our country\u2014but I believe I\u2019ve laid out stronger plans for how to achieve them.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 859, "favorite_count": 2280, "source": "TweetDeck", "id_str": "695802677696073728", "is_retweet": false}, {"created_at": "Wed Sep 28 02:36:13 +0000 2016", "text": "Thank you, @_VicenteFdez. You're right\u2014\"su voz es su voto.\" So grateful to have your support. #JuntosSePuede https://t.co/j9v2K84AV1", "in_reply_to_screen_name": null, "retweet_count": 3236, "favorite_count": 7202, "source": "TweetDeck", "id_str": "780959266052173830", "is_retweet": false}, {"created_at": "Mon Jan 25 20:16:29 +0000 2016", "text": "There is no excuse for letting greed get in the way of people's health. Companies like these should be ashamed. https://t.co/OTsRHGkJOG", "in_reply_to_screen_name": null, "retweet_count": 372, "favorite_count": 772, "source": "TweetDeck", "id_str": "691716288004124673", "is_retweet": false}, {"created_at": "Fri Feb 19 14:01:46 +0000 2016", "text": "Millions of families like Karla\u2019s live in fear of deportation. We need a president who will fight to protect them. https://t.co/Rx9Jce8Sl4", "in_reply_to_screen_name": null, "retweet_count": 611, "favorite_count": 1370, "source": "TweetDeck", "id_str": "700681684593811459", "is_retweet": false}, {"created_at": "Tue Sep 27 15:42:48 +0000 2016", "text": "\"Register. Vote. Go out and get engaged!\u201d \u2014@JoeBiden #NationalVoterRegistrationDay https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1432, "favorite_count": 3141, "source": "TweetDeck", "id_str": "780794828007305217", "is_retweet": false}, {"created_at": "Thu Apr 14 17:31:17 +0000 2016", "text": "Donald Trump's made the most reckless statements on national security by any major candidate in modern history: https://t.co/m9SxV3tzgK", "in_reply_to_screen_name": null, "retweet_count": 1002, "favorite_count": 1936, "source": "TweetDeck", "id_str": "720665744376246272", "is_retweet": false}, {"created_at": "Wed Nov 02 14:37:52 +0000 2016", "text": "Our children are watching to see what kind of example we set for them. https://t.co/rAzUyjWsAq", "in_reply_to_screen_name": null, "retweet_count": 4144, "favorite_count": 10009, "source": "Media Studio", "id_str": "793824451703877632", "is_retweet": false}, {"created_at": "Wed Jul 06 16:45:44 +0000 2016", "text": "\"What he did here in Atlantic City is exactly what he\u2019ll do if he wins in November.\" \u2014Hillary on @realDonaldTrump: https://t.co/d03oF9Ur0W", "in_reply_to_screen_name": null, "retweet_count": 907, "favorite_count": 1845, "source": "TweetDeck", "id_str": "750732476360888320", "is_retweet": false}, {"created_at": "Mon Oct 31 01:56:02 +0000 2016", "text": "We've made extraordinary progress under @POTUS. On November 8, that progress is on the ballot. https://t.co/OaH52l1Nyn", "in_reply_to_screen_name": null, "retweet_count": 2701, "favorite_count": 7912, "source": "TweetDeck", "id_str": "792907954131443712", "is_retweet": false}, {"created_at": "Sat May 21 22:07:39 +0000 2016", "text": "We can't accept this as \"normal.\" #StopGunViolence https://t.co/RGJE1BuGim", "in_reply_to_screen_name": null, "retweet_count": 2327, "favorite_count": 4040, "source": "Twitter for iPhone", "id_str": "734143644249264128", "is_retweet": false}, {"created_at": "Fri Aug 12 21:56:32 +0000 2016", "text": "Many people are saying Trump won't release his tax returns because he's hiding something. What do you think it is?", "in_reply_to_screen_name": null, "retweet_count": 6769, "favorite_count": 13132, "source": "Twitter Web Client", "id_str": "764219041020055552", "is_retweet": false}, {"created_at": "Wed Apr 06 16:26:38 +0000 2016", "text": "We need a president who doesn\u2019t just rail against trade. We need a president who knows how to compete against the rest of the world and win.", "in_reply_to_screen_name": null, "retweet_count": 1297, "favorite_count": 3303, "source": "TweetDeck", "id_str": "717750372270366720", "is_retweet": false}, {"created_at": "Sun Oct 09 19:23:20 +0000 2016", "text": "Here's what you need to know about early voting and absentee ballots: https://t.co/UESLyG1aix", "in_reply_to_screen_name": null, "retweet_count": 1226, "favorite_count": 2317, "source": "TweetDeck", "id_str": "785198983731871745", "is_retweet": false}, {"created_at": "Sun May 29 16:54:48 +0000 2016", "text": "Our most important task is making sure we give our kids a better life. That's the promise of America. https://t.co/msyv7VWlH3", "in_reply_to_screen_name": null, "retweet_count": 2671, "favorite_count": 9021, "source": "Twitter for iPhone", "id_str": "736964018779394048", "is_retweet": false}, {"created_at": "Mon Jun 20 12:55:20 +0000 2016", "text": "Happy first day of summer. https://t.co/yfuIRFr6mG", "in_reply_to_screen_name": null, "retweet_count": 1668, "favorite_count": 6609, "source": "TweetDeck", "id_str": "744876285730627584", "is_retweet": false}, {"created_at": "Sat Feb 27 13:11:42 +0000 2016", "text": "It\u2019s election day, South Carolina! Text COMMIT2SC to 47246 to find your polling location. Hillary\u2019s counting on you. https://t.co/yMcgTpeaf4", "in_reply_to_screen_name": null, "retweet_count": 921, "favorite_count": 2139, "source": "Twitter Web Client", "id_str": "703568188882214912", "is_retweet": false}, {"created_at": "Tue Sep 13 16:17:04 +0000 2016", "text": "Pay-To-Play: The act of making a donation to a politician so they'll help you out. See: Donald Trump. https://t.co/BrEDwdZoPe", "in_reply_to_screen_name": null, "retweet_count": 4440, "favorite_count": 6533, "source": "Twitter Web Client", "id_str": "775730024657874944", "is_retweet": false}, {"created_at": "Fri Sep 30 20:15:26 +0000 2016", "text": "A man who can be provoked by a tweet should not be anywhere near the nuclear codes.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3353, "favorite_count": 8546, "source": "TweetDeck", "id_str": "781950603366952960", "is_retweet": false}, {"created_at": "Wed Oct 05 02:38:09 +0000 2016", "text": "RT @FrankieJGrande: I \u2764\ufe0f @timkaine. He's intelligent, strong &amp; he supports gay rights. There's no option here... #VPDebate #ImWithTim #ImWi\u2026", "in_reply_to_screen_name": null, "retweet_count": 1220, "favorite_count": 0, "source": "TweetDeck", "id_str": "783496470540460032", "is_retweet": true}, {"created_at": "Tue Apr 12 13:59:40 +0000 2016", "text": "\u201cDo you think that when you\u2019re president, you\u2019ll be paid as much as a man?\u201d #EqualPayDay\nhttps://t.co/1PmFGezO4G", "in_reply_to_screen_name": null, "retweet_count": 3146, "favorite_count": 6031, "source": "Twitter Web Client", "id_str": "719887714301059072", "is_retweet": false}, {"created_at": "Tue Jul 26 20:27:15 +0000 2016", "text": "You heard @FLOTUS. Here's how you can get involved in this campaign \u2192 https://t.co/WVUvFhb6bp https://t.co/mjEJZ01Lq0", "in_reply_to_screen_name": null, "retweet_count": 1764, "favorite_count": 5138, "source": "TweetDeck", "id_str": "758035977747230720", "is_retweet": false}, {"created_at": "Sat Jun 04 14:05:10 +0000 2016", "text": "America is a country of diverse beliefs and heritages. That makes us strong, regardless of what Donald thinks.\nhttps://t.co/Nbyd4zSuyY", "in_reply_to_screen_name": null, "retweet_count": 3243, "favorite_count": 5550, "source": "Twitter Web Client", "id_str": "739095653331046401", "is_retweet": false}, {"created_at": "Tue Jul 26 02:49:57 +0000 2016", "text": "\"Trump\u2019s entire campaign is just one more, late-night Trump infomercial.\u201d \u2014@ElizabethForMA #DemsInPhilly https://t.co/OAJsEsmSNt", "in_reply_to_screen_name": null, "retweet_count": 2212, "favorite_count": 6206, "source": "TweetDeck", "id_str": "757769901402681344", "is_retweet": false}, {"created_at": "Sat Jul 30 20:13:10 +0000 2016", "text": "Americans don\u2019t say: \u201cI alone can fix it.\u201d\n\nWe say: \u201cOk, how are we going to fix this together?\u201d", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 7034, "source": "TweetDeck", "id_str": "759481986377482240", "is_retweet": false}, {"created_at": "Tue Jul 26 02:16:18 +0000 2016", "text": "\"Hillary understands that the presidency is about one thing and one thing only\u2014it\u2019s about leaving something better for our kids.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2591, "favorite_count": 8849, "source": "TweetDeck", "id_str": "757761430477279232", "is_retweet": false}, {"created_at": "Sat Feb 20 22:00:46 +0000 2016", "text": "No podemos permitir que un republicano gane las elecciones.", "in_reply_to_screen_name": null, "retweet_count": 811, "favorite_count": 1460, "source": "TweetDeck", "id_str": "701164616865423360", "is_retweet": false}, {"created_at": "Mon Feb 29 14:24:00 +0000 2016", "text": "We need to make it a national mission to create millions of jobs in clean energy, manufacturing, and infrastructure.", "in_reply_to_screen_name": null, "retweet_count": 1085, "favorite_count": 2956, "source": "TweetDeck", "id_str": "704311160603090944", "is_retweet": false}, {"created_at": "Mon Aug 08 03:09:32 +0000 2016", "text": "WATCH: This special 360 degree video allows you to experience the magic of the @DemConvention balloon drop: https://t.co/5DbAXK9yb8", "in_reply_to_screen_name": null, "retweet_count": 564, "favorite_count": 2003, "source": "TweetDeck", "id_str": "762485871350124545", "is_retweet": false}, {"created_at": "Mon Feb 08 22:37:36 +0000 2016", "text": "Yesterday, Hillary went to Flint to hear directly from a community whose concerns have too often been ignored. https://t.co/0Y2oq12Ym1", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 837, "source": "TweetDeck", "id_str": "696825231453876224", "is_retweet": false}, {"created_at": "Fri Sep 30 18:32:55 +0000 2016", "text": "RT @TheDemocrats: Warning: This video contains offensive language, inappropriate behavior, and blatant misogyny. \nVoter discretion is advis\u2026", "in_reply_to_screen_name": null, "retweet_count": 5566, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781924803099918336", "is_retweet": true}, {"created_at": "Wed Oct 05 23:49:33 +0000 2016", "text": "Great move by Chobani. Every parent deserves access to paid family leave. https://t.co/QhvjjlbznX", "in_reply_to_screen_name": null, "retweet_count": 1648, "favorite_count": 5260, "source": "TweetDeck", "id_str": "783816426759004160", "is_retweet": false}, {"created_at": "Wed Sep 07 13:58:54 +0000 2016", "text": "World leaders on why Hillary's tenure as secretary of state prepared her to be president: https://t.co/ROD8Jh50aV", "in_reply_to_screen_name": null, "retweet_count": 3287, "favorite_count": 6850, "source": "Twitter Web Client", "id_str": "773520924607930368", "is_retweet": false}, {"created_at": "Tue May 10 20:05:56 +0000 2016", "text": "A Kentucky parent earning the minimum wage spends 40% of their income on child care.\n\nLet's make sure no family has to spend more than 10%.", "in_reply_to_screen_name": null, "retweet_count": 1032, "favorite_count": 2481, "source": "TweetDeck", "id_str": "730126749732868096", "is_retweet": false}, {"created_at": "Tue May 31 18:38:42 +0000 2016", "text": "Our service members and their families deserve more than empty words. Let's give them the support they need: https://t.co/7NzkmK4wfE", "in_reply_to_screen_name": null, "retweet_count": 867, "favorite_count": 1943, "source": "TweetDeck", "id_str": "737714939704573954", "is_retweet": false}, {"created_at": "Sat Jan 09 19:23:53 +0000 2016", "text": "What @AbbyWambach said. https://t.co/oYPDVCqFX1", "in_reply_to_screen_name": null, "retweet_count": 905, "favorite_count": 2386, "source": "TweetDeck", "id_str": "685904845602172928", "is_retweet": false}, {"created_at": "Fri Jul 29 02:54:17 +0000 2016", "text": "\"It\u2019s true: I sweat the details of policy...because it\u2019s not just a detail if it\u2019s your kid, if it\u2019s your family. It\u2019s a big deal.\"", "in_reply_to_screen_name": null, "retweet_count": 3421, "favorite_count": 8366, "source": "TweetDeck", "id_str": "758858155317014528", "is_retweet": false}, {"created_at": "Tue Sep 27 02:38:01 +0000 2016", "text": "The woman Trump called \u201cMiss Piggy\u201d has a name: Alicia. #debatenight https://t.co/XlthzE8X8j", "in_reply_to_screen_name": null, "retweet_count": 23169, "favorite_count": 37639, "source": "Media Studio", "id_str": "780597333650239488", "is_retweet": false}, {"created_at": "Wed Aug 24 18:02:14 +0000 2016", "text": "EpiPens can be the difference between life and death. There's no justification for these price hikes. https://t.co/O6RbVR6Qim -H", "in_reply_to_screen_name": null, "retweet_count": 3895, "favorite_count": 9882, "source": "TweetDeck", "id_str": "768508732623970304", "is_retweet": false}, {"created_at": "Fri Jul 29 00:33:57 +0000 2016", "text": "A night we'll never forget.\nhttps://t.co/BOq4CziQsC", "in_reply_to_screen_name": null, "retweet_count": 3790, "favorite_count": 10644, "source": "Twitter Web Client", "id_str": "758822837612228608", "is_retweet": false}, {"created_at": "Wed Oct 05 19:16:00 +0000 2016", "text": "On #WorldTeachersDay, it's not enough to appreciate teachers. We have to support them like America's future is in t\u2026 https://t.co/0M06Aiid1E", "in_reply_to_screen_name": null, "retweet_count": 3525, "favorite_count": 8175, "source": "TweetDeck", "id_str": "783747587799126016", "is_retweet": false}, {"created_at": "Wed Mar 02 01:57:27 +0000 2016", "text": "\"It\u2019s clear that the stakes in this election have never been higher. And the rhetoric we\u2019re hearing on the other side has never been lower.\"", "in_reply_to_screen_name": null, "retweet_count": 1160, "favorite_count": 2407, "source": "TweetDeck", "id_str": "704848057838526464", "is_retweet": false}, {"created_at": "Mon Sep 05 23:59:24 +0000 2016", "text": "Unions have had the backs of working families for decades. Now they need to know we have theirs. https://t.co/lqxCtdZuLM", "in_reply_to_screen_name": null, "retweet_count": 1399, "favorite_count": 3748, "source": "TweetDeck", "id_str": "772947268500684804", "is_retweet": false}, {"created_at": "Wed Oct 26 16:14:13 +0000 2016", "text": "In America, we don\u2019t say we\u2019re going to \u201ckeep you in suspense\u201d about whether we\u2019ll respect the outcome of an election.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 566, "favorite_count": 1726, "source": "TweetDeck", "id_str": "791311982259539968", "is_retweet": false}, {"created_at": "Mon Aug 15 17:10:46 +0000 2016", "text": "Joe is now leading a new Cancer Moonshot initiative to fund breakthroughs and save lives in honor of his son Beau. https://t.co/ofgoaD7t0V", "in_reply_to_screen_name": null, "retweet_count": 746, "favorite_count": 2303, "source": "TweetDeck", "id_str": "765234289789267968", "is_retweet": false}, {"created_at": "Mon Apr 04 00:41:54 +0000 2016", "text": "Hillary\u2019s plan to make college more affordable won't depend on billions upfront from GOP governors like Scott Walker\nhttps://t.co/emzAYzBpFb", "in_reply_to_screen_name": null, "retweet_count": 2005, "favorite_count": 4488, "source": "Twitter Web Client", "id_str": "716787846233743360", "is_retweet": false}, {"created_at": "Thu May 05 23:07:57 +0000 2016", "text": "We should be fighting to keep families together, not rip them apart. https://t.co/hd6FCPdwvo", "in_reply_to_screen_name": null, "retweet_count": 1298, "favorite_count": 3041, "source": "TweetDeck", "id_str": "728360616340160513", "is_retweet": false}, {"created_at": "Sun Nov 06 21:24:09 +0000 2016", "text": "\"You want to give me a good send-off? Go vote!\" \u2014@POTUS https://t.co/3TKJ4H68Kz https://t.co/rqxDSQF4pG", "in_reply_to_screen_name": null, "retweet_count": 3768, "favorite_count": 9653, "source": "Media Studio", "id_str": "795376246255452164", "is_retweet": false}, {"created_at": "Fri Sep 30 16:16:11 +0000 2016", "text": "There are just 39 days between now &amp; November 8. Just 39 days left in the most important election in our lifetimes. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 582, "favorite_count": 1253, "source": "TweetDeck", "id_str": "781890393185058816", "is_retweet": false}, {"created_at": "Wed Feb 24 03:18:35 +0000 2016", "text": "Recognizing privilege and dismantling systemic racism is on all of us. #DemTownHall\nhttps://t.co/6X1U5qqrql", "in_reply_to_screen_name": null, "retweet_count": 1275, "favorite_count": 2341, "source": "Twitter Web Client", "id_str": "702331763746435073", "is_retweet": false}, {"created_at": "Wed Jun 22 21:13:00 +0000 2016", "text": "No company in America should be able to pay women less for the work they do. https://t.co/2xsOoheJlp", "in_reply_to_screen_name": null, "retweet_count": 2994, "favorite_count": 8657, "source": "TweetDeck", "id_str": "745726305971372032", "is_retweet": false}, {"created_at": "Wed Oct 05 02:16:03 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump and Mike Pence are aligned on the issues. Now, will Pence defend the things Trump does? https://t.co/NZ92\u2026", "in_reply_to_screen_name": null, "retweet_count": 853, "favorite_count": 0, "source": "TweetDeck", "id_str": "783490907823804416", "is_retweet": true}, {"created_at": "Mon Nov 07 01:57:39 +0000 2016", "text": "RT @ABCPolitics: Khizr Khan: \"Thankfully, Mr. Trump, this isn't your America\" https://t.co/c7leuCE9uR https://t.co/6i1c2xwsgg", "in_reply_to_screen_name": null, "retweet_count": 4029, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795445076084269056", "is_retweet": true}, {"created_at": "Mon Jul 18 17:07:10 +0000 2016", "text": "Let\u2019s also put ourselves in the shoes of police officers. Empathy works both ways. We\u2019ve got to try to see the world through their eyes.", "in_reply_to_screen_name": null, "retweet_count": 949, "favorite_count": 3374, "source": "TweetDeck", "id_str": "755086522936922112", "is_retweet": false}, {"created_at": "Wed Oct 19 16:14:30 +0000 2016", "text": "Donald Trump is good at one thing\u2014driving his companies into the ground.\n\nAnd now he wants the keys to the U.S. eco\u2026 https://t.co/4ruapfFi7Q", "in_reply_to_screen_name": null, "retweet_count": 6572, "favorite_count": 12715, "source": "Media Studio", "id_str": "788775341271592960", "is_retweet": false}, {"created_at": "Mon Apr 18 20:08:32 +0000 2016", "text": "It's time to create a path to full and equal citizenship and finally fix our broken immigration system. #FightForFamilies -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 704, "favorite_count": 1399, "source": "Twitter Web Client", "id_str": "722154869117861888", "is_retweet": false}, {"created_at": "Sat Mar 05 22:29:09 +0000 2016", "text": "A message to corporate America: If you cheat workers, customers, or taxpayers, we'll hold you accountable. https://t.co/WeXBTTPdVa", "in_reply_to_screen_name": null, "retweet_count": 758, "favorite_count": 1675, "source": "TweetDeck", "id_str": "706245190512713729", "is_retweet": false}, {"created_at": "Thu Aug 04 21:38:15 +0000 2016", "text": "Wish @POTUS a happy birthday. Sign his card: https://t.co/YroKwbRvYX", "in_reply_to_screen_name": null, "retweet_count": 815, "favorite_count": 3581, "source": "TweetDeck", "id_str": "761315338285883392", "is_retweet": false}, {"created_at": "Wed Jul 06 16:52:38 +0000 2016", "text": "\"In America, we don\u2019t begrudge people being successful\u2026but we do if they get rich by destroying other people.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1594, "favorite_count": 3817, "source": "TweetDeck", "id_str": "750734210223202305", "is_retweet": false}, {"created_at": "Sat Feb 20 23:16:02 +0000 2016", "text": "Nevada: \u2705. Watch Hillary's victory speech live from Las Vegas: https://t.co/l8fXj23LdE", "in_reply_to_screen_name": null, "retweet_count": 510, "favorite_count": 1169, "source": "TweetDeck", "id_str": "701183559541923841", "is_retweet": false}, {"created_at": "Wed Nov 02 20:49:05 +0000 2016", "text": "\"I've been bullied for being Muslim. ... It hurts, you know.\"\n\nThis is the Trump Effect: https://t.co/PNmSX0ofOE", "in_reply_to_screen_name": null, "retweet_count": 14319, "favorite_count": 18796, "source": "Media Studio", "id_str": "793917872162631680", "is_retweet": false}, {"created_at": "Tue Mar 22 23:28:55 +0000 2016", "text": "Idahoans and Utahns: Go caucus today! Text WHERE to 47246 to find your caucus location. https://t.co/Dqh3MMrk8h", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1833, "source": "TweetDeck", "id_str": "712420824452616192", "is_retweet": false}, {"created_at": "Thu Sep 08 14:53:37 +0000 2016", "text": "RT @nowthisnews: Donald Trump \"absolutely\" stands behind his horrible 2013 tweet about sexual assault in the military https://t.co/c7mAsS1a\u2026", "in_reply_to_screen_name": null, "retweet_count": 1621, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773897081828306945", "is_retweet": true}, {"created_at": "Tue Aug 23 02:19:34 +0000 2016", "text": "RT @timkaine: You can't have the best military unless folks pay their fair share in taxes, Donald. https://t.co/zfwqXwNLJj", "in_reply_to_screen_name": null, "retweet_count": 3952, "favorite_count": 0, "source": "TweetDeck", "id_str": "767909112285913088", "is_retweet": true}, {"created_at": "Sat Sep 17 13:55:44 +0000 2016", "text": "9 times Donald Trump accused Hillary of doing the terrible things he, himself, actually did: https://t.co/DXlybx7oA5", "in_reply_to_screen_name": null, "retweet_count": 4399, "favorite_count": 7123, "source": "TweetDeck", "id_str": "777144008044847105", "is_retweet": false}, {"created_at": "Tue Apr 26 14:06:38 +0000 2016", "text": "We've heard way too much hateful rhetoric in this campaign.\n\nWe need more love and kindness.\nhttps://t.co/UDrH2AiI5Y", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 2612, "source": "Twitter Web Client", "id_str": "724962897462366208", "is_retweet": false}, {"created_at": "Tue Oct 11 19:55:34 +0000 2016", "text": "RT @johnpodesta: We can fight climate change because our next president has a plan. @HillaryClinton #ImWithHer https://t.co/lazxsPm48W", "in_reply_to_screen_name": null, "retweet_count": 1602, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785931869145538560", "is_retweet": true}, {"created_at": "Tue Oct 04 16:00:34 +0000 2016", "text": "RT @timkaine: My message to Donald Trump and Mike Pence. #VPDebate https://t.co/UhQUfzIEHu", "in_reply_to_screen_name": null, "retweet_count": 5245, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783336015972986880", "is_retweet": true}, {"created_at": "Thu Apr 07 18:40:13 +0000 2016", "text": "\"I think Hillary will go down as one of the finest secretaries of state we've had.\" \u2013@POTUS\nhttps://t.co/louCjQeS2x", "in_reply_to_screen_name": null, "retweet_count": 2480, "favorite_count": 5594, "source": "Twitter Web Client", "id_str": "718146377151225857", "is_retweet": false}, {"created_at": "Wed Oct 05 16:12:04 +0000 2016", "text": "10 times Pence shrugged off or straight-up lied about what Trump has said and done at the #VPDebate: https://t.co/IV9uWHLT5x", "in_reply_to_screen_name": null, "retweet_count": 1818, "favorite_count": 4108, "source": "TweetDeck", "id_str": "783701297799262208", "is_retweet": false}, {"created_at": "Mon Mar 14 19:34:16 +0000 2016", "text": "Joining @IAmSteveHarvey today to talk about the Flint water crisis and how to make sure this never happens again.\nhttps://t.co/MtmqYhj0sW", "in_reply_to_screen_name": null, "retweet_count": 1045, "favorite_count": 2148, "source": "Twitter Web Client", "id_str": "709462671729397761", "is_retweet": false}, {"created_at": "Mon Oct 31 18:41:17 +0000 2016", "text": "Donald Trump has repeatedly suggested that more countries should have nuclear weapons. Japan, South Korea, even Saudi Arabia.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 627, "favorite_count": 1162, "source": "TweetDeck", "id_str": "793160935120789504", "is_retweet": false}, {"created_at": "Mon Oct 10 01:46:55 +0000 2016", "text": "Our vision for America is a country where everyone has a place, including, of course, Muslim Americans. #Debate https://t.co/rcu3nLvpTQ", "in_reply_to_screen_name": null, "retweet_count": 2305, "favorite_count": 6608, "source": "TweetDeck", "id_str": "785295514359197696", "is_retweet": false}, {"created_at": "Tue Nov 08 05:47:23 +0000 2016", "text": "\"I am so excited that I finally get to vote for my mom in a few hours.\u201d \u2014@ChelseaClinton https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1004, "favorite_count": 3423, "source": "TweetDeck", "id_str": "795865278034935809", "is_retweet": false}, {"created_at": "Mon Feb 01 22:00:20 +0000 2016", "text": "Hey, Iowa: The caucuses begin in three hours! Caucusing for Hillary is as easy as 1, 2, 3\u2014watch this:\nhttps://t.co/nXgS92KRCC", "in_reply_to_screen_name": null, "retweet_count": 497, "favorite_count": 956, "source": "Twitter Web Client", "id_str": "694279139407241216", "is_retweet": false}, {"created_at": "Tue Nov 08 04:08:46 +0000 2016", "text": "\"If you believe that racism and sexism and bigotry have no place in our country...you need to vote.\" https://t.co/nIOvu5x85c", "in_reply_to_screen_name": null, "retweet_count": 4285, "favorite_count": 10394, "source": "TweetDeck", "id_str": "795840460778602496", "is_retweet": false}, {"created_at": "Sat Jan 16 03:08:41 +0000 2016", "text": ".@jimmyfallon interviewed Hillary for the job of president. https://t.co/0NQesmpuMj https://t.co/Z3Qbq3XB6C", "in_reply_to_screen_name": null, "retweet_count": 552, "favorite_count": 1734, "source": "TweetDeck", "id_str": "688196146099929092", "is_retweet": false}, {"created_at": "Wed Jan 13 02:37:34 +0000 2016", "text": "We can't afford a president who won't admit climate change is real. It's real. It's a fact. And we will take action. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1802, "favorite_count": 4278, "source": "TweetDeck", "id_str": "687101151725117440", "is_retweet": false}, {"created_at": "Wed Oct 05 21:18:34 +0000 2016", "text": "\"Pence seemed intent on laying out the case for a Presidential candidacy\u2014his own.\" https://t.co/l2XSvbvTlT", "in_reply_to_screen_name": null, "retweet_count": 1468, "favorite_count": 3852, "source": "TweetDeck", "id_str": "783778432098439168", "is_retweet": false}, {"created_at": "Sat Sep 24 00:13:50 +0000 2016", "text": "If the young women of this country have Donald Trump as their president, what will they think of themselves? https://t.co/1IrjWddzzy", "in_reply_to_screen_name": null, "retweet_count": 14243, "favorite_count": 24902, "source": "Media Studio", "id_str": "779473882910720000", "is_retweet": false}, {"created_at": "Thu Jul 21 23:54:16 +0000 2016", "text": "Introducing \u00a1Hillary en espa\u00f1ol!, a new account to bring you the latest from this campaign in Spanish. Follow @Hillary_esp.", "in_reply_to_screen_name": null, "retweet_count": 959, "favorite_count": 2393, "source": "TweetDeck", "id_str": "756276137999958016", "is_retweet": false}, {"created_at": "Sun Jan 24 00:39:33 +0000 2016", "text": "I'll work my heart out for Iowans and American families every day. Honored to have the @DMRegister's support\u20149 days to the caucus! -H", "in_reply_to_screen_name": null, "retweet_count": 942, "favorite_count": 2318, "source": "TweetDeck", "id_str": "691057718136803328", "is_retweet": false}, {"created_at": "Thu May 26 15:36:34 +0000 2016", "text": "When the economy crashed, families saw their homes foreclosed and savings disappear. \n\nTrump saw a chance to profit. https://t.co/tnngHNVqoL", "in_reply_to_screen_name": null, "retweet_count": 1616, "favorite_count": 2380, "source": "TweetDeck", "id_str": "735857164670140418", "is_retweet": false}, {"created_at": "Thu Sep 08 00:22:44 +0000 2016", "text": "\"I will not let the VA be privatized.\" \u2014Hillary https://t.co/FRkf6AnS2f #NBCNewsForum", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 2356, "source": "TweetDeck", "id_str": "773677916563578880", "is_retweet": false}, {"created_at": "Sun May 08 22:23:02 +0000 2016", "text": "\"It's only been an incredible gift.\" Hillary talks about becoming a grandmother and watching Chelsea become a mom.\nhttps://t.co/NHuHYM15Q9", "in_reply_to_screen_name": null, "retweet_count": 1960, "favorite_count": 6010, "source": "Twitter Web Client", "id_str": "729436473842229248", "is_retweet": false}, {"created_at": "Tue Jun 21 21:04:14 +0000 2016", "text": "Trump's plan would cut more taxes for the 120,000 richest families than it would for 120 million working Americans.\nhttps://t.co/wiIOTQmj6r", "in_reply_to_screen_name": null, "retweet_count": 1946, "favorite_count": 3809, "source": "Twitter Web Client", "id_str": "745361708189782016", "is_retweet": false}, {"created_at": "Tue Nov 08 06:01:25 +0000 2016", "text": "\u201cYou can vote for a hopeful, inclusive, big-hearted vision for America.\u201d \u2014Hillary https://t.co/jfd3CXLD1s https://t.co/JJcIfaLSSf", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1062, "favorite_count": 2705, "source": "TweetDeck", "id_str": "795868808367968256", "is_retweet": false}, {"created_at": "Tue Feb 16 21:32:43 +0000 2016", "text": "\"Let's roll up our sleeves and get to work dismantling the school-to-prison pipeline...We need a cradle-to-college pipeline.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 706, "favorite_count": 1398, "source": "TweetDeck", "id_str": "699708006662017024", "is_retweet": false}, {"created_at": "Mon Sep 19 14:13:18 +0000 2016", "text": "\"Like all Americans, my thoughts are with those who were wounded, their families, &amp; our first responders\u201d \u2014Hillary on this weekend\u2019s attacks", "in_reply_to_screen_name": null, "retweet_count": 1699, "favorite_count": 6590, "source": "TweetDeck", "id_str": "777873205310676992", "is_retweet": false}, {"created_at": "Tue Feb 09 17:54:55 +0000 2016", "text": "Hillary and @BernieSanders share a lot of big progressive goals\u2014but they differ in how they plan to achieve them. https://t.co/PtgpjA2P1H", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 735, "source": "Twitter Web Client", "id_str": "697116482736668672", "is_retweet": false}, {"created_at": "Fri Jul 29 01:28:08 +0000 2016", "text": "Get the latest from the #DemConvention floor before Hillary takes the stage: https://t.co/uRJ6D4F7TU", "in_reply_to_screen_name": null, "retweet_count": 406, "favorite_count": 1579, "source": "TweetDeck", "id_str": "758836472325615616", "is_retweet": false}, {"created_at": "Sat Jan 30 00:35:29 +0000 2016", "text": "\u201cI have seen many incredible things...I look forward to seeing a woman president.\" https://t.co/Dati1JhTb5 https://t.co/D5bzlg1nsv", "in_reply_to_screen_name": null, "retweet_count": 1057, "favorite_count": 2368, "source": "TweetDeck", "id_str": "693231018858430465", "is_retweet": false}, {"created_at": "Sat Feb 20 22:59:32 +0000 2016", "text": "Send a message to Hillary and tell her you\u2019ve got her back all the way to the White House. https://t.co/T1J8VcjX8o", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 2083, "source": "TweetDeck", "id_str": "701179404941131776", "is_retweet": false}, {"created_at": "Tue Oct 11 19:44:54 +0000 2016", "text": "\"The clean energy superpower of the 21st century is probably going to be Germany, China, or us\u2014and I want it to be us.\" \u2014Hillary in Miami", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 678, "favorite_count": 1519, "source": "TweetDeck", "id_str": "785929187991359489", "is_retweet": false}, {"created_at": "Sun Jul 31 21:33:10 +0000 2016", "text": "Road trip. https://t.co/l87tQGIngk", "in_reply_to_screen_name": null, "retweet_count": 1551, "favorite_count": 9350, "source": "TweetDeck", "id_str": "759864504276713473", "is_retweet": false}, {"created_at": "Sun Feb 14 04:02:06 +0000 2016", "text": "Takeaway from #GOPdebate: We can't let one of these guys rip away the progress we've made. Sign on if you agree: https://t.co/EuV4hq7R1s", "in_reply_to_screen_name": null, "retweet_count": 1132, "favorite_count": 3458, "source": "TweetDeck", "id_str": "698718835403313152", "is_retweet": false}, {"created_at": "Thu Jun 30 17:06:26 +0000 2016", "text": "Pride Month is coming to a close, but our march toward equality continues. Onward. https://t.co/jRDGnXhuuC", "in_reply_to_screen_name": null, "retweet_count": 3221, "favorite_count": 10633, "source": "TweetDeck", "id_str": "748563357771370496", "is_retweet": false}, {"created_at": "Tue Feb 02 04:36:43 +0000 2016", "text": "\"I will keep doing what I\u2019ve done my entire life. I will keep standing up for you. I will keep fighting for you.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 3553, "source": "TweetDeck", "id_str": "694378891138437121", "is_retweet": false}, {"created_at": "Fri May 27 00:26:10 +0000 2016", "text": "What we need: bridges, schools, a clean energy grid.\n\nWhat Trump wants: a wall. https://t.co/v61oYTyycJ https://t.co/QdFDJizLHj", "in_reply_to_screen_name": null, "retweet_count": 1876, "favorite_count": 3425, "source": "TweetDeck", "id_str": "735990443863871488", "is_retweet": false}, {"created_at": "Wed Jan 06 01:10:11 +0000 2016", "text": "This is a promise: I will always protect a woman's right to make her own health decisions. Honored to have your support, @NARAL. -H", "in_reply_to_screen_name": null, "retweet_count": 1160, "favorite_count": 3866, "source": "TweetDeck", "id_str": "684542443715432449", "is_retweet": false}, {"created_at": "Thu Oct 27 18:34:50 +0000 2016", "text": "If you care about the right to vote and want to make sure it\u2019s protected and strengthened, you\u2019ve got to vote. https://t.co/Y4W97Qu1Pr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1091, "favorite_count": 2163, "source": "TweetDeck", "id_str": "791709759812595712", "is_retweet": false}, {"created_at": "Fri Jan 15 23:05:38 +0000 2016", "text": "What would our country look like under a Republican president? Here\u2019s a glimpse. https://t.co/bLH9q3ybWO https://t.co/JVm3xD14nV", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 1632, "source": "TweetDeck", "id_str": "688134979495186432", "is_retweet": false}, {"created_at": "Tue Oct 11 23:01:27 +0000 2016", "text": "We have a choice between taking serious steps to combat climate change\u2014and refusing to admit it even exists. https://t.co/aqfTlNWen5", "in_reply_to_screen_name": null, "retweet_count": 1977, "favorite_count": 6051, "source": "TweetDeck", "id_str": "785978651544354816", "is_retweet": false}, {"created_at": "Thu Oct 20 13:35:08 +0000 2016", "text": "RT @POTUS: Outstanding 3 for 3 debate sweep for @HillaryClinton! Nobody has ever been more prepared to be @POTUS.", "in_reply_to_screen_name": null, "retweet_count": 21547, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "789097622720118784", "is_retweet": true}, {"created_at": "Sat Jul 23 17:39:16 +0000 2016", "text": "\u201cMy mom once told me\u2026\u2018if you want to do right, be an optimist.\u2019\u201d \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 1677, "favorite_count": 4777, "source": "TweetDeck", "id_str": "756906542142746625", "is_retweet": false}, {"created_at": "Mon Oct 10 00:30:16 +0000 2016", "text": "If you've got Hillary's back, tonight is the night to show it. Chip in before the debate to say you're with her: https://t.co/SZhWAP0riK", "in_reply_to_screen_name": null, "retweet_count": 2726, "favorite_count": 8224, "source": "TweetDeck", "id_str": "785276224897683460", "is_retweet": false}, {"created_at": "Thu Mar 31 22:45:56 +0000 2016", "text": "En el d\u00eda de #CesarChavez honramos un luchador del movimiento laboral quien empoder\u00f3 a trabajadores por todo el pa\u00eds.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 369, "favorite_count": 691, "source": "TweetDeck", "id_str": "715671500632768513", "is_retweet": false}, {"created_at": "Mon May 16 20:52:21 +0000 2016", "text": "Trump empez\u00f3 su campa\u00f1a diciendo que los mexicanos son \"violadores\" y traen \u201cdrogas\u201d y \u201ccrimen\u201d.\n\nNo se ha detenido. https://t.co/NjrH9dXxlU", "in_reply_to_screen_name": null, "retweet_count": 681, "favorite_count": 833, "source": "TweetDeck", "id_str": "732312758268637186", "is_retweet": false}, {"created_at": "Tue Jul 12 16:23:49 +0000 2016", "text": "Together, let\u2019s go win this election. https://t.co/lRSwpk9y4b", "in_reply_to_screen_name": null, "retweet_count": 10158, "favorite_count": 26942, "source": "TweetDeck", "id_str": "752901286677377024", "is_retweet": false}, {"created_at": "Sun Jan 31 23:38:14 +0000 2016", "text": "\"What I believe a president has to do is to really listen to what's on the minds of our people.\"\nhttps://t.co/oURXox2slX", "in_reply_to_screen_name": null, "retweet_count": 768, "favorite_count": 1490, "source": "Twitter Web Client", "id_str": "693941389768265728", "is_retweet": false}, {"created_at": "Fri Jun 03 02:03:31 +0000 2016", "text": "Some of the (many, many) reasons Donald Trump isn't fit to be Commander-in-Chief. https://t.co/YeEx2FZwjm", "in_reply_to_screen_name": null, "retweet_count": 1960, "favorite_count": 4886, "source": "TweetDeck", "id_str": "738551659329138688", "is_retweet": false}, {"created_at": "Wed Mar 16 00:38:33 +0000 2016", "text": "There's never been a more important time to have Hillary's back. Add your name to help secure the nomination: https://t.co/2hvSqo54dB", "in_reply_to_screen_name": null, "retweet_count": 794, "favorite_count": 2383, "source": "TweetDeck", "id_str": "709901635561062400", "is_retweet": false}, {"created_at": "Tue Nov 08 12:47:19 +0000 2016", "text": "RT @TheDemocrats: Let us bend the arc of history toward justice once more. https://t.co/JjkvA5ZKTj", "in_reply_to_screen_name": null, "retweet_count": 3067, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795970957383004160", "is_retweet": true}, {"created_at": "Sat Nov 05 02:27:18 +0000 2016", "text": "RT @CNN: Jay Z introduces Clinton: \"Once you divide us, you weaken us. We're stronger together\" https://t.co/OnTJEFrhso https://t.co/ntWb5v\u2026", "in_reply_to_screen_name": null, "retweet_count": 5559, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794727760308662273", "is_retweet": true}, {"created_at": "Thu Jul 28 03:18:19 +0000 2016", "text": "\"America is already great. America is already strong &amp; I promise you, our strength, our greatness, does not depend on Donald Trump.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3862, "favorite_count": 8395, "source": "TweetDeck", "id_str": "758501814945869824", "is_retweet": false}, {"created_at": "Thu Jul 07 00:18:33 +0000 2016", "text": "Trabajemos para que ning\u00fan estudiante tenga que endeudarse para estudiar en una universidad p\u00fablica de su estado. https://t.co/Bl1RpRy3Di", "in_reply_to_screen_name": null, "retweet_count": 588, "favorite_count": 1312, "source": "TweetDeck", "id_str": "750846427585273857", "is_retweet": false}, {"created_at": "Mon Aug 08 19:49:35 +0000 2016", "text": "Donald Trump's plan is just a repackaging of trickle-down economics\u2014and it doesn\u2019t help our economy or the vast majority of Americans.", "in_reply_to_screen_name": null, "retweet_count": 3068, "favorite_count": 8966, "source": "TweetDeck", "id_str": "762737540470374400", "is_retweet": false}, {"created_at": "Fri Jun 24 22:54:33 +0000 2016", "text": "LGBT kids are perfect the way they are. They deserve love and acceptance\u2014not bullying and violence. https://t.co/3ICu66ozzV", "in_reply_to_screen_name": null, "retweet_count": 6538, "favorite_count": 16187, "source": "TweetDeck", "id_str": "746476634182660101", "is_retweet": false}, {"created_at": "Mon May 23 18:18:22 +0000 2016", "text": "\"If fighting for equal pay, paid family leave, and affordable child care is playing the 'woman card,' then deal me in\" \u2014Hillary to the @SEIU", "in_reply_to_screen_name": null, "retweet_count": 1222, "favorite_count": 3238, "source": "TweetDeck", "id_str": "734810721079427075", "is_retweet": false}, {"created_at": "Tue Sep 06 15:33:41 +0000 2016", "text": "Our veterans and military families deserve better. https://t.co/zhM6TSiSzc", "in_reply_to_screen_name": null, "retweet_count": 1723, "favorite_count": 3703, "source": "Twitter Web Client", "id_str": "773182391544348674", "is_retweet": false}, {"created_at": "Fri Jul 15 17:07:12 +0000 2016", "text": "Mike Pence: He\u2019s Donald Trump with a different haircut. https://t.co/R2hYduGaym", "in_reply_to_screen_name": null, "retweet_count": 4083, "favorite_count": 7303, "source": "TweetDeck", "id_str": "753999369595158528", "is_retweet": false}, {"created_at": "Tue Jun 21 16:40:59 +0000 2016", "text": "\u201cThe last time we opted for Trump-style isolationism, it made the Great Depression longer and more painful.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1003, "favorite_count": 2777, "source": "TweetDeck", "id_str": "745295461209235456", "is_retweet": false}, {"created_at": "Thu Jul 28 15:16:42 +0000 2016", "text": "\"I ask you to do for Hillary Clinton what you did for me.\n\nI ask you to carry her the same way you carried me.\u201d https://t.co/61muVG6Ysj", "in_reply_to_screen_name": null, "retweet_count": 3647, "favorite_count": 10356, "source": "TweetDeck", "id_str": "758682601213325312", "is_retweet": false}, {"created_at": "Thu Jul 21 19:16:06 +0000 2016", "text": "It\u2019s hard to keep track of all of the ignorant and divisive things Trump and Pence have said\u2014so we did it for you. https://t.co/lZNVJBHgTh", "in_reply_to_screen_name": null, "retweet_count": 2535, "favorite_count": 3973, "source": "TweetDeck", "id_str": "756206132553715713", "is_retweet": false}, {"created_at": "Thu Sep 29 18:10:37 +0000 2016", "text": "Tune in now to watch Hillary kick off Iowa early voting live from Des Moines: https://t.co/V5IZXIBDDW", "in_reply_to_screen_name": null, "retweet_count": 765, "favorite_count": 2835, "source": "TweetDeck", "id_str": "781556803851223044", "is_retweet": false}, {"created_at": "Sat Feb 20 23:23:30 +0000 2016", "text": "No one can get this done alone\u2014not even the President of the United States. It\u2019s got to be the mission of our entire nation.", "in_reply_to_screen_name": null, "retweet_count": 819, "favorite_count": 2089, "source": "TweetDeck", "id_str": "701185438216810496", "is_retweet": false}, {"created_at": "Thu Oct 20 03:25:43 +0000 2016", "text": "RT @emilyslist: When Trump went low, @HillaryClinton went high. We're prouder than ever to be with her. #SheWon https://t.co/c5JmPWCCqV", "in_reply_to_screen_name": null, "retweet_count": 3209, "favorite_count": 0, "source": "TweetDeck", "id_str": "788944256044064768", "is_retweet": true}, {"created_at": "Sat Apr 09 14:09:32 +0000 2016", "text": "\u2713 Stood up for 9/11 first responders\n\u2713 Protected families' health\n\u2713 Fought for kids' education \nAnd more: https://t.co/T1NZM048rV", "in_reply_to_screen_name": null, "retweet_count": 1351, "favorite_count": 3524, "source": "Twitter Web Client", "id_str": "718803033413591041", "is_retweet": false}, {"created_at": "Wed Jun 15 23:08:36 +0000 2016", "text": "Trump dijo que el terrorista naci\u00f3 \u201cun afgano\u201d y prohibir\u00e1 la entrada de musulmanes\u2014pero el terrorista naci\u00f3 en Queens, NY igual que Trump.", "in_reply_to_screen_name": null, "retweet_count": 1596, "favorite_count": 2794, "source": "TweetDeck", "id_str": "743218678884343808", "is_retweet": false}, {"created_at": "Mon Aug 15 22:27:53 +0000 2016", "text": "The story of the Rodhams and the Bidens isn't unique. What's unique is the country where those stories were written.\nhttps://t.co/xUQW6ashqy", "in_reply_to_screen_name": null, "retweet_count": 1013, "favorite_count": 3073, "source": "Twitter Web Client", "id_str": "765314093473341441", "is_retweet": false}, {"created_at": "Sat Oct 22 21:39:28 +0000 2016", "text": "\"I really want to be president for all of the kids in America, to do everything I can to help you.\u201d \u2014Hillary in Pittsburgh", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 919, "favorite_count": 3696, "source": "TweetDeck", "id_str": "789944285034602496", "is_retweet": false}, {"created_at": "Mon Jan 25 22:31:20 +0000 2016", "text": "Not being able to vote yet isn\u2019t stopping 17-year-old Patrick from doing everything he can to elect Hillary. https://t.co/1J3wWuQAfp", "in_reply_to_screen_name": null, "retweet_count": 356, "favorite_count": 1035, "source": "TweetDeck", "id_str": "691750223555723268", "is_retweet": false}, {"created_at": "Mon Aug 29 14:55:33 +0000 2016", "text": "Dear Donald: You can't make America great again when you don't make things in America.\nhttps://t.co/5MZTsOyzIH", "in_reply_to_screen_name": null, "retweet_count": 5320, "favorite_count": 10806, "source": "Twitter Web Client", "id_str": "770273692387450882", "is_retweet": false}, {"created_at": "Wed Mar 16 23:16:46 +0000 2016", "text": "High 5. https://t.co/h12itnVqcl", "in_reply_to_screen_name": null, "retweet_count": 1263, "favorite_count": 3730, "source": "TweetDeck", "id_str": "710243438835441664", "is_retweet": false}, {"created_at": "Wed Jan 13 02:32:08 +0000 2016", "text": "Thanks to @POTUS, 18 million Americans are covered under the ACA. We won't put their health care into the hands of Republicans. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1148, "favorite_count": 2722, "source": "TweetDeck", "id_str": "687099781626331136", "is_retweet": false}, {"created_at": "Sat Aug 06 21:37:06 +0000 2016", "text": "RT @timkaine: The right to vote is at the heart of our democracy, and a weakened VRA threatens that right for too many. It's time to #Resto\u2026", "in_reply_to_screen_name": null, "retweet_count": 2655, "favorite_count": 0, "source": "TweetDeck", "id_str": "762039821355327488", "is_retweet": true}, {"created_at": "Thu Sep 08 00:30:35 +0000 2016", "text": "Not every wound can be seen. Our veterans deserve the best mental health services we can give. #NBCNewsForum https://t.co/vHoPy09BvC", "in_reply_to_screen_name": null, "retweet_count": 3380, "favorite_count": 9113, "source": "Twitter Web Client", "id_str": "773679891434856448", "is_retweet": false}, {"created_at": "Thu Mar 10 04:03:45 +0000 2016", "text": "We're all in this together. Chip in $1, let\u2019s win this nomination and take on Trump: https://t.co/KZBQ7uLqM8", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 1634, "source": "TweetDeck", "id_str": "707778945282916353", "is_retweet": false}, {"created_at": "Sat Aug 13 21:59:45 +0000 2016", "text": "This is what @realDonaldTrump would do to your state's economy. https://t.co/t59VH8sa9e", "in_reply_to_screen_name": null, "retweet_count": 1205, "favorite_count": 2823, "source": "TweetDeck", "id_str": "764582239539699712", "is_retweet": false}, {"created_at": "Sat Jul 23 00:48:58 +0000 2016", "text": "RT @Everytown: Senator @TimKaine is a gunsense champion of the first order. https://t.co/2NTz3KV3oT", "in_reply_to_screen_name": null, "retweet_count": 1987, "favorite_count": 0, "source": "TweetDeck", "id_str": "756652288903643136", "is_retweet": true}, {"created_at": "Fri Jul 22 20:11:43 +0000 2016", "text": "Monitoring the horrific situation in Munich. We stand with our friends in Germany as they work to bring those responsible to justice. -H", "in_reply_to_screen_name": null, "retweet_count": 3857, "favorite_count": 12389, "source": "TweetDeck", "id_str": "756582517566681089", "is_retweet": false}, {"created_at": "Thu Sep 29 17:03:43 +0000 2016", "text": "RT @HillaryforIA: When Ruline Steininger was born, women couldn't vote. Today, at 103, she's #WithHerFirst. https://t.co/Li3O17uGRV", "in_reply_to_screen_name": null, "retweet_count": 3008, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781539968401412096", "is_retweet": true}, {"created_at": "Mon Jul 18 17:05:50 +0000 2016", "text": "White Americans need to do a better job of listening when African Americans talk about the seen and unseen barriers that you face every day.", "in_reply_to_screen_name": null, "retweet_count": 2183, "favorite_count": 5976, "source": "TweetDeck", "id_str": "755086189112221696", "is_retweet": false}, {"created_at": "Thu Sep 29 01:03:07 +0000 2016", "text": "At Monday's debate, Trump denied saying a lot of the things he's said. Let's set the record straight. https://t.co/J3Ym6Qfs04", "in_reply_to_screen_name": null, "retweet_count": 21219, "favorite_count": 30679, "source": "Media Studio", "id_str": "781298225177178113", "is_retweet": false}, {"created_at": "Mon Mar 14 23:29:21 +0000 2016", "text": "Companies that get tax breaks or government investments shouldn\u2019t be walking out on American communities. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 578, "favorite_count": 1373, "source": "TweetDeck", "id_str": "709521831313711104", "is_retweet": false}, {"created_at": "Tue Sep 06 18:35:14 +0000 2016", "text": "The stakes in this campaign couldn\u2019t be higher. Make sure you\u2019re registered to vote: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 636, "favorite_count": 1115, "source": "TweetDeck", "id_str": "773228078516543488", "is_retweet": false}, {"created_at": "Fri Jun 10 17:14:50 +0000 2016", "text": "Trump has called women \u201cpigs,\u201d \u201cdogs,\u201d and \u201cdisgusting animals.\u201d\n\nWe can't even count on him to respect women\u2014much less protect our rights.", "in_reply_to_screen_name": null, "retweet_count": 7225, "favorite_count": 17163, "source": "TweetDeck", "id_str": "741317714103402496", "is_retweet": false}, {"created_at": "Tue Jun 21 16:28:17 +0000 2016", "text": "Donald Trump is proud of his recklessness\u2014that\u2019s his business. But when he\u2019s running for president, it\u2019s ours.", "in_reply_to_screen_name": null, "retweet_count": 1460, "favorite_count": 3257, "source": "TweetDeck", "id_str": "745292264835014656", "is_retweet": false}, {"created_at": "Wed Nov 09 16:41:42 +0000 2016", "text": "\u201cLast night I congratulated Donald Trump and offered to work with him on behalf of our country.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 10530, "favorite_count": 38148, "source": "TweetDeck", "id_str": "796392332467851264", "is_retweet": false}, {"created_at": "Mon Aug 01 13:10:29 +0000 2016", "text": "Meet another Gold Star family with some personal perspective on Donald Trump:\nhttps://t.co/z2eJfg9dv0", "in_reply_to_screen_name": null, "retweet_count": 5973, "favorite_count": 10072, "source": "Twitter Web Client", "id_str": "760100389932773377", "is_retweet": false}, {"created_at": "Thu Jan 07 18:33:18 +0000 2016", "text": "Climate change isn't some abstract future threat\u2014it threatens our families and economy right now. We need to act. https://t.co/7v4DyEWyMG", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 889, "source": "Twitter Web Client", "id_str": "685167342867853313", "is_retweet": false}, {"created_at": "Sun Mar 06 02:47:16 +0000 2016", "text": "Together, we can win the nomination and keep working to break every barrier holding Americans back. Chip in $1 now: https://t.co/F5q7KnL7jl", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 1659, "source": "TweetDeck", "id_str": "706310146365001728", "is_retweet": false}, {"created_at": "Tue Apr 05 15:10:26 +0000 2016", "text": "We should all be able to get time off to care for a newborn baby or sick spouse. It's time to guarantee paid leave.\nhttps://t.co/xgrqxdjoG1", "in_reply_to_screen_name": null, "retweet_count": 1370, "favorite_count": 3134, "source": "Twitter Web Client", "id_str": "717368808311160833", "is_retweet": false}, {"created_at": "Mon Feb 15 00:03:31 +0000 2016", "text": "Black families are denied mortgages nearly 3x as often as white families. We need to tear down barriers of systemic racism that still exist.", "in_reply_to_screen_name": null, "retweet_count": 1639, "favorite_count": 3353, "source": "TweetDeck", "id_str": "699021179458338818", "is_retweet": false}, {"created_at": "Fri Jun 24 01:28:53 +0000 2016", "text": "...and many of them pay a lower tax rate. https://t.co/fy9pJL976G", "in_reply_to_screen_name": null, "retweet_count": 1762, "favorite_count": 3396, "source": "TweetDeck", "id_str": "746153085488214016", "is_retweet": false}, {"created_at": "Thu Jan 28 17:11:24 +0000 2016", "text": "\"The Academy has to catch up with our reality.\" \u2014Hillary on the Oscars\u2019 diversity problem: https://t.co/pAUq8AJySc", "in_reply_to_screen_name": null, "retweet_count": 265, "favorite_count": 615, "source": "Twitter Web Client", "id_str": "692756873217458177", "is_retweet": false}, {"created_at": "Fri Jul 01 02:56:01 +0000 2016", "text": "Our economy is always stronger with a Democrat in the White House. https://t.co/iCi66Pb1Ft #TBT https://t.co/gbFb3LPq2X", "in_reply_to_screen_name": null, "retweet_count": 2016, "favorite_count": 6981, "source": "TweetDeck", "id_str": "748711731560579074", "is_retweet": false}, {"created_at": "Sun Mar 27 14:14:46 +0000 2016", "text": "To those celebrating, I wish you a season full of love, hope, and renewal. Happy Easter! -H", "in_reply_to_screen_name": null, "retweet_count": 1591, "favorite_count": 6205, "source": "Twitter for iPhone", "id_str": "714093306163146752", "is_retweet": false}, {"created_at": "Fri Apr 29 00:14:03 +0000 2016", "text": "Hate isn't an American value. https://t.co/lZJ8T0Xu3M", "in_reply_to_screen_name": null, "retweet_count": 1887, "favorite_count": 4672, "source": "TweetDeck", "id_str": "725840534909100032", "is_retweet": false}, {"created_at": "Wed Feb 03 18:55:44 +0000 2016", "text": ".@astrid_NV your courage and activism make a real difference. Honored to fight beside you\u2014you're part of this team, not a press hit.", "in_reply_to_screen_name": "Astrid_NV", "retweet_count": 452, "favorite_count": 872, "source": "TweetDeck", "id_str": "694957459547488256", "is_retweet": false}, {"created_at": "Wed Jun 22 18:44:39 +0000 2016", "text": "\u201cThe heart of my plan will be the biggest investment in American infrastructure in decades.\u201d \u2014Hillary https://t.co/R6Tw2HzMhm", "in_reply_to_screen_name": null, "retweet_count": 2268, "favorite_count": 6615, "source": "TweetDeck", "id_str": "745688969023791104", "is_retweet": false}, {"created_at": "Wed Oct 05 01:21:53 +0000 2016", "text": "If you can't spot the difference between Pence and Trump on their disastrous economic plans, it's because there isn\u2026 https://t.co/TMFsEb6hp3", "in_reply_to_screen_name": null, "retweet_count": 1970, "favorite_count": 4007, "source": "TweetDeck", "id_str": "783477277464100869", "is_retweet": false}, {"created_at": "Sat Sep 10 16:13:03 +0000 2016", "text": "Hillary on the faith that drives her: \"Do all the good you can for all the people you can in all the ways you can.\" https://t.co/lJH7FVc1wa", "in_reply_to_screen_name": null, "retweet_count": 4063, "favorite_count": 11322, "source": "Twitter Web Client", "id_str": "774641850238005248", "is_retweet": false}, {"created_at": "Sun Jan 24 22:18:35 +0000 2016", "text": "\u201cWhat are our children going to say about your presidency beyond \u2018she was the first woman\u2019?\u201d\nhttps://t.co/u7ip0sJdYa", "in_reply_to_screen_name": null, "retweet_count": 928, "favorite_count": 1708, "source": "Twitter Web Client", "id_str": "691384630973313024", "is_retweet": false}, {"created_at": "Fri Sep 30 15:07:32 +0000 2016", "text": "We've heard Donald's insults for years, and his policies reflect this disregard\u2014even contempt\u2014for women.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2826, "favorite_count": 7282, "source": "TweetDeck", "id_str": "781873120139419649", "is_retweet": false}, {"created_at": "Tue Feb 16 18:59:27 +0000 2016", "text": "Hillary, @katyperry, @eltonofficial, @andradaymusic\u2014all in one place? Get your tickets for the #ImWithHer concert! https://t.co/VstjBLu9bg", "in_reply_to_screen_name": null, "retweet_count": 312, "favorite_count": 742, "source": "TweetDeck", "id_str": "699669437507571712", "is_retweet": false}, {"created_at": "Wed Sep 14 12:58:37 +0000 2016", "text": "RT @Newsweek: Our latest cover story: Trump's foreign ties could upend U.S. national security interests https://t.co/44RNvOMham https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 4348, "favorite_count": 0, "source": "TweetDeck", "id_str": "776042470836695040", "is_retweet": true}, {"created_at": "Wed Apr 20 02:34:00 +0000 2016", "text": "New Yorkers speak every language, worship every faith, and hail from every continent. \n\nOur diversity is a strength, not a weakness.", "in_reply_to_screen_name": null, "retweet_count": 1758, "favorite_count": 4013, "source": "TweetDeck", "id_str": "722614263597121536", "is_retweet": false}, {"created_at": "Tue Jul 05 20:25:01 +0000 2016", "text": "\"Don\u2019t boo, vote! Booing doesn\u2019t help. You need to vote.\u201d \u2014@POTUS on Donald Trump\u2019s dangerous policies", "in_reply_to_screen_name": null, "retweet_count": 2149, "favorite_count": 4979, "source": "TweetDeck", "id_str": "750425270730027008", "is_retweet": false}, {"created_at": "Thu Nov 03 22:30:46 +0000 2016", "text": "RT @TheBriefing2016: .@chucktodd: \"What is the status of the FBI investigation into the Clinton Foundation?\"\n\n@PeteWilliamsNBC: \"There real\u2026", "in_reply_to_screen_name": null, "retweet_count": 3293, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794305850559053824", "is_retweet": true}, {"created_at": "Thu Jun 09 21:27:49 +0000 2016", "text": "\"On virtually every issue, Secretary Clinton stands with working Americans and their families.\" \u2014@steelworkers https://t.co/pFwAhESAq5", "in_reply_to_screen_name": null, "retweet_count": 1365, "favorite_count": 4303, "source": "TweetDeck", "id_str": "741018989946671104", "is_retweet": false}, {"created_at": "Fri Nov 04 18:49:35 +0000 2016", "text": "RT @TheBriefing2016: Fox News' @BretBaier, who first reported the debunked story about Clinton Foundation indictments, apologizes and retra\u2026", "in_reply_to_screen_name": null, "retweet_count": 4468, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794612572897103872", "is_retweet": true}, {"created_at": "Sun Oct 09 19:44:11 +0000 2016", "text": "RT @HFA: A supporter made this video about why people trust Hillary. RT to show you've got her back. https://t.co/SvSvlg48vI https://t.co/u\u2026", "in_reply_to_screen_name": null, "retweet_count": 2197, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785204228289626112", "is_retweet": true}, {"created_at": "Thu Oct 27 19:14:40 +0000 2016", "text": "\"Casting our vote is the ultimate way we go high when they go low.\u201d \u2014@FLOTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 886, "favorite_count": 2446, "source": "TweetDeck", "id_str": "791719782068416512", "is_retweet": false}, {"created_at": "Thu Aug 11 18:30:56 +0000 2016", "text": "Let\u2019s go out and build the future. https://t.co/OvGzoPTtwg", "in_reply_to_screen_name": null, "retweet_count": 848, "favorite_count": 2478, "source": "TweetDeck", "id_str": "763804911758893056", "is_retweet": false}, {"created_at": "Wed Jul 27 15:47:52 +0000 2016", "text": "History made.\nhttps://t.co/JRgDbFms3n", "in_reply_to_screen_name": null, "retweet_count": 2091, "favorite_count": 5626, "source": "Twitter Web Client", "id_str": "758328057325244416", "is_retweet": false}, {"created_at": "Thu Sep 08 01:07:50 +0000 2016", "text": "Text QUALIFIED to 47246 if you agree there was only one candidate tonight who showed she's ready to be the next president.", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 4847, "source": "TweetDeck", "id_str": "773689266501279744", "is_retweet": false}, {"created_at": "Wed Sep 14 20:57:30 +0000 2016", "text": "Hillary's released her medical information and tax returns.\n\nWe're still waiting for Trump to do the same. https://t.co/bxHbFLs24l", "in_reply_to_screen_name": null, "retweet_count": 4478, "favorite_count": 8731, "source": "TweetDeck", "id_str": "776162985429565440", "is_retweet": false}, {"created_at": "Tue Aug 23 17:50:20 +0000 2016", "text": "Small businesses are the backbone of our economy. We should focus on supporting them\u2014not stiffing them. https://t.co/mHmnin9sOR", "in_reply_to_screen_name": null, "retweet_count": 1449, "favorite_count": 4106, "source": "TweetDeck", "id_str": "768143350516023296", "is_retweet": false}, {"created_at": "Fri Jul 29 02:34:56 +0000 2016", "text": "\"For those of you out there who are just getting to know @TimKaine...he'll make the whole country proud as our vice president.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1165, "favorite_count": 4930, "source": "TweetDeck", "id_str": "758853286204104705", "is_retweet": false}, {"created_at": "Mon May 02 00:59:57 +0000 2016", "text": "\"Let\u2019s keep going together.\nLet\u2019s organize and mobilize.\nLet\u2019s make sure that love trumps hate.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1082, "favorite_count": 2721, "source": "TweetDeck", "id_str": "726939248922865664", "is_retweet": false}, {"created_at": "Mon Oct 10 00:15:11 +0000 2016", "text": "Remember. #Debate https://t.co/rlMbTt5WwY", "in_reply_to_screen_name": null, "retweet_count": 25792, "favorite_count": 53274, "source": "TweetDeck", "id_str": "785272428905791489", "is_retweet": false}, {"created_at": "Sun Aug 07 21:56:58 +0000 2016", "text": "RT @HFA: We're live on Facebook giving a demo of our Hillary for America mobile app. Tune in to get an inside look: https://t.co/0wuPE0hMcL.", "in_reply_to_screen_name": null, "retweet_count": 315, "favorite_count": 0, "source": "TweetDeck", "id_str": "762407211767308288", "is_retweet": true}, {"created_at": "Sun Oct 30 18:18:21 +0000 2016", "text": "\"With Donald, it\u2019s always Donald Trump first and everyone else last.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2112, "favorite_count": 4951, "source": "TweetDeck", "id_str": "792792774051495937", "is_retweet": false}, {"created_at": "Mon Oct 10 01:40:36 +0000 2016", "text": "\"You are right about Islamophobia, and it's a shame.\" \u2014Donald Trump, who proposed a ban on Muslims entering the U.S. https://t.co/4xDbrBtVjt", "in_reply_to_screen_name": null, "retweet_count": 4779, "favorite_count": 7682, "source": "TweetDeck", "id_str": "785293925569421312", "is_retweet": false}, {"created_at": "Fri Jan 15 04:30:09 +0000 2016", "text": "Need a good laugh after watching #GOPdebate? Catch Hillary on @fallontonight next! https://t.co/4PkBMfU5qo", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 2451, "source": "TweetDeck", "id_str": "687854258352484353", "is_retweet": false}, {"created_at": "Thu Sep 08 14:38:04 +0000 2016", "text": "Last night, Trump chose to talk about his deep admiration and support for Putin.\n\nMaybe he did it with a smile. https://t.co/IjcqT5Z4KZ", "in_reply_to_screen_name": null, "retweet_count": 6762, "favorite_count": 16782, "source": "Twitter Web Client", "id_str": "773893169717149697", "is_retweet": false}, {"created_at": "Wed Apr 27 01:39:28 +0000 2016", "text": "Thanks to you, victory is in sight. Pitch in $1, and let's go win this nomination: https://t.co/CuTsRc8HKK", "in_reply_to_screen_name": null, "retweet_count": 556, "favorite_count": 1436, "source": "TweetDeck", "id_str": "725137254474194944", "is_retweet": false}, {"created_at": "Mon Oct 10 03:08:25 +0000 2016", "text": "RT @literally_trump: \"She doesn't quit, she doesn't give up, she's a fighter\" \u2014Donald Trump on Hillary Clinton, tonight https://t.co/tXZuLL\u2026", "in_reply_to_screen_name": null, "retweet_count": 1557, "favorite_count": 0, "source": "TweetDeck", "id_str": "785316023918530560", "is_retweet": true}, {"created_at": "Wed Oct 19 02:07:32 +0000 2016", "text": "Check out our new tool: Every time @realDonaldTrump tweets something offensive, automatically donate. https://t.co/6pWTY4BPhY", "in_reply_to_screen_name": null, "retweet_count": 1914, "favorite_count": 5229, "source": "TweetDeck", "id_str": "788562193998614528", "is_retweet": false}, {"created_at": "Fri Apr 15 03:17:59 +0000 2016", "text": "RT if you're standing with Hillary tonight. #DemDebate https://t.co/HTPYX8cnnJ", "in_reply_to_screen_name": null, "retweet_count": 5677, "favorite_count": 6603, "source": "TweetDeck", "id_str": "720813394278944769", "is_retweet": false}, {"created_at": "Tue Jul 19 22:15:48 +0000 2016", "text": "We watched the first night of the #RNCinCLE so you didn't have to. Some of the worst of what we heard: https://t.co/8AGAgdtguz", "in_reply_to_screen_name": null, "retweet_count": 1022, "favorite_count": 2106, "source": "TweetDeck", "id_str": "755526581599207424", "is_retweet": false}, {"created_at": "Fri Feb 12 03:02:36 +0000 2016", "text": "\"I\u2019m very proud that we have more than 750,000 donors, the vast majority giving small contributions.\" Join them \u2192 https://t.co/0cERTyxRfj", "in_reply_to_screen_name": null, "retweet_count": 588, "favorite_count": 1345, "source": "TweetDeck", "id_str": "697979087206359040", "is_retweet": false}, {"created_at": "Tue Oct 04 20:58:09 +0000 2016", "text": ".@TimKaine is going to finish this campaign the same way he started his career\u2014fighting for working families. https://t.co/c2VlpSRaSM", "in_reply_to_screen_name": null, "retweet_count": 2050, "favorite_count": 4956, "source": "TweetDeck", "id_str": "783410905262456832", "is_retweet": false}, {"created_at": "Wed Mar 30 21:33:59 +0000 2016", "text": "We can\u2019t let someone with this much contempt for women\u2019s rights anywhere near the White House.\nhttps://t.co/OjU9gRwsxo", "in_reply_to_screen_name": null, "retweet_count": 8300, "favorite_count": 10650, "source": "Twitter Web Client", "id_str": "715291004991967232", "is_retweet": false}, {"created_at": "Tue May 03 13:00:23 +0000 2016", "text": "Hoosiers, head to the polls today. RT this if you\u2019re voting for Hillary. https://t.co/1CClTdef0F", "in_reply_to_screen_name": null, "retweet_count": 1436, "favorite_count": 3386, "source": "TweetDeck", "id_str": "727482940914057217", "is_retweet": false}, {"created_at": "Tue Sep 27 15:26:17 +0000 2016", "text": "\u201cLet me tell you who built this damn country: the middle class.\u201d \u2014@JoeBiden\n\nLet's keep building it, together: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 5086, "source": "TweetDeck", "id_str": "780790673851224064", "is_retweet": false}, {"created_at": "Fri Jun 10 17:12:49 +0000 2016", "text": "Trump says he'd be \"the best for women.\"\n\nAnyone who'd defund @PPFA and wipe out safe, legal abortion has no idea what\u2019s best for women.", "in_reply_to_screen_name": null, "retweet_count": 2319, "favorite_count": 6934, "source": "TweetDeck", "id_str": "741317204143157248", "is_retweet": false}, {"created_at": "Sat Nov 05 02:31:29 +0000 2016", "text": "RT @CNN: Jay Z: \"I don't have any ill will toward (Trump), but his conversation is divisive ... he cannot be our president\" https://t.co/eJ\u2026", "in_reply_to_screen_name": null, "retweet_count": 9923, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794728814177828864", "is_retweet": true}, {"created_at": "Tue Jun 28 21:15:58 +0000 2016", "text": "New plan: We should let entrepreneurs defer their student loans for up to 3 years \u2192 https://t.co/YuuGnE9EZy", "in_reply_to_screen_name": null, "retweet_count": 718, "favorite_count": 2100, "source": "TweetDeck", "id_str": "747901376139792384", "is_retweet": false}, {"created_at": "Thu Nov 24 20:37:00 +0000 2016", "text": "Hoping everyone has a safe &amp; Happy Thanksgiving today, &amp; quality time with family &amp; friends. -H", "in_reply_to_screen_name": null, "retweet_count": 14186, "favorite_count": 113018, "source": "Twitter for iPhone", "id_str": "801887362787770368", "is_retweet": false}, {"created_at": "Thu Mar 24 01:34:17 +0000 2016", "text": "Six years in, the ACA has brought us closer than ever to making sure every American has access to health care. https://t.co/fNwJ5KkWBQ", "in_reply_to_screen_name": null, "retweet_count": 840, "favorite_count": 2108, "source": "TweetDeck", "id_str": "712814760807571456", "is_retweet": false}, {"created_at": "Sat Jul 23 03:00:26 +0000 2016", "text": "RT @SherrodBrown: My friend @timkaine brings knowledge and experience to what is already the most qualified Presidential ticket in my lifet\u2026", "in_reply_to_screen_name": null, "retweet_count": 1614, "favorite_count": 0, "source": "TweetDeck", "id_str": "756685373208666112", "is_retweet": true}, {"created_at": "Fri Mar 25 13:05:53 +0000 2016", "text": "We need a president who will provide leadership that\u2019s strong, smart, and steady. The last thing we need are leaders who incite more fear.", "in_reply_to_screen_name": null, "retweet_count": 2420, "favorite_count": 6930, "source": "TweetDeck", "id_str": "713351197831405568", "is_retweet": false}, {"created_at": "Wed Sep 28 19:36:11 +0000 2016", "text": "Paying for college shouldn\u2019t be the hardest part of going to college: https://t.co/3wMRKFZ4I7", "in_reply_to_screen_name": null, "retweet_count": 814, "favorite_count": 2367, "source": "TweetDeck", "id_str": "781215949248720896", "is_retweet": false}, {"created_at": "Mon Oct 10 03:44:08 +0000 2016", "text": "She won. https://t.co/b8lLNPWUiM #Debate https://t.co/C4MP8cPONF", "in_reply_to_screen_name": null, "retweet_count": 20859, "favorite_count": 50501, "source": "TweetDeck", "id_str": "785325012152713216", "is_retweet": false}, {"created_at": "Tue Jul 05 23:29:21 +0000 2016", "text": "\"I'm here today because I believe in Hillary Clinton.\" \u2014@POTUS at his first campaign stop of 2016\nhttps://t.co/Q3V0b4hLLQ", "in_reply_to_screen_name": null, "retweet_count": 3340, "favorite_count": 8342, "source": "Twitter Web Client", "id_str": "750471661992849408", "is_retweet": false}, {"created_at": "Mon Feb 01 17:15:31 +0000 2016", "text": "This is it\u2014the #IowaCaucus is today! If you\u2019re standing with Hillary, RT to say #ImWithHer. https://t.co/O1p1ecbnLs", "in_reply_to_screen_name": null, "retweet_count": 2156, "favorite_count": 2317, "source": "TweetDeck", "id_str": "694207462094798849", "is_retweet": false}, {"created_at": "Sat Mar 12 17:45:13 +0000 2016", "text": "If you see bigotry, you should oppose it. If you see violence, you should condemn it. If you see a bully, you should stand up to him.", "in_reply_to_screen_name": null, "retweet_count": 3737, "favorite_count": 6478, "source": "TweetDeck", "id_str": "708710453581651968", "is_retweet": false}, {"created_at": "Sun May 22 15:01:34 +0000 2016", "text": "Do all the good you can, for all the people you can, for as long as you can. https://t.co/Ei8yn8ikUg", "in_reply_to_screen_name": null, "retweet_count": 4275, "favorite_count": 11757, "source": "Twitter for iPhone", "id_str": "734398804158468096", "is_retweet": false}, {"created_at": "Mon Sep 26 01:15:15 +0000 2016", "text": "When we come together, there's no problem we can't solve and no divide we can't heal. https://t.co/2eutCA4R6C", "in_reply_to_screen_name": null, "retweet_count": 3405, "favorite_count": 7995, "source": "Media Studio", "id_str": "780214115088240640", "is_retweet": false}, {"created_at": "Thu Jul 28 03:25:00 +0000 2016", "text": "\u201cThe American Dream is something no wall will ever contain.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3300, "favorite_count": 7051, "source": "TweetDeck", "id_str": "758503496782077952", "is_retweet": false}, {"created_at": "Thu Mar 17 20:55:35 +0000 2016", "text": "No es una coincidencia que sus palabras hayan resultado en tantos actos odiosos. https://t.co/1h4Sg5l9yN", "in_reply_to_screen_name": null, "retweet_count": 444, "favorite_count": 873, "source": "TweetDeck", "id_str": "710570299637555200", "is_retweet": false}, {"created_at": "Wed Sep 28 19:39:37 +0000 2016", "text": "If you already have student debt, we\u2019ll help you refinance and pay it back as a percentage of your income. https://t.co/3wMRKFZ4I7", "in_reply_to_screen_name": null, "retweet_count": 1229, "favorite_count": 3173, "source": "TweetDeck", "id_str": "781216815741534208", "is_retweet": false}, {"created_at": "Thu Jun 16 20:56:28 +0000 2016", "text": "Thanks Chris, for showing what leadership looks like. I hope GOP senators take note. Looking forward to the vote. -H https://t.co/ookEqS1HMd", "in_reply_to_screen_name": null, "retweet_count": 4281, "favorite_count": 15425, "source": "TweetDeck", "id_str": "743547818011394048", "is_retweet": false}, {"created_at": "Thu Mar 31 01:02:30 +0000 2016", "text": "Yet another idea from @realDonaldTrump that's ignorant, reckless, and frankly absurd. Sad! https://t.co/XMf8Z3CAUR", "in_reply_to_screen_name": null, "retweet_count": 1514, "favorite_count": 2942, "source": "TweetDeck", "id_str": "715343479421984768", "is_retweet": false}, {"created_at": "Tue Jan 05 22:58:21 +0000 2016", "text": "Tune in tonight to catch Hillary on @hardball! Sneak preview: https://t.co/1irxHNWIcY https://t.co/tM9xCAdSK9", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 897, "source": "TweetDeck", "id_str": "684509267253039104", "is_retweet": false}, {"created_at": "Thu Sep 08 00:12:28 +0000 2016", "text": "Our next Commander-in-Chief needs to have the steadiness, strength, and judgment to make life and death decisions. https://t.co/UV6XBW7GCM", "in_reply_to_screen_name": null, "retweet_count": 1107, "favorite_count": 3059, "source": "TweetDeck", "id_str": "773675333975470080", "is_retweet": false}, {"created_at": "Fri Jul 22 22:04:29 +0000 2016", "text": "\"He sure doesn\u2019t speak for me, because I know we are stronger together, and that\u2019s what we\u2019re going to be.\" \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1260, "favorite_count": 4506, "source": "TweetDeck", "id_str": "756610896923922433", "is_retweet": false}, {"created_at": "Fri Jan 29 03:27:33 +0000 2016", "text": "Look real hard\u2014you still won't find anyone supporting equal pay, paid leave, or reproductive rights at #GOPdebate. https://t.co/ZDZkJVaYi6", "in_reply_to_screen_name": null, "retweet_count": 3857, "favorite_count": 8119, "source": "TweetDeck", "id_str": "692911934077812737", "is_retweet": false}, {"created_at": "Thu Oct 13 13:18:52 +0000 2016", "text": "\"Hillary Clinton has the potential to be an excellent president of the United States.\" \u2014@WashingtonPost https://t.co/Fo7uO64qqB", "in_reply_to_screen_name": null, "retweet_count": 2731, "favorite_count": 8152, "source": "TweetDeck", "id_str": "786556812367659008", "is_retweet": false}, {"created_at": "Sun May 22 00:50:37 +0000 2016", "text": "\"Unlike Donald Trump, I will not pander to the gun lobby. We will not be silenced and we will not be intimidated.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3096, "favorite_count": 7989, "source": "Twitter for iPhone", "id_str": "734184658523430913", "is_retweet": false}, {"created_at": "Wed Jun 01 15:53:24 +0000 2016", "text": "The gist: Trump's for-profit university deceived &amp; exploited students to take their money.\n\nAnd he has the gall to call the media \"sleazy.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1255, "favorite_count": 2072, "source": "Twitter for iPhone", "id_str": "738035729687842816", "is_retweet": false}, {"created_at": "Mon Apr 25 23:05:42 +0000 2016", "text": "Connecticut, Maryland, Pensilvania, Delaware y Rhode Island. https://t.co/F545Y5Sg5O #EstoyConElla https://t.co/fSJRv2Xk9u", "in_reply_to_screen_name": null, "retweet_count": 552, "favorite_count": 1149, "source": "TweetDeck", "id_str": "724736171948040192", "is_retweet": false}, {"created_at": "Wed Jul 06 16:32:59 +0000 2016", "text": "What Donald Trump did in Atlantic City is nothing to brag about\u2014it\u2019s shameful\u2014and every voter in America needs to know about it.", "in_reply_to_screen_name": null, "retweet_count": 1268, "favorite_count": 3115, "source": "TweetDeck", "id_str": "750729265935704064", "is_retweet": false}, {"created_at": "Mon Sep 19 01:00:37 +0000 2016", "text": "Congratulations on your Emmy, Kate! Big fan of yours, too. https://t.co/w00QO1GwyH", "in_reply_to_screen_name": null, "retweet_count": 14657, "favorite_count": 50517, "source": "TweetDeck", "id_str": "777673718982184964", "is_retweet": false}, {"created_at": "Sat Aug 13 19:55:31 +0000 2016", "text": "RT @johnpodesta: Farmers and ranchers are central to our economy, energy &amp; food security. Our plan to help: https://t.co/iv6kT3vumd https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 635, "favorite_count": 0, "source": "TweetDeck", "id_str": "764550974237179904", "is_retweet": true}, {"created_at": "Mon Oct 17 18:14:44 +0000 2016", "text": "We have an important job for lawyers and law students\u2014but not actors. Sorry, @MrJoshCharles. Text LAWYERS to 47246\u2026 https://t.co/tuDqRN8o90", "in_reply_to_screen_name": null, "retweet_count": 3867, "favorite_count": 9021, "source": "Media Studio", "id_str": "788080821265575939", "is_retweet": false}, {"created_at": "Tue Oct 04 19:05:40 +0000 2016", "text": "RT @CNNPolitics: Michelle Obama: \"Hillary Clinton is tough\" ... When she gets knocked down, she comes back stronger https://t.co/cWfzFKLZF7", "in_reply_to_screen_name": null, "retweet_count": 1190, "favorite_count": 0, "source": "TweetDeck", "id_str": "783382596218748928", "is_retweet": true}, {"created_at": "Fri Apr 01 13:12:10 +0000 2016", "text": "Some are claiming we can solve America\u2019s problems by building walls and turning against each other.\n\nWe know better.\nhttps://t.co/OssP7gHQCD", "in_reply_to_screen_name": null, "retweet_count": 2233, "favorite_count": 4543, "source": "Twitter Web Client", "id_str": "715889492746330112", "is_retweet": false}, {"created_at": "Sat Jun 04 21:18:09 +0000 2016", "text": "\"Judge Curiel is as much of an American as I am, and he's as much of an American as Donald Trump is.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 813, "favorite_count": 1831, "source": "TweetDeck", "id_str": "739204618048143360", "is_retweet": false}, {"created_at": "Wed Aug 03 13:03:25 +0000 2016", "text": "Lincoln: \"War, at its best, is terrible.\"\nTrump: \"I love war.\"\n\nHow Trump's words compare to former presidents': https://t.co/FFykARMR8m", "in_reply_to_screen_name": null, "retweet_count": 3192, "favorite_count": 6604, "source": "TweetDeck", "id_str": "760823387505750016", "is_retweet": false}, {"created_at": "Sat Jul 23 20:55:09 +0000 2016", "text": "\"Tough times don't last, but tough people do.\"  \u2014@TimKaine in his first speech as Hillary's running mate\nhttps://t.co/6plk2v2nIg", "in_reply_to_screen_name": null, "retweet_count": 3007, "favorite_count": 8169, "source": "Twitter Web Client", "id_str": "756955836191154176", "is_retweet": false}, {"created_at": "Tue Nov 01 16:14:19 +0000 2016", "text": "One week to Election Day. RT this if it describes you. https://t.co/3TKJ4H68Kz https://t.co/xrdugzH7cG", "in_reply_to_screen_name": null, "retweet_count": 5779, "favorite_count": 9246, "source": "TweetDeck", "id_str": "793486337261367297", "is_retweet": false}, {"created_at": "Fri Sep 23 23:36:29 +0000 2016", "text": "Republicans are once again turning their backs on the people of Flint who have waited far too long for help. It's w\u2026 https://t.co/sYyqDHAVXp", "in_reply_to_screen_name": null, "retweet_count": 5233, "favorite_count": 8205, "source": "TweetDeck", "id_str": "779464482984697856", "is_retweet": false}, {"created_at": "Fri May 13 02:03:56 +0000 2016", "text": "You can tell a lot about someone by the company they keep. https://t.co/JXSzLwUlnP", "in_reply_to_screen_name": null, "retweet_count": 1022, "favorite_count": 1678, "source": "TweetDeck", "id_str": "730941617918644224", "is_retweet": false}, {"created_at": "Thu Nov 03 00:25:11 +0000 2016", "text": "\"I know it seems a little odd for someone running for president to say we need more love and kindness in America.\" https://t.co/uvd1pk6nhB", "in_reply_to_screen_name": null, "retweet_count": 6996, "favorite_count": 17018, "source": "Media Studio", "id_str": "793972253394354176", "is_retweet": false}, {"created_at": "Tue Oct 04 21:33:08 +0000 2016", "text": "\"He was a failure at business\u2026and by wrecking his business, he wrecked the lives of his workers.\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1508, "favorite_count": 4372, "source": "TweetDeck", "id_str": "783419710113193985", "is_retweet": false}, {"created_at": "Wed Jul 27 00:56:33 +0000 2016", "text": "\"Let\u2019s declare: Love trumps hate!\u201d \u2014@AmericaFerrera and @LenaDunham https://t.co/F1SdYjsPmX", "in_reply_to_screen_name": null, "retweet_count": 2276, "favorite_count": 6997, "source": "Twitter Web Client", "id_str": "758103750766628864", "is_retweet": false}, {"created_at": "Thu Sep 22 01:00:32 +0000 2016", "text": "No child should ever have to grow up in poverty, yet far too many do. We have to do better. Here's how: https://t.co/Qo1RmQDwd6", "in_reply_to_screen_name": null, "retweet_count": 1985, "favorite_count": 4493, "source": "TweetDeck", "id_str": "778760862169440256", "is_retweet": false}, {"created_at": "Fri Sep 02 03:06:52 +0000 2016", "text": "The disastrous Mexico wall trip: a case study in the Trump school of diplomacy. https://t.co/Nza7IYN1pu", "in_reply_to_screen_name": null, "retweet_count": 2089, "favorite_count": 4213, "source": "TweetDeck", "id_str": "771544894741417984", "is_retweet": false}, {"created_at": "Sat Oct 22 13:06:46 +0000 2016", "text": "Just 17 days left in this campaign. If you're proud to stand with Hillary, chip in now and get your free sticker: https://t.co/wcVRk9D7V1", "in_reply_to_screen_name": null, "retweet_count": 1850, "favorite_count": 7020, "source": "TweetDeck", "id_str": "789815260207349760", "is_retweet": false}, {"created_at": "Mon Sep 19 16:35:13 +0000 2016", "text": "It\u2019s wrong to tear each other down.\nIt\u2019s wrong to let income inequality get worse.\nIt\u2019s wrong to put a loose cannon in charge.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 665, "favorite_count": 1355, "source": "Twitter Web Client", "id_str": "777908918970449920", "is_retweet": false}, {"created_at": "Wed Mar 16 01:09:45 +0000 2016", "text": "To be be great, we can\u2019t be small.  We can\u2019t lose what made America great in the first place.", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 2670, "source": "TweetDeck", "id_str": "709909486924865536", "is_retweet": false}, {"created_at": "Mon Apr 25 14:04:59 +0000 2016", "text": "Let's stand together to do all the good we can, in all the ways we can, for as long as we can.\nhttps://t.co/jHaoZKXURE", "in_reply_to_screen_name": null, "retweet_count": 1920, "favorite_count": 3358, "source": "Twitter Web Client", "id_str": "724600096071901185", "is_retweet": false}, {"created_at": "Tue Oct 04 19:32:06 +0000 2016", "text": "RT @CNNPolitics: Michelle Obama calls on Americans to vote: \"Each of you, just in this hall, could swing an entire precinct\" https://t.co/L\u2026", "in_reply_to_screen_name": null, "retweet_count": 1424, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783389249991282688", "is_retweet": true}, {"created_at": "Fri Jan 15 21:23:24 +0000 2016", "text": "\"I would like to see Planned Parenthood even get more funding.\" How to ensure all women have access to health care: https://t.co/kvD47CkwRR", "in_reply_to_screen_name": null, "retweet_count": 898, "favorite_count": 2318, "source": "TweetDeck", "id_str": "688109252368400384", "is_retweet": false}, {"created_at": "Thu Feb 04 04:19:07 +0000 2016", "text": "La c\u00e1rcel no es un substituto para la rehabilitaci\u00f3n\u2014Hillary quiere hacer m\u00e1s para tratar a los que sufren de adicci\u00f3n.", "in_reply_to_screen_name": null, "retweet_count": 278, "favorite_count": 740, "source": "TweetDeck", "id_str": "695099238040993793", "is_retweet": false}, {"created_at": "Thu Oct 20 16:18:35 +0000 2016", "text": "\"Hillary...crushed Donald Trump in the most effective series of debate performances in modern political history.\" https://t.co/xlGor2ZAYQ", "in_reply_to_screen_name": null, "retweet_count": 2702, "favorite_count": 9569, "source": "TweetDeck", "id_str": "789138757198946305", "is_retweet": false}, {"created_at": "Sat Apr 23 21:01:37 +0000 2016", "text": "Every child in America deserves clean air to breathe, clean water to drink, and a safe and healthy place to live. https://t.co/t0eAF9tXHH", "in_reply_to_screen_name": null, "retweet_count": 1290, "favorite_count": 2714, "source": "Twitter Web Client", "id_str": "723980168725979136", "is_retweet": false}, {"created_at": "Wed Oct 19 21:01:09 +0000 2016", "text": "Trump says disqualifying things almost every day\u2014but his policy \"plans\" matter too. We put them next to Hillary's: https://t.co/mfSjPAEuwD", "in_reply_to_screen_name": null, "retweet_count": 1702, "favorite_count": 4539, "source": "TweetDeck", "id_str": "788847478837768192", "is_retweet": false}, {"created_at": "Mon Aug 01 19:13:27 +0000 2016", "text": "Why not carrier pigeons, @realDonaldTrump?\nhttps://t.co/lNrJcakpJW", "in_reply_to_screen_name": null, "retweet_count": 1982, "favorite_count": 5077, "source": "Twitter Web Client", "id_str": "760191735024660480", "is_retweet": false}, {"created_at": "Mon Oct 31 18:40:51 +0000 2016", "text": "Instead of dark and divisive, our vision for America is hopeful and inclusive. Big-hearted, not small-minded. It\u2019s about lifting people up.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 856, "favorite_count": 1639, "source": "TweetDeck", "id_str": "793160824642830340", "is_retweet": false}, {"created_at": "Tue Jun 14 16:43:47 +0000 2016", "text": "People can\u2019t board planes with full shampoo bottles\u2014but people being watched by the FBI for terrorism can buy a gun, no questions asked?", "in_reply_to_screen_name": null, "retweet_count": 12548, "favorite_count": 21288, "source": "TweetDeck", "id_str": "742759450860257280", "is_retweet": false}, {"created_at": "Tue Aug 23 15:03:18 +0000 2016", "text": "On average, it takes black women until today to catch up to white men's 2015 earnings. Time to close the pay gap. https://t.co/5eYBD4Y7Mr", "in_reply_to_screen_name": null, "retweet_count": 3344, "favorite_count": 7579, "source": "TweetDeck", "id_str": "768101311741038592", "is_retweet": false}, {"created_at": "Thu Sep 22 01:48:16 +0000 2016", "text": "Trump should have to answer exactly why he refuses to believe that @POTUS is American. https://t.co/NReJ3wJE8l", "in_reply_to_screen_name": null, "retweet_count": 3528, "favorite_count": 6943, "source": "TweetDeck", "id_str": "778772872659628033", "is_retweet": false}, {"created_at": "Wed Apr 20 02:30:05 +0000 2016", "text": "New York is a place to dream big\u2014and we\u2019re setting bold, progressive goals in this campaign. But New Yorkers also like to get things done.", "in_reply_to_screen_name": null, "retweet_count": 770, "favorite_count": 2036, "source": "TweetDeck", "id_str": "722613276786475008", "is_retweet": false}, {"created_at": "Fri Oct 28 19:12:51 +0000 2016", "text": "Trump\u2019s campaign strategy:\nGet women to stay home.\nGet young people to stay home.\nGet people of color to stay home.\n\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1150, "favorite_count": 2204, "source": "TweetDeck", "id_str": "792081715967721473", "is_retweet": false}, {"created_at": "Sun Sep 18 18:43:36 +0000 2016", "text": "RT @BernieSanders: When we stand together - as white, black and hispanic, gay and straight, women and men - we trump hate. https://t.co/B8a\u2026", "in_reply_to_screen_name": null, "retweet_count": 4389, "favorite_count": 0, "source": "TweetDeck", "id_str": "777578838498873344", "is_retweet": true}, {"created_at": "Wed Jul 20 22:17:04 +0000 2016", "text": "Trump or Pence: Who said it worse? It's a close call. https://t.co/1SgYUICguz", "in_reply_to_screen_name": null, "retweet_count": 913, "favorite_count": 1816, "source": "TweetDeck", "id_str": "755889289423122432", "is_retweet": false}, {"created_at": "Tue Jul 26 22:33:18 +0000 2016", "text": "Getting ready to make some history. #RollCallVote https://t.co/GGOrHW7Roa", "in_reply_to_screen_name": null, "retweet_count": 2043, "favorite_count": 7879, "source": "TweetDeck", "id_str": "758067698253303810", "is_retweet": false}, {"created_at": "Thu Oct 06 20:05:16 +0000 2016", "text": "Hillary's advice to girls everywhere:\n\n\"There's nothing wrong with knowing what you want and going after it.\" https://t.co/76Ha3wR8lu", "in_reply_to_screen_name": null, "retweet_count": 2149, "favorite_count": 5999, "source": "TweetDeck", "id_str": "784122372756504576", "is_retweet": false}, {"created_at": "Sun Oct 02 18:50:06 +0000 2016", "text": "Now that's pretty rich coming from a guy who paid $0 in taxes for 18 years: https://t.co/N6iaVvbYJQ https://t.co/fc5imqnAi5", "in_reply_to_screen_name": null, "retweet_count": 6095, "favorite_count": 12272, "source": "Twitter Web Client", "id_str": "782653906513981444", "is_retweet": false}, {"created_at": "Fri Oct 14 13:56:23 +0000 2016", "text": "\"If you vote for someone other than Hillary\u2014or if you don't vote at all\u2014then you are helping to elect her opponent.\u2026 https://t.co/z86IXad0uV", "in_reply_to_screen_name": null, "retweet_count": 23255, "favorite_count": 44885, "source": "Media Studio", "id_str": "786928644056834048", "is_retweet": false}, {"created_at": "Wed Aug 17 17:53:21 +0000 2016", "text": "Donald Trump is still the same man who insults Gold Star families, demeans women, and mocks people with disabilities.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1487, "favorite_count": 3423, "source": "TweetDeck", "id_str": "765969781916860416", "is_retweet": false}, {"created_at": "Tue Oct 11 16:15:09 +0000 2016", "text": "The choice on climate change:\nHillary has a plan to turn America into a clean energy superpower.\nTrump calls it a \"\u2026 https://t.co/Hev46Br2ob", "in_reply_to_screen_name": null, "retweet_count": 3747, "favorite_count": 9087, "source": "Media Studio", "id_str": "785876401912160257", "is_retweet": false}, {"created_at": "Tue Oct 04 16:41:23 +0000 2016", "text": "A mother who lost a son to gun violence asked Hillary a question about how we can stop it: https://t.co/3LVV6KSSvO", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1109, "favorite_count": 2735, "source": "TweetDeck", "id_str": "783346289568276481", "is_retweet": false}, {"created_at": "Sat Aug 06 18:59:46 +0000 2016", "text": "\u2026 so yeah, it's been quite a week for Donald Trump. https://t.co/UsexFeJjtl", "in_reply_to_screen_name": null, "retweet_count": 6537, "favorite_count": 11574, "source": "TweetDeck", "id_str": "762000226811011072", "is_retweet": false}, {"created_at": "Wed Jul 13 17:02:50 +0000 2016", "text": "We need to listen to the dedicated, principled police officers working hard every day to rebuild trust with the communities they serve.", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 2079, "source": "TweetDeck", "id_str": "753273492838178816", "is_retweet": false}, {"created_at": "Mon Nov 07 03:11:59 +0000 2016", "text": "This one's for you, Hillary. https://t.co/KtzpIpSziO", "in_reply_to_screen_name": null, "retweet_count": 24628, "favorite_count": 49775, "source": "Media Studio", "id_str": "795463782671798272", "is_retweet": false}, {"created_at": "Fri Sep 16 23:05:39 +0000 2016", "text": "126 things Donald Trump has said and done that should disqualify his candidacy: https://t.co/h4qUNNnTOf", "in_reply_to_screen_name": null, "retweet_count": 3735, "favorite_count": 6087, "source": "TweetDeck", "id_str": "776920011789234176", "is_retweet": false}, {"created_at": "Thu Jun 02 22:06:34 +0000 2016", "text": "If we aren't doing everything we can to prevent #GunViolence, then we're not doing nearly enough. https://t.co/YoAwfP0Rnk", "in_reply_to_screen_name": null, "retweet_count": 2480, "favorite_count": 6130, "source": "TweetDeck", "id_str": "738492027961282560", "is_retweet": false}, {"created_at": "Sat Jul 23 17:54:10 +0000 2016", "text": "\u201cIn the first 100 days, we\u2019ll put forward a comprehensive immigration reform package that includes a path to citizenship.\u201d \u2014@TimKaine", "in_reply_to_screen_name": null, "retweet_count": 1416, "favorite_count": 4217, "source": "TweetDeck", "id_str": "756910291464622080", "is_retweet": false}, {"created_at": "Wed Aug 03 14:38:32 +0000 2016", "text": "Making our economy work for everyone starts by making sure those at the top pay their fair share in taxes.\nhttps://t.co/uDdkrzKL9O", "in_reply_to_screen_name": null, "retweet_count": 2677, "favorite_count": 7056, "source": "Twitter Web Client", "id_str": "760847322922090496", "is_retweet": false}, {"created_at": "Tue Mar 29 01:32:43 +0000 2016", "text": "Tenemos que resolver la cr\u00edsis econ\u00f3mica de Puerto Rico ahora. Gracias por levantar tu voz @Lin_Manuel. https://t.co/udNRP17A3f", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 826, "source": "TweetDeck", "id_str": "714626309079625728", "is_retweet": false}, {"created_at": "Wed Jun 29 16:03:43 +0000 2016", "text": "Two words: free WiFi.\n\nIn train stations, airports and other public spaces. https://t.co/6CJVBl9j7e", "in_reply_to_screen_name": null, "retweet_count": 1631, "favorite_count": 4057, "source": "TweetDeck", "id_str": "748185186957922304", "is_retweet": false}, {"created_at": "Sat Apr 02 16:07:55 +0000 2016", "text": "\u201cYou\u2019ve always had my back, and I\u2019ve always tried to have yours.\u201d https://t.co/PoSYbXVyeO https://t.co/miQFIXahOY", "in_reply_to_screen_name": null, "retweet_count": 942, "favorite_count": 2524, "source": "TweetDeck", "id_str": "716296108394328066", "is_retweet": false}, {"created_at": "Fri Aug 26 22:03:12 +0000 2016", "text": "Making it easier to live the American Dream means making it easier to start and grow a small business.\nhttps://t.co/mOSa1W5Pyl", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 4991, "source": "Twitter Web Client", "id_str": "769294148792754177", "is_retweet": false}, {"created_at": "Fri Jul 22 21:57:44 +0000 2016", "text": "\"I've never heard an American leader...claiming that he's all we need. That's not a democracy, my friends.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2287, "favorite_count": 6083, "source": "TweetDeck", "id_str": "756609196704038913", "is_retweet": false}, {"created_at": "Wed Jun 22 18:57:45 +0000 2016", "text": "We should support our teachers, not scapegoat them. https://t.co/PlnHNleoQN", "in_reply_to_screen_name": null, "retweet_count": 1764, "favorite_count": 4808, "source": "TweetDeck", "id_str": "745692268896595970", "is_retweet": false}, {"created_at": "Wed Apr 06 14:26:32 +0000 2016", "text": "It is legal to pay workers with disabilities less than the minimum wage.\n\nLet's end that: https://t.co/xJQBF7a48F https://t.co/9rMPoAQOA2", "in_reply_to_screen_name": null, "retweet_count": 1095, "favorite_count": 1740, "source": "TweetDeck", "id_str": "717720147193176066", "is_retweet": false}, {"created_at": "Sat Mar 12 17:46:39 +0000 2016", "text": "You don't make America great by getting rid of everything that made America great. Our values, diversity, openness\u2014these are strengths.", "in_reply_to_screen_name": null, "retweet_count": 3465, "favorite_count": 7266, "source": "TweetDeck", "id_str": "708710814115569664", "is_retweet": false}, {"created_at": "Sun Jan 17 21:27:10 +0000 2016", "text": "The answers on gun violence at the #GOPdebate reached an all-time low. https://t.co/xV0xEZWU9j", "in_reply_to_screen_name": null, "retweet_count": 307, "favorite_count": 619, "source": "Twitter for iPhone", "id_str": "688834975362379777", "is_retweet": false}, {"created_at": "Sat May 07 19:59:07 +0000 2016", "text": "Preguntamos a varios neoyorquinos sobre Donald Trump\u2014y estas fueron sus reacciones. https://t.co/F1nvX17tPt", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 794, "source": "TweetDeck", "id_str": "729037869126434818", "is_retweet": false}, {"created_at": "Thu Oct 20 03:17:09 +0000 2016", "text": "RT @MotherJones: Hillary Clinton eviscerated Trump on abortion during the debate https://t.co/tbApmYn7Cs", "in_reply_to_screen_name": null, "retweet_count": 2188, "favorite_count": 0, "source": "TweetDeck", "id_str": "788942099555254272", "is_retweet": true}, {"created_at": "Thu Jul 14 15:58:23 +0000 2016", "text": "Even @SpeakerRyan called Trump\u2019s comments on Judge Curiel, \u201cthe textbook definition of a racist comment.\u201d", "in_reply_to_screen_name": null, "retweet_count": 839, "favorite_count": 2294, "source": "TweetDeck", "id_str": "753619662634639360", "is_retweet": false}, {"created_at": "Sun Sep 25 17:20:44 +0000 2016", "text": "RT @MilitaryTimes: This war hero's Gold Star parents want you to know why they're backing .@HillaryClinton for president https://t.co/ZyhlI\u2026", "in_reply_to_screen_name": null, "retweet_count": 1477, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780094699264770048", "is_retweet": true}, {"created_at": "Fri Sep 16 00:22:29 +0000 2016", "text": "Long overdue, but good to see the Senate approve much-needed aid for Flint. Time for the House to do the same. -H https://t.co/nQdgxiYnwV", "in_reply_to_screen_name": null, "retweet_count": 1954, "favorite_count": 5388, "source": "TweetDeck", "id_str": "776576956489994240", "is_retweet": false}, {"created_at": "Thu Jul 28 01:31:03 +0000 2016", "text": "\u201cHe says he cares about the middle class? Give me a break.\n\nThat\u2019s a bunch of malarkey!\" \u2014@JoeBiden on Donald Trump https://t.co/YtMc8vKRtS", "in_reply_to_screen_name": null, "retweet_count": 2337, "favorite_count": 6003, "source": "Twitter Web Client", "id_str": "758474818270466048", "is_retweet": false}, {"created_at": "Tue Jul 26 02:26:28 +0000 2016", "text": "\"Hillary Clinton has never quit on anything in her life.\" \u2014@FLOTUS #DemsInPhilly https://t.co/mbg5H8QZA3", "in_reply_to_screen_name": null, "retweet_count": 4031, "favorite_count": 10345, "source": "TweetDeck", "id_str": "757763989359173632", "is_retweet": false}, {"created_at": "Wed Sep 28 19:26:42 +0000 2016", "text": "RT @BernieSanders: This election is enormously important for the future of this country. It is imperative that we elect @HillaryClinton as\u2026", "in_reply_to_screen_name": null, "retweet_count": 5613, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781213561737580545", "is_retweet": true}, {"created_at": "Sun Jun 26 18:39:35 +0000 2016", "text": "Happy #NYCPride! https://t.co/ZV75RMBiM2", "in_reply_to_screen_name": null, "retweet_count": 4689, "favorite_count": 15517, "source": "TweetDeck", "id_str": "747137246642442240", "is_retweet": false}, {"created_at": "Wed Mar 30 16:41:22 +0000 2016", "text": "\"Isn\u2019t it time to finally guarantee equal pay for the work women do?\u201d -Hillary https://t.co/kZOrcaKXbe", "in_reply_to_screen_name": null, "retweet_count": 1338, "favorite_count": 3483, "source": "TweetDeck", "id_str": "715217362937470977", "is_retweet": false}, {"created_at": "Fri Feb 05 04:13:29 +0000 2016", "text": "Let the world know that you\u2019re proud to stand with Hillary. Get your free magnet now \u2192 https://t.co/Dd7YV1aSTy #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 1266, "source": "TweetDeck", "id_str": "695460210845028352", "is_retweet": false}, {"created_at": "Sun Oct 16 21:13:48 +0000 2016", "text": "The attack on the Orange County HQ @NCGOP office is horrific and unacceptable. Very grateful that everyone is safe.", "in_reply_to_screen_name": null, "retweet_count": 7282, "favorite_count": 20364, "source": "TweetDeck", "id_str": "787763497308418052", "is_retweet": false}, {"created_at": "Sat Mar 19 13:20:28 +0000 2016", "text": "This campaign is powered by more than 1 million people who\u2019ve donated to elect Hillary. https://t.co/lBDtuW8Rh0", "in_reply_to_screen_name": null, "retweet_count": 905, "favorite_count": 2690, "source": "Twitter Web Client", "id_str": "711180538929942528", "is_retweet": false}, {"created_at": "Sat Jan 02 00:53:52 +0000 2016", "text": "It\u2019s way too difficult in America to have both a job and a family. In some states, child care costs more than college tuition\u2014that's absurd.", "in_reply_to_screen_name": null, "retweet_count": 1188, "favorite_count": 3312, "source": "Twitter for iPhone", "id_str": "683088786666991616", "is_retweet": false}, {"created_at": "Mon Mar 07 23:17:12 +0000 2016", "text": "A vote in 2002 is not a strategy to defeat ISIS now. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 531, "favorite_count": 1539, "source": "TweetDeck", "id_str": "706982056929181697", "is_retweet": false}, {"created_at": "Sun Jan 10 18:04:12 +0000 2016", "text": "This 19-year-old voter in New Hampshire was on the fence until he heard @billclinton speak on Hillary's experience. https://t.co/Ejx8bdF8fj", "in_reply_to_screen_name": null, "retweet_count": 409, "favorite_count": 923, "source": "TweetDeck", "id_str": "686247181452505088", "is_retweet": false}, {"created_at": "Wed Jul 27 00:20:51 +0000 2016", "text": "\"Let's build. Let's unite.\" \u2014Maria Hamilton, mother of Dontre Hamilton\nhttps://t.co/joZyEZu11Y", "in_reply_to_screen_name": null, "retweet_count": 1731, "favorite_count": 4543, "source": "Twitter Web Client", "id_str": "758094764566732800", "is_retweet": false}, {"created_at": "Thu Jul 28 03:14:59 +0000 2016", "text": "\"Don't boo, vote!\u201d \u2014@POTUS https://t.co/xahMq2sU1q", "in_reply_to_screen_name": null, "retweet_count": 7265, "favorite_count": 13495, "source": "TweetDeck", "id_str": "758500973836922880", "is_retweet": false}, {"created_at": "Tue Jul 26 02:46:55 +0000 2016", "text": "Couldn\u2019t agree more, @POTUS. https://t.co/hvsfWLEqP3", "in_reply_to_screen_name": null, "retweet_count": 3458, "favorite_count": 14609, "source": "TweetDeck", "id_str": "757769136269320193", "is_retweet": false}, {"created_at": "Wed Feb 24 20:20:44 +0000 2016", "text": "Joining @IAmSteveHarvey today to continue the conversation he's been having on guns in America. Don\u2019t miss it!\nhttps://t.co/fln4WYpSnY", "in_reply_to_screen_name": null, "retweet_count": 806, "favorite_count": 1533, "source": "Twitter Web Client", "id_str": "702588996514246656", "is_retweet": false}, {"created_at": "Tue Nov 08 11:01:21 +0000 2016", "text": "It\u2019s Election Day and polls are officially open. When will you vote today? Confirm where to go here:\u2026 https://t.co/msNrG1MBGB", "in_reply_to_screen_name": null, "retweet_count": 3145, "favorite_count": 6929, "source": "TweetDeck", "id_str": "795944292028182528", "is_retweet": false}, {"created_at": "Fri Aug 12 14:24:45 +0000 2016", "text": "\ud83c\udfa7 Just launched: With Her, our official campaign podcast. Subscribe and listen to Episode 1: https://t.co/IIzDVOt3r4", "in_reply_to_screen_name": null, "retweet_count": 1392, "favorite_count": 3390, "source": "Twitter for iPhone", "id_str": "764105343978930176", "is_retweet": false}, {"created_at": "Wed Apr 06 16:10:55 +0000 2016", "text": "We need to drive a manufacturing renaissance in this country. Here\u2019s how we\u2019ll do that: https://t.co/ma8QY5STT6", "in_reply_to_screen_name": null, "retweet_count": 356, "favorite_count": 780, "source": "TweetDeck", "id_str": "717746415410262016", "is_retweet": false}, {"created_at": "Mon Jul 04 22:35:46 +0000 2016", "text": "\u201cSi el lugar donde est\u00e1s no tiene espacio para tu voz, no tengas miedo de crear tu propio espacio\u201d\u2014 Hillary en #TheToast.", "in_reply_to_screen_name": null, "retweet_count": 718, "favorite_count": 1724, "source": "TweetDeck", "id_str": "750095786839506944", "is_retweet": false}, {"created_at": "Thu May 12 01:29:25 +0000 2016", "text": "Under Trump's tax plan, the wealthiest 0.1% of Americans would get more tax relief than the bottom 60% combined. https://t.co/xL95NA3Ofn", "in_reply_to_screen_name": null, "retweet_count": 1260, "favorite_count": 1601, "source": "TweetDeck", "id_str": "730570542026231808", "is_retweet": false}, {"created_at": "Tue Nov 01 20:08:34 +0000 2016", "text": "Can we just stop and reflect on the absurdity of Donald Trump finding fault with Miss Universe? Who would act like this? A bully.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 902, "favorite_count": 2040, "source": "TweetDeck", "id_str": "793545288019484673", "is_retweet": false}, {"created_at": "Thu Jan 28 00:30:06 +0000 2016", "text": "No matter who you are, what you look like, or where you come from\u2014you deserve a president who will fight for you. https://t.co/BJqdGSwmMX", "in_reply_to_screen_name": null, "retweet_count": 1366, "favorite_count": 3715, "source": "TweetDeck", "id_str": "692504890652913664", "is_retweet": false}, {"created_at": "Thu Oct 20 02:13:57 +0000 2016", "text": "If Donald is going to whine before the game is even over, he doesn\u2019t have what it takes to do this job. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 7119, "favorite_count": 19896, "source": "TweetDeck", "id_str": "788926196297953281", "is_retweet": false}, {"created_at": "Thu Sep 29 19:16:43 +0000 2016", "text": "Barack&amp;\nMichelle&amp;\nJoe&amp;\nBernie&amp;\nElizabeth&amp;\nYou?\n\nhttps://t.co/tTgeqxNqYm https://t.co/myxRlsyFOb", "in_reply_to_screen_name": null, "retweet_count": 5187, "favorite_count": 13042, "source": "Media Studio", "id_str": "781573440432136192", "is_retweet": false}, {"created_at": "Mon May 16 17:38:38 +0000 2016", "text": "The American auto industry just had its best year ever. So yes, we can bring American manufacturing back. https://t.co/rf3YV1dEic", "in_reply_to_screen_name": null, "retweet_count": 1878, "favorite_count": 4951, "source": "TweetDeck", "id_str": "732264005239181312", "is_retweet": false}, {"created_at": "Sun Sep 18 22:07:13 +0000 2016", "text": "It wasn't so long ago that women faced and took down barriers that can seem ridiculous now. https://t.co/nuG8Gqmzt1 https://t.co/XwvEuxsrOV", "in_reply_to_screen_name": null, "retweet_count": 4049, "favorite_count": 6334, "source": "Twitter for iPhone", "id_str": "777630082378690560", "is_retweet": false}, {"created_at": "Wed Jul 27 19:36:37 +0000 2016", "text": "\"She is still the best darn change maker I have ever known.\u201d \u2014@BillClinton on Hillary https://t.co/ukxpCMe4gd", "in_reply_to_screen_name": null, "retweet_count": 1287, "favorite_count": 6045, "source": "TweetDeck", "id_str": "758385624311328771", "is_retweet": false}, {"created_at": "Fri Sep 16 14:00:39 +0000 2016", "text": "Donald Trump is unfit to be president.\nWe just can\u2019t accept this.\nWe\u2019ve got to stand up to this.\nIf we don\u2019t, it won\u2019t stop.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1190, "favorite_count": 2351, "source": "TweetDeck", "id_str": "776782857993916416", "is_retweet": false}, {"created_at": "Wed Feb 03 15:30:31 +0000 2016", "text": "The middle class needs a raise, not a tax increase. Families should be able to save, build, and get ahead.", "in_reply_to_screen_name": null, "retweet_count": 1014, "favorite_count": 2446, "source": "TweetDeck", "id_str": "694905815157882880", "is_retweet": false}, {"created_at": "Sun Feb 21 13:58:19 +0000 2016", "text": "In 2015, @Simone_Biles leapt into record books as the world's most decorated woman gymnast. https://t.co/n2sb0AK1lG https://t.co/L4oBBOYMgF", "in_reply_to_screen_name": null, "retweet_count": 546, "favorite_count": 1665, "source": "TweetDeck", "id_str": "701405593026875393", "is_retweet": false}, {"created_at": "Fri May 06 20:02:56 +0000 2016", "text": "\"I get along with everybody.\" \u2014@realDonaldTrump\n\nAbout that...\nhttps://t.co/QHYq3vScho", "in_reply_to_screen_name": null, "retweet_count": 5315, "favorite_count": 7174, "source": "Twitter Web Client", "id_str": "728676442523848704", "is_retweet": false}, {"created_at": "Mon Oct 10 19:25:31 +0000 2016", "text": "\"To paraphrase my friend Michelle Obama, one of us went high and one of us went low!\u201d \u2014Hillary on last night\u2019s debate", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 808, "favorite_count": 2737, "source": "TweetDeck", "id_str": "785561918765404160", "is_retweet": false}, {"created_at": "Fri Jul 22 15:54:51 +0000 2016", "text": "WATCH: Damning video undermines Trump momentum after accepting nomination \u2192 https://t.co/EMqM2lAdxE", "in_reply_to_screen_name": null, "retweet_count": 1428, "favorite_count": 2691, "source": "TweetDeck", "id_str": "756517874324373504", "is_retweet": false}, {"created_at": "Fri Jul 08 22:27:28 +0000 2016", "text": "\"Let\u2019s ask ourselves, what can I do to stop violence and promote justice? How can I show that your life matters to me?\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2217, "favorite_count": 5715, "source": "TweetDeck", "id_str": "751543251895721984", "is_retweet": false}, {"created_at": "Sun Oct 09 23:20:12 +0000 2016", "text": "It's time to hold Trump accountable to the facts. Follow @TheBriefing2016 during tonight's debate to help spread the word. #Debates", "in_reply_to_screen_name": null, "retweet_count": 2282, "favorite_count": 6491, "source": "TweetDeck", "id_str": "785258590726742017", "is_retweet": false}, {"created_at": "Thu Aug 25 20:38:47 +0000 2016", "text": "@Lesdoggg, no one deserves this\u2014least of all someone who brings us so much joy. I'm with you. -H", "in_reply_to_screen_name": "Lesdoggg", "retweet_count": 7711, "favorite_count": 26962, "source": "TweetDeck", "id_str": "768910514688815105", "is_retweet": false}, {"created_at": "Sat Sep 10 00:22:05 +0000 2016", "text": "When Hillary talks about needing more love and kindness in our lives, this is what she means. https://t.co/F9jMEDy00A", "in_reply_to_screen_name": null, "retweet_count": 2917, "favorite_count": 7789, "source": "Twitter Web Client", "id_str": "774402528490520576", "is_retweet": false}, {"created_at": "Tue Aug 09 17:28:15 +0000 2016", "text": "How can we prevent the spread of Zika in the U.S.? Hillary and @TimKaine respond on @Quora: https://t.co/ncuMmTCrSN https://t.co/ZeQOgVVxhX", "in_reply_to_screen_name": null, "retweet_count": 1090, "favorite_count": 2712, "source": "TweetDeck", "id_str": "763064363355869184", "is_retweet": false}, {"created_at": "Fri Jan 29 03:20:16 +0000 2016", "text": "Here you go, @JebBush: https://t.co/CNTHWnBzMs\n\n#GOPDebate", "in_reply_to_screen_name": null, "retweet_count": 594, "favorite_count": 1176, "source": "TweetDeck", "id_str": "692910102106501121", "is_retweet": false}, {"created_at": "Tue Oct 18 21:19:37 +0000 2016", "text": "RT @JoeBiden: Be one of the millions of Americans who vote before Election Day. Head to https://t.co/tu6W6eS9xR for more information. https\u2026", "in_reply_to_screen_name": null, "retweet_count": 3116, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788489738407796736", "is_retweet": true}, {"created_at": "Wed Oct 12 20:39:22 +0000 2016", "text": "\u201cIf he wants to make America great again, start by making America with American steel.\u201d \u2014Hillary on Trump using Chinese steel", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 936, "favorite_count": 2185, "source": "TweetDeck", "id_str": "786305280900464640", "is_retweet": false}, {"created_at": "Mon Jun 13 17:26:59 +0000 2016", "text": "If the FBI is watching you for suspected terrorist links, you shouldn\u2019t be able to just go buy a gun with no questions asked.", "in_reply_to_screen_name": null, "retweet_count": 5831, "favorite_count": 14975, "source": "TweetDeck", "id_str": "742407933108092929", "is_retweet": false}, {"created_at": "Tue Aug 16 15:21:20 +0000 2016", "text": "RT @TeenVogue: \"By harnessing your energy and ideas, we can solve many of the problems we face.\" \u2014 @HillaryClinton https://t.co/q90WpEBtO9", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 0, "source": "TweetDeck", "id_str": "765569137439547393", "is_retweet": true}, {"created_at": "Sat Jul 23 17:26:44 +0000 2016", "text": "\"Tim has led on some of the most important issues facing our country\u2014from voting rights to LGBT equality to criminal justice reform.\"", "in_reply_to_screen_name": null, "retweet_count": 1050, "favorite_count": 3120, "source": "TweetDeck", "id_str": "756903385505337344", "is_retweet": false}, {"created_at": "Wed Nov 09 16:44:28 +0000 2016", "text": "\"Our constitutional democracy demands our participation, not just every four years, but all the time.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 15097, "favorite_count": 51321, "source": "TweetDeck", "id_str": "796393027975729152", "is_retweet": false}, {"created_at": "Thu Jul 28 00:32:38 +0000 2016", "text": "RT @JoeBiden: I've seen Hillary in the Senate &amp; the Situation Room. Clear-eyed. Steady. Understands working people. Exactly the leadership\u2026", "in_reply_to_screen_name": null, "retweet_count": 2224, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758460120636465152", "is_retweet": true}, {"created_at": "Thu Aug 25 20:01:17 +0000 2016", "text": "Trump says he wants to \"make America great again,\" but his real message remains \u201cmake America hate again.\u201d https://t.co/7u3h7PSIXZ", "in_reply_to_screen_name": null, "retweet_count": 2229, "favorite_count": 5108, "source": "TweetDeck", "id_str": "768901080482734081", "is_retweet": false}, {"created_at": "Fri Feb 12 21:58:46 +0000 2016", "text": "HBCUs produce some of our finest leaders. Hillary's plan dedicates $25 billion to support institutions like these. https://t.co/rAsi3wbaPy", "in_reply_to_screen_name": null, "retweet_count": 940, "favorite_count": 1835, "source": "TweetDeck", "id_str": "698265011735695360", "is_retweet": false}, {"created_at": "Mon Oct 10 18:30:47 +0000 2016", "text": "43 times Donald Trump lied\u2014or was just totally wrong\u2014on the debate stage last night: https://t.co/yG2IVPEvpK", "in_reply_to_screen_name": null, "retweet_count": 3433, "favorite_count": 7880, "source": "TweetDeck", "id_str": "785548146915041280", "is_retweet": false}, {"created_at": "Tue Mar 22 16:13:04 +0000 2016", "text": "Confirma en d\u00f3nde puedes votar aqu\u00ed \u2192 https://t.co/DFed9nFewQ #EstoyConElla https://t.co/8G72uqZl57", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 720, "source": "TweetDeck", "id_str": "712311138348900352", "is_retweet": false}, {"created_at": "Wed Feb 10 02:19:16 +0000 2016", "text": "\"A president has to make sure nothing holds you back\u2014not debt, not discrimination, not a deck that\u2019s always stacked for those at the top.\"", "in_reply_to_screen_name": null, "retweet_count": 764, "favorite_count": 1672, "source": "TweetDeck", "id_str": "697243406175703040", "is_retweet": false}, {"created_at": "Sun Aug 21 13:37:31 +0000 2016", "text": "This lifelong Republican wrote a letter to his daughter about why he's voting for Hillary this November: https://t.co/iqmnZaR7xN", "in_reply_to_screen_name": null, "retweet_count": 2531, "favorite_count": 5784, "source": "TweetDeck", "id_str": "767354949613346816", "is_retweet": false}, {"created_at": "Thu Oct 20 21:31:19 +0000 2016", "text": "\"Hillary knows that our country is powerful and vibrant and strong\u2014big enough to have a place for all of us.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 459, "favorite_count": 1256, "source": "TweetDeck", "id_str": "789217455960952832", "is_retweet": false}, {"created_at": "Thu Jul 07 16:36:16 +0000 2016", "text": "Trump got ahead by cheating working people like Andrew Tesoro. Now he wants to do the same thing to our country.\nhttps://t.co/un2YiRu3A5", "in_reply_to_screen_name": null, "retweet_count": 5296, "favorite_count": 8318, "source": "Twitter Web Client", "id_str": "751092479013695488", "is_retweet": false}, {"created_at": "Thu Aug 25 21:06:31 +0000 2016", "text": "Trump asked what the African American community has to lose by voting for him. @MarlonDMarshall's response: https://t.co/ZJtX7d49bM", "in_reply_to_screen_name": null, "retweet_count": 1353, "favorite_count": 2850, "source": "TweetDeck", "id_str": "768917494568460293", "is_retweet": false}, {"created_at": "Fri Sep 23 19:16:58 +0000 2016", "text": "Addiction is a disease\u2014not a moral failing. We should support those who are struggling with it. #OpioidAwarenessWeek https://t.co/V9Uz3jVEjN", "in_reply_to_screen_name": null, "retweet_count": 2084, "favorite_count": 5304, "source": "TweetDeck", "id_str": "779399176564113408", "is_retweet": false}, {"created_at": "Thu Oct 27 01:43:46 +0000 2016", "text": "\"Hillary Clinton is a fighter for all of us. She's the fighter we need.\" https://t.co/RTNgVppbwU", "in_reply_to_screen_name": null, "retweet_count": 3336, "favorite_count": 8959, "source": "Media Studio", "id_str": "791455315342614530", "is_retweet": false}, {"created_at": "Sat Aug 13 18:23:57 +0000 2016", "text": "The choice on jobs is pretty clear: See how your state would fare under Hillary vs. Trump. https://t.co/xIrmB63qg6", "in_reply_to_screen_name": null, "retweet_count": 1113, "favorite_count": 3354, "source": "TweetDeck", "id_str": "764527930777202688", "is_retweet": false}, {"created_at": "Sun Aug 07 19:32:03 +0000 2016", "text": "Donald Trump's no good, horrible, very bad week. https://t.co/MtgwywgJ3q", "in_reply_to_screen_name": null, "retweet_count": 1358, "favorite_count": 4235, "source": "TweetDeck", "id_str": "762370739152519169", "is_retweet": false}, {"created_at": "Sat Oct 08 17:10:52 +0000 2016", "text": "RT @GlobeOpinion: .@GlobeOpinion endorses: Run, don't walk, to your polling place and vote for @HillaryClinton for president. https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 4311, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784803256988041216", "is_retweet": true}, {"created_at": "Wed Mar 02 20:45:19 +0000 2016", "text": "A typical African-American family has 8 cents of wealth for every dollar a white family has. We need to fix that. https://t.co/CZciwWT6GG -H", "in_reply_to_screen_name": null, "retweet_count": 1018, "favorite_count": 1976, "source": "TweetDeck", "id_str": "705131896305541120", "is_retweet": false}, {"created_at": "Fri Feb 05 16:29:39 +0000 2016", "text": "\"Regardless of how hard the days are...be grateful.\" https://t.co/fjsCAGcPYZ", "in_reply_to_screen_name": null, "retweet_count": 349, "favorite_count": 896, "source": "TweetDeck", "id_str": "695645470127976448", "is_retweet": false}, {"created_at": "Mon Jul 11 12:09:07 +0000 2016", "text": "What does it say about a presidential candidate when he consistently showers praise on brutal dictators?\nhttps://t.co/YFVXJlpnIt", "in_reply_to_screen_name": null, "retweet_count": 3358, "favorite_count": 5532, "source": "Twitter Web Client", "id_str": "752474802699415557", "is_retweet": false}, {"created_at": "Wed Aug 03 21:45:59 +0000 2016", "text": "\"There is no doubt in my mind that Donald Trump is unqualified and unfit to be Commander-in-Chief.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2767, "favorite_count": 11207, "source": "TweetDeck", "id_str": "760954895767863296", "is_retweet": false}, {"created_at": "Fri Oct 07 03:26:36 +0000 2016", "text": "\"Podemos demostrar que somos una comunidad poderosa. We can prove that we are a mighty community.\" \u2014@SalmaHayek \u2192\u2026 https://t.co/KsjnRWnERS", "in_reply_to_screen_name": null, "retweet_count": 4299, "favorite_count": 8599, "source": "Media Studio", "id_str": "784233438261968896", "is_retweet": false}, {"created_at": "Thu Sep 15 20:00:57 +0000 2016", "text": "\"My opponent has America all wrong. There\u2019s nothing we can\u2019t do when we come together as one nation.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 855, "favorite_count": 2401, "source": "TweetDeck", "id_str": "776511138897035264", "is_retweet": false}, {"created_at": "Thu Jul 21 03:06:39 +0000 2016", "text": "Mike Pence tried to legalize LGBT discrimination in Indiana\u2014and cost the state millions in the process. https://t.co/EPBBLI0ykc #RNCinCLE", "in_reply_to_screen_name": null, "retweet_count": 3232, "favorite_count": 4682, "source": "TweetDeck", "id_str": "755962165446766592", "is_retweet": false}, {"created_at": "Tue Aug 16 22:24:26 +0000 2016", "text": "Closely monitoring the flooding in Louisiana &amp; Mississippi. The @RedCross is helping displaced families in need: https://t.co/sSYTbQMndP -H", "in_reply_to_screen_name": null, "retweet_count": 1459, "favorite_count": 4294, "source": "TweetDeck", "id_str": "765675613034250240", "is_retweet": false}, {"created_at": "Mon Oct 03 19:31:15 +0000 2016", "text": "RT @KingJames: Was at practice all morning so little late but wanted to share... https://t.co/1nrR0eWKBD", "in_reply_to_screen_name": null, "retweet_count": 1903, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783026646362324992", "is_retweet": true}, {"created_at": "Tue Apr 19 01:39:43 +0000 2016", "text": "We don't all look the same, or sound the same, or worship the same\u2014and that's one of America's biggest strengths.\nhttps://t.co/m4CJ0NgBhq", "in_reply_to_screen_name": null, "retweet_count": 2617, "favorite_count": 5846, "source": "Twitter Web Client", "id_str": "722238214585487360", "is_retweet": false}, {"created_at": "Thu Apr 28 19:11:32 +0000 2016", "text": ".@jimmyfallon: Does Donald Trump intimidate you?\n\nHillary: No. #TBT\nhttps://t.co/mzRhO8uxmQ", "in_reply_to_screen_name": null, "retweet_count": 1975, "favorite_count": 4356, "source": "Twitter Web Client", "id_str": "725764405074382849", "is_retweet": false}, {"created_at": "Sat May 28 22:17:50 +0000 2016", "text": "Disgusting. https://t.co/A8Hm24ZT1H", "in_reply_to_screen_name": null, "retweet_count": 1633, "favorite_count": 3310, "source": "TweetDeck", "id_str": "736682925266198529", "is_retweet": false}, {"created_at": "Wed Jun 15 19:05:37 +0000 2016", "text": "Some fights are too important to stay silent. Preventing gun violence is one of them. Stand strong @ChrisMurphyCT. https://t.co/LEl7iSLCgF", "in_reply_to_screen_name": null, "retweet_count": 5698, "favorite_count": 14745, "source": "TweetDeck", "id_str": "743157530780655616", "is_retweet": false}, {"created_at": "Fri Jul 22 01:02:17 +0000 2016", "text": "RT @dominiclowell: Thank you to the @NBA for standing with the LGBT community today! A big win for equality and fairness over discriminatio\u2026", "in_reply_to_screen_name": null, "retweet_count": 753, "favorite_count": 0, "source": "TweetDeck", "id_str": "756293254635806720", "is_retweet": true}, {"created_at": "Wed May 18 17:49:35 +0000 2016", "text": "Thank you, @POTUS, for making sure millions of Americans receive the overtime pay they deserve. -H https://t.co/R5degrzUMT", "in_reply_to_screen_name": null, "retweet_count": 1078, "favorite_count": 2576, "source": "TweetDeck", "id_str": "732991537982939136", "is_retweet": false}, {"created_at": "Thu Sep 08 03:40:58 +0000 2016", "text": "Imagine this man in charge of our men and women in uniform. https://t.co/IyZ3kBGBzm", "in_reply_to_screen_name": null, "retweet_count": 1758, "favorite_count": 3656, "source": "TweetDeck", "id_str": "773727805263736832", "is_retweet": false}, {"created_at": "Wed Apr 27 03:54:21 +0000 2016", "text": "Caught your speech, @realDonaldTrump. About that \"woman's card\"...\nhttps://t.co/kKaHWISchy", "in_reply_to_screen_name": null, "retweet_count": 5134, "favorite_count": 9443, "source": "Twitter Web Client", "id_str": "725171200100433920", "is_retweet": false}, {"created_at": "Fri Jan 15 04:16:42 +0000 2016", "text": "They may be arguing, but they agree on so much: denying climate change, repealing Obamacare, and cutting taxes for the wealthy. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1278, "favorite_count": 2918, "source": "Twitter Web Client", "id_str": "687850871384850434", "is_retweet": false}, {"created_at": "Sat Nov 05 00:19:32 +0000 2016", "text": "Don't let this man become your next president: https://t.co/3TKJ4HnJC7 https://t.co/bxLn6ghq0x", "in_reply_to_screen_name": null, "retweet_count": 4866, "favorite_count": 7793, "source": "Media Studio", "id_str": "794695609722617859", "is_retweet": false}, {"created_at": "Thu May 12 21:05:50 +0000 2016", "text": "\"I don\u2019t want Americans to feel left out and left behind. I want the American Dream to be alive and well.\" \u2014Hillary\nhttps://t.co/Jds9AWz2Xw", "in_reply_to_screen_name": null, "retweet_count": 1590, "favorite_count": 3540, "source": "Twitter Web Client", "id_str": "730866597066211328", "is_retweet": false}, {"created_at": "Thu Mar 10 17:17:00 +0000 2016", "text": ".@FLGovScott, all eyes are on you. Buck the trend: Do the right thing and protect a woman's right to make her own health decisions. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 838, "favorite_count": 1874, "source": "TweetDeck", "id_str": "707978573567672321", "is_retweet": false}, {"created_at": "Wed Oct 19 17:45:13 +0000 2016", "text": "Spoiler alert: He was actually wrong. #Debate https://t.co/EVaiJio993", "in_reply_to_screen_name": null, "retweet_count": 1533, "favorite_count": 4327, "source": "Media Studio", "id_str": "788798168586555392", "is_retweet": false}, {"created_at": "Wed Jul 20 21:05:01 +0000 2016", "text": "What our president says matters. We can't let @realDonaldTrump's hateful words speak for us. https://t.co/L8WymYbvls", "in_reply_to_screen_name": null, "retweet_count": 2965, "favorite_count": 7149, "source": "TweetDeck", "id_str": "755871154729025537", "is_retweet": false}, {"created_at": "Fri Jul 22 03:17:24 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump's plan mostly benefits billionaires -- and millionaires like Donald Trump. https://t.co/KAWLrRTIhr", "in_reply_to_screen_name": null, "retweet_count": 1587, "favorite_count": 0, "source": "TweetDeck", "id_str": "756327254549000192", "is_retweet": true}, {"created_at": "Tue Feb 16 21:16:20 +0000 2016", "text": "\"These are not only problems of economic inequality. They are problems of racial inequality. We\u2019ve got to say that loudly and clearly.\"", "in_reply_to_screen_name": null, "retweet_count": 562, "favorite_count": 994, "source": "TweetDeck", "id_str": "699703882327396352", "is_retweet": false}, {"created_at": "Mon Jun 13 18:41:41 +0000 2016", "text": "We have to stand together and be proud together. There is no better rebuke to the terrorists and all those who hate. https://t.co/jnFMG6J5Ac", "in_reply_to_screen_name": null, "retweet_count": 4784, "favorite_count": 13230, "source": "TweetDeck", "id_str": "742426734188990464", "is_retweet": false}, {"created_at": "Fri Jul 29 22:31:44 +0000 2016", "text": "With the first local transmission of Zika in FL, it\u2019s even more critical for Republicans to stop blocking action: https://t.co/KjmWMDOgDl", "in_reply_to_screen_name": null, "retweet_count": 2357, "favorite_count": 5819, "source": "TweetDeck", "id_str": "759154468202086400", "is_retweet": false}, {"created_at": "Fri Feb 12 16:35:26 +0000 2016", "text": "A Bernie Sanders supporter asked Hillary a question\u2014here\u2019s what he thought of her response: https://t.co/zOVEYhjzmN", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 1082, "source": "TweetDeck", "id_str": "698183640736522240", "is_retweet": false}, {"created_at": "Wed Oct 19 20:20:55 +0000 2016", "text": "In 1994, Ryan Moore made an impression on First Lady Hillary Clinton\u2014and she him: \"She has helped make me into the\u2026 https://t.co/C1iAjYpoMn", "in_reply_to_screen_name": null, "retweet_count": 2788, "favorite_count": 8364, "source": "Media Studio", "id_str": "788837352399482880", "is_retweet": false}, {"created_at": "Thu Oct 06 17:18:14 +0000 2016", "text": "When Trump calls America a \"third-world country,\" you can tell he doesn't do a lot of listening to what's actually\u2026 https://t.co/627kIwXSEa", "in_reply_to_screen_name": null, "retweet_count": 3045, "favorite_count": 9558, "source": "TweetDeck", "id_str": "784080335235649536", "is_retweet": false}, {"created_at": "Tue Jul 05 19:54:22 +0000 2016", "text": "\"I saw the passion that she feels for anybody who's experienced injustice. ... It was personal to her.\" \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 896, "favorite_count": 2650, "source": "TweetDeck", "id_str": "750417558067671044", "is_retweet": false}, {"created_at": "Wed Aug 10 17:01:37 +0000 2016", "text": "\"The time has come for Republicans...to repudiate Mr. Trump once and for all.\" \u2014@nytimes https://t.co/yMKCpKMC4l", "in_reply_to_screen_name": null, "retweet_count": 2224, "favorite_count": 4968, "source": "TweetDeck", "id_str": "763420047004037120", "is_retweet": false}, {"created_at": "Thu Jul 28 03:16:16 +0000 2016", "text": "\"I know Hillary won\u2019t relent until ISIL is destroyed.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 889, "favorite_count": 3250, "source": "TweetDeck", "id_str": "758501296492216320", "is_retweet": false}, {"created_at": "Sat Oct 01 19:59:48 +0000 2016", "text": "Hillary teamed up with @BernieSanders on a plan to make college debt-free for all Americans. https://t.co/sdWVzdxIrG", "in_reply_to_screen_name": null, "retweet_count": 2289, "favorite_count": 5922, "source": "TweetDeck", "id_str": "782309056358866945", "is_retweet": false}, {"created_at": "Mon Aug 08 20:30:14 +0000 2016", "text": "Last night, swimmer @KatieLedecky won gold and broke her own world record in the 400m freestyle. Congrats, Katie! https://t.co/db79swBbOr", "in_reply_to_screen_name": null, "retweet_count": 2022, "favorite_count": 9996, "source": "TweetDeck", "id_str": "762747771246051328", "is_retweet": false}, {"created_at": "Fri May 20 17:12:52 +0000 2016", "text": "We need a president who will unite leaders around the world to defeat ISIS, not one who insults and alienates them. https://t.co/4RoN9h0U90", "in_reply_to_screen_name": null, "retweet_count": 1778, "favorite_count": 3507, "source": "TweetDeck", "id_str": "733707072018190336", "is_retweet": false}, {"created_at": "Wed Feb 10 03:27:03 +0000 2016", "text": "If you\u2019re standing with Hillary tonight, let her know. https://t.co/wLwS0T2te2", "in_reply_to_screen_name": null, "retweet_count": 2689, "favorite_count": 6430, "source": "TweetDeck", "id_str": "697260464301064193", "is_retweet": false}, {"created_at": "Mon Jun 27 23:31:39 +0000 2016", "text": "Thanks to the Children's Health Insurance Program, eight million kids like Kayla are covered. Watch the new ad:\nhttps://t.co/nxVpETmcxy", "in_reply_to_screen_name": null, "retweet_count": 1336, "favorite_count": 3626, "source": "Twitter Web Client", "id_str": "747573134786650112", "is_retweet": false}, {"created_at": "Thu Aug 11 23:03:00 +0000 2016", "text": "Congrats on bringing home the gold and silver, Simone and Aly. We\u2019re all so proud of you! -H https://t.co/oqYrHXmZTH", "in_reply_to_screen_name": null, "retweet_count": 3472, "favorite_count": 17544, "source": "Twitter Web Client", "id_str": "763873378897985536", "is_retweet": false}, {"created_at": "Thu Sep 08 15:22:25 +0000 2016", "text": "RT @mikereedschmidt: The House should reject H.R. 5424, which rolls back important rules on Wall Street money managers and puts workers\u2019 re\u2026", "in_reply_to_screen_name": null, "retweet_count": 480, "favorite_count": 0, "source": "TweetDeck", "id_str": "773904330990714880", "is_retweet": true}, {"created_at": "Thu Mar 24 23:01:35 +0000 2016", "text": "\u201cFour boys shot my son dead on Christmas Eve.\" A moment backstage with a mom who lost her son to gun violence.\nhttps://t.co/rrfV3gfRIG", "in_reply_to_screen_name": null, "retweet_count": 2410, "favorite_count": 5680, "source": "Twitter Web Client", "id_str": "713138723701952513", "is_retweet": false}, {"created_at": "Thu Jul 28 00:04:33 +0000 2016", "text": "\"I would give every single day that I have left for just one more day with my mom.\" \u2014Erica Smegielski https://t.co/WVhAk7POo5", "in_reply_to_screen_name": null, "retweet_count": 1205, "favorite_count": 3402, "source": "TweetDeck", "id_str": "758453050285621249", "is_retweet": false}, {"created_at": "Thu Jul 21 17:58:01 +0000 2016", "text": "\"A sniveling coward\" \n\"Carnival barker\"\nJust some of the things Republicans at the #RNCinCLE have said about Trump: https://t.co/3EfPjKc5NH", "in_reply_to_screen_name": null, "retweet_count": 1441, "favorite_count": 2617, "source": "TweetDeck", "id_str": "756186481237032960", "is_retweet": false}, {"created_at": "Mon Nov 07 13:59:31 +0000 2016", "text": "America is better than Donald Trump. https://t.co/jfd3CXLD1s https://t.co/UYMwkmmxKf", "in_reply_to_screen_name": null, "retweet_count": 4886, "favorite_count": 10478, "source": "Media Studio", "id_str": "795626738382503937", "is_retweet": false}, {"created_at": "Wed Oct 05 01:42:47 +0000 2016", "text": "Yes, Trump and Pence are running an insult-driven campaign.\n\nDonald's literally doing it right now. #VPDebate\nhttps://t.co/VZeBQ85nyH", "in_reply_to_screen_name": null, "retweet_count": 9347, "favorite_count": 15380, "source": "TweetDeck", "id_str": "783482536701915136", "is_retweet": false}, {"created_at": "Fri Mar 04 20:07:53 +0000 2016", "text": "\"As Detroit proves every day, what has been broken can be re-built, stronger than before.\" \u2014Hillary in Michigan", "in_reply_to_screen_name": null, "retweet_count": 576, "favorite_count": 1162, "source": "Twitter Web Client", "id_str": "705847253358026752", "is_retweet": false}, {"created_at": "Tue Feb 02 22:10:08 +0000 2016", "text": "Hillary just became the first woman ever to win the #IowaCaucus. https://t.co/gqtX8PZfhP", "in_reply_to_screen_name": null, "retweet_count": 1528, "favorite_count": 3539, "source": "TweetDeck", "id_str": "694643994844909569", "is_retweet": false}, {"created_at": "Mon Aug 15 17:27:08 +0000 2016", "text": "Trump says he won\u2019t tell anyone what he\u2019ll do about ISIS because he wants to keep his plan \u201csecret.\u201d\n\nWell, the secret is he has no plan.", "in_reply_to_screen_name": null, "retweet_count": 3523, "favorite_count": 10522, "source": "TweetDeck", "id_str": "765238409669537792", "is_retweet": false}, {"created_at": "Sat May 21 01:38:14 +0000 2016", "text": "Hillary Clinton tiene un plan para que todos puedan salir adelante. https://t.co/QaW4GZHAoH", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 1088, "source": "Twitter for iPhone", "id_str": "733834250923978752", "is_retweet": false}, {"created_at": "Tue Mar 22 16:47:49 +0000 2016", "text": "Miss your chance to hang with Hillary last time? Enter to meet her (and George Clooney!): https://t.co/yTrUAAHUtN\nhttps://t.co/6ZpRutJSGn", "in_reply_to_screen_name": null, "retweet_count": 469, "favorite_count": 1230, "source": "Twitter Web Client", "id_str": "712319886442106880", "is_retweet": false}, {"created_at": "Fri Nov 04 01:02:09 +0000 2016", "text": "\"Come January 20, America will have a new president. ... The question is, what kind of change are we going to see?\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 674, "favorite_count": 1718, "source": "TweetDeck", "id_str": "794343943605469187", "is_retweet": false}, {"created_at": "Thu Sep 22 00:37:57 +0000 2016", "text": "\"You would think there is almost, like, something wrong.\" \u2014Donald Trump on Mitt Romney failing to release his tax r\u2026 https://t.co/VzUQByCN2A", "in_reply_to_screen_name": null, "retweet_count": 9986, "favorite_count": 16122, "source": "Twitter Web Client", "id_str": "778755177310486528", "is_retweet": false}, {"created_at": "Thu Jul 28 23:26:29 +0000 2016", "text": "RT @TheBriefing2016: \"That's a bunch of malarkey!\" \u2014@JoeBiden, holding exactly nothing back last night. https://t.co/wsAbCgmljy", "in_reply_to_screen_name": null, "retweet_count": 859, "favorite_count": 0, "source": "TweetDeck", "id_str": "758805859791097857", "is_retweet": true}, {"created_at": "Wed Sep 21 18:47:17 +0000 2016", "text": "In America, every person, no matter what you look like or who you are, should have the chance to go as far as your dreams will take you.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 701, "favorite_count": 1472, "source": "TweetDeck", "id_str": "778666930781691905", "is_retweet": false}, {"created_at": "Mon Aug 15 19:16:54 +0000 2016", "text": "RT @igorvolsky: I bet Trump himself would fail his new immigration screening test of American values. #extremevetting https://t.co/JdxrGZki\u2026", "in_reply_to_screen_name": null, "retweet_count": 4359, "favorite_count": 0, "source": "TweetDeck", "id_str": "765266030461607940", "is_retweet": true}, {"created_at": "Sun Nov 06 21:54:07 +0000 2016", "text": "\"I want every public college and university to be tuition-free for every family making less than $125,000 a year.\u201d \u2014Hillary in Cleveland", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2047, "favorite_count": 5919, "source": "TweetDeck", "id_str": "795383790956847104", "is_retweet": false}, {"created_at": "Fri Jul 29 03:08:23 +0000 2016", "text": "\"Bernie Sanders and I will work together to make college tuition-free for the middle class and debt-free for all.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 4588, "favorite_count": 12733, "source": "TweetDeck", "id_str": "758861701022220288", "is_retweet": false}, {"created_at": "Sat Jul 23 02:41:28 +0000 2016", "text": "RT @clairecmc: He's humble.He's incredibly smart.He's a joyful warrior,a kind &amp; thoughtful person.He'll be a wonderful VP! Congrats to my f\u2026", "in_reply_to_screen_name": null, "retweet_count": 1670, "favorite_count": 0, "source": "TweetDeck", "id_str": "756680601973952512", "is_retweet": true}, {"created_at": "Sat Jul 23 16:06:21 +0000 2016", "text": "RT @HillaryforFL: Rania doesn't understand why a country as great as the United States has never had a woman president. #ImWithHer https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 702, "favorite_count": 0, "source": "TweetDeck", "id_str": "756883157685764097", "is_retweet": true}, {"created_at": "Mon Mar 21 19:55:56 +0000 2016", "text": "Lo que opina una se\u00f1ora de 100 a\u00f1os sobre la elecci\u00f3n presidencial. https://t.co/MRlmEAduXa", "in_reply_to_screen_name": null, "retweet_count": 315, "favorite_count": 609, "source": "TweetDeck", "id_str": "712004840025690115", "is_retweet": false}, {"created_at": "Tue Nov 08 04:52:23 +0000 2016", "text": "Stronger together. https://t.co/9TkaJrjW0a", "in_reply_to_screen_name": null, "retweet_count": 18630, "favorite_count": 54410, "source": "TweetDeck", "id_str": "795851436743622656", "is_retweet": false}, {"created_at": "Thu Apr 07 17:23:19 +0000 2016", "text": "\"Clinton is one of the brightest people in Congress &amp; she would be an excellent choice\u201d \u2014Sen. Sanders on Hillary as Sec. of State, Nov. 2008", "in_reply_to_screen_name": null, "retweet_count": 3657, "favorite_count": 6619, "source": "TweetDeck", "id_str": "718127026549424128", "is_retweet": false}, {"created_at": "Sun Feb 14 02:52:37 +0000 2016", "text": "\"Barack Obama is President of the United States until January 20, 2017\u2014that is a fact, whether the Republicans like it or not.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 5134, "favorite_count": 9573, "source": "TweetDeck", "id_str": "698701348213288960", "is_retweet": false}, {"created_at": "Tue Oct 11 21:25:55 +0000 2016", "text": "RT @tammybaldwin: I'm proud to serve as the first openly-gay Senator &amp; I encourage you to continue fighting for social justice for all #Nat\u2026", "in_reply_to_screen_name": null, "retweet_count": 2818, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785954606283001856", "is_retweet": true}, {"created_at": "Fri Jul 15 03:39:36 +0000 2016", "text": "\"Every American stands in strong solidarity with the people of France\" \u2014Hillary on the attack in Nice https://t.co/BBGgHucSE0", "in_reply_to_screen_name": null, "retweet_count": 5084, "favorite_count": 13973, "source": "TweetDeck", "id_str": "753796129263788032", "is_retweet": false}, {"created_at": "Thu Feb 11 00:26:36 +0000 2016", "text": "The next president could transform SCOTUS for decades. Whether we fight climate change or sit by is at stake. https://t.co/hhKX1bUAsL -H", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 1562, "source": "TweetDeck", "id_str": "697577439296360449", "is_retweet": false}, {"created_at": "Wed Sep 14 02:33:21 +0000 2016", "text": "\"If you're serious about our democracy, then you've got to be with her.\" \u2014@POTUS on Hillary https://t.co/I9BQB3PJvD", "in_reply_to_screen_name": null, "retweet_count": 3465, "favorite_count": 10585, "source": "TweetDeck", "id_str": "775885115473952768", "is_retweet": false}, {"created_at": "Sat Mar 26 00:52:39 +0000 2016", "text": "The top 25 hedge fund managers make more than all of the kindergarten teachers in America combined. That\u2019s not acceptable.", "in_reply_to_screen_name": null, "retweet_count": 2583, "favorite_count": 5564, "source": "Twitter for iPhone", "id_str": "713529061088346114", "is_retweet": false}, {"created_at": "Thu Mar 24 23:45:48 +0000 2016", "text": "LGBT people should be protected from discrimination under the law\u2014period. https://t.co/IMOyRZe5Gh -H", "in_reply_to_screen_name": null, "retweet_count": 2518, "favorite_count": 5359, "source": "Twitter for iPhone", "id_str": "713149848523051008", "is_retweet": false}, {"created_at": "Wed Jul 27 02:41:43 +0000 2016", "text": "\"NY elected her to the seat once held by another outsider, Robert Kennedy. She didn\u2019t let him down.\u201d \u2014@BillClinton on Hillary\u2019s Senate run", "in_reply_to_screen_name": null, "retweet_count": 1074, "favorite_count": 4294, "source": "TweetDeck", "id_str": "758130215587545088", "is_retweet": false}, {"created_at": "Sun Jul 24 01:06:11 +0000 2016", "text": "Our goal: 3 million people to register and commit to vote by Nov. 8\n\nHelp us get there. \u2192 https://t.co/8Q5DNkJ3jE\nhttps://t.co/rym1Ley3t2", "in_reply_to_screen_name": null, "retweet_count": 2466, "favorite_count": 5157, "source": "Twitter Web Client", "id_str": "757019012165349376", "is_retweet": false}, {"created_at": "Thu Jul 28 02:53:29 +0000 2016", "text": "Fired up, ready to go! https://t.co/NM890pAtL7", "in_reply_to_screen_name": null, "retweet_count": 3126, "favorite_count": 10727, "source": "TweetDeck", "id_str": "758495565546151936", "is_retweet": false}, {"created_at": "Sun Mar 06 21:11:02 +0000 2016", "text": "Un momento especial durante una reuni\u00f3n con la Uni\u00f3n de Campesinos. Vea el video.\nhttps://t.co/gr0LpfTav6", "in_reply_to_screen_name": null, "retweet_count": 633, "favorite_count": 1133, "source": "Twitter Web Client", "id_str": "706587920979759105", "is_retweet": false}, {"created_at": "Fri Sep 30 16:41:27 +0000 2016", "text": "RT @HFA: \u201cI\u2019m trying to end the campaign focusing on issues that are really close to my heart, and this is one of them.\u201d \u2014Hillary on nation\u2026", "in_reply_to_screen_name": null, "retweet_count": 934, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781896753092100096", "is_retweet": true}, {"created_at": "Sat Apr 09 21:54:34 +0000 2016", "text": "Wouldn't be a Brooklyn campaign stop without a visit to @JuniorsCheeseck. https://t.co/4o4KPo16Aw", "in_reply_to_screen_name": null, "retweet_count": 966, "favorite_count": 3505, "source": "TweetDeck", "id_str": "718920064800550912", "is_retweet": false}, {"created_at": "Sat Jan 30 19:14:03 +0000 2016", "text": "Making friends in Hanover, NH. https://t.co/1MeB6R9K5H", "in_reply_to_screen_name": null, "retweet_count": 285, "favorite_count": 945, "source": "TweetDeck", "id_str": "693512517423755265", "is_retweet": false}, {"created_at": "Sun Aug 21 16:28:13 +0000 2016", "text": "If you were president, how would you spend $4 billion? \n \n(One guess as to Trump's answer: https://t.co/9wj6zlbB7j)", "in_reply_to_screen_name": null, "retweet_count": 1269, "favorite_count": 2370, "source": "Twitter Web Client", "id_str": "767397907473502208", "is_retweet": false}, {"created_at": "Mon Oct 31 22:45:16 +0000 2016", "text": "\"When it comes to handling a crisis, we\u2019ve seen in this campaign, Donald Trump loses his cool at the slightest provocation.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1792, "favorite_count": 4702, "source": "TweetDeck", "id_str": "793222332852670464", "is_retweet": false}, {"created_at": "Mon Oct 10 14:53:13 +0000 2016", "text": "RT @ForeignPolicy: The editors of Foreign Policy have never endorsed a candidate for political office -- until now. https://t.co/2BvlgKcvDu\u2026", "in_reply_to_screen_name": null, "retweet_count": 6436, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785493394613235713", "is_retweet": true}, {"created_at": "Tue Mar 01 03:21:22 +0000 2016", "text": "Help Hillary secure another big win by making sure your friends in Super Tuesday states know what's at stake. https://t.co/qLOVQjlK7h", "in_reply_to_screen_name": null, "retweet_count": 914, "favorite_count": 1628, "source": "TweetDeck", "id_str": "704506791162474498", "is_retweet": false}, {"created_at": "Thu Mar 10 03:18:37 +0000 2016", "text": "La econom\u00eda funciona si todos salen adelante\u2014Hillary va a luchar para mejorar las oportunidades para todos. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 951, "source": "TweetDeck", "id_str": "707767586872795136", "is_retweet": false}, {"created_at": "Tue Sep 27 01:55:11 +0000 2016", "text": "The fact that Trump's answer to a question about racial injustice is just \"we need law and order\" pretty much says it all. #debatenight", "in_reply_to_screen_name": null, "retweet_count": 10679, "favorite_count": 22213, "source": "TweetDeck", "id_str": "780586553836003333", "is_retweet": false}, {"created_at": "Thu Nov 03 17:30:31 +0000 2016", "text": "\ud83e\udd14 https://t.co/Gk2xWHIJsm", "in_reply_to_screen_name": null, "retweet_count": 13902, "favorite_count": 32775, "source": "TweetDeck", "id_str": "794230287655956480", "is_retweet": false}, {"created_at": "Thu Oct 27 12:58:19 +0000 2016", "text": "Trump said he\u2019s \"very proud\u201d to lead the birther movement to discredit @POTUS. Here\u2019s how he spread the racist lie: https://t.co/fBZavGASai", "in_reply_to_screen_name": null, "retweet_count": 1776, "favorite_count": 3299, "source": "TweetDeck", "id_str": "791625073111232513", "is_retweet": false}, {"created_at": "Sat Oct 01 07:23:10 +0000 2016", "text": "There are hundreds of thousands more @AmeriCorps applications than spots. Horrible! Let's expand it from 75,000 annual members to 250,000.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1637, "favorite_count": 4284, "source": "Twitter Web Client", "id_str": "782118644390195200", "is_retweet": false}, {"created_at": "Mon Jun 13 17:37:40 +0000 2016", "text": "We\u2019ve seen too many examples of the struggle to live freely, openly, and without fear being marked by violence. We have to stand together.", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 4857, "source": "TweetDeck", "id_str": "742410621354967040", "is_retweet": false}, {"created_at": "Sun Jun 26 18:06:47 +0000 2016", "text": "One year ago, love triumphed in our highest court. Yet LGBT Americans still face too many barriers. Let's keep marching until they don't. -H", "in_reply_to_screen_name": null, "retweet_count": 3329, "favorite_count": 10517, "source": "TweetDeck", "id_str": "747128992168292354", "is_retweet": false}, {"created_at": "Thu Oct 06 19:42:12 +0000 2016", "text": "RT @PPact: \"Why don't you trust women to make this choice for themselves?\" - @timkaine \n\nWe couldn't have said it better ourselves. #PinkOu\u2026", "in_reply_to_screen_name": null, "retweet_count": 2473, "favorite_count": 0, "source": "TweetDeck", "id_str": "784116567760113664", "is_retweet": true}, {"created_at": "Fri Jan 15 16:17:56 +0000 2016", "text": "Just this once, Trump's right: New Yorkers value hard work, diversity, tolerance, resilience, and building better lives for our families. -H", "in_reply_to_screen_name": null, "retweet_count": 1667, "favorite_count": 3835, "source": "TweetDeck", "id_str": "688032377688424448", "is_retweet": false}, {"created_at": "Wed Aug 10 19:36:16 +0000 2016", "text": "We are living off of the infrastructure built by our parents and grandparents. It\u2019s overdue for upgrades: https://t.co/KjhFN0QS2c", "in_reply_to_screen_name": null, "retweet_count": 1439, "favorite_count": 3760, "source": "TweetDeck", "id_str": "763458963975340032", "is_retweet": false}, {"created_at": "Mon May 02 00:30:57 +0000 2016", "text": "\u201cLet America \u2018be that great strong land of love.\u2019 That is more than poetry\u2026that\u2019s a prayer.\u201d \u2014Hillary quoting Langston Hughes", "in_reply_to_screen_name": null, "retweet_count": 729, "favorite_count": 1757, "source": "TweetDeck", "id_str": "726931949038751744", "is_retweet": false}, {"created_at": "Fri May 20 00:42:41 +0000 2016", "text": "\"Investing in the health and education of women...is essential to improving global prosperity.\" \u2014Hillary #TBT\nhttps://t.co/eCSnOxplb7", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 3278, "source": "Twitter Web Client", "id_str": "733457884344766465", "is_retweet": false}, {"created_at": "Thu Sep 08 23:26:13 +0000 2016", "text": "\"Everyone here...has stumbled on their own stony roads. It\u2019s grace that lifts us up, grace that leads us home.\u201d \u2014Hillary to the @nbcusa_inc", "in_reply_to_screen_name": null, "retweet_count": 1587, "favorite_count": 5545, "source": "TweetDeck", "id_str": "774026083708514304", "is_retweet": false}, {"created_at": "Sun May 01 15:03:12 +0000 2016", "text": "Donald Trump is closer than ever to clinching the GOP nomination. There's only one candidate who has more votes. https://t.co/LuVanujuKS", "in_reply_to_screen_name": null, "retweet_count": 1608, "favorite_count": 3499, "source": "Twitter Web Client", "id_str": "726789073491349504", "is_retweet": false}, {"created_at": "Fri Jan 15 15:26:37 +0000 2016", "text": ".@jimmyfallon asked: Does Trump intimidate you? Hillary: \u201cNo.\u201d\nhttps://t.co/Qa4SIMvtxS", "in_reply_to_screen_name": null, "retweet_count": 1527, "favorite_count": 3025, "source": "Twitter Web Client", "id_str": "688019462792953856", "is_retweet": false}, {"created_at": "Fri Apr 15 20:45:39 +0000 2016", "text": "We need a president who will take action on gun violence and stand with victims' families against the gun lobby.\nhttps://t.co/KQvAe06Q7t", "in_reply_to_screen_name": null, "retweet_count": 1461, "favorite_count": 2962, "source": "Twitter Web Client", "id_str": "721077044486889473", "is_retweet": false}, {"created_at": "Mon Aug 15 17:19:41 +0000 2016", "text": "Trump's called for a new tax loophole\u2014the Trump Loophole. He'd pay less than half the current tax rate on income from many of his companies.", "in_reply_to_screen_name": null, "retweet_count": 989, "favorite_count": 2830, "source": "TweetDeck", "id_str": "765236534782128128", "is_retweet": false}, {"created_at": "Sun Aug 28 20:03:03 +0000 2016", "text": "RT @repjohnlewis: 53 years ago today, we Marched on Washington for Jobs and Freedom. #GoodTrouble https://t.co/KO3YzpjuZG", "in_reply_to_screen_name": null, "retweet_count": 6495, "favorite_count": 0, "source": "TweetDeck", "id_str": "769988687883100161", "is_retweet": true}, {"created_at": "Mon Apr 18 21:19:51 +0000 2016", "text": "\"She promised me to block the Constitutional amendment against gay marriage. And she did.\" https://t.co/VITevzhBTk https://t.co/eq4lO7eNGz", "in_reply_to_screen_name": null, "retweet_count": 1118, "favorite_count": 2546, "source": "TweetDeck", "id_str": "722172815894556672", "is_retweet": false}, {"created_at": "Sat Jan 23 00:29:53 +0000 2016", "text": "Reproductive freedom should be a reality for all, not a luxury for those who can afford it. I'll never give up until it is. #Roe43 -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1030, "favorite_count": 2258, "source": "TweetDeck", "id_str": "690692897360969728", "is_retweet": false}, {"created_at": "Thu Oct 13 00:21:19 +0000 2016", "text": "If we unite together, we will rise together. https://t.co/t6vQBNgWko", "in_reply_to_screen_name": null, "retweet_count": 3852, "favorite_count": 10614, "source": "Media Studio", "id_str": "786361137008877568", "is_retweet": false}, {"created_at": "Tue Jan 19 18:35:33 +0000 2016", "text": "The NRA. Big pharma. The Koch brothers. American families need a champion to defend them from special interests. https://t.co/omRPFA83LD", "in_reply_to_screen_name": null, "retweet_count": 423, "favorite_count": 958, "source": "TweetDeck", "id_str": "689516561107804160", "is_retweet": false}, {"created_at": "Wed May 25 00:50:20 +0000 2016", "text": ".@realDonaldTrump rooted for the housing crash that caused 5 million Americans to lose their homes. https://t.co/tnngHNVqoL", "in_reply_to_screen_name": null, "retweet_count": 1846, "favorite_count": 2638, "source": "TweetDeck", "id_str": "735271751140147201", "is_retweet": false}, {"created_at": "Tue Mar 22 15:47:46 +0000 2016", "text": "We can be strong and smart without advocating torture or bigotry. We will not let fear dictate our foreign policy.", "in_reply_to_screen_name": null, "retweet_count": 3280, "favorite_count": 6560, "source": "TweetDeck", "id_str": "712304773983248384", "is_retweet": false}, {"created_at": "Fri Apr 01 14:46:15 +0000 2016", "text": "Now that's what we call #NewYorkValues. Thanks, @NYGovCuomo. -H https://t.co/eHfC9VS7NL", "in_reply_to_screen_name": null, "retweet_count": 1034, "favorite_count": 2067, "source": "TweetDeck", "id_str": "715913171312242690", "is_retweet": false}, {"created_at": "Tue Oct 11 17:04:35 +0000 2016", "text": "Every girl\u2014in every country\u2014deserves to get an education and reach her dreams. Thank you, @FLOTUS. https://t.co/1KhjnUAtLl #DayoftheGirl", "in_reply_to_screen_name": null, "retweet_count": 3566, "favorite_count": 9149, "source": "TweetDeck", "id_str": "785888840842174464", "is_retweet": false}, {"created_at": "Tue Aug 09 02:22:47 +0000 2016", "text": "Thank you to the more than 2 million people who have donated to this campaign. Chip in now to join them: https://t.co/r3sF3mwlFX", "in_reply_to_screen_name": null, "retweet_count": 1666, "favorite_count": 6384, "source": "Twitter for iPhone", "id_str": "762836494566383617", "is_retweet": false}, {"created_at": "Thu Sep 08 17:11:53 +0000 2016", "text": "What\u2019s the best way to stand up for voting rights? Get registered: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 590, "favorite_count": 1038, "source": "TweetDeck", "id_str": "773931877547794432", "is_retweet": false}, {"created_at": "Sat Apr 30 01:25:26 +0000 2016", "text": "Lower wages! No paid family leave! Limited access to health care! Just some of the perks of your #WomanCard: https://t.co/sgUC4iiCXr", "in_reply_to_screen_name": null, "retweet_count": 1638, "favorite_count": 3256, "source": "TweetDeck", "id_str": "726220886454468609", "is_retweet": false}, {"created_at": "Wed Oct 05 03:14:21 +0000 2016", "text": "Seems like Pence forgot a lot of the things Trump has been saying throughout his campaign! Here to help: https://t.co/NLPH8sbAGn #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 4911, "favorite_count": 9046, "source": "TweetDeck", "id_str": "783505579188817920", "is_retweet": false}, {"created_at": "Wed Mar 16 01:16:46 +0000 2016", "text": "If you knocked on doors, talked to your friends, pitched in, or voted\u2014tonight is your victory. Thank you. -H https://t.co/PYuVsB12ZZ", "in_reply_to_screen_name": null, "retweet_count": 2369, "favorite_count": 8262, "source": "TweetDeck", "id_str": "709911251795763201", "is_retweet": false}, {"created_at": "Thu Nov 03 01:50:47 +0000 2016", "text": "RT @HFA: These women were born before women had the right to vote. Now they\u2019re voting for Hillary. https://t.co/beeh2XBdkv", "in_reply_to_screen_name": null, "retweet_count": 2079, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793993797705302018", "is_retweet": true}, {"created_at": "Wed Oct 12 18:40:26 +0000 2016", "text": "\"We don't disrespect women in our locker rooms.\" \u2014@KingJames https://t.co/JPJF8W17qu", "in_reply_to_screen_name": null, "retweet_count": 6000, "favorite_count": 14674, "source": "Twitter Web Client", "id_str": "786275348501540864", "is_retweet": false}, {"created_at": "Fri Jul 22 03:00:36 +0000 2016", "text": "RT @TheBriefing2016: This is literally Donald Trump's plan to fight ISIS. #RNCinCLE https://t.co/AjxiU8Do7U", "in_reply_to_screen_name": null, "retweet_count": 2648, "favorite_count": 0, "source": "TweetDeck", "id_str": "756323027470716929", "is_retweet": true}, {"created_at": "Thu Jun 02 19:13:28 +0000 2016", "text": "We\u2019re not a country that cowers behind walls. We lead with purpose, and we prevail. https://t.co/KxKmbO3vL5", "in_reply_to_screen_name": null, "retweet_count": 3165, "favorite_count": 7708, "source": "TweetDeck", "id_str": "738448464007311365", "is_retweet": false}, {"created_at": "Tue Apr 26 22:16:56 +0000 2016", "text": "Three answers from last night\u2019s @MSNBC town hall that you should see: https://t.co/slvveHpQ6x", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 870, "source": "TweetDeck", "id_str": "725086283547185153", "is_retweet": false}, {"created_at": "Tue Oct 04 03:24:13 +0000 2016", "text": ".@TimKaine wears his \"F\" rating from the @NRA like a badge of honor. https://t.co/baXTptc1OM", "in_reply_to_screen_name": null, "retweet_count": 2047, "favorite_count": 6715, "source": "TweetDeck", "id_str": "783145675563335680", "is_retweet": false}, {"created_at": "Thu Mar 10 17:13:30 +0000 2016", "text": "States like Ohio, Utah, and Florida that attack Planned Parenthood are attacking women's health, and they're part of a dangerous trend. -H", "in_reply_to_screen_name": null, "retweet_count": 1676, "favorite_count": 3711, "source": "TweetDeck", "id_str": "707977692818382848", "is_retweet": false}, {"created_at": "Wed Nov 09 16:42:39 +0000 2016", "text": "\u201cYou represent the best of America, and being your candidate has been one of the greatest honors of my life.\u201d \u2014Hillary to @HFA", "in_reply_to_screen_name": null, "retweet_count": 9319, "favorite_count": 40454, "source": "TweetDeck", "id_str": "796392571073335296", "is_retweet": false}, {"created_at": "Thu May 12 14:12:54 +0000 2016", "text": "80% of a child's brain is formed before the age of 3. Early childhood education could not be more important. https://t.co/LEMKTbqfob", "in_reply_to_screen_name": null, "retweet_count": 3244, "favorite_count": 8553, "source": "TweetDeck", "id_str": "730762680911400960", "is_retweet": false}, {"created_at": "Wed Oct 05 19:42:35 +0000 2016", "text": "RT @AdamSerwer: The Atlantic has endorsed three times in the name of defending American democracy. 1860, 1964, and now in 2016. https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 4126, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783754276355051521", "is_retweet": true}, {"created_at": "Fri Sep 30 20:14:46 +0000 2016", "text": "\"Who gets up at 3 o'clock in the morning to engage in a Twitter attack against a former Miss Universe?\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2283, "favorite_count": 6765, "source": "TweetDeck", "id_str": "781950435682816000", "is_retweet": false}, {"created_at": "Tue Mar 15 17:53:05 +0000 2016", "text": "Relieved Atlantic drilling is now off the table. Time to do the next right thing and protect the Arctic, too. https://t.co/5XMurySjhN -H", "in_reply_to_screen_name": null, "retweet_count": 926, "favorite_count": 1806, "source": "TweetDeck", "id_str": "709799594293600257", "is_retweet": false}, {"created_at": "Wed Feb 03 01:00:59 +0000 2016", "text": "While the other candidates \"seem downright terrified of the gun lobby, Hillary seems fearless.\" \u2014@GabbyGiffords https://t.co/SVMiA2USpx", "in_reply_to_screen_name": null, "retweet_count": 567, "favorite_count": 1503, "source": "TweetDeck", "id_str": "694686989405294596", "is_retweet": false}, {"created_at": "Mon Feb 01 20:07:18 +0000 2016", "text": "\"You're entitled to give these remarks the love discount\u2014but everything I've told you, I believe with all my heart.\"\nhttps://t.co/KHf0MmZzpX", "in_reply_to_screen_name": null, "retweet_count": 643, "favorite_count": 1295, "source": "Twitter Web Client", "id_str": "694250692676968448", "is_retweet": false}, {"created_at": "Thu Jun 30 21:47:54 +0000 2016", "text": "Chip in now if you agree with Hillary and @ElizabethForMA: https://t.co/NzXQxeXSLu https://t.co/SYdNt02pg9", "in_reply_to_screen_name": null, "retweet_count": 759, "favorite_count": 2598, "source": "TweetDeck", "id_str": "748634191202500608", "is_retweet": false}, {"created_at": "Tue Sep 13 18:17:22 +0000 2016", "text": "\"The bottom line is that we cannot afford suddenly to treat this like a reality show.\u201d \u2014@POTUS on the media\u2019s coverage of Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 1991, "favorite_count": 5701, "source": "TweetDeck", "id_str": "775760296233275392", "is_retweet": false}, {"created_at": "Mon Aug 08 19:54:31 +0000 2016", "text": "Donald Trump is not only putting our national security at risk\u2014he\u2019s putting our economy at risk. https://t.co/HMiJtadxMF", "in_reply_to_screen_name": null, "retweet_count": 3725, "favorite_count": 8073, "source": "TweetDeck", "id_str": "762738782269476864", "is_retweet": false}, {"created_at": "Tue Sep 27 17:20:13 +0000 2016", "text": "RT @shondarhimes: So. Everything you're feeling after #Debates2016? It's #NationalVoterRegistrationDay. PLEASE: https://t.co/8cVIWvmWdf. Co\u2026", "in_reply_to_screen_name": null, "retweet_count": 1685, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780819344553107456", "is_retweet": true}, {"created_at": "Mon Feb 08 22:06:01 +0000 2016", "text": "\"I am here because for nearly two years, Flint's water was poisoned.\"\nhttps://t.co/t1hEJ3TTnU", "in_reply_to_screen_name": null, "retweet_count": 666, "favorite_count": 1274, "source": "Twitter Web Client", "id_str": "696817282463322113", "is_retweet": false}, {"created_at": "Fri Aug 05 18:03:23 +0000 2016", "text": "Republicans agree: We can't give Donald Trump control of our nuclear codes.\nhttps://t.co/aVB6e5GbSm", "in_reply_to_screen_name": null, "retweet_count": 3355, "favorite_count": 7242, "source": "Twitter Web Client", "id_str": "761623652349546497", "is_retweet": false}, {"created_at": "Wed Jul 27 23:09:28 +0000 2016", "text": "RT @HFA: \"Maybe one day she'll look back and say, 'I was there...when we nominated our first female president.'\" \u2014Janet, NMI https://t.co/9\u2026", "in_reply_to_screen_name": null, "retweet_count": 824, "favorite_count": 0, "source": "TweetDeck", "id_str": "758439187532148736", "is_retweet": true}, {"created_at": "Tue Jul 26 01:26:00 +0000 2016", "text": "RT @HFA: No matter who you supported in the primary, we are united and stronger together. #DemsInPhilly https://t.co/C3Ynm21jKo", "in_reply_to_screen_name": null, "retweet_count": 1620, "favorite_count": 0, "source": "TweetDeck", "id_str": "757748772474654720", "is_retweet": true}, {"created_at": "Fri Feb 26 02:59:20 +0000 2016", "text": "We can't let Republicans rip away @POTUS\u2019 progress. Text ImWithHer to 47246 if you agree.", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 1253, "source": "TweetDeck", "id_str": "703051692774920192", "is_retweet": false}, {"created_at": "Sat Jul 23 17:42:46 +0000 2016", "text": "\"Marrying Anne was, and remains, the best decision of my life.\u201d \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 751, "favorite_count": 3883, "source": "TweetDeck", "id_str": "756907419062661120", "is_retweet": false}, {"created_at": "Sat Nov 05 02:02:48 +0000 2016", "text": "\"Less than 100 years ago, women did not have the right to vote. Look how far we\u2019ve come.\u201d \u2014@Beyonce https://t.co/BiMWwj4xvs", "in_reply_to_screen_name": null, "retweet_count": 4060, "favorite_count": 10308, "source": "TweetDeck", "id_str": "794721596275654657", "is_retweet": false}, {"created_at": "Wed Jan 20 01:46:56 +0000 2016", "text": "Every single American should be outraged at what\u2019s happening in Flint, Michigan. https://t.co/5sO7l8IUWn https://t.co/3mojriasCO", "in_reply_to_screen_name": null, "retweet_count": 1412, "favorite_count": 2519, "source": "TweetDeck", "id_str": "689625123289178113", "is_retweet": false}, {"created_at": "Fri Feb 05 04:09:30 +0000 2016", "text": "Share this if you agree. #DemDebate https://t.co/PImohjJgO3", "in_reply_to_screen_name": null, "retweet_count": 2153, "favorite_count": 3328, "source": "TweetDeck", "id_str": "695459206313472000", "is_retweet": false}, {"created_at": "Fri Oct 14 15:46:40 +0000 2016", "text": "\"Change is possible, but it doesn\u2019t just depend on one person\u2014it depends on all of us.\u201d \u2014@POTUS https://t.co/iWKBOE1i18 #StrongerTogether", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 586, "favorite_count": 1369, "source": "TweetDeck", "id_str": "786956397766385665", "is_retweet": false}, {"created_at": "Wed Oct 19 01:14:28 +0000 2016", "text": "Trump reportedly asked this about nuclear weapons: \"If we have them, why can't we use them?\"\n\nWe can't let him beco\u2026 https://t.co/u3YYU5jbhP", "in_reply_to_screen_name": null, "retweet_count": 11290, "favorite_count": 19848, "source": "Media Studio", "id_str": "788548839560974337", "is_retweet": false}, {"created_at": "Tue Sep 13 19:01:03 +0000 2016", "text": "\"He\u2019s spent most of his life trying to stay as far away from working people as he could.\u201d \u2014@POTUS on Trump https://t.co/zhjJQuMX7X", "in_reply_to_screen_name": null, "retweet_count": 4904, "favorite_count": 10274, "source": "Twitter Web Client", "id_str": "775771291794149376", "is_retweet": false}, {"created_at": "Mon Jul 25 23:45:38 +0000 2016", "text": "Opioid addiction is destroying too many lives across our country. It's time to end this epidemic.\nhttps://t.co/kSpZmW273e", "in_reply_to_screen_name": null, "retweet_count": 1193, "favorite_count": 3426, "source": "Twitter Web Client", "id_str": "757723516900741120", "is_retweet": false}, {"created_at": "Mon Jun 27 15:19:29 +0000 2016", "text": "Imagine Trump sitting in the Oval Office the next time America faces a crisis.\n\nImagine him in charge, with your job and savings at stake.", "in_reply_to_screen_name": null, "retweet_count": 1836, "favorite_count": 4885, "source": "TweetDeck", "id_str": "747449278109487104", "is_retweet": false}, {"created_at": "Sun Nov 06 21:54:44 +0000 2016", "text": "RT @dougmillsnyt: .@HillaryClinton with @KingJames in Cleveland Ohio. #voting https://t.co/QYkNfmYcOh", "in_reply_to_screen_name": null, "retweet_count": 5977, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795383943180775424", "is_retweet": true}, {"created_at": "Thu Mar 24 16:42:36 +0000 2016", "text": "Fighting for quality, affordable child care is not new for Hillary. Check out this clip from 1995.\nhttps://t.co/MoBw2RS8xb", "in_reply_to_screen_name": null, "retweet_count": 2031, "favorite_count": 4056, "source": "Twitter Web Client", "id_str": "713043349855338496", "is_retweet": false}, {"created_at": "Fri Jul 22 03:10:09 +0000 2016", "text": "We are better than this.", "in_reply_to_screen_name": null, "retweet_count": 17978, "favorite_count": 38186, "source": "TweetDeck", "id_str": "756325432002244609", "is_retweet": false}, {"created_at": "Wed Oct 05 02:25:24 +0000 2016", "text": "RT @TheBriefing2016: .@ClintonFdn spends 87% of its funds directly on charity. See for yourself: #VPDebate \n\nhttps://t.co/s9p756N0B0 https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 2451, "favorite_count": 0, "source": "TweetDeck", "id_str": "783493258206932992", "is_retweet": true}, {"created_at": "Thu May 05 23:32:36 +0000 2016", "text": "Comprehensive immigration reform will bring people out of the shadows and into our economy. https://t.co/NUlSKmWCGD", "in_reply_to_screen_name": null, "retweet_count": 2826, "favorite_count": 7251, "source": "TweetDeck", "id_str": "728366819996733440", "is_retweet": false}, {"created_at": "Mon Apr 11 19:00:02 +0000 2016", "text": "Our next president should always prioritize families' safety over the NRA. https://t.co/AcpMcFdTwa", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 3207, "source": "Twitter Web Client", "id_str": "719600916064813057", "is_retweet": false}, {"created_at": "Tue Jul 26 00:17:24 +0000 2016", "text": "\"Valiente. Brave. That\u2019s what Hillary...called me when I told her I was worried my parents would be deported\" \u2014Karla https://t.co/I3tNNoLZxV", "in_reply_to_screen_name": null, "retweet_count": 1358, "favorite_count": 3519, "source": "TweetDeck", "id_str": "757731510002778112", "is_retweet": false}, {"created_at": "Sun Feb 07 19:15:36 +0000 2016", "text": "\"This is not merely unacceptable or wrong, though it is both. What happened in Flint is immoral.\"\nhttps://t.co/liLZ0g70X3", "in_reply_to_screen_name": null, "retweet_count": 771, "favorite_count": 1424, "source": "Twitter Web Client", "id_str": "696412008971763712", "is_retweet": false}, {"created_at": "Tue Jul 26 02:14:14 +0000 2016", "text": "\"Hillary Clinton has never quit on anything in her life.\" \u2014@FLOTUS #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1517, "favorite_count": 5353, "source": "TweetDeck", "id_str": "757760912581419008", "is_retweet": false}, {"created_at": "Thu Aug 11 17:46:11 +0000 2016", "text": "We are resilient, determined, and hard-working. There\u2019s nothing America can\u2019t do if we do it together.", "in_reply_to_screen_name": null, "retweet_count": 778, "favorite_count": 2610, "source": "TweetDeck", "id_str": "763793648504938496", "is_retweet": false}, {"created_at": "Fri Jun 17 02:53:46 +0000 2016", "text": "Hard to believe it's only been a year since Trump announced his candidacy for president. https://t.co/fYf3Kep3Qe", "in_reply_to_screen_name": null, "retweet_count": 5277, "favorite_count": 9476, "source": "TweetDeck", "id_str": "743637734904958978", "is_retweet": false}, {"created_at": "Fri Mar 04 16:42:15 +0000 2016", "text": "We have to do more to raise wages &amp; support paid leave for hardworking families. I stand with @Raise_Up_WA in their work to do just that. -H", "in_reply_to_screen_name": null, "retweet_count": 666, "favorite_count": 1638, "source": "TweetDeck", "id_str": "705795502768582656", "is_retweet": false}, {"created_at": "Sat Oct 01 16:08:01 +0000 2016", "text": "\"I feel like I'm the political equivalent of the Antiques Roadshow.\" \u2014@BillClinton, now playing on With Her at\u2026 https://t.co/pSz8uuh693", "in_reply_to_screen_name": null, "retweet_count": 1003, "favorite_count": 3626, "source": "Media Studio", "id_str": "782250725229285376", "is_retweet": false}, {"created_at": "Sun Aug 28 17:53:23 +0000 2016", "text": "When Trump was starting in business, he was sued by the Justice Department for refusing to rent to black tenants. https://t.co/k3Ga8jvHSu", "in_reply_to_screen_name": null, "retweet_count": 3738, "favorite_count": 5838, "source": "Twitter for iPhone", "id_str": "769956055145189376", "is_retweet": false}, {"created_at": "Tue Jan 19 20:50:25 +0000 2016", "text": "Thank you, @HRC. https://t.co/BSNe3L9wgS", "in_reply_to_screen_name": null, "retweet_count": 682, "favorite_count": 1423, "source": "TweetDeck", "id_str": "689550503202656257", "is_retweet": false}, {"created_at": "Wed Oct 26 23:00:57 +0000 2016", "text": "When Bronx found out he shares a birthday with Hillary (October 26\u2014today!), he was determined to write her a letter\u2026 https://t.co/9eLbM3zoWP", "in_reply_to_screen_name": null, "retweet_count": 1443, "favorite_count": 6230, "source": "TweetDeck", "id_str": "791414342398926848", "is_retweet": false}, {"created_at": "Sat Feb 20 18:27:04 +0000 2016", "text": "In a few hours, Nevadans will head out to caucus. RT if you're standing with Hillary. https://t.co/e6hXdfloJX", "in_reply_to_screen_name": null, "retweet_count": 1355, "favorite_count": 1623, "source": "TweetDeck", "id_str": "701110837910622208", "is_retweet": false}, {"created_at": "Wed Oct 05 04:22:05 +0000 2016", "text": "Lucky to have a partner like @TimKaine who stood up for our shared vision tonight\u2014instead of trying to deny it. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 7448, "favorite_count": 26597, "source": "TweetDeck", "id_str": "783522622785085441", "is_retweet": false}, {"created_at": "Sat Jan 30 17:56:04 +0000 2016", "text": "Wow. Thank you, Nashua! #603forHRC  https://t.co/xbIgi8TCgR", "in_reply_to_screen_name": null, "retweet_count": 183, "favorite_count": 489, "source": "Twitter Web Client", "id_str": "693492893667987459", "is_retweet": false}, {"created_at": "Wed Oct 26 16:06:32 +0000 2016", "text": "Watch live: Hillary campaigns in Florida with just 13 days left until Election Day \u2192 https://t.co/EsqAmcnrnC\n\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 981, "favorite_count": 3696, "source": "TweetDeck", "id_str": "791310049398366208", "is_retweet": false}, {"created_at": "Fri Nov 04 03:02:45 +0000 2016", "text": "\"I'm also honored to have the greatest temperament that anybody has.\" \u2014Donald Trump\n\nAbout that: https://t.co/C3L5emZ7Jc", "in_reply_to_screen_name": null, "retweet_count": 8470, "favorite_count": 14367, "source": "Media Studio", "id_str": "794374296126619648", "is_retweet": false}, {"created_at": "Mon Jul 18 22:56:16 +0000 2016", "text": "With five million lives on the line, SCOTUS should grant DOJ's petition to rehear U.S. v. Texas. Let's keep immigrant families together. -H", "in_reply_to_screen_name": null, "retweet_count": 1437, "favorite_count": 3953, "source": "TweetDeck", "id_str": "755174375461183488", "is_retweet": false}, {"created_at": "Fri Sep 16 22:17:15 +0000 2016", "text": "Trump's habit of projecting his actions onto someone else is what 6-year-olds call \"I know you are, but what am I?\" https://t.co/FIhZYLmy1l", "in_reply_to_screen_name": null, "retweet_count": 3180, "favorite_count": 6726, "source": "TweetDeck", "id_str": "776907829022195713", "is_retweet": false}, {"created_at": "Sat Sep 17 16:09:45 +0000 2016", "text": "Hillary's been her childhood pen pal, her graduation cheering section, and her friend. Meet Aleatha: https://t.co/f4YzTBmIdl", "in_reply_to_screen_name": null, "retweet_count": 5175, "favorite_count": 12323, "source": "Twitter Web Client", "id_str": "777177731536596992", "is_retweet": false}, {"created_at": "Sun Oct 02 20:03:26 +0000 2016", "text": "Reminder: While Trump probably pays no federal taxes, he wants a $4 billion tax break for his own family.\u2026 https://t.co/Ps2JFgKk0k", "in_reply_to_screen_name": null, "retweet_count": 5513, "favorite_count": 8619, "source": "TweetDeck", "id_str": "782672358112948225", "is_retweet": false}, {"created_at": "Tue Jul 12 16:21:31 +0000 2016", "text": "\"You can take out your phone right now and text JOIN to 47246. Or go to https://t.co/erIfmxlyf9. We accept $27 donations, too, you know.\u201d", "in_reply_to_screen_name": null, "retweet_count": 644, "favorite_count": 1673, "source": "TweetDeck", "id_str": "752900705816551428", "is_retweet": false}, {"created_at": "Sat Apr 09 16:55:23 +0000 2016", "text": "\"I will stand my ground against any efforts to undermine our country or set us back.\" \u2014Hillary https://t.co/1oFpw9I94v", "in_reply_to_screen_name": null, "retweet_count": 2004, "favorite_count": 6105, "source": "Twitter Web Client", "id_str": "718844772794937344", "is_retweet": false}, {"created_at": "Mon Mar 28 21:28:54 +0000 2016", "text": "Donald Trump didn\u2019t come out of nowhere\u2014what Republicans have sown with their extremist tactics, they're now reaping with Trump's candidacy.", "in_reply_to_screen_name": null, "retweet_count": 2586, "favorite_count": 4848, "source": "TweetDeck", "id_str": "714564948513460225", "is_retweet": false}, {"created_at": "Thu Mar 17 16:27:02 +0000 2016", "text": "The balance of the Supreme Court hinges on this election. Here\u2019s what\u2019s at stake: https://t.co/u9t8Dmxev8", "in_reply_to_screen_name": null, "retweet_count": 693, "favorite_count": 1377, "source": "TweetDeck", "id_str": "710502715714093058", "is_retweet": false}, {"created_at": "Fri Apr 15 22:18:00 +0000 2016", "text": "If you thought last night's debate was competitive...\nhttps://t.co/mlNHhPRUI9", "in_reply_to_screen_name": null, "retweet_count": 1199, "favorite_count": 2718, "source": "Twitter Web Client", "id_str": "721100285175660545", "is_retweet": false}, {"created_at": "Mon Oct 10 21:59:50 +0000 2016", "text": "Trump owes the country an apology for all of the horrible things he's said. It's time for him to take responsibilit\u2026 https://t.co/6EbutvHcKA", "in_reply_to_screen_name": null, "retweet_count": 9493, "favorite_count": 23143, "source": "Media Studio", "id_str": "785600754245656577", "is_retweet": false}, {"created_at": "Fri Feb 12 02:45:07 +0000 2016", "text": "When we talk about criminal justice reform, we also have to talk about jobs, education, and housing. #DemDebate https://t.co/QZyODe2qx3", "in_reply_to_screen_name": null, "retweet_count": 1053, "favorite_count": 2133, "source": "TweetDeck", "id_str": "697974687322787841", "is_retweet": false}, {"created_at": "Thu Oct 27 19:29:32 +0000 2016", "text": "\u201cIf Hillary doesn\u2019t win this election, that will be on us.\u201d \u2014@FLOTUS\n\nDon't let that happen: https://t.co/tTgeqxNqYm https://t.co/DTY3Wa060M", "in_reply_to_screen_name": null, "retweet_count": 3625, "favorite_count": 8540, "source": "TweetDeck", "id_str": "791723523249172480", "is_retweet": false}, {"created_at": "Fri Sep 02 16:10:28 +0000 2016", "text": "Trump and his hateful language are affecting our kids. These are some of the heartbreaking things they're saying: https://t.co/DWCluAKJUd", "in_reply_to_screen_name": null, "retweet_count": 2441, "favorite_count": 4885, "source": "TweetDeck", "id_str": "771742094985666560", "is_retweet": false}, {"created_at": "Fri Jul 08 22:14:48 +0000 2016", "text": "There is clear evidence that black Americans are more likely to be killed in police incidents than any other group. We have to do better.", "in_reply_to_screen_name": null, "retweet_count": 3206, "favorite_count": 6451, "source": "TweetDeck", "id_str": "751540060659515393", "is_retweet": false}, {"created_at": "Sat Nov 05 19:25:54 +0000 2016", "text": "The energy we're seeing on this campaign isn't about what we're against but what we're for\u2014an inclusive America whe\u2026 https://t.co/qe4uLdaqS4", "in_reply_to_screen_name": null, "retweet_count": 4913, "favorite_count": 13605, "source": "TweetDeck", "id_str": "794984102877396993", "is_retweet": false}, {"created_at": "Fri Sep 30 22:13:06 +0000 2016", "text": ".@BillClinton on pre-debate jitters (his) and Hillary's favorite TV shows, now playing on With Her:\u2026 https://t.co/hdqLVyUNBz", "in_reply_to_screen_name": null, "retweet_count": 680, "favorite_count": 2507, "source": "Media Studio", "id_str": "781980213865484288", "is_retweet": false}, {"created_at": "Thu Jul 28 03:44:01 +0000 2016", "text": "\"Thank you for this incredible journey.\nLet\u2019s keep it going.\nGod bless the United States of America!\" \u2014@POTUS https://t.co/pgv3aUXdle", "in_reply_to_screen_name": null, "retweet_count": 7197, "favorite_count": 18023, "source": "TweetDeck", "id_str": "758508281937534976", "is_retweet": false}, {"created_at": "Sat Jul 02 19:14:56 +0000 2016", "text": "Born July 2, 1951, trans activist Sylvia Rivera was an early LGBT leader whose work paved the way for progress. https://t.co/TFcpBVdr9q", "in_reply_to_screen_name": null, "retweet_count": 1755, "favorite_count": 5481, "source": "Twitter Web Client", "id_str": "749320471758442496", "is_retweet": false}, {"created_at": "Sat Nov 05 20:43:10 +0000 2016", "text": "The story of this campaign. https://t.co/8cft9HD0RI", "in_reply_to_screen_name": null, "retweet_count": 42247, "favorite_count": 82881, "source": "Media Studio", "id_str": "795003547968385024", "is_retweet": false}, {"created_at": "Fri Jun 03 16:27:28 +0000 2016", "text": "We can never let Republicans cut or privatize Social Security\u2014we should protect and expand it. Thanks, @POTUS. https://t.co/eIXIQsm8Pt", "in_reply_to_screen_name": null, "retweet_count": 1152, "favorite_count": 2442, "source": "TweetDeck", "id_str": "738769078060519424", "is_retweet": false}, {"created_at": "Mon Sep 19 14:25:29 +0000 2016", "text": "\u201cWhat I\u2019ve laid out is a path forward that will keep us safer...and go after the terrorists to finally destroy them\" https://t.co/tWWEMx0T9s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 566, "favorite_count": 1573, "source": "TweetDeck", "id_str": "777876269270704128", "is_retweet": false}, {"created_at": "Fri Jul 29 02:49:26 +0000 2016", "text": "\"Through all these years of public service, the 'service' part has always come easier to me than the 'public' part.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1618, "favorite_count": 5538, "source": "TweetDeck", "id_str": "758856932627144704", "is_retweet": false}, {"created_at": "Fri Feb 05 03:58:21 +0000 2016", "text": "El hecho de que el agua en Flint, Michigan, est\u00e9 contaminada es indignante. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 231, "favorite_count": 539, "source": "TweetDeck", "id_str": "695456401678843908", "is_retweet": false}, {"created_at": "Tue Jun 14 16:37:24 +0000 2016", "text": "\"If Donald suggests I won\u2019t call this threat what it is, he hasn\u2019t been listening. \n\nBut I will not declare war on an entire religion.\"", "in_reply_to_screen_name": null, "retweet_count": 1706, "favorite_count": 5231, "source": "TweetDeck", "id_str": "742757846316687361", "is_retweet": false}, {"created_at": "Tue Mar 01 17:00:08 +0000 2016", "text": "Bookmark our live blog for the latest on #SuperTuesday: updates from the trail, voting info\u2014and of course, results. https://t.co/xWJ0tNBPXF", "in_reply_to_screen_name": null, "retweet_count": 363, "favorite_count": 735, "source": "TweetDeck", "id_str": "704712841086050304", "is_retweet": false}, {"created_at": "Thu Jun 02 02:01:25 +0000 2016", "text": "What the movement for LGBT equality has taught us: with courage and love, there's nothing we can't do. Happy Pride Month. Let's fight on.", "in_reply_to_screen_name": null, "retweet_count": 3432, "favorite_count": 8011, "source": "TweetDeck", "id_str": "738188742247260161", "is_retweet": false}, {"created_at": "Mon Sep 26 19:53:32 +0000 2016", "text": "Trump told 31 outright lies just last week.\n\nKeep him honest at tonight's debate: Follow @TheBriefing2016 to get th\u2026 https://t.co/m1WyJ3DJqF", "in_reply_to_screen_name": null, "retweet_count": 10421, "favorite_count": 20082, "source": "Media Studio", "id_str": "780495540521955329", "is_retweet": false}, {"created_at": "Wed Jul 20 02:33:50 +0000 2016", "text": "If Donald Trump wants to make America great again, he should start by actually making things in America.\nhttps://t.co/kKeJadUVce", "in_reply_to_screen_name": null, "retweet_count": 6612, "favorite_count": 12748, "source": "Twitter Web Client", "id_str": "755591516995805184", "is_retweet": false}, {"created_at": "Sat Sep 24 15:25:09 +0000 2016", "text": "Donald Trump doesn't see people like Anastasia\u2014he only sees disability. https://t.co/0aDgpwHtjv", "in_reply_to_screen_name": null, "retweet_count": 3785, "favorite_count": 8082, "source": "Media Studio", "id_str": "779703224458743808", "is_retweet": false}, {"created_at": "Thu Jul 21 02:40:37 +0000 2016", "text": "Donald Trump chose one of the most anti-LGBT politicians in the country to be his Vice President. #RNCinCLE https://t.co/krj1yThzKp", "in_reply_to_screen_name": null, "retweet_count": 5629, "favorite_count": 7288, "source": "TweetDeck", "id_str": "755955611788054528", "is_retweet": false}, {"created_at": "Mon Jun 20 21:28:32 +0000 2016", "text": "America has always been a nation of immigrants and refugees. On #WorldRefugeeDay, let's reaffirm our commitment to welcoming them. -H", "in_reply_to_screen_name": null, "retweet_count": 1994, "favorite_count": 5611, "source": "TweetDeck", "id_str": "745005438991728640", "is_retweet": false}, {"created_at": "Sun Sep 25 20:58:17 +0000 2016", "text": "RT @nytimes: The NYT Editorial Board says Donald Trump should not be president. Here's why. https://t.co/aQ0NZm19Hx via @nytopinion", "in_reply_to_screen_name": null, "retweet_count": 4197, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780149449171603456", "is_retweet": true}, {"created_at": "Mon Feb 08 15:25:29 +0000 2016", "text": "Sending warmest wishes to everyone celebrating the Lunar New Year! May you have peace and prosperity in the year ahead. -H", "in_reply_to_screen_name": null, "retweet_count": 2948, "favorite_count": 1422, "source": "TweetDeck", "id_str": "696716488628117504", "is_retweet": false}, {"created_at": "Tue Oct 11 21:41:25 +0000 2016", "text": "I\u2019m really concerned for North and South Carolinians dealing with such dangerous flooding. Please heed the latest warnings &amp; stay safe. -H", "in_reply_to_screen_name": null, "retweet_count": 1560, "favorite_count": 7794, "source": "Twitter Web Client", "id_str": "785958509502271488", "is_retweet": false}, {"created_at": "Sun Jan 31 23:19:16 +0000 2016", "text": "For this Iowa couple, caucusing is a family affair. https://t.co/7ehhD8Utwb", "in_reply_to_screen_name": null, "retweet_count": 185, "favorite_count": 475, "source": "TweetDeck", "id_str": "693936613911568385", "is_retweet": false}, {"created_at": "Wed Sep 14 16:36:21 +0000 2016", "text": "6. Given that you've already questioned our commitments to NATO allies, what is your answer to this? https://t.co/qp5vMqtcs1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2872, "favorite_count": 4541, "source": "TweetDeck", "id_str": "776097265270292480", "is_retweet": false}, {"created_at": "Tue Sep 27 03:12:31 +0000 2016", "text": "RT @hardball: \"Hillary won big time. It was a shut out.\" -- @HardballChris #debatenight", "in_reply_to_screen_name": null, "retweet_count": 4559, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780606012667691008", "is_retweet": true}, {"created_at": "Wed Apr 27 18:38:55 +0000 2016", "text": "Women still face too many barriers\u2014a president shouldn't be part of the problem. Comments like Trump's set us back.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 871, "favorite_count": 1643, "source": "TweetDeck", "id_str": "725393806045106181", "is_retweet": false}, {"created_at": "Tue Oct 04 21:41:02 +0000 2016", "text": "\u201cI learned that preparation is important.\u201d \u2014Hillary on what she learned by debating Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 3897, "source": "TweetDeck", "id_str": "783421695382196224", "is_retweet": false}, {"created_at": "Sun Oct 16 22:11:23 +0000 2016", "text": "When Trump and Pence attack Planned Parenthood, they're attacking millions of Americans. https://t.co/9xsaHAjAZO", "in_reply_to_screen_name": null, "retweet_count": 7448, "favorite_count": 15473, "source": "Media Studio", "id_str": "787777988330860544", "is_retweet": false}, {"created_at": "Tue Jun 07 14:56:14 +0000 2016", "text": "Hoy es tu d\u00eda de votar por Hillary. RT esto y d\u00e9jale saber a tus amigos: #EstoyConElla https://t.co/YMh9aZEgDX", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 1940, "source": "TweetDeck", "id_str": "740195669709860864", "is_retweet": false}, {"created_at": "Tue Jun 28 22:48:26 +0000 2016", "text": "\"All Americans stand united with the people of Turkey against this campaign of hatred and violence.\" \u2014Hillary https://t.co/QmSccJvcV0", "in_reply_to_screen_name": null, "retweet_count": 4889, "favorite_count": 12326, "source": "TweetDeck", "id_str": "747924647790936064", "is_retweet": false}, {"created_at": "Fri Mar 11 16:21:47 +0000 2016", "text": "Humbled to stand with these women, who have turned unimaginable grief into a call to action we all need to hear. -H\nhttps://t.co/h8H9EWc1qo", "in_reply_to_screen_name": null, "retweet_count": 2297, "favorite_count": 4115, "source": "Twitter Web Client", "id_str": "708327065351643136", "is_retweet": false}, {"created_at": "Tue Sep 13 17:55:35 +0000 2016", "text": "\"Can I just say, I am really into electing Hillary Clinton. This is not me just going through the motions here.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1281, "favorite_count": 4362, "source": "TweetDeck", "id_str": "775754813753724928", "is_retweet": false}, {"created_at": "Tue Mar 15 01:01:55 +0000 2016", "text": "Today, our public schools are more segregated than they were in 1968. That\u2019s unacceptable for our kids and for our country.", "in_reply_to_screen_name": null, "retweet_count": 1276, "favorite_count": 2852, "source": "TweetDeck", "id_str": "709545127052779520", "is_retweet": false}, {"created_at": "Mon Oct 24 14:41:42 +0000 2016", "text": "\u201cWe\u2019re going to work our hearts out to make Hillary Clinton the next president of the United States.\u201d \u2014\u2026 https://t.co/TCer3UQcSI", "in_reply_to_screen_name": null, "retweet_count": 4867, "favorite_count": 13954, "source": "Media Studio", "id_str": "790563924072476673", "is_retweet": false}, {"created_at": "Thu Sep 01 02:10:18 +0000 2016", "text": "There is no other Donald Trump. This is it. https://t.co/oQJdlUJv0u", "in_reply_to_screen_name": null, "retweet_count": 3159, "favorite_count": 5859, "source": "TweetDeck", "id_str": "771168270711975936", "is_retweet": false}, {"created_at": "Thu Oct 20 02:19:34 +0000 2016", "text": "What he said. #DebateNight https://t.co/58lB3k10v4", "in_reply_to_screen_name": null, "retweet_count": 11714, "favorite_count": 26219, "source": "TweetDeck", "id_str": "788927611523198976", "is_retweet": false}, {"created_at": "Wed Oct 19 00:01:47 +0000 2016", "text": "Ryan talks about living with a disability\u2014and befriending Hillary back in 1994: \"She looks at me the way I always w\u2026 https://t.co/g0XeBjLbTT", "in_reply_to_screen_name": null, "retweet_count": 4685, "favorite_count": 13452, "source": "Media Studio", "id_str": "788530547593211904", "is_retweet": false}, {"created_at": "Tue Jul 19 02:06:25 +0000 2016", "text": "Republicans say the world doesn't respect us. The world disagrees. #RNCinCLE https://t.co/xDCAikvvUo", "in_reply_to_screen_name": null, "retweet_count": 3650, "favorite_count": 7026, "source": "Twitter Web Client", "id_str": "755222229365972992", "is_retweet": false}, {"created_at": "Wed Jan 27 20:58:23 +0000 2016", "text": "Inequality stalks our education system. https://t.co/LcUgQtOeiR", "in_reply_to_screen_name": null, "retweet_count": 287, "favorite_count": 550, "source": "TweetDeck", "id_str": "692451609717166080", "is_retweet": false}, {"created_at": "Mon Sep 26 16:36:53 +0000 2016", "text": "Tonight, Hillary will debate Trump for the first time. Follow @TheBriefing2016 to make sure he's held accountable to the facts. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 2866, "favorite_count": 6837, "source": "TweetDeck", "id_str": "780446051992043521", "is_retweet": false}, {"created_at": "Sat Mar 12 15:15:35 +0000 2016", "text": "It's time to give our teachers a raise. Young people should be able to see teaching as a profession that\u2019s both noble and sustainable.", "in_reply_to_screen_name": null, "retweet_count": 3297, "favorite_count": 7420, "source": "TweetDeck", "id_str": "708672794310156288", "is_retweet": false}, {"created_at": "Tue Sep 13 13:10:31 +0000 2016", "text": "The @NCAA is right to pull tournament games from North Carolina because of the anti-LGBT HB2 law. Discrimination has no place in America. -H", "in_reply_to_screen_name": null, "retweet_count": 4560, "favorite_count": 15176, "source": "Twitter for iPhone", "id_str": "775683074747199488", "is_retweet": false}, {"created_at": "Wed Aug 17 17:48:35 +0000 2016", "text": "The choice on jobs in this election (it\u2019s not a hard one). https://t.co/C6X7yq9CQB https://t.co/nv4lJmUdsK", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 612, "favorite_count": 1238, "source": "TweetDeck", "id_str": "765968579451904000", "is_retweet": false}, {"created_at": "Tue Apr 19 16:19:10 +0000 2016", "text": "Go vote, New York. It'll only take you one try. https://t.co/gRqmpE5EVh #PrimaryDay https://t.co/H7bPYy5Yuu", "in_reply_to_screen_name": null, "retweet_count": 1934, "favorite_count": 4240, "source": "TweetDeck", "id_str": "722459536540483587", "is_retweet": false}, {"created_at": "Sun May 22 20:06:58 +0000 2016", "text": "Education should be about building a brighter future, not a lifetime of debt. https://t.co/xAk392JIAt", "in_reply_to_screen_name": null, "retweet_count": 1120, "favorite_count": 2394, "source": "Twitter Web Client", "id_str": "734475664145944576", "is_retweet": false}, {"created_at": "Wed Mar 02 01:55:53 +0000 2016", "text": "\"We know we\u2019ve got work to do.  It's not to make America great again\u2014America never stopped being great. We have to make America whole.\"", "in_reply_to_screen_name": null, "retweet_count": 1201, "favorite_count": 2378, "source": "TweetDeck", "id_str": "704847663905284096", "is_retweet": false}, {"created_at": "Wed Aug 24 11:58:47 +0000 2016", "text": "RT @timkaine: We're going to fight for the ACA so kids like Jude aren't ever turned away because of a pre-existing condition.\nhttps://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 1596, "favorite_count": 0, "source": "TweetDeck", "id_str": "768417267516399616", "is_retweet": true}, {"created_at": "Tue Mar 29 18:02:35 +0000 2016", "text": "\u201cI refuse to sit on the sidelines while more children die.\u201d https://t.co/zxkHzmVto1", "in_reply_to_screen_name": null, "retweet_count": 822, "favorite_count": 1775, "source": "TweetDeck", "id_str": "714875417526722560", "is_retweet": false}, {"created_at": "Tue Jan 26 03:35:36 +0000 2016", "text": "\"I have a 40-year record of going after inequality.\u201d \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 697, "favorite_count": 1521, "source": "TweetDeck", "id_str": "691826795658747906", "is_retweet": false}, {"created_at": "Mon Feb 29 22:31:06 +0000 2016", "text": "A father to Hillary: \u201cI need you to win for my daughters.\u201d\nhttps://t.co/jpbDyeG603", "in_reply_to_screen_name": null, "retweet_count": 1650, "favorite_count": 3384, "source": "Twitter Web Client", "id_str": "704433741293158401", "is_retweet": false}, {"created_at": "Fri Nov 04 01:21:16 +0000 2016", "text": "More than 31 million Americans have already voted.\n\nBe a part of this: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 946, "favorite_count": 2678, "source": "TweetDeck", "id_str": "794348757496250368", "is_retweet": false}, {"created_at": "Tue Oct 18 20:00:44 +0000 2016", "text": "RT @BrynneCraig: Loved chatting with @BuffyWicks for the @TheRivetersPod about what's at stake in this election! #ImWithHer https://t.co/pj\u2026", "in_reply_to_screen_name": null, "retweet_count": 209, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788469884510408704", "is_retweet": true}, {"created_at": "Thu Jun 02 23:11:07 +0000 2016", "text": "\u2714 Supports nuclear proliferation\n\u2714 Alienates our allies\n\u2714 Cozies up to dictators\n\nTrump's foreign policy is...chaos. https://t.co/Sx9s6Nj5uT", "in_reply_to_screen_name": null, "retweet_count": 2053, "favorite_count": 3378, "source": "TweetDeck", "id_str": "738508272282533888", "is_retweet": false}, {"created_at": "Sat Aug 27 02:37:48 +0000 2016", "text": "RT @TheBriefing2016: It's Women's Equality Day. Donald Trump can't say he treats women with respect https://t.co/Rq8TFnXNev", "in_reply_to_screen_name": null, "retweet_count": 2108, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "769363255613591552", "is_retweet": true}, {"created_at": "Thu Oct 27 18:51:31 +0000 2016", "text": "We\u2019ve got to make sure all our kids know that America has a place for you.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 474, "favorite_count": 1321, "source": "TweetDeck", "id_str": "791713957388124160", "is_retweet": false}, {"created_at": "Tue Aug 16 23:00:00 +0000 2016", "text": "Trump's idea for a new immigration test: \"Those who...support bigotry and hatred will not be admitted.\"\n\nAwkward. https://t.co/LZoCq7U8NZ", "in_reply_to_screen_name": null, "retweet_count": 4786, "favorite_count": 9730, "source": "TweetDeck", "id_str": "765684563368706048", "is_retweet": false}, {"created_at": "Tue Feb 09 18:58:15 +0000 2016", "text": "Taking a break from knocking on doors to hear what's keeping one family up at night\u2014and see how she can help.\nhttps://t.co/a4qWkdyWvz", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 1011, "source": "Twitter Web Client", "id_str": "697132421167198208", "is_retweet": false}, {"created_at": "Tue Nov 08 16:10:19 +0000 2016", "text": "RT @elizabethforma: This morning I proudly cast my vote for @HillaryClinton to be the next President of the United States. #ImWithHer https\u2026", "in_reply_to_screen_name": null, "retweet_count": 5128, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796022046593531904", "is_retweet": true}, {"created_at": "Fri Sep 23 14:03:04 +0000 2016", "text": "When Donald Trump speaks about women, our daughters can hear him. https://t.co/0r1N6R8rV6", "in_reply_to_screen_name": null, "retweet_count": 15720, "favorite_count": 25366, "source": "Media Studio", "id_str": "779320180891615232", "is_retweet": false}, {"created_at": "Thu Mar 10 03:25:09 +0000 2016", "text": "If you want a comprehensive plan to help reduce the student debt you already have \u2b07\ufe0f #DemDebate https://t.co/xMIXhbEWuE", "in_reply_to_screen_name": null, "retweet_count": 1854, "favorite_count": 3234, "source": "TweetDeck", "id_str": "707769234999406592", "is_retweet": false}, {"created_at": "Wed Aug 10 19:40:06 +0000 2016", "text": "RT @HillaryforIA: \u201cWhen they have student debt, we\u2019ll put a three year moratory on that so they can start their own businesses!\u201d\u2014@HillaryCl\u2026", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 0, "source": "TweetDeck", "id_str": "763459929143410689", "is_retweet": true}, {"created_at": "Sun Jan 17 02:52:09 +0000 2016", "text": "\"In one year and four days, a new president is going to walk into the Oval Office\u2014we can't afford for it to be a Republican.\" \u2014Hillary in SC", "in_reply_to_screen_name": null, "retweet_count": 1590, "favorite_count": 4220, "source": "TweetDeck", "id_str": "688554372964454400", "is_retweet": false}, {"created_at": "Fri Sep 16 19:19:47 +0000 2016", "text": "\"Elections aren't just about who votes, but who doesn't vote.\" \u2014@FLOTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1112, "favorite_count": 2275, "source": "TweetDeck", "id_str": "776863168584966144", "is_retweet": false}, {"created_at": "Sat Jan 16 00:58:44 +0000 2016", "text": "Meet Fayde. He's 8 years old, and his favorite things are Star Wars, chocolate chip pancakes, and Hillary Clinton. https://t.co/dJgg549A1i", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 1471, "source": "TweetDeck", "id_str": "688163441253548032", "is_retweet": false}, {"created_at": "Mon Oct 17 17:03:27 +0000 2016", "text": "Barack Obama\u2019s greatest strength? \u201cProbably that I\u2019m always early.\u201d https://t.co/3TKJ4H68Kz https://t.co/wYVh8AgHGt", "in_reply_to_screen_name": null, "retweet_count": 7038, "favorite_count": 16246, "source": "Media Studio", "id_str": "788062885037666304", "is_retweet": false}, {"created_at": "Sun Sep 18 21:00:38 +0000 2016", "text": "Joel Sollender, WWII veteran and POW, on what it means when he hears Trump insult our vets. https://t.co/3ZIezeRTl9", "in_reply_to_screen_name": null, "retweet_count": 6386, "favorite_count": 10855, "source": "Twitter Web Client", "id_str": "777613325299355648", "is_retweet": false}, {"created_at": "Thu Nov 03 02:45:31 +0000 2016", "text": "The perpetrators who set the Hopewell M.B. Church in MS on fire must be brought to justice. This kind of hate has no place in America. -H", "in_reply_to_screen_name": null, "retweet_count": 6263, "favorite_count": 18162, "source": "Twitter Web Client", "id_str": "794007571585781760", "is_retweet": false}, {"created_at": "Tue Jun 07 19:23:29 +0000 2016", "text": "\"Although we weren't able to shatter that highest, hardest glass ceiling...it's got about 18 million cracks in it.\"\nhttps://t.co/cfLG7O1hwk", "in_reply_to_screen_name": null, "retweet_count": 2132, "favorite_count": 5603, "source": "Twitter Web Client", "id_str": "740262923398828032", "is_retweet": false}, {"created_at": "Sat Jul 23 23:19:51 +0000 2016", "text": "\"I don't defend what he says.\" \u2014@MarcoRubio on @realDonaldTrump #RNCinCLE https://t.co/YO81aW6XZB", "in_reply_to_screen_name": null, "retweet_count": 3748, "favorite_count": 6846, "source": "TweetDeck", "id_str": "756992252468195328", "is_retweet": false}, {"created_at": "Wed Aug 24 13:05:20 +0000 2016", "text": "It's HFA Volunteer Day, and we're looking for 50,000 volunteers. Help us get there\u2014find your friends on Facebook: https://t.co/ggUNnLHE4B", "in_reply_to_screen_name": null, "retweet_count": 848, "favorite_count": 2047, "source": "TweetDeck", "id_str": "768434015888179200", "is_retweet": false}, {"created_at": "Mon Oct 24 01:35:43 +0000 2016", "text": "Congrats Cathy, and happy homecoming Howard! https://t.co/jG6chUjWdM", "in_reply_to_screen_name": null, "retweet_count": 1331, "favorite_count": 3771, "source": "Twitter Web Client", "id_str": "790366126714781696", "is_retweet": false}, {"created_at": "Thu Sep 15 19:48:39 +0000 2016", "text": "\"I learned from my family and my Methodist faith that we\u2019re each called to do all the good we can for all the people we can.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 522, "favorite_count": 1215, "source": "TweetDeck", "id_str": "776508044318572544", "is_retweet": false}, {"created_at": "Thu Apr 07 16:23:50 +0000 2016", "text": "\"She is the best qualified person for this moment in history I've ever seen.\" \u2014@BillClinton\nhttps://t.co/z38fab6Eby", "in_reply_to_screen_name": null, "retweet_count": 1911, "favorite_count": 4568, "source": "Twitter Web Client", "id_str": "718112054683373568", "is_retweet": false}, {"created_at": "Sat Apr 23 02:18:39 +0000 2016", "text": "We all know Donald Trump says offensive things about women. Here's what he says about policies that benefit women.\nhttps://t.co/YMV0rvwFnf", "in_reply_to_screen_name": null, "retweet_count": 4772, "favorite_count": 8854, "source": "Twitter Web Client", "id_str": "723697565712048128", "is_retweet": false}, {"created_at": "Wed Apr 13 17:06:39 +0000 2016", "text": "We need to break down every barrier holding families back\u2014and that includes environmental barriers. https://t.co/XLxZt5f03V", "in_reply_to_screen_name": null, "retweet_count": 1321, "favorite_count": 2832, "source": "TweetDeck", "id_str": "720297155672608768", "is_retweet": false}, {"created_at": "Sat Jul 23 17:51:32 +0000 2016", "text": "\"There are an awful lot of people who\u2019ve put their trust and faith in Hillary. And she has always delivered.\u201d \u2014@TimKaine", "in_reply_to_screen_name": null, "retweet_count": 1363, "favorite_count": 4867, "source": "TweetDeck", "id_str": "756909625228857344", "is_retweet": false}, {"created_at": "Thu Aug 25 19:19:37 +0000 2016", "text": "When Trump was getting his start in business, he was sued by the Justice Dept. for refusing to rent apartments to black and Latino tenants.", "in_reply_to_screen_name": null, "retweet_count": 3397, "favorite_count": 6598, "source": "TweetDeck", "id_str": "768890594538164224", "is_retweet": false}, {"created_at": "Tue Oct 11 00:11:42 +0000 2016", "text": "We counted all the times Donald Trump lied in last night\u2019s debate so you didn\u2019t have to. https://t.co/kHkzkVkfmv", "in_reply_to_screen_name": null, "retweet_count": 2541, "favorite_count": 6738, "source": "TweetDeck", "id_str": "785633942288338944", "is_retweet": false}, {"created_at": "Mon Jan 25 17:13:36 +0000 2016", "text": "Don\u2019t live in Iowa but want to help get out the caucus? Retweet \u261d\ufe0f  this \u261d\ufe0f to share with someone who does.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 449, "favorite_count": 502, "source": "TweetDeck", "id_str": "691670266330636289", "is_retweet": false}, {"created_at": "Fri Jan 29 03:08:34 +0000 2016", "text": "Mientras los Republicanos no ofrecen ninguna soluci\u00f3n, Hillary apoya una reforma migratoria con un camino hacia la ciudadan\u00eda. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 335, "favorite_count": 605, "source": "TweetDeck", "id_str": "692907159064047622", "is_retweet": false}, {"created_at": "Tue Jul 26 02:34:01 +0000 2016", "text": "\"He preyed on...people who had fallen on hard times. He\u2019s conned them, he\u2019s defrauded them, and he\u2019s ripped them off.\u201d \u2014Warren on Trump", "in_reply_to_screen_name": null, "retweet_count": 1627, "favorite_count": 4506, "source": "TweetDeck", "id_str": "757765891908132864", "is_retweet": false}, {"created_at": "Wed Feb 10 03:42:07 +0000 2016", "text": "This is only the beginning. We fought hard for every vote\u2014now we take this campaign to the entire country. https://t.co/YDbo2wiWJf", "in_reply_to_screen_name": null, "retweet_count": 992, "favorite_count": 2281, "source": "TweetDeck", "id_str": "697264255897174016", "is_retweet": false}, {"created_at": "Sun Jul 10 15:10:00 +0000 2016", "text": "As the President has reminded us, the arc of the moral universe is long but it bends toward justice.\nhttps://t.co/CCheOeF9zB", "in_reply_to_screen_name": null, "retweet_count": 2383, "favorite_count": 6576, "source": "Twitter Web Client", "id_str": "752157935552176128", "is_retweet": false}, {"created_at": "Sat Feb 27 19:02:03 +0000 2016", "text": "Today, thousands of South Carolinians will cast their votes for Hillary! Join them and say #ImWithHer. https://t.co/oj61zMcLnt", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 1378, "source": "Twitter Web Client", "id_str": "703656355488518144", "is_retweet": false}, {"created_at": "Wed Sep 07 02:53:28 +0000 2016", "text": "If Donald Trump doesn't show all Americans the respect they deserve, he doesn't deserve to be their president. https://t.co/mDBewdAYLU", "in_reply_to_screen_name": null, "retweet_count": 2889, "favorite_count": 7045, "source": "TweetDeck", "id_str": "773353464223129601", "is_retweet": false}, {"created_at": "Thu Oct 20 14:27:54 +0000 2016", "text": "While Hillary was monitoring the raid on Osama bin Laden, Trump was hosting \"the Apprentice\" (which didn't win an E\u2026 https://t.co/S8U8AO2cEI", "in_reply_to_screen_name": null, "retweet_count": 6654, "favorite_count": 18606, "source": "Media Studio", "id_str": "789110902826082304", "is_retweet": false}, {"created_at": "Thu May 26 01:03:13 +0000 2016", "text": "So, @realDonaldTrump's wall would cost $25 billion.\n \nHere's what else we could do with that money.\nhttps://t.co/LeDSdcpySI", "in_reply_to_screen_name": null, "retweet_count": 1418, "favorite_count": 2880, "source": "Twitter Web Client", "id_str": "735637379206152192", "is_retweet": false}, {"created_at": "Thu Jul 28 01:46:55 +0000 2016", "text": "\"The richest thing about Donald Trump is his hypocrisy.\" \u2014@MikeBloomberg https://t.co/lzdNup73e3", "in_reply_to_screen_name": null, "retweet_count": 3109, "favorite_count": 7360, "source": "TweetDeck", "id_str": "758478812975726592", "is_retweet": false}, {"created_at": "Fri Sep 30 17:47:28 +0000 2016", "text": "RT @CNNPolitics: A vote 103 years in the making: Ruline Steininger is one of the first in Iowa to vote in person for Hillary Clinton https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 4051, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781913367472726017", "is_retweet": true}, {"created_at": "Tue Nov 08 02:24:19 +0000 2016", "text": "\"Tomorrow, we face the test of our time. What will we vote for?\u201d \u2014Hillary https://t.co/jfd3CXLD1s https://t.co/6qcgsS0qjp", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1055, "favorite_count": 2927, "source": "TweetDeck", "id_str": "795814176392445953", "is_retweet": false}, {"created_at": "Tue Jan 12 02:32:30 +0000 2016", "text": "\"We have systemic racism and bias that is implicit in our [criminal justice] system.\" \u2014Hillary at #DemForum", "in_reply_to_screen_name": null, "retweet_count": 498, "favorite_count": 961, "source": "TweetDeck", "id_str": "686737485678915584", "is_retweet": false}, {"created_at": "Fri Jan 29 02:45:46 +0000 2016", "text": "Una buena pregunta para los Republicanos, \u00bfno va en contra de nuestros valores discriminar a personas s\u00f3lo por su religi\u00f3n? #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 234, "favorite_count": 503, "source": "TweetDeck", "id_str": "692901421260365824", "is_retweet": false}, {"created_at": "Fri Jun 03 15:55:50 +0000 2016", "text": "We will never be silenced or intimidated by the gun lobby. Honored to have @Everytown &amp; @MomsDemand's support. -H https://t.co/R13G7fkffd", "in_reply_to_screen_name": null, "retweet_count": 1336, "favorite_count": 3163, "source": "TweetDeck", "id_str": "738761115161788416", "is_retweet": false}, {"created_at": "Fri Oct 28 17:03:59 +0000 2016", "text": ".@ElizabethforMA is making calls for Hillary. Join her: https://t.co/Iyboc4TNeA https://t.co/sf5cJKPVq0", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 3520, "source": "TweetDeck", "id_str": "792049283767889920", "is_retweet": false}, {"created_at": "Mon Aug 08 12:15:27 +0000 2016", "text": "Donald Trump's economic plan:\n1. Lower wages\n2. Fewer jobs \n3. More debt\n4. Tax breaks for the 0.1%\nhttps://t.co/OLU4htKlcV", "in_reply_to_screen_name": null, "retweet_count": 14877, "favorite_count": 22047, "source": "Twitter Web Client", "id_str": "762623255005966336", "is_retweet": false}, {"created_at": "Sat Sep 03 16:43:37 +0000 2016", "text": "RT @timkaine: There's no higher calling than service to others. https://t.co/ldZqTt3tqU", "in_reply_to_screen_name": null, "retweet_count": 1950, "favorite_count": 0, "source": "TweetDeck", "id_str": "772112825724571648", "is_retweet": true}, {"created_at": "Thu Sep 29 12:07:18 +0000 2016", "text": "Donald Trump may lie, but the tape doesn't. https://t.co/NWciAXZrKW", "in_reply_to_screen_name": null, "retweet_count": 21029, "favorite_count": 29493, "source": "Media Studio", "id_str": "781465372662779904", "is_retweet": false}, {"created_at": "Thu Apr 21 19:03:32 +0000 2016", "text": "Gun violence is an epidemic. We cannot become indifferent to these losses. https://t.co/ozcS4v6jJX", "in_reply_to_screen_name": null, "retweet_count": 909, "favorite_count": 2475, "source": "TweetDeck", "id_str": "723225674148941824", "is_retweet": false}, {"created_at": "Sun Oct 09 18:26:09 +0000 2016", "text": "RT @clevelanddotcom: Why backing @KingJames and his endorsement of @HillaryClinton is the move for this election: https://t.co/3dzOMdPeZI h\u2026", "in_reply_to_screen_name": null, "retweet_count": 1167, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785184592877785088", "is_retweet": true}, {"created_at": "Mon Oct 03 00:06:08 +0000 2016", "text": "\"If she gets to be president, she won\u2019t waste a day.\" \u2014@BillClinton, now playing on With Her at\u2026 https://t.co/NbISBj7L4b", "in_reply_to_screen_name": null, "retweet_count": 1295, "favorite_count": 4778, "source": "Media Studio", "id_str": "782733436276486144", "is_retweet": false}, {"created_at": "Tue Jun 07 14:00:13 +0000 2016", "text": "CA, MT, NJ, NM, ND, and SD, it's your day to head to the polls. RT this if you\u2019re voting for Hillary. https://t.co/nu3VCKSuBz", "in_reply_to_screen_name": null, "retweet_count": 4309, "favorite_count": 8147, "source": "TweetDeck", "id_str": "740181574277287936", "is_retweet": false}, {"created_at": "Mon Mar 28 21:18:03 +0000 2016", "text": "In a single term, #SCOTUS could demolish virtually every pillar of progressivism. This is a make-or-break moment. https://t.co/JfoxJwXWg7", "in_reply_to_screen_name": null, "retweet_count": 2130, "favorite_count": 3868, "source": "TweetDeck", "id_str": "714562217635553280", "is_retweet": false}, {"created_at": "Fri Oct 21 03:14:25 +0000 2016", "text": "Watch Hillary's full remarks at the #AlSmithDinner. https://t.co/Dkb2CfpQBL", "in_reply_to_screen_name": null, "retweet_count": 6315, "favorite_count": 17894, "source": "Twitter Web Client", "id_str": "789303801085849600", "is_retweet": false}, {"created_at": "Sun Jun 26 21:20:20 +0000 2016", "text": "Not even a sit-in in Congress could convince Republican leadership to move forward on gun violence prevention. Americans deserve better.", "in_reply_to_screen_name": null, "retweet_count": 1991, "favorite_count": 6547, "source": "TweetDeck", "id_str": "747177700251545600", "is_retweet": false}, {"created_at": "Sun Nov 06 02:03:32 +0000 2016", "text": "\"Nobody respects women more than me.\" \u2014Donald Trump\n\nOther things he's said about women: https://t.co/fM9h1WYHkK", "in_reply_to_screen_name": null, "retweet_count": 16946, "favorite_count": 28823, "source": "Twitter for iPhone", "id_str": "795084170913521664", "is_retweet": false}, {"created_at": "Fri Oct 28 22:29:22 +0000 2016", "text": "Fired up. Ready to go. \n\nJoin @POTUS live in Florida with just 11 days left: https://t.co/103zgd8Xg7", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 5715, "source": "TweetDeck", "id_str": "792131170007937028", "is_retweet": false}, {"created_at": "Wed Apr 20 02:09:34 +0000 2016", "text": "Tonight's victory belongs to everyone who worked hard to get out the vote. Sign up now to keep the momentum going. https://t.co/YsjbCMtVUS", "in_reply_to_screen_name": null, "retweet_count": 960, "favorite_count": 2646, "source": "TweetDeck", "id_str": "722608115859001344", "is_retweet": false}, {"created_at": "Wed Aug 10 21:16:22 +0000 2016", "text": "When you dig deeper, you see that young people of color have faced even greater challenges. That has to change. https://t.co/8mpMkHn2sH", "in_reply_to_screen_name": null, "retweet_count": 2362, "favorite_count": 6363, "source": "TweetDeck", "id_str": "763484156827471873", "is_retweet": false}, {"created_at": "Fri Jul 08 22:19:49 +0000 2016", "text": "\u201cGun violence is ripping apart people\u2019s lives. They are trying to tell us. We need to listen.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1719, "favorite_count": 4364, "source": "TweetDeck", "id_str": "751541323346374656", "is_retweet": false}, {"created_at": "Tue Jul 12 16:14:48 +0000 2016", "text": "Let\u2019s expand Social Security\u2014not cut or privatize it.\nLet\u2019s offer paid family leave.\nLet\u2019s guarantee equal pay for women once and for all.", "in_reply_to_screen_name": null, "retweet_count": 1400, "favorite_count": 4229, "source": "TweetDeck", "id_str": "752899016996814848", "is_retweet": false}, {"created_at": "Tue Jun 21 16:26:47 +0000 2016", "text": ".@TheEconomist declared Donald Trump one of the 10 biggest threats to the global economy. https://t.co/66kTxlywHU https://t.co/He9Xl3zsRO", "in_reply_to_screen_name": null, "retweet_count": 2743, "favorite_count": 3843, "source": "TweetDeck", "id_str": "745291887448363008", "is_retweet": false}, {"created_at": "Tue Apr 19 17:56:05 +0000 2016", "text": "Our country can't reach its potential unless we all do.\nhttps://t.co/U9OhBS1wss", "in_reply_to_screen_name": null, "retweet_count": 1197, "favorite_count": 2463, "source": "Twitter Web Client", "id_str": "722483925319229440", "is_retweet": false}, {"created_at": "Thu Sep 01 23:06:36 +0000 2016", "text": "It took Donald Trump exactly one foreign policy trip to get rebuked by a leader of an ally nation. https://t.co/yGWzjldtZY", "in_reply_to_screen_name": null, "retweet_count": 6969, "favorite_count": 13709, "source": "Twitter Web Client", "id_str": "771484431219564544", "is_retweet": false}, {"created_at": "Wed Mar 16 02:31:20 +0000 2016", "text": "Our next president has to bring our country together.\nhttps://t.co/sHbIY5h7M5", "in_reply_to_screen_name": null, "retweet_count": 1885, "favorite_count": 4548, "source": "Twitter Web Client", "id_str": "709930016621002754", "is_retweet": false}, {"created_at": "Tue Nov 08 12:35:51 +0000 2016", "text": "RT @johnlegend: Donald Trump is unfit for the office of president. Fortunately, there's an exceptionally qualified candidate @HillaryClinto\u2026", "in_reply_to_screen_name": null, "retweet_count": 10257, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795968073543127040", "is_retweet": true}, {"created_at": "Fri Nov 04 02:28:14 +0000 2016", "text": "Imagine a president who said all of these things. https://t.co/WeuAFe484I", "in_reply_to_screen_name": null, "retweet_count": 6522, "favorite_count": 10628, "source": "Media Studio", "id_str": "794365611199471616", "is_retweet": false}, {"created_at": "Thu Oct 06 15:09:36 +0000 2016", "text": "Even Mike Pence can't defend Donald Trump's insult-driven campaign. https://t.co/iJVFlrSHBq", "in_reply_to_screen_name": null, "retweet_count": 3619, "favorite_count": 8158, "source": "Media Studio", "id_str": "784047966441000960", "is_retweet": false}, {"created_at": "Wed Nov 02 22:56:32 +0000 2016", "text": "\u201cI will be a president who seeks to find common ground while standing my ground.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 944, "favorite_count": 2357, "source": "TweetDeck", "id_str": "793949946290569216", "is_retweet": false}, {"created_at": "Sat Apr 16 00:29:44 +0000 2016", "text": "You can knock us down, but you can't keep us down.\nWe're always getting up. We're always moving forward.\nhttps://t.co/kMBN4HegmF", "in_reply_to_screen_name": null, "retweet_count": 1683, "favorite_count": 3110, "source": "Twitter Web Client", "id_str": "721133437231366144", "is_retweet": false}, {"created_at": "Wed Jan 06 23:54:38 +0000 2016", "text": "If any of the GOP candidates were president today, Planned Parenthood would now be defunded &amp; the ACA repealed. We can't let that happen. -H", "in_reply_to_screen_name": null, "retweet_count": 1571, "favorite_count": 3272, "source": "TweetDeck", "id_str": "684885818482278400", "is_retweet": false}, {"created_at": "Fri Aug 12 16:16:04 +0000 2016", "text": "Here's a pretty incredible fact: There is a non-zero chance that Donald Trump isn't paying *any* taxes. https://t.co/Aefxj6CKCd", "in_reply_to_screen_name": null, "retweet_count": 4824, "favorite_count": 11039, "source": "TweetDeck", "id_str": "764133361560485888", "is_retweet": false}, {"created_at": "Sun Feb 28 23:59:40 +0000 2016", "text": "Too much talent is being kept on the sidelines. In every industry, we can do and need to do better. https://t.co/DltAsnePpz", "in_reply_to_screen_name": null, "retweet_count": 917, "favorite_count": 2070, "source": "Twitter Web Client", "id_str": "704093643121041408", "is_retweet": false}, {"created_at": "Sat Mar 05 20:30:10 +0000 2016", "text": "Kansas, Louisiana and Nebraska: Call the hotline with any questions about voting today! 844-IM4-HILL (844-464-4455) https://t.co/sHEPasrxME", "in_reply_to_screen_name": null, "retweet_count": 689, "favorite_count": 1257, "source": "TweetDeck", "id_str": "706215246873149440", "is_retweet": false}, {"created_at": "Sun Jan 31 15:56:33 +0000 2016", "text": "Let's say with one voice: The days of millionaires paying a lower tax rate than teachers, nurses, or firefighters are over.", "in_reply_to_screen_name": null, "retweet_count": 1234, "favorite_count": 2990, "source": "Twitter for iPhone", "id_str": "693825201923100674", "is_retweet": false}, {"created_at": "Tue Sep 13 20:37:08 +0000 2016", "text": "RT @CNBCopinion: Why @HillaryClinton is the best choice to lead the US economy (via @AndreaJung9) https://t.co/Ij9chfRugD #election2016", "in_reply_to_screen_name": null, "retweet_count": 2053, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "775795472732659712", "is_retweet": true}, {"created_at": "Sat May 21 22:57:33 +0000 2016", "text": "These moms want to make sure no other family has to lose a child to senseless violence. https://t.co/h8H9EWc1qo", "in_reply_to_screen_name": null, "retweet_count": 1800, "favorite_count": 3377, "source": "Twitter for iPhone", "id_str": "734156204432183297", "is_retweet": false}, {"created_at": "Sun Feb 14 18:25:24 +0000 2016", "text": "In 1963, Vivian Malone Jones defied Gov. Wallace's segregation orders and became @UofAlabama's first black graduate. https://t.co/klmLkkK4oi", "in_reply_to_screen_name": null, "retweet_count": 884, "favorite_count": 2263, "source": "Twitter Web Client", "id_str": "698936090162569220", "is_retweet": false}, {"created_at": "Mon Nov 07 16:33:22 +0000 2016", "text": "Share this if you know someone who needs to see it. https://t.co/i6NFjnrb35 https://t.co/NtAV1dmh1Y", "in_reply_to_screen_name": null, "retweet_count": 7270, "favorite_count": 12553, "source": "TweetDeck", "id_str": "795665459223924737", "is_retweet": false}, {"created_at": "Tue Feb 16 21:16:07 +0000 2016", "text": "\"These inequities are wrong, but they\u2019re also immoral. ... We have to begin by facing up to the reality of systemic racism.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 541, "favorite_count": 990, "source": "TweetDeck", "id_str": "699703827923144705", "is_retweet": false}, {"created_at": "Tue May 03 23:15:54 +0000 2016", "text": "Our teachers deserve more than just a pat on the back. They deserve a raise. #TeacherAppreciationDay https://t.co/0sgmUFg6mX", "in_reply_to_screen_name": null, "retweet_count": 3283, "favorite_count": 7616, "source": "TweetDeck", "id_str": "727637840620879873", "is_retweet": false}, {"created_at": "Fri Mar 04 20:11:07 +0000 2016", "text": "Corporations have to do right by their communities and our country. Too many aren\u2019t holding up their end of the bargain.", "in_reply_to_screen_name": null, "retweet_count": 403, "favorite_count": 1035, "source": "TweetDeck", "id_str": "705848065131999232", "is_retweet": false}, {"created_at": "Thu Feb 11 23:14:37 +0000 2016", "text": "When this woman had to have emergency surgery, Obamacare saved her life.\nhttps://t.co/N8e9wNMIvy", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 1650, "source": "Twitter Web Client", "id_str": "697921713313415168", "is_retweet": false}, {"created_at": "Thu Mar 03 21:53:04 +0000 2016", "text": "We can't let the next president undo everything @POTUS has made possible. https://t.co/HNUrlf2LTY", "in_reply_to_screen_name": null, "retweet_count": 910, "favorite_count": 2034, "source": "TweetDeck", "id_str": "705511335535251456", "is_retweet": false}, {"created_at": "Mon Mar 07 14:10:30 +0000 2016", "text": "Negligent gun manufacturers should be held accountable when they endanger our families.\nhttps://t.co/T4rgvaOHNS", "in_reply_to_screen_name": null, "retweet_count": 1399, "favorite_count": 3024, "source": "Twitter Web Client", "id_str": "706844477336326144", "is_retweet": false}, {"created_at": "Tue Apr 19 23:10:12 +0000 2016", "text": "Just a few hours left to vote in the NY primary. Confirm your polling place, then head over: https://t.co/iwiO5B9eal https://t.co/RcH0H3ecRN", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 1438, "source": "TweetDeck", "id_str": "722562973110288384", "is_retweet": false}, {"created_at": "Wed Nov 09 18:55:10 +0000 2016", "text": "Scripture tells us: Let us not grow weary in doing good, for in due season, we shall reap, if we do not lose heart. https://t.co/snXfdLgZq8", "in_reply_to_screen_name": null, "retweet_count": 69364, "favorite_count": 212941, "source": "TweetDeck", "id_str": "796425920378765313", "is_retweet": false}, {"created_at": "Fri Jul 29 03:17:28 +0000 2016", "text": "\"A president should respect the men and women who risk their lives to serve our country.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2539, "favorite_count": 8124, "source": "TweetDeck", "id_str": "758863989132496897", "is_retweet": false}, {"created_at": "Thu Oct 27 19:13:49 +0000 2016", "text": "\u201cGet out and vote. Get out and vote for Hillary. Vote early. Vote right now!\u201d \u2014@FLOTUS\n\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 583, "favorite_count": 1231, "source": "TweetDeck", "id_str": "791719570499330050", "is_retweet": false}, {"created_at": "Tue Jun 14 16:40:15 +0000 2016", "text": "\"He said I\u2019ll abolish the 2nd Amendment. Wrong. He said I\u2019ll let a flood of refugees into our country without any screening. Also wrong.\"", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 3808, "source": "TweetDeck", "id_str": "742758563328712704", "is_retweet": false}, {"created_at": "Mon Jul 25 17:40:52 +0000 2016", "text": "Putting Donald Trump in charge of our economy would be devastating for working families.\nhttps://t.co/HP7grLtUIB", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 3592, "source": "Twitter Web Client", "id_str": "757631718660550656", "is_retweet": false}, {"created_at": "Mon Oct 10 02:04:28 +0000 2016", "text": "RT @timkaine: Trump basically admits that he's not paying federal taxes. Blue Star families like ours don't appreciate him stiffing our tro\u2026", "in_reply_to_screen_name": null, "retweet_count": 5720, "favorite_count": 0, "source": "TweetDeck", "id_str": "785299931280138241", "is_retweet": true}, {"created_at": "Mon Aug 22 16:17:49 +0000 2016", "text": "One wrong move can be the difference between life and death when you're president.\nhttps://t.co/Tpo3Spps9z", "in_reply_to_screen_name": null, "retweet_count": 4014, "favorite_count": 8487, "source": "Twitter Web Client", "id_str": "767757680316342273", "is_retweet": false}, {"created_at": "Thu Apr 07 00:08:22 +0000 2016", "text": "Only one Democratic candidate has voted for the NRA's \"most important piece of legislation in 20 years.\"\n\nYou. https://t.co/GJ4wJ13dn2", "in_reply_to_screen_name": null, "retweet_count": 2631, "favorite_count": 4672, "source": "TweetDeck", "id_str": "717866569951481856", "is_retweet": false}, {"created_at": "Fri Jul 08 22:34:16 +0000 2016", "text": "\u201cLet us not grow weary in doing good, for in due season, we shall reap, if we do not lose heart.\u201d \u2014Galatians 6:9", "in_reply_to_screen_name": null, "retweet_count": 2250, "favorite_count": 5131, "source": "TweetDeck", "id_str": "751544959535288320", "is_retweet": false}, {"created_at": "Tue Nov 08 22:02:33 +0000 2016", "text": "RT @RobbyMook: Strong Dem Broward + Orange Counties, FL surpassed total 2012 turnout as of 4pm. Amazing work, @HillaryforFL volunteers! #GO\u2026", "in_reply_to_screen_name": null, "retweet_count": 1804, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796110686434787329", "is_retweet": true}, {"created_at": "Mon Aug 15 17:28:30 +0000 2016", "text": "There\u2019s no doubt about it\u2014Donald Trump is temperamentally unfit and totally unqualified to be president of the United States.", "in_reply_to_screen_name": null, "retweet_count": 2081, "favorite_count": 6919, "source": "TweetDeck", "id_str": "765238753225048064", "is_retweet": false}, {"created_at": "Wed Oct 05 01:53:25 +0000 2016", "text": "Wonder if Trump has shown Pence his \"secret plan\" to defeat ISIS. We\u2019re still waiting. #VPDebate https://t.co/zxjpFcmzzf", "in_reply_to_screen_name": null, "retweet_count": 3382, "favorite_count": 8245, "source": "TweetDeck", "id_str": "783485209807298560", "is_retweet": false}, {"created_at": "Thu Jul 28 22:22:46 +0000 2016", "text": "RT @SarahEMcBride: Thanks to all who watched and all who fight for LGBT rights. Here are my #DemConvention remarks! #DemsInPhilly https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 919, "favorite_count": 0, "source": "TweetDeck", "id_str": "758789826015535104", "is_retweet": true}, {"created_at": "Thu Aug 11 17:59:58 +0000 2016", "text": "The people taking care of our children and our parents deserve a good wage, good benefits, and a secure retirement.", "in_reply_to_screen_name": null, "retweet_count": 934, "favorite_count": 3232, "source": "TweetDeck", "id_str": "763797117391560704", "is_retweet": false}, {"created_at": "Thu May 19 00:12:06 +0000 2016", "text": "Two Kentucky churches came together for a special service.\nhttps://t.co/z8EIRnvV0j", "in_reply_to_screen_name": null, "retweet_count": 789, "favorite_count": 1961, "source": "Twitter Web Client", "id_str": "733087798803103744", "is_retweet": false}, {"created_at": "Mon Nov 07 00:23:38 +0000 2016", "text": "Florida in the rain. https://t.co/J6g0R08xSY", "in_reply_to_screen_name": null, "retweet_count": 5206, "favorite_count": 21842, "source": "TweetDeck", "id_str": "795421414274830336", "is_retweet": false}, {"created_at": "Fri Feb 12 03:49:16 +0000 2016", "text": "President Obama doesn't get the credit he deserves. His accomplishments shouldn't be up for debate at a #DemDebate.", "in_reply_to_screen_name": null, "retweet_count": 2392, "favorite_count": 4742, "source": "TweetDeck", "id_str": "697990828145434624", "is_retweet": false}, {"created_at": "Wed Apr 13 17:18:39 +0000 2016", "text": "\"Every child and every family in America deserves clean air to breathe, clean water to drink and a safe and healthy place to live.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1053, "favorite_count": 2870, "source": "TweetDeck", "id_str": "720300178788511744", "is_retweet": false}, {"created_at": "Tue May 10 22:09:21 +0000 2016", "text": "Cuatro cosas que puedes hacer ahora mismo para evitar una presidencia de Trump. https://t.co/QSUjt6kboI", "in_reply_to_screen_name": null, "retweet_count": 531, "favorite_count": 835, "source": "TweetDeck", "id_str": "730157805844451331", "is_retweet": false}, {"created_at": "Fri Sep 16 19:20:49 +0000 2016", "text": "\"Your decision will determine who sits in the Oval Office after Barack Obama.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 1089, "favorite_count": 3132, "source": "TweetDeck", "id_str": "776863427826479104", "is_retweet": false}, {"created_at": "Wed Apr 27 17:30:50 +0000 2016", "text": "Donald Trump's anti-Muslim rhetoric goes against everything we stand for. https://t.co/w4lmEdMPAv", "in_reply_to_screen_name": null, "retweet_count": 1283, "favorite_count": 3035, "source": "TweetDeck", "id_str": "725376672833388544", "is_retweet": false}, {"created_at": "Thu Oct 13 20:02:06 +0000 2016", "text": "Every minute of Michelle Obama\u2019s 30 minute speech today is worth watching. https://t.co/ZlEX3YaU6a", "in_reply_to_screen_name": null, "retweet_count": 30819, "favorite_count": 63674, "source": "TweetDeck", "id_str": "786658289555832834", "is_retweet": false}, {"created_at": "Wed Sep 14 13:35:05 +0000 2016", "text": "RT @kurteichenwald: In @Newsweek: A Pres Trump could not conduct US foreign policy w/o affecting his personal bank account.  https://t.co/A\u2026", "in_reply_to_screen_name": null, "retweet_count": 2183, "favorite_count": 0, "source": "TweetDeck", "id_str": "776051645297913856", "is_retweet": true}, {"created_at": "Thu Jan 07 20:44:42 +0000 2016", "text": "4 reasons we can't let Republicans take their attacks on Planned Parenthood and women's rights to the White House: https://t.co/fY37vMrXS3", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 732, "source": "TweetDeck", "id_str": "685200410714488833", "is_retweet": false}, {"created_at": "Fri Jan 29 03:57:44 +0000 2016", "text": "#GOPdebate: Lots of bickering, no real plans to strengthen families or keep us safe. https://t.co/HsojcMQUMq", "in_reply_to_screen_name": null, "retweet_count": 1424, "favorite_count": 3497, "source": "Twitter Web Client", "id_str": "692919529622671360", "is_retweet": false}, {"created_at": "Mon Sep 26 13:12:49 +0000 2016", "text": "Not a single living president has endorsed Donald Trump. https://t.co/nGXxXTo3NI", "in_reply_to_screen_name": null, "retweet_count": 5243, "favorite_count": 9512, "source": "TweetDeck", "id_str": "780394697068048384", "is_retweet": false}, {"created_at": "Wed Oct 12 15:26:56 +0000 2016", "text": "\"The Dispatch urges voters to elect Hillary Clinton.\" \u2014@DispatchAlerts https://t.co/nR8Eo57KVr #OHVotesEarly", "in_reply_to_screen_name": null, "retweet_count": 952, "favorite_count": 3059, "source": "TweetDeck", "id_str": "786226653659860992", "is_retweet": false}, {"created_at": "Sun Feb 14 16:04:16 +0000 2016", "text": "Obama is president until Jan. 20, 2017. It's his job to nominate a justice, the Senate has a responsibility to vote. https://t.co/nY2f60Yiso", "in_reply_to_screen_name": null, "retweet_count": 7786, "favorite_count": 14386, "source": "Twitter Web Client", "id_str": "698900574738186241", "is_retweet": false}, {"created_at": "Mon Apr 11 20:30:11 +0000 2016", "text": "If toy companies are held accountable for endangering our kids, gun makers should be too. Let's end their immunity. https://t.co/JHURkads8v", "in_reply_to_screen_name": null, "retweet_count": 2301, "favorite_count": 5592, "source": "TweetDeck", "id_str": "719623601729769473", "is_retweet": false}, {"created_at": "Sun Mar 06 02:15:49 +0000 2016", "text": "Thank you, Louisiana! https://t.co/7KPEuA2mWJ", "in_reply_to_screen_name": null, "retweet_count": 1570, "favorite_count": 4390, "source": "TweetDeck", "id_str": "706302231507820544", "is_retweet": false}, {"created_at": "Thu Oct 20 20:36:58 +0000 2016", "text": "\"You're OK with your nominee having a bromance with Putin?\" \u2014@POTUS to the GOP", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 816, "favorite_count": 1840, "source": "TweetDeck", "id_str": "789203778557837312", "is_retweet": false}, {"created_at": "Wed Jan 13 19:20:31 +0000 2016", "text": "It\u2019s time to pick a side: Stand with the gun lobby or stand up to it. https://t.co/MnipPxzjps", "in_reply_to_screen_name": null, "retweet_count": 509, "favorite_count": 1196, "source": "TweetDeck", "id_str": "687353551832612864", "is_retweet": false}, {"created_at": "Mon Mar 07 19:19:57 +0000 2016", "text": "Fifty years later, we have to recognize that this work isn't done. We have to make it easier for every citizen to vote\u2014not harder. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 684, "favorite_count": 1631, "source": "TweetDeck", "id_str": "706922352907517952", "is_retweet": false}, {"created_at": "Fri Oct 21 00:18:57 +0000 2016", "text": "RT @TheDemocrats: \u201cDon't just tweet about my speech last week \u2013 if you liked that speech, then go vote.\u201d \u2013Michelle Obama \n\nHere\u2019s how: http\u2026", "in_reply_to_screen_name": null, "retweet_count": 2080, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789259645839867904", "is_retweet": true}, {"created_at": "Wed Mar 23 18:47:24 +0000 2016", "text": "\"We need to rely on what actually works, not bluster that alienates our partners and doesn\u2019t make us any safer.\" \u2014Hillary in CA", "in_reply_to_screen_name": null, "retweet_count": 562, "favorite_count": 1398, "source": "TweetDeck", "id_str": "712712366455136256", "is_retweet": false}, {"created_at": "Fri Sep 02 14:26:54 +0000 2016", "text": "The worst part is, Trump's disturbing policies for immigrant families go way beyond just \"building a wall.\" https://t.co/szrTF9eB0E", "in_reply_to_screen_name": null, "retweet_count": 1786, "favorite_count": 3545, "source": "Twitter for iPhone", "id_str": "771716034093023232", "is_retweet": false}, {"created_at": "Sun Oct 30 21:12:38 +0000 2016", "text": "RT @HillaryforOH: Not even a rainy day can take away the excitement of voting for @HillaryClinton as the first female president! #OHVotesEa\u2026", "in_reply_to_screen_name": null, "retweet_count": 5241, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "792836634907668485", "is_retweet": true}, {"created_at": "Sat Feb 06 20:52:45 +0000 2016", "text": "We\u2019re fighting for the millions of people who can\u2019t wait.\nhttps://t.co/dhWPN07Rfx", "in_reply_to_screen_name": null, "retweet_count": 577, "favorite_count": 1073, "source": "Twitter Web Client", "id_str": "696074070387879936", "is_retweet": false}, {"created_at": "Thu Jul 28 03:35:42 +0000 2016", "text": "\"We don\u2019t fear the future; we shape it, we embrace it, as one people, stronger together than we are on our own.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3421, "favorite_count": 8469, "source": "TweetDeck", "id_str": "758506190691299329", "is_retweet": false}, {"created_at": "Wed Aug 10 22:12:11 +0000 2016", "text": "Young people face tough challenges, but they have the ability to do something about it: Vote. https://t.co/dm98k71nf1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 967, "favorite_count": 2197, "source": "TweetDeck", "id_str": "763498205095006208", "is_retweet": false}, {"created_at": "Wed Sep 07 14:42:58 +0000 2016", "text": "The @DallasNews hasn't endorsed a Democrat for president since before WWII. Here's why it's endorsing Hillary: https://t.co/lMhufMDjFk", "in_reply_to_screen_name": null, "retweet_count": 2355, "favorite_count": 5120, "source": "TweetDeck", "id_str": "773532014511349761", "is_retweet": false}, {"created_at": "Tue Sep 06 22:59:26 +0000 2016", "text": "\"Clinton\u2019s proposals would revolutionize how we treat young children in America.\u201d https://t.co/vdJ9DuNINc", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 2353, "source": "TweetDeck", "id_str": "773294567961616384", "is_retweet": false}, {"created_at": "Wed Oct 05 00:02:30 +0000 2016", "text": "Tonight, Mike Pence is going to prove he's got Trump's back no matter what.\n\nFollow @TheBriefing2016 to hold him ac\u2026 https://t.co/O7KfuiDapn", "in_reply_to_screen_name": null, "retweet_count": 1531, "favorite_count": 3594, "source": "Media Studio", "id_str": "783457298727464960", "is_retweet": false}, {"created_at": "Fri Nov 04 19:58:27 +0000 2016", "text": "RT @BernieSanders: Donald Trump suffers from a very serious disease called amnesia. He seems to have forgotten 8 years ago we were losing 8\u2026", "in_reply_to_screen_name": null, "retweet_count": 75161, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794629906147708928", "is_retweet": true}, {"created_at": "Mon Mar 28 21:13:53 +0000 2016", "text": "Senator @ChuckGrassley says we should wait for a new president to pick a Justice because \u201cthe American people shouldn\u2019t be denied a voice.\u201d", "in_reply_to_screen_name": null, "retweet_count": 447, "favorite_count": 847, "source": "TweetDeck", "id_str": "714561171223764992", "is_retweet": false}, {"created_at": "Fri Sep 09 16:15:00 +0000 2016", "text": "This is what a comprehensive (not \"secret\") counterterrorism plan looks like. https://t.co/QgVruA4rQA", "in_reply_to_screen_name": null, "retweet_count": 895, "favorite_count": 2411, "source": "TweetDeck", "id_str": "774279952187416577", "is_retweet": false}, {"created_at": "Mon Jan 11 22:52:08 +0000 2016", "text": "How does a presidential candidate spend a night with friends? Find out on @TheConversation with @amandadecadenet.\nhttps://t.co/Jxusu23ym5", "in_reply_to_screen_name": null, "retweet_count": 264, "favorite_count": 686, "source": "Twitter Web Client", "id_str": "686682028238974977", "is_retweet": false}, {"created_at": "Mon Aug 15 17:39:34 +0000 2016", "text": "\"What Hillary\u2019s all about is making sure every one of you\u2026can look your child in the eye and say\u2026everything is gonna be ok.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 855, "favorite_count": 2945, "source": "TweetDeck", "id_str": "765241534908334080", "is_retweet": false}, {"created_at": "Wed Mar 23 18:55:10 +0000 2016", "text": "Slogans aren\u2019t a strategy. Loose cannons tend to misfire. What America needs is strong, smart, steady leadership.", "in_reply_to_screen_name": null, "retweet_count": 928, "favorite_count": 2243, "source": "TweetDeck", "id_str": "712714319595761669", "is_retweet": false}, {"created_at": "Thu May 05 01:15:30 +0000 2016", "text": "On Holocaust Remembrance Day, we remember the millions of lives lost and rededicate ourselves to fighting hate and intolerance everywhere.", "in_reply_to_screen_name": null, "retweet_count": 2675, "favorite_count": 5698, "source": "TweetDeck", "id_str": "728030325968900096", "is_retweet": false}, {"created_at": "Thu Jun 30 00:29:03 +0000 2016", "text": "\u201cDonald Trump has a\u2026chance of becoming president.\" https://t.co/eFTYunVudu https://t.co/NT986FC4OF", "in_reply_to_screen_name": null, "retweet_count": 727, "favorite_count": 1886, "source": "TweetDeck", "id_str": "748312355784822784", "is_retweet": false}, {"created_at": "Wed Sep 28 19:29:27 +0000 2016", "text": "\"Thank you, @BernieSanders. Thank you for your leadership and your support in this campaign.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 4029, "favorite_count": 15515, "source": "TweetDeck", "id_str": "781214254351446016", "is_retweet": false}, {"created_at": "Wed Jul 27 02:55:31 +0000 2016", "text": "\u201cHillary will make us stronger together. You know it because she spent a lifetime doing it.\u201d \u2014@BillClinton https://t.co/MLSDqDUhmf", "in_reply_to_screen_name": null, "retweet_count": 2473, "favorite_count": 6895, "source": "TweetDeck", "id_str": "758133690597769216", "is_retweet": false}, {"created_at": "Wed Oct 05 22:37:32 +0000 2016", "text": "\"Trump...tarnish[es] almost everyone around him because to work with him, they have to defend the indefensible.\" https://t.co/rwHb5ri1UU", "in_reply_to_screen_name": null, "retweet_count": 2095, "favorite_count": 5385, "source": "TweetDeck", "id_str": "783798304886915072", "is_retweet": false}, {"created_at": "Fri Aug 12 15:19:19 +0000 2016", "text": "You can also listen to the first episode of With Her by streaming here: https://t.co/BVmjS8MFWn", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 505, "favorite_count": 1413, "source": "Twitter Web Client", "id_str": "764119077732442112", "is_retweet": false}, {"created_at": "Thu Aug 11 14:22:30 +0000 2016", "text": "Unlike Donald Trump's, our campaign is about issues\u2014not insults. https://t.co/puVZP5iFRE https://t.co/pB0DcV1TeP", "in_reply_to_screen_name": null, "retweet_count": 2508, "favorite_count": 7507, "source": "TweetDeck", "id_str": "763742392503730176", "is_retweet": false}, {"created_at": "Mon Oct 31 18:28:10 +0000 2016", "text": "Trump's already threatened our national security. That'll be the tip of the iceberg if he becomes president. https://t.co/8waULARFD6", "in_reply_to_screen_name": null, "retweet_count": 2535, "favorite_count": 5174, "source": "TweetDeck", "id_str": "793157634765520896", "is_retweet": false}, {"created_at": "Mon Oct 03 17:49:14 +0000 2016", "text": "\u201cIt doesn\u2019t look like he paid a dime of federal income tax for almost two decades.\u201d \u2014Hillary on Trump", "in_reply_to_screen_name": null, "retweet_count": 1292, "favorite_count": 4367, "source": "TweetDeck", "id_str": "783000974973624321", "is_retweet": false}, {"created_at": "Fri Jun 10 20:30:57 +0000 2016", "text": "Thanks, @VP Biden! Your support is a BIG\u2026 deal. -H https://t.co/ShRoVUFocR", "in_reply_to_screen_name": null, "retweet_count": 2469, "favorite_count": 8405, "source": "TweetDeck", "id_str": "741367066385584128", "is_retweet": false}, {"created_at": "Tue Sep 13 16:35:48 +0000 2016", "text": "As Muslims celebrate Eid al-Adha\u2014a festival of sacrifice, charity, &amp; feeding the poor\u2014let's reflect on those shared values. Eid Mubarak! -H", "in_reply_to_screen_name": null, "retweet_count": 3268, "favorite_count": 8751, "source": "TweetDeck", "id_str": "775734738464178176", "is_retweet": false}, {"created_at": "Fri Apr 01 02:24:28 +0000 2016", "text": "We can\u2019t afford to let this agenda into the White House. (via @PPact) https://t.co/GcdhvQkus6", "in_reply_to_screen_name": null, "retweet_count": 2476, "favorite_count": 4701, "source": "TweetDeck", "id_str": "715726495122108416", "is_retweet": false}, {"created_at": "Wed Jan 13 02:44:57 +0000 2016", "text": ".@POTUS has kept the economy strong and the country safe. That's what the president needs to do. That\u2019s the job. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1326, "favorite_count": 3143, "source": "TweetDeck", "id_str": "687103005943017474", "is_retweet": false}, {"created_at": "Tue Aug 23 03:17:35 +0000 2016", "text": "Tune in to watch Hillary on @JimmyKimmelLive, 11:35 ET/10:35 CT. https://t.co/drQevoF879", "in_reply_to_screen_name": null, "retweet_count": 1127, "favorite_count": 4846, "source": "TweetDeck", "id_str": "767923716038750208", "is_retweet": false}, {"created_at": "Tue Jun 28 15:33:26 +0000 2016", "text": "It's almost as if Trump only cares about himself. https://t.co/7v9jNBtokw", "in_reply_to_screen_name": null, "retweet_count": 2869, "favorite_count": 7644, "source": "TweetDeck", "id_str": "747815176670449664", "is_retweet": false}, {"created_at": "Sat Jul 23 00:11:40 +0000 2016", "text": "I'm thrilled to announce my running mate, @TimKaine, a man who's devoted his life to fighting for others. -H https://t.co/lTVyfztE5Z", "in_reply_to_screen_name": null, "retweet_count": 30437, "favorite_count": 62556, "source": "TweetDeck", "id_str": "756642903469031424", "is_retweet": false}, {"created_at": "Tue Jul 26 02:37:02 +0000 2016", "text": "\"Last week...Trump spoke for more than an hour...But other than talking about building a stupid wall\u2026did you hear any actual ideas?\" \u2013Warren", "in_reply_to_screen_name": null, "retweet_count": 3624, "favorite_count": 10068, "source": "TweetDeck", "id_str": "757766649474912257", "is_retweet": false}, {"created_at": "Tue Jul 12 15:58:03 +0000 2016", "text": "\"He has energized and inspired a generation of young people who care deeply about our country.\u201d \u2014Hillary on @BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 891, "favorite_count": 2863, "source": "TweetDeck", "id_str": "752894800001720326", "is_retweet": false}, {"created_at": "Tue Sep 27 12:32:21 +0000 2016", "text": "\"I have a winning temperament.\" \u2014Donald Trump last night \n\nReally? #SheWon https://t.co/nMTFoISagO", "in_reply_to_screen_name": null, "retweet_count": 4252, "favorite_count": 11009, "source": "Media Studio", "id_str": "780746901591199744", "is_retweet": false}, {"created_at": "Mon Jun 27 15:14:40 +0000 2016", "text": "We will fight climate change by making America the clean energy superpower of the 21st century: https://t.co/Jb7DXwL9WS", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 2391, "source": "TweetDeck", "id_str": "747448065011879936", "is_retweet": false}, {"created_at": "Sat Oct 29 14:31:55 +0000 2016", "text": "Equality is on the ballot.\nJustice is on the ballot.\nOur progress is on the ballot. \nhttps://t.co/tTgeqy51PU https://t.co/uVEjpCzVCq", "in_reply_to_screen_name": null, "retweet_count": 4435, "favorite_count": 11010, "source": "Media Studio", "id_str": "792373402304512002", "is_retweet": false}, {"created_at": "Tue Mar 08 15:14:24 +0000 2016", "text": "It\u2019s Election Day for MI and MS! Confirm your polling place and go vote today: https://t.co/T9Tg9wMoY9 https://t.co/k13Y5Kyv3W", "in_reply_to_screen_name": null, "retweet_count": 815, "favorite_count": 1508, "source": "TweetDeck", "id_str": "707222945865863169", "is_retweet": false}, {"created_at": "Mon Mar 28 21:19:46 +0000 2016", "text": "The idea that money is speech turns our Constitution upside down. Wealth shouldn\u2019t be privileged in the courts\u2014it should have no privilege.", "in_reply_to_screen_name": null, "retweet_count": 909, "favorite_count": 1931, "source": "TweetDeck", "id_str": "714562649015586817", "is_retweet": false}, {"created_at": "Wed Aug 31 21:44:35 +0000 2016", "text": "Trump has vilified Mexicans and immigrants since day one of his campaign. That's not what America stands for. https://t.co/dDubrEuOLm", "in_reply_to_screen_name": null, "retweet_count": 5653, "favorite_count": 12833, "source": "TweetDeck", "id_str": "771101401468563456", "is_retweet": false}, {"created_at": "Thu Oct 20 22:02:58 +0000 2016", "text": "\u201cHope is what drives Hillary...it is why she has spent her life fighting for kids who need a champion.\u201d \u2014@FLOTUS https://t.co/jR5GULGJGu", "in_reply_to_screen_name": null, "retweet_count": 3021, "favorite_count": 9328, "source": "TweetDeck", "id_str": "789225420952629248", "is_retweet": false}, {"created_at": "Wed Feb 10 02:52:59 +0000 2016", "text": "To everyone who supports this campaign: Thank you. You\u2019re the reason we\u2019re here. https://t.co/8HBEVa6QPT\nhttps://t.co/FOUi8vpAF2", "in_reply_to_screen_name": null, "retweet_count": 741, "favorite_count": 2022, "source": "Twitter Web Client", "id_str": "697251888316567554", "is_retweet": false}, {"created_at": "Tue Jun 14 16:40:58 +0000 2016", "text": "Trump's statements are lies\u2014but he tells them because he has to distract from the fact that he has nothing substantive to say for himself.", "in_reply_to_screen_name": null, "retweet_count": 3438, "favorite_count": 8598, "source": "TweetDeck", "id_str": "742758741305614336", "is_retweet": false}, {"created_at": "Wed Feb 17 20:16:05 +0000 2016", "text": "To raise incomes, we need to support unions and a living wage. I stand with working Minnesotans today. https://t.co/MpFAC0ZtWb -H", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 976, "source": "TweetDeck", "id_str": "700051110296489984", "is_retweet": false}, {"created_at": "Sat Nov 05 18:15:15 +0000 2016", "text": "RT @LEFsAdventures: The line to get in to get canvas packets for Hillary in South Philly. I cried a little with joy. #teamawesome #proudtob\u2026", "in_reply_to_screen_name": null, "retweet_count": 3656, "favorite_count": 0, "source": "TweetDeck", "id_str": "794966323637944320", "is_retweet": true}, {"created_at": "Thu Mar 03 16:32:24 +0000 2016", "text": "We won't let families be torn apart. Proud to have @UFWupdates on this team\u2014s\u00ed se puede.\nhttps://t.co/3QVGrgReRZ", "in_reply_to_screen_name": null, "retweet_count": 951, "favorite_count": 1871, "source": "Twitter Web Client", "id_str": "705430637461700608", "is_retweet": false}, {"created_at": "Fri Oct 07 23:10:57 +0000 2016", "text": "RT @POTUS: Voted early today. Make sure you vote too: https://t.co/SUUmUADsHj https://t.co/NMesNhwsaG", "in_reply_to_screen_name": null, "retweet_count": 16490, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784531488134103040", "is_retweet": true}, {"created_at": "Sun Nov 06 02:43:04 +0000 2016", "text": "Today in 1872, Susan B. Anthony voted\u2014and was then arrested. Almost 50 years later, the 19th Amendment was ratified\u2026 https://t.co/6ADXbpW0Oq", "in_reply_to_screen_name": null, "retweet_count": 7366, "favorite_count": 14591, "source": "TweetDeck", "id_str": "795094118158495744", "is_retweet": false}, {"created_at": "Fri Aug 19 18:49:37 +0000 2016", "text": "Why do Trump and Putin keep saying all the same things? (Hint: It's not Manafort.)\nhttps://t.co/OVMdxHaHUE", "in_reply_to_screen_name": null, "retweet_count": 4400, "favorite_count": 7442, "source": "Twitter Web Client", "id_str": "766708716263526400", "is_retweet": false}, {"created_at": "Tue Jan 26 03:44:36 +0000 2016", "text": "The president has to strengthen the economy, fight for families, and keep the country safe. That's the job. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 610, "favorite_count": 1265, "source": "TweetDeck", "id_str": "691829059932852225", "is_retweet": false}, {"created_at": "Tue May 24 18:49:32 +0000 2016", "text": "How cruel do you have to be to actually root for a crisis that would devastate millions of families, all to pad your own pockets?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 834, "favorite_count": 1433, "source": "TweetDeck", "id_str": "735180952452890624", "is_retweet": false}, {"created_at": "Mon Nov 07 23:31:16 +0000 2016", "text": "Tomorrow, we have the chance to stand up for the America we believe in. RT this if you're voting.\u2026 https://t.co/7T7UqlIvGt", "in_reply_to_screen_name": null, "retweet_count": 10969, "favorite_count": 16297, "source": "TweetDeck", "id_str": "795770626212503552", "is_retweet": false}, {"created_at": "Fri Sep 23 21:14:25 +0000 2016", "text": "RT @Enquirer: The Enquirer editorial board is endorsing Hillary Clinton for president, breaking a nearly century-long tradition of endorsin\u2026", "in_reply_to_screen_name": null, "retweet_count": 3054, "favorite_count": 0, "source": "TweetDeck", "id_str": "779428731228196864", "is_retweet": true}, {"created_at": "Mon Jul 04 02:40:09 +0000 2016", "text": "Middle-class Americans thought Trump Institute would help them. In reality, it was yet another giant scam. https://t.co/zYAJ0hiq0v", "in_reply_to_screen_name": null, "retweet_count": 1748, "favorite_count": 3697, "source": "Twitter for iPhone", "id_str": "749794902381301760", "is_retweet": false}, {"created_at": "Mon Jun 06 21:16:42 +0000 2016", "text": "There's only one candidate who can step into the Oval Office and lead on day one. https://t.co/gJkxN4pbvF\nhttps://t.co/cV75J39V7T", "in_reply_to_screen_name": null, "retweet_count": 1328, "favorite_count": 3397, "source": "Twitter Web Client", "id_str": "739929029411672064", "is_retweet": false}, {"created_at": "Fri Sep 16 13:54:26 +0000 2016", "text": "\"You don't just deserve a seat at the table. It's past time you had a fair chance to run the meeting.\" \u2014Hillary to the Black Women\u2019s Agenda", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 660, "favorite_count": 1396, "source": "TweetDeck", "id_str": "776781293287829504", "is_retweet": false}, {"created_at": "Thu May 19 17:59:46 +0000 2016", "text": "\"I know how hard this job is. You need steadiness as well as strength and smarts... Donald Trump is not qualified.\" \u2014Hillary on @CNN", "in_reply_to_screen_name": null, "retweet_count": 1025, "favorite_count": 2365, "source": "TweetDeck", "id_str": "733356486982766593", "is_retweet": false}, {"created_at": "Wed Apr 27 18:19:43 +0000 2016", "text": "After a week of reports that Trump would change his tone heading into the general election, once again he's letting his true colors show.", "in_reply_to_screen_name": null, "retweet_count": 1450, "favorite_count": 3895, "source": "TweetDeck", "id_str": "725388975934955520", "is_retweet": false}, {"created_at": "Mon Sep 19 16:41:28 +0000 2016", "text": "When Americans get knocked down, we get right back up again. We refuse to quit\u2014no matter what. \n\nThat\u2019s the spirit we need in this election.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 739, "favorite_count": 1754, "source": "TweetDeck", "id_str": "777910489170972672", "is_retweet": false}, {"created_at": "Wed Mar 02 02:13:03 +0000 2016", "text": "Let\u2019s go win this nomination. If you\u2019re standing with Hillary tonight, chip in $1 right now. https://t.co/xbFLmunANR", "in_reply_to_screen_name": null, "retweet_count": 494, "favorite_count": 1299, "source": "TweetDeck", "id_str": "704851986966036480", "is_retweet": false}, {"created_at": "Mon Jul 18 17:11:16 +0000 2016", "text": "We're watching the Party of Lincoln become the Party of Trump.\n\nThat's not just a loss for our country\u2014it's a threat.", "in_reply_to_screen_name": null, "retweet_count": 1702, "favorite_count": 4414, "source": "TweetDeck", "id_str": "755087553003393024", "is_retweet": false}, {"created_at": "Fri Oct 07 23:46:31 +0000 2016", "text": "RT @timkaine: This kind of behavior is disgusting. It makes me sick to my stomach. https://t.co/mOUKgr6axl", "in_reply_to_screen_name": null, "retweet_count": 8204, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784540441316327429", "is_retweet": true}, {"created_at": "Sat Jul 23 18:00:22 +0000 2016", "text": "\u201cI know the NRA...They\u2019ve campaigned against me in every statewide race I\u2019ve ever run, but I\u2019ve never lost an election.\u201d \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 4977, "source": "TweetDeck", "id_str": "756911849757667328", "is_retweet": false}, {"created_at": "Thu Aug 18 21:53:33 +0000 2016", "text": "RT @meredeetch: Even after the 19th was ratified, women of color battled to get to vote. #RosanellEaton had to take a literacy test. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 883, "favorite_count": 0, "source": "TweetDeck", "id_str": "766392618712461312", "is_retweet": true}, {"created_at": "Thu Sep 08 17:15:07 +0000 2016", "text": "We\u2019re going to guarantee equal pay for women. It is long overdue. https://t.co/BXLf58T6nE", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 672, "favorite_count": 1564, "source": "TweetDeck", "id_str": "773932691175669761", "is_retweet": false}, {"created_at": "Mon Aug 15 20:45:36 +0000 2016", "text": "We have some questions about Donald Trump's cozy relationship with Russia. https://t.co/N6ySNILYMx", "in_reply_to_screen_name": null, "retweet_count": 3176, "favorite_count": 5860, "source": "TweetDeck", "id_str": "765288353419890688", "is_retweet": false}, {"created_at": "Fri Apr 01 15:58:01 +0000 2016", "text": "Every Republican candidate wants to ban abortion, and their frontrunner said he'd punish women seeking it. https://t.co/u50i7u0pga", "in_reply_to_screen_name": null, "retweet_count": 1080, "favorite_count": 1786, "source": "TweetDeck", "id_str": "715931232773779456", "is_retweet": false}, {"created_at": "Wed Sep 28 22:52:07 +0000 2016", "text": "\"If a candidate regularly and flippantly makes cruel and insulting comments about women...that's who that candidate\u2026 https://t.co/uOdGkhKWRY", "in_reply_to_screen_name": null, "retweet_count": 12776, "favorite_count": 27600, "source": "Media Studio", "id_str": "781265257398411266", "is_retweet": false}, {"created_at": "Fri Jul 08 22:23:32 +0000 2016", "text": "We cannot, must not, vilify police officers. Remember what those officers were doing when they died. They were protecting a peaceful march.", "in_reply_to_screen_name": null, "retweet_count": 5018, "favorite_count": 16992, "source": "TweetDeck", "id_str": "751542261175951360", "is_retweet": false}, {"created_at": "Sun Sep 18 23:28:05 +0000 2016", "text": "Next week, Hillary will walk on stage for the first presidential debate. Chip in now for the chance to be there: https://t.co/mHGncsXG6y", "in_reply_to_screen_name": null, "retweet_count": 1194, "favorite_count": 4128, "source": "TweetDeck", "id_str": "777650431963107328", "is_retweet": false}, {"created_at": "Fri Aug 26 21:09:07 +0000 2016", "text": "Daughter, business owner, and immigrant: Meet Luisa\u2014chaser of the American Dream.\nhttps://t.co/yhGwROb937", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 4665, "source": "Twitter Web Client", "id_str": "769280539123601408", "is_retweet": false}, {"created_at": "Sun Mar 06 19:20:21 +0000 2016", "text": "A young girl asked: \"What are you going to do about all this bullying?\"\nhttps://t.co/Ffyp8yZtZq", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 3205, "source": "Twitter Web Client", "id_str": "706560064400699392", "is_retweet": false}, {"created_at": "Sat Mar 19 02:32:51 +0000 2016", "text": "Congratulations Air Force General Lori Robinson\u2014America's first female combatant commander. https://t.co/dKoYQT9elt", "in_reply_to_screen_name": null, "retweet_count": 1816, "favorite_count": 4271, "source": "TweetDeck", "id_str": "711017561882804224", "is_retweet": false}, {"created_at": "Wed Jun 01 20:02:05 +0000 2016", "text": "FACT: Trump University identified those most vulnerable and then targeted them with predatory marketing tactics. https://t.co/xDeDI1KqOr", "in_reply_to_screen_name": null, "retweet_count": 1431, "favorite_count": 2154, "source": "TweetDeck", "id_str": "738098312134447104", "is_retweet": false}, {"created_at": "Fri Sep 16 13:44:06 +0000 2016", "text": "Watch Hillary speak live at the Black Women's Agenda Symposium: https://t.co/RXdsRJWAal", "in_reply_to_screen_name": null, "retweet_count": 761, "favorite_count": 2275, "source": "TweetDeck", "id_str": "776778691749801984", "is_retweet": false}, {"created_at": "Tue Sep 13 23:57:18 +0000 2016", "text": "A man\u2019s role in child care, according to Donald Trump: https://t.co/iY1wa9L0Gn", "in_reply_to_screen_name": null, "retweet_count": 3542, "favorite_count": 5524, "source": "Twitter Web Client", "id_str": "775845844713177088", "is_retweet": false}, {"created_at": "Fri Jun 03 01:01:37 +0000 2016", "text": "Donald Trump's foreign policy is already making Americans less safe, and he's not even president (yet).\nhttps://t.co/JTuxfXlZl8", "in_reply_to_screen_name": null, "retweet_count": 2414, "favorite_count": 4436, "source": "Twitter Web Client", "id_str": "738536082220843008", "is_retweet": false}, {"created_at": "Thu Oct 06 16:08:26 +0000 2016", "text": "RT @TBTimes_Opinion: We are proud to recommend @HillaryClinton for President https://t.co/wEUPzQw4xt https://t.co/SsPrm7MPZd", "in_reply_to_screen_name": null, "retweet_count": 2234, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784062770413273088", "is_retweet": true}, {"created_at": "Mon Feb 22 03:33:01 +0000 2016", "text": "Torture doesn't work. It's wrong. These dangerous words from Republicans have no place in our country. https://t.co/Pzf29j5ayo -H", "in_reply_to_screen_name": null, "retweet_count": 1428, "favorite_count": 2818, "source": "TweetDeck", "id_str": "701610619796111361", "is_retweet": false}, {"created_at": "Fri Apr 15 17:45:10 +0000 2016", "text": "Sen. Sanders couldn't name a time donations influenced Hillary\u2014because there are none. #DemDebate (via @nowthisnews) https://t.co/4UkN6Tk90a", "in_reply_to_screen_name": null, "retweet_count": 1608, "favorite_count": 3041, "source": "TweetDeck", "id_str": "721031626411622400", "is_retweet": false}, {"created_at": "Sat Feb 20 23:23:56 +0000 2016", "text": "\u201cI\u2019ve never believed in dividing America between \u2018us\u2019 and \u2018them.\u2019 We are all in this together. We all have to do our part.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1502, "favorite_count": 3237, "source": "TweetDeck", "id_str": "701185548107571203", "is_retweet": false}, {"created_at": "Tue May 03 18:55:33 +0000 2016", "text": "Watch live: Hillary\u2019s speaking in Ohio on her plans to create jobs and grow our economy: https://t.co/GhQSsnQVdC https://t.co/vP08a4W0SR", "in_reply_to_screen_name": null, "retweet_count": 420, "favorite_count": 919, "source": "TweetDeck", "id_str": "727572320726953984", "is_retweet": false}, {"created_at": "Mon Sep 05 00:41:24 +0000 2016", "text": "RT @timkaine: We need better community resources for the 1 in 4 college-aged students facing mental health challenges. https://t.co/6HgJLtH\u2026", "in_reply_to_screen_name": null, "retweet_count": 1695, "favorite_count": 0, "source": "TweetDeck", "id_str": "772595451698749440", "is_retweet": true}, {"created_at": "Thu Jul 28 03:20:28 +0000 2016", "text": "\"Ronald Reagan called America 'a shining city on a hill.'\n\nDonald Trump calls it 'a divided crime scene' that only he can fix.'\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 2739, "favorite_count": 7767, "source": "TweetDeck", "id_str": "758502354329169924", "is_retweet": false}, {"created_at": "Fri Feb 19 22:54:23 +0000 2016", "text": "Proud to stand w/ @KrisGoldsmith85: Our vets suffering from PTS deserve action and a fair hearing. #fairness4vets https://t.co/G9zi9AjBl1 -H", "in_reply_to_screen_name": null, "retweet_count": 373, "favorite_count": 748, "source": "TweetDeck", "id_str": "700815722197467136", "is_retweet": false}, {"created_at": "Fri Feb 19 19:25:52 +0000 2016", "text": ".@POTUS' achievements speak for themselves. The idea that supporting him is a ploy to win black votes is baffling. https://t.co/BcqarX4rZ9", "in_reply_to_screen_name": null, "retweet_count": 1093, "favorite_count": 2009, "source": "Twitter Web Client", "id_str": "700763247679373312", "is_retweet": false}, {"created_at": "Mon Nov 07 17:39:19 +0000 2016", "text": "\u201cI believe America\u2019s best days are still ahead of us.\u201d \u2014Hillary https://t.co/hzhThRsb3x", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 991, "favorite_count": 2430, "source": "TweetDeck", "id_str": "795682053400526851", "is_retweet": false}, {"created_at": "Tue Jul 19 22:47:48 +0000 2016", "text": "On this day in 1984, @TheDemocrats nominated Geraldine Ferraro\u2014the first woman VP nominee on a major party ticket. https://t.co/DzB7PdyABY", "in_reply_to_screen_name": null, "retweet_count": 2417, "favorite_count": 7792, "source": "TweetDeck", "id_str": "755534632897175552", "is_retweet": false}, {"created_at": "Thu May 05 21:31:26 +0000 2016", "text": "Trump podr\u00eda ser tu pr\u00f3ximo Comandante del Ej\u00e9rcito. \u00bfC\u00f3mo es su visi\u00f3n sobre la pol\u00edtica exterior? Irresponsable. https://t.co/9MZs1jUFoV", "in_reply_to_screen_name": null, "retweet_count": 529, "favorite_count": 737, "source": "TweetDeck", "id_str": "728336327331221505", "is_retweet": false}, {"created_at": "Fri Mar 18 13:03:26 +0000 2016", "text": "Are you with Hillary? So are they \u2b07\ufe0f Enter for a chance to meet Hillary, George, and Amal at the Clooneys' home. https://t.co/3Ko8hwCqWn", "in_reply_to_screen_name": null, "retweet_count": 1534, "favorite_count": 5253, "source": "TweetDeck", "id_str": "710813865248997376", "is_retweet": false}, {"created_at": "Sun Feb 28 00:54:35 +0000 2016", "text": "\"Instead of building walls, we need to be tearing down barriers. We need to show that we really are all in this together.\" \u2014Hillary in SC", "in_reply_to_screen_name": null, "retweet_count": 1493, "favorite_count": 3055, "source": "TweetDeck", "id_str": "703745074396602371", "is_retweet": false}, {"created_at": "Tue Feb 09 03:50:06 +0000 2016", "text": "\"She's never stopped fighting for children.\" 4 people explain why they canvass for Hillary: https://t.co/TjpfZNpAub https://t.co/DFeNmlq8V1", "in_reply_to_screen_name": null, "retweet_count": 669, "favorite_count": 1634, "source": "TweetDeck", "id_str": "696903874125254656", "is_retweet": false}, {"created_at": "Mon Oct 24 17:29:34 +0000 2016", "text": "\"The game is 'rigged'\u2014it\u2019s rigged for guys like Donald Trump. I say, it\u2019s time to fight back!\u201d \u2014@ElizabethForMA https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 456, "favorite_count": 1049, "source": "TweetDeck", "id_str": "790606169257742336", "is_retweet": false}, {"created_at": "Mon Oct 03 17:52:16 +0000 2016", "text": "RT @HFA: \"Trump\u2019s plan would cut his own taxes even more\u2026his plan would actually raise taxes for millions of middle-class families.\" \u2014Hilla\u2026", "in_reply_to_screen_name": null, "retweet_count": 686, "favorite_count": 0, "source": "TweetDeck", "id_str": "783001736248172544", "is_retweet": true}, {"created_at": "Tue Mar 08 14:04:10 +0000 2016", "text": "Advancing the status of women and girls makes economies grow and nations more secure. It's the right\u2014and smart\u2014thing to do. #IWD2016 -H", "in_reply_to_screen_name": null, "retweet_count": 4157, "favorite_count": 6926, "source": "TweetDeck", "id_str": "707205272830402562", "is_retweet": false}, {"created_at": "Wed Aug 10 19:49:58 +0000 2016", "text": "Imagine how you'll feel the day after the election if we haven't joined together to chart a course of optimism. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1441, "favorite_count": 3940, "source": "TweetDeck", "id_str": "763462413094096896", "is_retweet": false}, {"created_at": "Fri Oct 21 01:24:30 +0000 2016", "text": "\"This is such a special event that I took a break from my rigorous nap schedule to be here.\" \u2014Hillary #AlSmithDinner", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1656, "favorite_count": 5655, "source": "TweetDeck", "id_str": "789276139088973824", "is_retweet": false}, {"created_at": "Thu Sep 08 23:23:47 +0000 2016", "text": "\"Humility is not something you hear much about in politics, is it? But we should. None of us is perfect.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1554, "favorite_count": 5337, "source": "TweetDeck", "id_str": "774025470778052610", "is_retweet": false}, {"created_at": "Mon May 23 16:59:42 +0000 2016", "text": "@MaryKayHenry Nobody knows better than unions that we\u2019re stronger together. Honored to join you all in the fight for working families.", "in_reply_to_screen_name": "MaryKayHenry", "retweet_count": 165, "favorite_count": 268, "source": "TweetDeck", "id_str": "734790924472070144", "is_retweet": false}, {"created_at": "Tue Sep 27 19:59:28 +0000 2016", "text": "Donald Trump lied to the American people at least 58 times during the first presidential debate. (We counted.) https://t.co/h43O6Rws4S", "in_reply_to_screen_name": null, "retweet_count": 7679, "favorite_count": 13180, "source": "TweetDeck", "id_str": "780859420846727168", "is_retweet": false}, {"created_at": "Thu Oct 20 00:56:00 +0000 2016", "text": "Got her back? #DebateNight https://t.co/GpNCJMEOGM", "in_reply_to_screen_name": null, "retweet_count": 4587, "favorite_count": 16549, "source": "TweetDeck", "id_str": "788906579156463617", "is_retweet": false}, {"created_at": "Mon Jul 18 19:26:29 +0000 2016", "text": "We can't let these two anywhere near the White House. https://t.co/lcvUYk0Fiy", "in_reply_to_screen_name": null, "retweet_count": 2367, "favorite_count": 5304, "source": "TweetDeck", "id_str": "755121581827977216", "is_retweet": false}, {"created_at": "Sat Sep 10 14:07:59 +0000 2016", "text": "Our next president needs to do everything possible to make life a little easier for working parents. https://t.co/uadk9gd9Xa", "in_reply_to_screen_name": null, "retweet_count": 2687, "favorite_count": 8350, "source": "TweetDeck", "id_str": "774610373114732545", "is_retweet": false}, {"created_at": "Mon Jun 13 17:21:12 +0000 2016", "text": "\"As president, I will make identifying and stopping lone wolves a top priority.\" \u2014Hillary on her counterterrorism strategy", "in_reply_to_screen_name": null, "retweet_count": 1114, "favorite_count": 3624, "source": "TweetDeck", "id_str": "742406479681064961", "is_retweet": false}, {"created_at": "Sun Jul 24 17:04:07 +0000 2016", "text": "\"Donald will betray his supporters on every issue.\" \u2014@TedCruz on the @GOP nominee https://t.co/YO81aW6XZB", "in_reply_to_screen_name": null, "retweet_count": 2831, "favorite_count": 5146, "source": "TweetDeck", "id_str": "757260083717935104", "is_retweet": false}, {"created_at": "Thu Aug 11 18:09:34 +0000 2016", "text": "One positive thing Trump could do to make America great again?\n\nActually make great things in America: https://t.co/lg8Xqwblam", "in_reply_to_screen_name": null, "retweet_count": 1154, "favorite_count": 2735, "source": "TweetDeck", "id_str": "763799532874399744", "is_retweet": false}, {"created_at": "Sat Jul 30 20:07:07 +0000 2016", "text": "\"On Thursday, I was incredibly grateful and humbled to accept the Democratic Party\u2019s nomination.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 972, "favorite_count": 6251, "source": "TweetDeck", "id_str": "759480463153098752", "is_retweet": false}, {"created_at": "Mon Sep 19 15:16:11 +0000 2016", "text": "RT @RevDrBarber: Not only is @realDonaldTrump wrong on birtherism, his words and policies are bad for Americans alive now and our children\u2026", "in_reply_to_screen_name": null, "retweet_count": 763, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "777889026661556224", "is_retweet": true}, {"created_at": "Fri Jul 29 02:51:05 +0000 2016", "text": "\"I accept your nomination for president of the United States!\u201d \u2014Hillary https://t.co/3Ffpf7W4Vz", "in_reply_to_screen_name": null, "retweet_count": 4624, "favorite_count": 10363, "source": "TweetDeck", "id_str": "758857350899916800", "is_retweet": false}, {"created_at": "Sun Feb 07 00:13:21 +0000 2016", "text": "Things got exciting when Chelsea got her first hit at softball. Hillary tells the story:\nhttps://t.co/bttLt08YZO", "in_reply_to_screen_name": null, "retweet_count": 429, "favorite_count": 1391, "source": "Twitter Web Client", "id_str": "696124551562813440", "is_retweet": false}, {"created_at": "Tue Feb 09 03:03:29 +0000 2016", "text": "\u201cWhen I vote, it is about my family. And when I vote in this election, it\u2019s absolutely about my daughter.\u201d\nhttps://t.co/x4x8tzkIN2", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 1136, "source": "Twitter Web Client", "id_str": "696892143948828672", "is_retweet": false}, {"created_at": "Mon Jan 18 03:27:42 +0000 2016", "text": "This election is not only about choosing a president\u2014it's also about choosing our next commander in chief. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 722, "favorite_count": 1615, "source": "TweetDeck", "id_str": "688925707360145408", "is_retweet": false}, {"created_at": "Thu Aug 11 17:14:35 +0000 2016", "text": "It can be difficult to muster outrage as frequently as Donald Trump should cause it, but his smear against President Obama requires it.", "in_reply_to_screen_name": null, "retweet_count": 5972, "favorite_count": 17526, "source": "TweetDeck", "id_str": "763785696041730049", "is_retweet": false}, {"created_at": "Wed Feb 10 17:49:13 +0000 2016", "text": "Text FIGHTER to 47246 to tell Hillary you're standing with her today.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 337, "favorite_count": 695, "source": "TweetDeck", "id_str": "697477433885401089", "is_retweet": false}, {"created_at": "Mon Jul 25 22:18:17 +0000 2016", "text": "Let\u2019s make sure our future is in the right hands. #DemsInPhilly #LoveTrumpsHate https://t.co/TI3xwzrhez", "in_reply_to_screen_name": null, "retweet_count": 3249, "favorite_count": 8717, "source": "TweetDeck", "id_str": "757701533857349632", "is_retweet": false}, {"created_at": "Sat Jan 23 20:43:07 +0000 2016", "text": "T minus 9 days to Iowa\u2014RT to make sure every caucus-goer sees this video. https://t.co/rwtzFwUzhI", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 971, "source": "TweetDeck", "id_str": "690998215857012737", "is_retweet": false}, {"created_at": "Tue May 03 19:26:00 +0000 2016", "text": "\u201cDrug abuse, alcohol abuse and suicide are all on the rise across Appalachia.\u201d \u2014Hillary\n\nHer plan to address it: https://t.co/BE0OUgpvpV", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 778, "source": "TweetDeck", "id_str": "727579981623271424", "is_retweet": false}, {"created_at": "Sun Nov 06 21:47:48 +0000 2016", "text": "\"I want an America where everyone has a place, where everyone is included.\u201d \u2014Hillary in Ohio https://t.co/SnflwVAzkr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2298, "favorite_count": 5962, "source": "TweetDeck", "id_str": "795382199021408258", "is_retweet": false}, {"created_at": "Wed May 11 02:21:04 +0000 2016", "text": "In many states, child care is even more expensive than college tuition. Let's make it affordable for every family. https://t.co/LwuI8uF6G7", "in_reply_to_screen_name": null, "retweet_count": 1980, "favorite_count": 6098, "source": "TweetDeck", "id_str": "730221152145182720", "is_retweet": false}, {"created_at": "Wed Sep 21 21:19:43 +0000 2016", "text": "RT @TheBriefing2016: Happy anniversary! 4 years ago today, Romney released his 2011 tax returns (which Trump urged him to do). Where are Tr\u2026", "in_reply_to_screen_name": null, "retweet_count": 3313, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778705291168755712", "is_retweet": true}, {"created_at": "Fri Jul 22 21:53:39 +0000 2016", "text": "Donald Trump\u2019s speech last night took it to a whole new level. He offered a lot of anger and fear and resentment\u2014but no solutions.", "in_reply_to_screen_name": null, "retweet_count": 2399, "favorite_count": 7234, "source": "TweetDeck", "id_str": "756608171125465088", "is_retweet": false}, {"created_at": "Thu Jul 28 03:21:50 +0000 2016", "text": "\"America has never been about what one person says he\u2019ll do for us. It\u2019s always been about what can be achieved by us, together.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 2726, "favorite_count": 7349, "source": "TweetDeck", "id_str": "758502698765385728", "is_retweet": false}, {"created_at": "Tue Apr 05 21:10:23 +0000 2016", "text": "Women deserve a president who'll stand up for our rights\u2014and against Republican attempts to restrict health access and criminalize doctors.", "in_reply_to_screen_name": null, "retweet_count": 1377, "favorite_count": 3701, "source": "TweetDeck", "id_str": "717459392921255936", "is_retweet": false}, {"created_at": "Mon May 02 00:47:45 +0000 2016", "text": "Health care.\nEducation.\nCriminal justice.\nEqual pay.\nTackling racial injustice means tackling them all: https://t.co/8EsDQhjJgU", "in_reply_to_screen_name": null, "retweet_count": 645, "favorite_count": 1625, "source": "TweetDeck", "id_str": "726936180558848001", "is_retweet": false}, {"created_at": "Fri Jul 29 03:02:20 +0000 2016", "text": "\"I believe that our economy isn't working the way it should because our democracy isn't working the way it should.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1613, "favorite_count": 4564, "source": "TweetDeck", "id_str": "758860178359844866", "is_retweet": false}, {"created_at": "Thu Jan 28 17:52:35 +0000 2016", "text": "More proof that women need a president who will stop attacks on women's health in their tracks. https://t.co/II44JhLHJA", "in_reply_to_screen_name": null, "retweet_count": 326, "favorite_count": 784, "source": "TweetDeck", "id_str": "692767240727498754", "is_retweet": false}, {"created_at": "Tue Jun 07 00:54:04 +0000 2016", "text": "We\u2019re flattered, @AP, but we've got primaries to win. CA, MT, NM, ND, NJ, SD, vote tomorrow! https://t.co/8t3GpZqc1U", "in_reply_to_screen_name": null, "retweet_count": 9681, "favorite_count": 14979, "source": "TweetDeck", "id_str": "739983730002022400", "is_retweet": false}, {"created_at": "Wed Jun 08 02:31:46 +0000 2016", "text": "It\u2019s a simple but powerful idea. \n\nWe are fairer together. \n\nWe are better together. \n\nWe are stronger together. https://t.co/aWCQon5U7q", "in_reply_to_screen_name": null, "retweet_count": 2581, "favorite_count": 6540, "source": "TweetDeck", "id_str": "740370706534436864", "is_retweet": false}, {"created_at": "Fri Feb 12 04:24:01 +0000 2016", "text": "\"I am not a single-issue candidate and I do not believe we live in a single-issue country.\" #DemDebate\nhttps://t.co/5smKhYambm", "in_reply_to_screen_name": null, "retweet_count": 2851, "favorite_count": 5669, "source": "Twitter Web Client", "id_str": "697999576528064512", "is_retweet": false}, {"created_at": "Thu Aug 25 19:27:23 +0000 2016", "text": "Someone as detached from reality as Donald Trump should never be in charge of making decisions that are as real as they come.", "in_reply_to_screen_name": null, "retweet_count": 1790, "favorite_count": 5317, "source": "TweetDeck", "id_str": "768892546470801408", "is_retweet": false}, {"created_at": "Fri Jul 29 02:13:01 +0000 2016", "text": "\"People ask me all the time: How does she do it?\u2026Here\u2019s how: It\u2019s because she never, ever forgets who she\u2019s fighting for.\u201d \u2014@ChelseaClinton", "in_reply_to_screen_name": null, "retweet_count": 1368, "favorite_count": 4707, "source": "TweetDeck", "id_str": "758847767867338761", "is_retweet": false}, {"created_at": "Mon Nov 07 01:00:29 +0000 2016", "text": "A rally fit for a King. https://t.co/3TKJ4H68Kz https://t.co/uDK8NDu8RC", "in_reply_to_screen_name": null, "retweet_count": 2404, "favorite_count": 8270, "source": "TweetDeck", "id_str": "795430689567084544", "is_retweet": false}, {"created_at": "Fri Jul 29 03:04:33 +0000 2016", "text": "\"When we have millions of hardworking immigrants contributing to our economy, it would be self-defeating and inhumane to kick them out.\"", "in_reply_to_screen_name": null, "retweet_count": 2942, "favorite_count": 7894, "source": "TweetDeck", "id_str": "758860737838059531", "is_retweet": false}, {"created_at": "Mon Aug 08 15:43:20 +0000 2016", "text": "In Rio, Olympic fencer Ibtihaj Muhammad became the first American Muslim athlete to compete while wearing a hijab. https://t.co/OrRSHnH2Ra", "in_reply_to_screen_name": null, "retweet_count": 6325, "favorite_count": 19895, "source": "TweetDeck", "id_str": "762675570937298944", "is_retweet": false}, {"created_at": "Sun Mar 06 02:32:40 +0000 2016", "text": "This country belongs to all of us\u2014not just to those at the top. Not just to people who look one way, worship one way, or even think one way.", "in_reply_to_screen_name": null, "retweet_count": 1720, "favorite_count": 4296, "source": "TweetDeck", "id_str": "706306473299722240", "is_retweet": false}, {"created_at": "Tue Apr 05 13:08:22 +0000 2016", "text": "It\u2019s Primary Day, Wisconsin! Retweet if you\u2019re heading to the polls and voting for Hillary. https://t.co/3PUBk11hhf", "in_reply_to_screen_name": null, "retweet_count": 1713, "favorite_count": 4781, "source": "TweetDeck", "id_str": "717338087387492352", "is_retweet": false}, {"created_at": "Mon Feb 29 21:30:12 +0000 2016", "text": "To those running our country's corporations: If you cheat employees, exploit consumers, or rip off taxpayers, we\u2019re going to make you pay.", "in_reply_to_screen_name": null, "retweet_count": 892, "favorite_count": 2263, "source": "TweetDeck", "id_str": "704418417596616704", "is_retweet": false}, {"created_at": "Sat Apr 30 00:00:03 +0000 2016", "text": "Estas son las promesas de Trump. As\u00ed podr\u00eda ser su presidencia\u2026.\nhttps://t.co/EXZ6inYiLT", "in_reply_to_screen_name": null, "retweet_count": 888, "favorite_count": 1088, "source": "Twitter Web Client", "id_str": "726199400993685504", "is_retweet": false}, {"created_at": "Sun Jul 03 19:05:44 +0000 2016", "text": "Every American should have the opportunity to live up to their God-given potential.\nhttps://t.co/GR4c76ouEn", "in_reply_to_screen_name": null, "retweet_count": 2119, "favorite_count": 5361, "source": "Twitter Web Client", "id_str": "749680542568722433", "is_retweet": false}, {"created_at": "Tue Nov 01 12:20:43 +0000 2016", "text": "Share this if you're voting today for National Early Vote Day! https://t.co/3TKJ4H68Kz https://t.co/XlwDmdGzKZ", "in_reply_to_screen_name": null, "retweet_count": 1834, "favorite_count": 3649, "source": "TweetDeck", "id_str": "793427548470439936", "is_retweet": false}, {"created_at": "Wed Sep 21 00:17:54 +0000 2016", "text": "On this day in 1973, tennis champion Billie Jean King defeated Bobby Riggs in the \u201cBattle of the Sexes.\u201d https://t.co/G06Ol90j1O", "in_reply_to_screen_name": null, "retweet_count": 2741, "favorite_count": 8858, "source": "TweetDeck", "id_str": "778387742820564992", "is_retweet": false}, {"created_at": "Mon Oct 03 21:05:23 +0000 2016", "text": "It\u2019s Filipino American History Month, so lets honor their many contributions\u2014from serving in WWII to strengthening our labor movement. -H", "in_reply_to_screen_name": null, "retweet_count": 5674, "favorite_count": 14556, "source": "TweetDeck", "id_str": "783050338492379136", "is_retweet": false}, {"created_at": "Mon Mar 14 01:42:34 +0000 2016", "text": "\"Whoever goes up against Donald Trump better be ready. I am the best prepared candidate to do that.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1421, "favorite_count": 3510, "source": "TweetDeck", "id_str": "709192967974686720", "is_retweet": false}, {"created_at": "Tue Apr 26 12:59:23 +0000 2016", "text": "Voters in CT, DE, MD, PA, and RI head to the polls today. RT this if you\u2019re voting for Hillary. https://t.co/2TRe1AEgiP", "in_reply_to_screen_name": null, "retweet_count": 2410, "favorite_count": 4418, "source": "TweetDeck", "id_str": "724945973353562113", "is_retweet": false}, {"created_at": "Fri Oct 28 19:19:02 +0000 2016", "text": "\u201cJoin me in voting for a better America.\u201d \u2014Hillary\n\nRT so your friends can make a plan to vote today: https://t.co/58n4AxM4BK", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 959, "favorite_count": 2125, "source": "TweetDeck", "id_str": "792083272318717952", "is_retweet": false}, {"created_at": "Tue Nov 01 17:28:26 +0000 2016", "text": "\u201c[Trump] deducted somebody else\u2019s losses.\" https://t.co/j6GmJWqqrC", "in_reply_to_screen_name": null, "retweet_count": 2104, "favorite_count": 3405, "source": "TweetDeck", "id_str": "793504989628993536", "is_retweet": false}, {"created_at": "Thu May 19 15:15:40 +0000 2016", "text": "\"Speaking is hard for me, but come January, I want to say these two words: Madam President.\" \u2014@GabbyGiffords\nhttps://t.co/3nZ5SkCbYP", "in_reply_to_screen_name": null, "retweet_count": 1738, "favorite_count": 4118, "source": "Twitter Web Client", "id_str": "733315192528871428", "is_retweet": false}, {"created_at": "Mon Aug 01 02:00:23 +0000 2016", "text": "Your courage is inspiring, Mrs. Khan\u2014and you\u2019re right. https://t.co/wWrx9f65o0", "in_reply_to_screen_name": null, "retweet_count": 6437, "favorite_count": 17749, "source": "TweetDeck", "id_str": "759931755163848709", "is_retweet": false}, {"created_at": "Fri Sep 30 21:21:33 +0000 2016", "text": "Make sure @realDonaldTrump's bullying never reaches the White House. Chip in now: https://t.co/P865AbPdAz https://t.co/cjNoBiagTA", "in_reply_to_screen_name": null, "retweet_count": 2788, "favorite_count": 6357, "source": "Media Studio", "id_str": "781967242317684737", "is_retweet": false}, {"created_at": "Tue Jun 14 16:49:32 +0000 2016", "text": "This is one nation under God, indivisible, with liberty and justice for all. Not just for those who look or love or worship one way\u2014for all.", "in_reply_to_screen_name": null, "retweet_count": 2705, "favorite_count": 7350, "source": "TweetDeck", "id_str": "742760897853198336", "is_retweet": false}, {"created_at": "Wed Jun 08 17:24:37 +0000 2016", "text": "If Hillary could go back in time and tell anyone she'd been nominated for president, it would be her mom. https://t.co/LfcqMPQ0ST", "in_reply_to_screen_name": null, "retweet_count": 1010, "favorite_count": 3588, "source": "TweetDeck", "id_str": "740595397622648833", "is_retweet": false}, {"created_at": "Mon Mar 14 01:33:05 +0000 2016", "text": "Systemic racism is at work in our criminal justice system. We've got to stand up and end these inequities. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1068, "favorite_count": 2194, "source": "TweetDeck", "id_str": "709190582560751616", "is_retweet": false}, {"created_at": "Wed Oct 05 01:14:13 +0000 2016", "text": "The theme of the night: \"I can't imagine how Governor Pence can defend...Donald Trump.\" \u2014@timkaine #VPDebate https://t.co/lbR6kkXcSy", "in_reply_to_screen_name": null, "retweet_count": 1688, "favorite_count": 4229, "source": "TweetDeck", "id_str": "783475348331700224", "is_retweet": false}, {"created_at": "Sat Jul 23 17:52:28 +0000 2016", "text": "\"We\u2019re going to make our economy work for everybody, not just those at the top.\u201d \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 925, "favorite_count": 3286, "source": "TweetDeck", "id_str": "756909863989547008", "is_retweet": false}, {"created_at": "Thu Oct 13 16:36:01 +0000 2016", "text": ".@FLOTUS is in New Hampshire talking about what's at stake in this election. Watch live: https://t.co/NLhXJtQYOj", "in_reply_to_screen_name": null, "retweet_count": 1132, "favorite_count": 4595, "source": "TweetDeck", "id_str": "786606429398507520", "is_retweet": false}, {"created_at": "Thu Jul 07 00:40:16 +0000 2016", "text": "\"The death of Alton Sterling is a tragedy, and my prayers are with his family.\" \u2014Hillary https://t.co/Yky4ZxfbLN", "in_reply_to_screen_name": null, "retweet_count": 4786, "favorite_count": 11580, "source": "TweetDeck", "id_str": "750851893480521728", "is_retweet": false}, {"created_at": "Sat Oct 08 19:58:47 +0000 2016", "text": "\"She did everything to make me feel like...I belonged in the White House. Can you imagine? From foster care to the\u2026 https://t.co/J5Gdwqk50s", "in_reply_to_screen_name": null, "retweet_count": 6381, "favorite_count": 17120, "source": "Media Studio", "id_str": "784845517025140736", "is_retweet": false}, {"created_at": "Thu Oct 06 01:39:22 +0000 2016", "text": "If we had a dollar for every time Mike Pence lied last night, well... https://t.co/3m4kppoh2g", "in_reply_to_screen_name": null, "retweet_count": 1513, "favorite_count": 5032, "source": "TweetDeck", "id_str": "783844064634560512", "is_retweet": false}, {"created_at": "Thu Oct 06 18:32:08 +0000 2016", "text": "RT @ELLEmagazine: Here's what happened when 11-year-old @iammarleydias, founder of #1000blackgirlbooks, interviewed @HillaryClinton: https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784098936248209408", "is_retweet": true}, {"created_at": "Sat Apr 30 22:28:07 +0000 2016", "text": "The #WomanCard?\n\nFighting for women's rights is a card we'd play any day.\nhttps://t.co/HWPpXei0xs", "in_reply_to_screen_name": null, "retweet_count": 1591, "favorite_count": 3764, "source": "Twitter Web Client", "id_str": "726538652910686208", "is_retweet": false}, {"created_at": "Mon Aug 15 18:34:01 +0000 2016", "text": "Trump's candidacy alone is undermining our national security.\n\nImagine if he were to become president. https://t.co/OynjnrHsAj", "in_reply_to_screen_name": null, "retweet_count": 2998, "favorite_count": 5684, "source": "TweetDeck", "id_str": "765255239356260353", "is_retweet": false}, {"created_at": "Tue May 17 02:07:43 +0000 2016", "text": "Being president isn't like being on a reality show.\n\nWe can't afford a candidate who treats it like one. https://t.co/48MePwjHh9", "in_reply_to_screen_name": null, "retweet_count": 3666, "favorite_count": 6297, "source": "TweetDeck", "id_str": "732392120686903296", "is_retweet": false}, {"created_at": "Sun Sep 11 02:21:02 +0000 2016", "text": "RT @tyleroakley: reading https://t.co/CfsnQUUZ77 makes me excited to vote for @HillaryClinton with the next generation in mind \ud83d\udc23 https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1884, "favorite_count": 0, "source": "TweetDeck", "id_str": "774794852798193664", "is_retweet": true}, {"created_at": "Thu Nov 03 17:01:15 +0000 2016", "text": "Trump has built his campaign on demonizing Latinos and immigrants.\n\nLatino voters have the power to stop him. Vote:\u2026 https://t.co/xzjpCza0E3", "in_reply_to_screen_name": null, "retweet_count": 5380, "favorite_count": 8848, "source": "Media Studio", "id_str": "794222921774313472", "is_retweet": false}, {"created_at": "Mon May 23 01:19:41 +0000 2016", "text": "\"She taught me resilience, courage, and the power of love and kindness.\" \u2014Hillary on her mom\nhttps://t.co/0zuTHYM1B4", "in_reply_to_screen_name": null, "retweet_count": 1662, "favorite_count": 4014, "source": "Twitter Web Client", "id_str": "734554362031181824", "is_retweet": false}, {"created_at": "Tue Mar 08 02:07:18 +0000 2016", "text": "A key difference between the two candidates at the #DemDebate last night: https://t.co/93d0grJNV5 https://t.co/IE1WbgB4gX", "in_reply_to_screen_name": null, "retweet_count": 761, "favorite_count": 1660, "source": "TweetDeck", "id_str": "707024865463820288", "is_retweet": false}, {"created_at": "Wed Jul 27 23:03:28 +0000 2016", "text": "\"Republicans want to tear down the pillars of middle-class security. We won\u2019t let that happen!\" \u2014@SenatorReid https://t.co/KY9DSGTts7", "in_reply_to_screen_name": null, "retweet_count": 657, "favorite_count": 1897, "source": "TweetDeck", "id_str": "758437677712769024", "is_retweet": false}, {"created_at": "Wed Mar 23 14:43:47 +0000 2016", "text": "Thanks to @POTUS, millions of Americans have the health care they need\u2014and thanks to Democrats, this law is still standing. -H", "in_reply_to_screen_name": null, "retweet_count": 964, "favorite_count": 2468, "source": "TweetDeck", "id_str": "712651060024840192", "is_retweet": false}, {"created_at": "Wed Mar 02 13:58:03 +0000 2016", "text": "It might be unusual for a presidential candidate to say that we need more love and kindness in America\u2014but we do.\nhttps://t.co/CPorva0oVA", "in_reply_to_screen_name": null, "retweet_count": 2638, "favorite_count": 5615, "source": "Twitter Web Client", "id_str": "705029404641009664", "is_retweet": false}, {"created_at": "Mon Apr 25 20:02:33 +0000 2016", "text": "\u201cShe's more accomplished than any other candidate.\u201d \u2014@PhillyDailyNews https://t.co/OYxg9BZSqM", "in_reply_to_screen_name": null, "retweet_count": 910, "favorite_count": 1930, "source": "TweetDeck", "id_str": "724690076781916161", "is_retweet": false}, {"created_at": "Sat Oct 08 16:13:06 +0000 2016", "text": "\"She doesn't always talk about what drives her. But I've had a chance to see her.\" \u2014@POTUS https://t.co/jNKTTF6csB", "in_reply_to_screen_name": null, "retweet_count": 3752, "favorite_count": 11485, "source": "Media Studio", "id_str": "784788722063699969", "is_retweet": false}, {"created_at": "Wed Apr 13 01:55:01 +0000 2016", "text": "It's not like women get charged less than men for groceries.\n\nWe need to ensure equal pay.\nhttps://t.co/aRsxSR87KI", "in_reply_to_screen_name": null, "retweet_count": 2392, "favorite_count": 5198, "source": "Twitter Web Client", "id_str": "720067739293863936", "is_retweet": false}, {"created_at": "Fri Jul 29 02:43:46 +0000 2016", "text": "\"Don\u2019t believe anyone who says 'I alone can fix it.\u2019 Yes, those were actually Donald Trump\u2019s words in Cleveland.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2361, "favorite_count": 6168, "source": "TweetDeck", "id_str": "758855505938780161", "is_retweet": false}, {"created_at": "Mon Sep 05 14:12:02 +0000 2016", "text": "If you're a fan of weekends, thank a union member. https://t.co/RUF2UtG2sM", "in_reply_to_screen_name": null, "retweet_count": 2868, "favorite_count": 6743, "source": "TweetDeck", "id_str": "772799454806155264", "is_retweet": false}, {"created_at": "Tue Feb 23 17:04:30 +0000 2016", "text": "El pa\u00eds necesita un l\u00edder que mantenga a nuestras familias seguras.", "in_reply_to_screen_name": null, "retweet_count": 328, "favorite_count": 770, "source": "TweetDeck", "id_str": "702177224389173249", "is_retweet": false}, {"created_at": "Wed Oct 05 02:07:08 +0000 2016", "text": "Mike Pence claiming that Trump supports our troops and veterans when he insults them and probably doesn't pay taxes is laughable. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 4432, "favorite_count": 11782, "source": "TweetDeck", "id_str": "783488663585972224", "is_retweet": false}, {"created_at": "Fri Feb 26 02:09:56 +0000 2016", "text": "We will not rip families apart. We will defend @POTUS's actions on immigration and go further to keep families together. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 655, "favorite_count": 1563, "source": "TweetDeck", "id_str": "703039260367126529", "is_retweet": false}, {"created_at": "Wed Mar 02 02:56:32 +0000 2016", "text": "America never stopped being great. Our mission is to make America whole.\nhttps://t.co/bV85jaRoCO", "in_reply_to_screen_name": null, "retweet_count": 2275, "favorite_count": 5108, "source": "Twitter Web Client", "id_str": "704862926671249408", "is_retweet": false}, {"created_at": "Sun Jun 05 19:10:30 +0000 2016", "text": "A preview of President @realDonaldTrump that proves we can\u2019t let him anywhere near the Situation Room. https://t.co/iCrVAYDNB0", "in_reply_to_screen_name": null, "retweet_count": 882, "favorite_count": 1764, "source": "TweetDeck", "id_str": "739534883291332609", "is_retweet": false}, {"created_at": "Tue Feb 23 14:03:45 +0000 2016", "text": "Hillary and Dr. Glenda Glover of @TSUedu: HBCUs are fundamental to the basic bargain of America. https://t.co/euMOnSfffy", "in_reply_to_screen_name": null, "retweet_count": 260, "favorite_count": 548, "source": "TweetDeck", "id_str": "702131737300770817", "is_retweet": false}, {"created_at": "Fri Aug 26 19:59:18 +0000 2016", "text": "Happy #WomensEqualityDay from @realDonaldTrump. https://t.co/YfUdtygL4h", "in_reply_to_screen_name": null, "retweet_count": 2873, "favorite_count": 5282, "source": "TweetDeck", "id_str": "769262968664010752", "is_retweet": false}, {"created_at": "Fri Oct 07 16:21:05 +0000 2016", "text": "\"Once she was made aware that America had children languishing in foster care...her attitude was: not on my watch.\"\u2026 https://t.co/mZpbrNaeS5", "in_reply_to_screen_name": null, "retweet_count": 4986, "favorite_count": 11384, "source": "Media Studio", "id_str": "784428341923291136", "is_retweet": false}, {"created_at": "Sun Sep 25 15:19:46 +0000 2016", "text": "Not one living president has said they believe Donald Trump has what it takes to be Commander-in-Chief. https://t.co/3HeTtkQ6KS", "in_reply_to_screen_name": null, "retweet_count": 7818, "favorite_count": 14044, "source": "TweetDeck", "id_str": "780064257631289344", "is_retweet": false}, {"created_at": "Tue Jan 26 20:47:43 +0000 2016", "text": "This is it: The caucuses and primaries are almost here. If you're with Hillary, say so: https://t.co/gjUBoIckmE https://t.co/uy3QFC8xNm", "in_reply_to_screen_name": null, "retweet_count": 1066, "favorite_count": 2297, "source": "TweetDeck", "id_str": "692086539069865986", "is_retweet": false}, {"created_at": "Mon May 09 19:27:13 +0000 2016", "text": "\"Applying [Trump's] idea to the United States would destroy the economy.\" \u2014@VoxDotCom\nhttps://t.co/ssVajpFvzF", "in_reply_to_screen_name": null, "retweet_count": 1587, "favorite_count": 2424, "source": "Twitter Web Client", "id_str": "729754618540888064", "is_retweet": false}, {"created_at": "Thu May 05 13:03:06 +0000 2016", "text": "Republicans agree: Donald Trump is reckless, dangerous, and divisive. https://t.co/fUkISvxMmc", "in_reply_to_screen_name": null, "retweet_count": 3944, "favorite_count": 6266, "source": "TweetDeck", "id_str": "728208398261620736", "is_retweet": false}, {"created_at": "Tue Nov 01 17:16:44 +0000 2016", "text": "RT @TheBriefing2016: Comey didn't want to blame Russia for DNC hacks for fear of seeming political. \n\nFor fear. \nOf seeming.\nPolitical. \n\nh\u2026", "in_reply_to_screen_name": null, "retweet_count": 3585, "favorite_count": 0, "source": "TweetDeck", "id_str": "793502046062346243", "is_retweet": true}, {"created_at": "Wed Mar 16 00:42:31 +0000 2016", "text": "Thank you, Ohio. https://t.co/cr9lIafGFg", "in_reply_to_screen_name": null, "retweet_count": 2891, "favorite_count": 7400, "source": "TweetDeck", "id_str": "709902633830629376", "is_retweet": false}, {"created_at": "Thu Aug 04 21:06:59 +0000 2016", "text": "You saw the Democratic Convention.\n\nNow, watch the never-before-seen footage from backstage:\nhttps://t.co/mMjJFr02Wk", "in_reply_to_screen_name": null, "retweet_count": 4835, "favorite_count": 12155, "source": "Twitter Web Client", "id_str": "761307468928462848", "is_retweet": false}, {"created_at": "Tue Jan 12 02:30:15 +0000 2016", "text": "\"I am going to end private detention centers. I am going to end family detention.\" \u2014Hillary at #DemForum", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 857, "source": "TweetDeck", "id_str": "686736920664248320", "is_retweet": false}, {"created_at": "Sat Sep 10 00:59:08 +0000 2016", "text": "We can\u2019t let Trump\u2019s \u201cmanifest unfitness for office\u201d become normal. We need to hold him accountable. https://t.co/ycp0KW7LZL", "in_reply_to_screen_name": null, "retweet_count": 2148, "favorite_count": 5649, "source": "TweetDeck", "id_str": "774411853938171904", "is_retweet": false}, {"created_at": "Sun Mar 06 02:11:56 +0000 2016", "text": "Watch live: Hillary speaks at the @MichiganDems reception in Detroit \u2192 https://t.co/l8fXj23LdE", "in_reply_to_screen_name": null, "retweet_count": 299, "favorite_count": 764, "source": "TweetDeck", "id_str": "706301257703694336", "is_retweet": false}, {"created_at": "Thu Aug 04 00:08:07 +0000 2016", "text": "We have the most productive and competitive workers in the world. We just need to give them a chance to succeed. https://t.co/kSFXLOTkMj", "in_reply_to_screen_name": null, "retweet_count": 2897, "favorite_count": 11009, "source": "TweetDeck", "id_str": "760990664373002245", "is_retweet": false}, {"created_at": "Thu May 19 17:51:36 +0000 2016", "text": "\"We have to put everything we can toward the goal of defeating ISIS, protecting ourselves, our friends, and our partners.\" \u2014Hillary on @CNN", "in_reply_to_screen_name": null, "retweet_count": 538, "favorite_count": 1664, "source": "TweetDeck", "id_str": "733354431589322754", "is_retweet": false}, {"created_at": "Wed Sep 07 01:00:23 +0000 2016", "text": "\"I think I've made a lot of sacrifices.\" \u2014Trump's response to the parents of Humayun Khan, who died serving in Iraq https://t.co/B3Av1YtocK", "in_reply_to_screen_name": null, "retweet_count": 3744, "favorite_count": 7035, "source": "Twitter Web Client", "id_str": "773325006130515968", "is_retweet": false}, {"created_at": "Mon Oct 10 01:48:29 +0000 2016", "text": "Donald Trump was not against the war in Iraq. #debate https://t.co/bXwhbDrVoc", "in_reply_to_screen_name": null, "retweet_count": 2531, "favorite_count": 4993, "source": "TweetDeck", "id_str": "785295909059981316", "is_retweet": false}, {"created_at": "Tue May 24 19:08:08 +0000 2016", "text": "Donald Trump could bankrupt America like he bankrupted his companies. Let's make sure he never gets the chance: https://t.co/04t1BHwlVc", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 939, "favorite_count": 1681, "source": "TweetDeck", "id_str": "735185631148703748", "is_retweet": false}, {"created_at": "Sun Feb 21 21:56:18 +0000 2016", "text": "\u201cSome may have doubted us, but we never doubted each other. This one\u2019s for you.\u201d https://t.co/DW65jIcS4z https://t.co/5qAHulA49h", "in_reply_to_screen_name": null, "retweet_count": 563, "favorite_count": 1714, "source": "TweetDeck", "id_str": "701525879936180229", "is_retweet": false}, {"created_at": "Wed Nov 09 16:47:13 +0000 2016", "text": "\"To Barack and Michelle Obama, our country owes you an enormous debt of gratitude. We thank you for your graceful, determined leadership.\u201d", "in_reply_to_screen_name": null, "retweet_count": 133496, "favorite_count": 290454, "source": "TweetDeck", "id_str": "796393719524130816", "is_retweet": false}, {"created_at": "Tue May 03 20:52:03 +0000 2016", "text": "It\u2019s Primary Day, Indiana. If you\u2019re a Hoosier for Hillary, vote today: https://t.co/ZP0EculgG0", "in_reply_to_screen_name": null, "retweet_count": 433, "favorite_count": 1157, "source": "TweetDeck", "id_str": "727601637230034944", "is_retweet": false}, {"created_at": "Sat Aug 20 14:03:11 +0000 2016", "text": "This week, Donald Trump suddenly tried to claim that he has some \"regrets.\" About that... https://t.co/6Igq6bOIZG", "in_reply_to_screen_name": null, "retweet_count": 1456, "favorite_count": 3893, "source": "TweetDeck", "id_str": "766999021537878016", "is_retweet": false}, {"created_at": "Sun Mar 06 16:17:19 +0000 2016", "text": "We can\u2019t accept 33,000 gun deaths per year as \u201cnormal.\u201d Most Americans\u2014including law-abiding gun owners\u2014believe we can do better.", "in_reply_to_screen_name": null, "retweet_count": 1887, "favorite_count": 4017, "source": "Twitter Web Client", "id_str": "706514002596257792", "is_retweet": false}, {"created_at": "Tue Feb 16 21:27:03 +0000 2016", "text": "\"We need to fix the crisis of mass incarceration...and end the epidemic of African Americans being killed by police or dying in custody.\"", "in_reply_to_screen_name": null, "retweet_count": 801, "favorite_count": 1603, "source": "TweetDeck", "id_str": "699706579311058944", "is_retweet": false}, {"created_at": "Mon Mar 07 02:45:39 +0000 2016", "text": "We know there are more Flints. We need to tackle environmental racism and injustice nationwide. #DemDebate https://t.co/FpV5S8eVTT", "in_reply_to_screen_name": null, "retweet_count": 917, "favorite_count": 1491, "source": "TweetDeck", "id_str": "706672130906312705", "is_retweet": false}, {"created_at": "Wed Jun 22 19:10:22 +0000 2016", "text": ".@realDonaldTrump\u2019s tax cuts for millionaires &amp; billionaires would add more than $30 trillion to our national debt. https://t.co/cOA3YulFef", "in_reply_to_screen_name": null, "retweet_count": 1488, "favorite_count": 2962, "source": "TweetDeck", "id_str": "745695441753358336", "is_retweet": false}, {"created_at": "Sat Aug 13 16:22:57 +0000 2016", "text": "We need to make sure every American has high-speed internet access. And we will: https://t.co/jAszaFw1t3 https://t.co/fPOueqdTba", "in_reply_to_screen_name": null, "retweet_count": 3357, "favorite_count": 8974, "source": "TweetDeck", "id_str": "764497479182196736", "is_retweet": false}, {"created_at": "Tue May 31 15:10:02 +0000 2016", "text": ".@realDonaldTrump doesn't like prisoners of war\u2014but he wants to be your Commander-in-Chief.\nhttps://t.co/Xuk3OOcvIB", "in_reply_to_screen_name": null, "retweet_count": 1496, "favorite_count": 2471, "source": "Twitter Web Client", "id_str": "737662428251455489", "is_retweet": false}, {"created_at": "Wed Aug 10 19:33:35 +0000 2016", "text": "We\u2019re going to make the biggest investment in good-paying jobs since World War II: https://t.co/NC6FHkl53y", "in_reply_to_screen_name": null, "retweet_count": 750, "favorite_count": 2349, "source": "TweetDeck", "id_str": "763458289149575168", "is_retweet": false}, {"created_at": "Fri Oct 14 15:29:51 +0000 2016", "text": "\"Hillary is one of the smartest, toughest, best-prepared, most experienced candidates to ever run for this job.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 774, "favorite_count": 1834, "source": "TweetDeck", "id_str": "786952165575258112", "is_retweet": false}, {"created_at": "Wed Apr 13 02:44:51 +0000 2016", "text": "There\u2019s no discount for being a woman\u2014yet women are still paid less. \n\nMyths on the wage gap, debunked: https://t.co/lcLDQS9gaE #EqualPayDay", "in_reply_to_screen_name": null, "retweet_count": 940, "favorite_count": 1791, "source": "TweetDeck", "id_str": "720080278878883840", "is_retweet": false}, {"created_at": "Sun Jan 24 02:36:48 +0000 2016", "text": "\"Our next president can\u2019t shy away from building on the progress of President Obama.\" -@EricHolder https://t.co/xltfxaPeOz", "in_reply_to_screen_name": null, "retweet_count": 672, "favorite_count": 1677, "source": "TweetDeck", "id_str": "691087221361872897", "is_retweet": false}, {"created_at": "Thu Apr 21 01:12:16 +0000 2016", "text": "Thank you, New York. Let's go win this nomination.\nhttps://t.co/OVp5NTVWnU", "in_reply_to_screen_name": null, "retweet_count": 1374, "favorite_count": 3577, "source": "Twitter Web Client", "id_str": "722956082306408448", "is_retweet": false}, {"created_at": "Fri Jul 29 03:24:28 +0000 2016", "text": "\u201cEnough with the bigotry and bombast. Donald Trump's not offering real change, he\u2019s offering empty promises.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3215, "favorite_count": 9560, "source": "TweetDeck", "id_str": "758865751642021890", "is_retweet": false}, {"created_at": "Tue Jul 19 20:45:07 +0000 2016", "text": "1973: \n \nDonald Trump is sued for housing discrimination.\nHillary begins her career at the Children's Defense Fund. https://t.co/mE1p5ac3yw", "in_reply_to_screen_name": null, "retweet_count": 2654, "favorite_count": 4777, "source": "TweetDeck", "id_str": "755503761473302528", "is_retweet": false}, {"created_at": "Fri Sep 16 00:49:08 +0000 2016", "text": "Hillary\u2019s live at @CHCI. Tune in to hear about her vision for an inclusive America. https://t.co/dkg7pwiNMt", "in_reply_to_screen_name": null, "retweet_count": 462, "favorite_count": 1414, "source": "TweetDeck", "id_str": "776583666113839109", "is_retweet": false}, {"created_at": "Thu Mar 24 17:57:33 +0000 2016", "text": "A small change made by Hillary during her tenure as secretary of state had a big impact for transgender Americans. https://t.co/tO0N1QjJ2f", "in_reply_to_screen_name": null, "retweet_count": 827, "favorite_count": 1516, "source": "TweetDeck", "id_str": "713062210860285956", "is_retweet": false}, {"created_at": "Thu May 19 18:03:47 +0000 2016", "text": "\"The threat that Donald Trump poses is so dramatic to our country, to our democracy.\" \u2014Hillary on @CNN", "in_reply_to_screen_name": null, "retweet_count": 816, "favorite_count": 1877, "source": "TweetDeck", "id_str": "733357500653785088", "is_retweet": false}, {"created_at": "Thu Sep 22 21:15:43 +0000 2016", "text": "Donald Trump's ties to Russia may conflict with America's interests\u2014but they're great for his bottom line. https://t.co/gYbm5HxfxG", "in_reply_to_screen_name": null, "retweet_count": 2708, "favorite_count": 4353, "source": "TweetDeck", "id_str": "779066671067762692", "is_retweet": false}, {"created_at": "Thu Aug 25 19:34:30 +0000 2016", "text": "A fringe element has effectively taken over Trump\u2019s campaign and the Republican Party. https://t.co/vJNBtpjpde", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 2495, "source": "TweetDeck", "id_str": "768894337518370818", "is_retweet": false}, {"created_at": "Wed Nov 02 17:19:59 +0000 2016", "text": "Thanks, Louis C.K.\u2014but it's \"Madam\" Tough Mother. https://t.co/LlfFFJBedh", "in_reply_to_screen_name": null, "retweet_count": 5137, "favorite_count": 15730, "source": "TweetDeck", "id_str": "793865247689957376", "is_retweet": false}, {"created_at": "Tue May 03 20:18:28 +0000 2016", "text": "Thrilled by this news. Every loving parent, no matter who they are, can now adopt kids in all 50 states. https://t.co/NpUjCpzdQB -H", "in_reply_to_screen_name": null, "retweet_count": 1478, "favorite_count": 2939, "source": "TweetDeck", "id_str": "727593188144381953", "is_retweet": false}, {"created_at": "Wed Jul 27 02:17:58 +0000 2016", "text": "\"Knowing her was one of Hillary\u2019s greatest gifts to me.\u201d \u2014@BillClinton on Hillary\u2019s mother, Dorothy Rodham", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 3520, "source": "TweetDeck", "id_str": "758124238096240642", "is_retweet": false}, {"created_at": "Thu Oct 06 21:06:45 +0000 2016", "text": "Thanks, @chancetherapper. https://t.co/mU2AspoEOb", "in_reply_to_screen_name": null, "retweet_count": 4407, "favorite_count": 11791, "source": "TweetDeck", "id_str": "784137846865137664", "is_retweet": false}, {"created_at": "Wed Feb 03 14:18:15 +0000 2016", "text": "A 40-year record of progressive results\u2014boiled down to \"some days.\" https://t.co/ljJvAp6vFT", "in_reply_to_screen_name": null, "retweet_count": 695, "favorite_count": 1438, "source": "Twitter for iPhone", "id_str": "694887629284892673", "is_retweet": false}, {"created_at": "Sat Feb 27 00:59:32 +0000 2016", "text": ".@marcorubio standing up for banks instead of hardworking citizens is wrong. It's time to put Puerto Ricans first. https://t.co/ilFSV4SRL1", "in_reply_to_screen_name": null, "retweet_count": 521, "favorite_count": 1021, "source": "Twitter Web Client", "id_str": "703383931559743488", "is_retweet": false}, {"created_at": "Thu Oct 27 19:05:54 +0000 2016", "text": "\"We want a president who takes this job seriously and has the temperament and maturity to do it well.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 654, "favorite_count": 1526, "source": "TweetDeck", "id_str": "791717576434941952", "is_retweet": false}, {"created_at": "Fri Sep 23 13:28:20 +0000 2016", "text": "RT @latimes: Editorial board: Clinton would be a smart, pragmatic president. Trump would be a catastrophe. https://t.co/qiB76ZFcqR https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 4760, "favorite_count": 0, "source": "TweetDeck", "id_str": "779311437663600641", "is_retweet": true}, {"created_at": "Mon Oct 24 17:25:14 +0000 2016", "text": "\"It is great to be in the state that\u2019s going to send Hillary Clinton to the White House!\u201d \u2014@ElizabethForMA in New Hampshire", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 388, "favorite_count": 1062, "source": "TweetDeck", "id_str": "790605081695707140", "is_retweet": false}, {"created_at": "Fri Sep 16 21:40:27 +0000 2016", "text": "Donald Trump has spent years peddling lies about President Obama.\n\nAnd that didn't stop today. https://t.co/KzgPQgPjxK", "in_reply_to_screen_name": null, "retweet_count": 6192, "favorite_count": 10753, "source": "Twitter Web Client", "id_str": "776898567004839936", "is_retweet": false}, {"created_at": "Fri Jul 29 02:38:50 +0000 2016", "text": "\"Our Founders embraced the enduring truth that we are stronger together.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1073, "favorite_count": 3407, "source": "TweetDeck", "id_str": "758854266660401152", "is_retweet": false}, {"created_at": "Tue Sep 13 17:59:56 +0000 2016", "text": "\u201cThen there\u2019s the other guy, Donald Trump. Don\u2019t boo, vote!\u201d \u2014@POTUS: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 812, "favorite_count": 2180, "source": "TweetDeck", "id_str": "775755908274122752", "is_retweet": false}, {"created_at": "Thu Oct 13 15:02:39 +0000 2016", "text": "Today marks 241 years of service and sacrifice from the @USNavy. To all sailors serving, past and present, and their families\u2014thank you.", "in_reply_to_screen_name": null, "retweet_count": 2439, "favorite_count": 9886, "source": "TweetDeck", "id_str": "786582933360545792", "is_retweet": false}, {"created_at": "Mon Jun 13 17:28:43 +0000 2016", "text": "In Orlando and San Bernardino, terrorists used assault weapons like the AR-15 to kill Americans. We should make it harder for them to do so.", "in_reply_to_screen_name": null, "retweet_count": 1653, "favorite_count": 5513, "source": "TweetDeck", "id_str": "742408372666912768", "is_retweet": false}, {"created_at": "Wed Sep 21 18:50:07 +0000 2016", "text": "Building an inclusive economy is another reason we\u2019ve got to break down systemic racism, including under-investment in communities of color.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 623, "favorite_count": 1349, "source": "TweetDeck", "id_str": "778667640646696960", "is_retweet": false}, {"created_at": "Fri May 13 19:27:26 +0000 2016", "text": "Happening now \u2192 join @HFA senior policy advisors (and working moms) for a Q&amp;A on child care and work/life balance: https://t.co/DNtiGUWBzy", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 973, "source": "TweetDeck", "id_str": "731204223422091265", "is_retweet": false}, {"created_at": "Thu Sep 15 19:44:57 +0000 2016", "text": "For millions of moms and dads, if they get sick, they\u2019re on their own. There\u2019s no backup. https://t.co/ENcjziSzUw", "in_reply_to_screen_name": null, "retweet_count": 876, "favorite_count": 2308, "source": "TweetDeck", "id_str": "776507112616816640", "is_retweet": false}, {"created_at": "Thu Oct 20 02:12:15 +0000 2016", "text": "Every time things aren\u2019t going his way, Donald Trump says it\u2019s \u201crigged.\u201d #DebateNight https://t.co/QuxoTiAXM1", "in_reply_to_screen_name": null, "retweet_count": 5368, "favorite_count": 13113, "source": "TweetDeck", "id_str": "788925767308763140", "is_retweet": false}, {"created_at": "Sun Jul 10 01:32:01 +0000 2016", "text": "\"I saw how she treated everybody with respect. That's how you judge somebody.\" \u2014@POTUS on Hillary\nhttps://t.co/DnisCFMlLZ", "in_reply_to_screen_name": null, "retweet_count": 3718, "favorite_count": 8862, "source": "Twitter Web Client", "id_str": "751952082194751489", "is_retweet": false}, {"created_at": "Fri Mar 18 19:41:06 +0000 2016", "text": "I\u2019m grateful for what we\u2019ve built. We have a tough fight ahead with stakes that couldn\u2019t be higher. Join in: https://t.co/E9Ys5YuFTU -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 607, "favorite_count": 1579, "source": "TweetDeck", "id_str": "710913943246671874", "is_retweet": false}, {"created_at": "Sun Feb 21 22:41:27 +0000 2016", "text": "Together, this is the kind of world we can build for the next generations.\nhttps://t.co/uGSDNSQBSC", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 1968, "source": "Twitter Web Client", "id_str": "701537245359046657", "is_retweet": false}, {"created_at": "Wed Mar 02 23:43:11 +0000 2016", "text": "We won eight contests last night. We have the momentum\u2014but this primary is far from over. Chip in to keep going: https://t.co/NYF8eYckVx", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 682, "favorite_count": 1779, "source": "TweetDeck", "id_str": "705176659457085440", "is_retweet": false}, {"created_at": "Wed Mar 23 19:04:47 +0000 2016", "text": "In our fight against radical jihadism, we have to do what actually works. What doesn't work: offensive rhetoric that demonizes all Muslims.", "in_reply_to_screen_name": null, "retweet_count": 2283, "favorite_count": 4308, "source": "TweetDeck", "id_str": "712716739738517504", "is_retweet": false}, {"created_at": "Sat Jan 23 17:14:54 +0000 2016", "text": "How much do you know about the loopholes in our gun laws? https://t.co/U4AgREycoV", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 637, "source": "TweetDeck", "id_str": "690945816211656704", "is_retweet": false}, {"created_at": "Sun Aug 28 14:16:21 +0000 2016", "text": "Hillary's small business plan:\n\u2713 cut paperwork\n\u2713 improve funding access\n\u2713 save businesses $\nhttps://t.co/9qnsPZ5JXZ https://t.co/fi4rGU5oAZ", "in_reply_to_screen_name": null, "retweet_count": 1681, "favorite_count": 4105, "source": "TweetDeck", "id_str": "769901439841865728", "is_retweet": false}, {"created_at": "Wed Jan 27 03:45:18 +0000 2016", "text": "We've come too far to let Republicans take us back. Commit to vote or caucus for Hillary. https://t.co/Y4YpLTep2Z https://t.co/qfLXZEieYJ", "in_reply_to_screen_name": null, "retweet_count": 616, "favorite_count": 2030, "source": "TweetDeck", "id_str": "692191626844901376", "is_retweet": false}, {"created_at": "Fri Jul 29 03:24:10 +0000 2016", "text": "\u201cHere's the sad truth: There is no other Donald Trump. This is it.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2429, "favorite_count": 7628, "source": "TweetDeck", "id_str": "758865676220047364", "is_retweet": false}, {"created_at": "Mon Feb 15 14:37:05 +0000 2016", "text": "\"It\u2019s hard to describe in words what parents and kids are going through in Flint.\" \u2014@AmandaRenteria https://t.co/FyYwFgmeGf", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 1057, "source": "TweetDeck", "id_str": "699241021666934784", "is_retweet": false}, {"created_at": "Mon Jun 13 19:47:40 +0000 2016", "text": "Our diversity isn\u2019t a liability in the fight against terrorism. It\u2019s an asset. It makes us stronger. https://t.co/0cTpmfvA3c", "in_reply_to_screen_name": null, "retweet_count": 8753, "favorite_count": 22076, "source": "TweetDeck", "id_str": "742443337840484352", "is_retweet": false}, {"created_at": "Fri Sep 30 00:15:58 +0000 2016", "text": "RT @USATODAY: USA TODAY's Editorial Board: Trump unfit to lead https://t.co/OAuRmLLBe2 https://t.co/sjZxDflh3x", "in_reply_to_screen_name": null, "retweet_count": 4227, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781648749902893058", "is_retweet": true}, {"created_at": "Sat Jul 30 19:21:41 +0000 2016", "text": "RT @billclinton: Incredibly proud of Hillary and so happy to join her and Tim on the trail this week. https://t.co/u8LYZnUejj", "in_reply_to_screen_name": null, "retweet_count": 3207, "favorite_count": 0, "source": "TweetDeck", "id_str": "759469029182636032", "is_retweet": true}, {"created_at": "Wed May 18 02:39:06 +0000 2016", "text": "We just won Kentucky! Thanks to everyone who turned out. We\u2019re always stronger united. https://t.co/8qYPHIje8I https://t.co/elNUP4nFoO", "in_reply_to_screen_name": null, "retweet_count": 3752, "favorite_count": 10572, "source": "Twitter for iPhone", "id_str": "732762408255623168", "is_retweet": false}, {"created_at": "Wed Apr 06 18:10:16 +0000 2016", "text": "@EricaSmegs remember, any hateful comments are just noise compared to your voice for change. With you in the fight to stop gun violence. -H", "in_reply_to_screen_name": "EricaSmegs", "retweet_count": 1047, "favorite_count": 1620, "source": "TweetDeck", "id_str": "717776452750598150", "is_retweet": false}, {"created_at": "Tue Nov 08 03:09:50 +0000 2016", "text": "27 million Latinos are eligible to vote this year.\n\nMillions have already voted.\n\nReady to join them?\u2026 https://t.co/iwXHFHbquc", "in_reply_to_screen_name": null, "retweet_count": 5238, "favorite_count": 14619, "source": "Media Studio", "id_str": "795825627840462848", "is_retweet": false}, {"created_at": "Sat Jul 30 14:02:18 +0000 2016", "text": "If you want to see the best of America, you need look no further than the example set by Army Captain Humayun Khan.\nhttps://t.co/aEhY06r7St", "in_reply_to_screen_name": null, "retweet_count": 5467, "favorite_count": 13934, "source": "Twitter Web Client", "id_str": "759388655576154113", "is_retweet": false}, {"created_at": "Thu Jun 09 18:24:58 +0000 2016", "text": "\"She\u2019s got the courage, the compassion, and the heart to get the job done.\"\n\nWatch President Obama endorse Hillary.\nhttps://t.co/DzKgMFgdmP", "in_reply_to_screen_name": null, "retweet_count": 13824, "favorite_count": 26962, "source": "Twitter Web Client", "id_str": "740972975680290820", "is_retweet": false}, {"created_at": "Sun Oct 02 13:33:22 +0000 2016", "text": "\"We truly are stronger together\u200a\u2014\u200aand together, we\u2019re going to make history.\"\n\nA note from Hillary: https://t.co/fPXxghe5dA", "in_reply_to_screen_name": null, "retweet_count": 2042, "favorite_count": 6695, "source": "TweetDeck", "id_str": "782574193871380480", "is_retweet": false}, {"created_at": "Thu Oct 27 02:25:25 +0000 2016", "text": "Sign Hillary's birthday card to wish her a great (and historic) year to come: https://t.co/aNxs2yddoG", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 3480, "source": "TweetDeck", "id_str": "791465798753738752", "is_retweet": false}, {"created_at": "Mon Aug 15 17:10:05 +0000 2016", "text": "Joe passionately believes in the basic bargain that makes America great\u2014that our economy should work for everyone\u2014not just those at the top.", "in_reply_to_screen_name": null, "retweet_count": 944, "favorite_count": 4401, "source": "TweetDeck", "id_str": "765234117143302144", "is_retweet": false}, {"created_at": "Fri Jan 15 04:21:39 +0000 2016", "text": "2 1/2 hours of this? Imagine 4 years. https://t.co/ubB7MPBfR5 #GOPdebate https://t.co/n2SCkfLqhp", "in_reply_to_screen_name": null, "retweet_count": 2496, "favorite_count": 4928, "source": "TweetDeck", "id_str": "687852120775757825", "is_retweet": false}, {"created_at": "Wed Mar 30 16:51:15 +0000 2016", "text": "When a candidate for president says we can solve America\u2019s problems by building walls and discriminating, New Yorkers know better.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 786, "favorite_count": 1874, "source": "TweetDeck", "id_str": "715219851002798080", "is_retweet": false}, {"created_at": "Sat Feb 13 04:21:25 +0000 2016", "text": "A socialist feminist on why she'll vote for Hillary: https://t.co/JAEMfgfMJJ", "in_reply_to_screen_name": null, "retweet_count": 1447, "favorite_count": 2874, "source": "TweetDeck", "id_str": "698361309067419649", "is_retweet": false}, {"created_at": "Tue Jul 12 16:09:56 +0000 2016", "text": "\u201cFor families making less than $125,000 a year, we\u2019ll eliminate tuition at those schools altogether.\u201d https://t.co/TLlb3SCNpH", "in_reply_to_screen_name": null, "retweet_count": 893, "favorite_count": 2504, "source": "TweetDeck", "id_str": "752897793564508160", "is_retweet": false}, {"created_at": "Tue Nov 08 01:44:07 +0000 2016", "text": "\u201cTomorrow, we have the chance to elect someone who is singularly qualified to be our president\u2014our friend, Hillary\u2026 https://t.co/gAGljl2DnB", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1755, "favorite_count": 4359, "source": "TweetDeck", "id_str": "795804058032439296", "is_retweet": false}, {"created_at": "Sun Sep 18 18:22:15 +0000 2016", "text": "\"Read up on your history. It matters. We've got to get people to vote.\" \u2014@POTUS: https://t.co/tTgeqy51PU https://t.co/GyveEjARku", "in_reply_to_screen_name": null, "retweet_count": 3399, "favorite_count": 7101, "source": "Twitter Web Client", "id_str": "777573464739688448", "is_retweet": false}, {"created_at": "Thu Jul 28 02:35:54 +0000 2016", "text": "RT @timkaine: \"We better elect the candidate who's proven she can be trusted with the job. The candidate who\u2019s proven she\u2019s ready for the j\u2026", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 0, "source": "TweetDeck", "id_str": "758491138084904960", "is_retweet": true}, {"created_at": "Sun Nov 06 16:37:19 +0000 2016", "text": "RT @HillaryforPA: BREAKING: @HillaryClinton to campaign in Pittsburgh tomorrow, Nov. 7 at the Cathedral of Learning in Oakland. RSVP: https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1282, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795304062359142401", "is_retweet": true}, {"created_at": "Thu Mar 03 17:39:36 +0000 2016", "text": "Happy #WomensHistoryMonth! We're celebrating Dr. Mae Jemison, the first African American woman to travel in space. https://t.co/bQMpE2GktT", "in_reply_to_screen_name": null, "retweet_count": 2648, "favorite_count": 5091, "source": "TweetDeck", "id_str": "705447546370527233", "is_retweet": false}, {"created_at": "Wed Jan 20 20:48:54 +0000 2016", "text": "It's no surprise that two billionaire hedge fund managers have launched an ad blitz against Hillary. https://t.co/s2z0VbZcTM", "in_reply_to_screen_name": null, "retweet_count": 521, "favorite_count": 986, "source": "TweetDeck", "id_str": "689912509793488897", "is_retweet": false}, {"created_at": "Sat Feb 27 21:33:09 +0000 2016", "text": "Couldn't ask for a better right-hand woman on the trail. Happy birthday, @chelseaclinton\u2014I'm so proud of you. -H https://t.co/X5GLXTU3p7", "in_reply_to_screen_name": null, "retweet_count": 1561, "favorite_count": 7748, "source": "TweetDeck", "id_str": "703694383263121411", "is_retweet": false}, {"created_at": "Thu Sep 22 01:18:02 +0000 2016", "text": "RT @YoungPwD4HRC: Trump mocks people with disabilities. Hillary Clinton wants to expand their job opportunities https://t.co/GuuwvJgwER", "in_reply_to_screen_name": null, "retweet_count": 1538, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778765262933880832", "is_retweet": true}, {"created_at": "Tue Mar 15 19:51:14 +0000 2016", "text": "Live in FL, IL, MO, NC, or OH? Text WHERE to 47246 to find your polling place then go vote!", "in_reply_to_screen_name": null, "retweet_count": 603, "favorite_count": 1083, "source": "TweetDeck", "id_str": "709829328184451072", "is_retweet": false}, {"created_at": "Sat Feb 06 22:52:10 +0000 2016", "text": "Some of the toughest, hardest working leaders in America joined Hillary on the campaign trail in New Hampshire. https://t.co/PEjOvvIDbn", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 758, "source": "TweetDeck", "id_str": "696104122278404100", "is_retweet": false}, {"created_at": "Tue Feb 16 21:10:18 +0000 2016", "text": "It\u2019s not a coincidence that the Flint water crisis was allowed to happen in a largely black, largely poor community.", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 1545, "source": "TweetDeck", "id_str": "699702367533584384", "is_retweet": false}, {"created_at": "Fri Sep 16 14:04:33 +0000 2016", "text": "\u201cLet\u2019s reject the cynicism, the bullying, and the divisive rhetoric that my opponent is using to try and make us all afraid of each other.\u201d", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1166, "favorite_count": 2884, "source": "TweetDeck", "id_str": "776783839008067584", "is_retweet": false}, {"created_at": "Fri Mar 04 21:53:35 +0000 2016", "text": "On this day in 1917, Jeannette Rankin took her seat in Congress, becoming our country\u2019s first woman representative. https://t.co/G3tOXcwGTW", "in_reply_to_screen_name": null, "retweet_count": 3165, "favorite_count": 6213, "source": "TweetDeck", "id_str": "705873851096420352", "is_retweet": false}, {"created_at": "Fri Jul 22 21:48:31 +0000 2016", "text": "\"I think after the last week...we'd better be ready to go win an election in November.\" \u2014Hillary in Tampa", "in_reply_to_screen_name": null, "retweet_count": 1397, "favorite_count": 4665, "source": "TweetDeck", "id_str": "756606877438541824", "is_retweet": false}, {"created_at": "Thu Oct 20 01:22:19 +0000 2016", "text": "RT @TheBriefing2016: Trump attacked immigrants, calling them criminals and rapists\u2014and that was just in his announcement speech. #debate ht\u2026", "in_reply_to_screen_name": null, "retweet_count": 559, "favorite_count": 0, "source": "TweetDeck", "id_str": "788913204361658369", "is_retweet": true}, {"created_at": "Mon Aug 08 19:50:37 +0000 2016", "text": "We\u2019re going to make sure the wealthy pay their fair share in taxes for a change: https://t.co/p7J6Ab1Agq", "in_reply_to_screen_name": null, "retweet_count": 992, "favorite_count": 3148, "source": "TweetDeck", "id_str": "762737799531462656", "is_retweet": false}, {"created_at": "Wed Aug 31 20:39:32 +0000 2016", "text": "\"We are building a wall. He's a Mexican!\u201d \u2014Donald Trump, June 3, 2016 https://t.co/uSSd7XigYp", "in_reply_to_screen_name": null, "retweet_count": 2980, "favorite_count": 4121, "source": "TweetDeck", "id_str": "771085033943818245", "is_retweet": false}, {"created_at": "Wed Nov 09 00:45:15 +0000 2016", "text": "RT @HillaryforNC: If you haven't voted, NC, @POTUS needs you to get in line. As long as you're in line when polls close, you can vote. http\u2026", "in_reply_to_screen_name": null, "retweet_count": 6181, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796151631335329792", "is_retweet": true}, {"created_at": "Mon Aug 29 12:50:10 +0000 2016", "text": "We have some questions about this letter from Donald Trump's doctor. https://t.co/0wd7ZSAUxw", "in_reply_to_screen_name": null, "retweet_count": 1933, "favorite_count": 3985, "source": "Twitter for iPhone", "id_str": "770242138672160768", "is_retweet": false}, {"created_at": "Thu Aug 11 19:58:53 +0000 2016", "text": "It's not just a value\u2014it's a real plan. https://t.co/OvGzoPTtwg https://t.co/hI6Ip27HHm", "in_reply_to_screen_name": null, "retweet_count": 1443, "favorite_count": 3807, "source": "TweetDeck", "id_str": "763827045503737860", "is_retweet": false}, {"created_at": "Fri Nov 04 20:45:13 +0000 2016", "text": "First lady of Arkansas\nFirst lady of the United States\nSenator\nSecretary of state\nPresident? That's up to you:\u2026 https://t.co/KZcut7ScSZ", "in_reply_to_screen_name": null, "retweet_count": 4838, "favorite_count": 15170, "source": "TweetDeck", "id_str": "794641672613335045", "is_retweet": false}, {"created_at": "Sun Mar 27 19:21:55 +0000 2016", "text": "Here\u2019s what you should know about the crisis in child care costs\u2014and the one candidate who\u2019s got a plan to fix it. https://t.co/o7MKZohAsO", "in_reply_to_screen_name": null, "retweet_count": 999, "favorite_count": 2126, "source": "Twitter for iPhone", "id_str": "714170603301969921", "is_retweet": false}, {"created_at": "Wed Jun 15 03:13:24 +0000 2016", "text": "America has always been a country of \"we,\" not \"me.\" And we've always been stronger together. https://t.co/hInlN74PFR", "in_reply_to_screen_name": null, "retweet_count": 3630, "favorite_count": 12487, "source": "TweetDeck", "id_str": "742917897400557573", "is_retweet": false}, {"created_at": "Sun Aug 07 22:30:44 +0000 2016", "text": "In America, if you can dream it, you should be able to build it.\nhttps://t.co/xduxyCcwj3", "in_reply_to_screen_name": null, "retweet_count": 2464, "favorite_count": 7049, "source": "Twitter Web Client", "id_str": "762415706453356545", "is_retweet": false}, {"created_at": "Sun Feb 07 17:49:23 +0000 2016", "text": "Cuando los precios de los medicamentos aumentan astron\u00f3micamente vidas penden de un hilo\u2014la historia de una familia: https://t.co/fr1EnM8biV", "in_reply_to_screen_name": null, "retweet_count": 209, "favorite_count": 425, "source": "TweetDeck", "id_str": "696390312864911360", "is_retweet": false}, {"created_at": "Fri Nov 04 17:58:35 +0000 2016", "text": "We\u2019re going to make public colleges and universities tuition-free for families making less than $125,000 a year. https://t.co/VkVm51nWIY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1013, "favorite_count": 2499, "source": "TweetDeck", "id_str": "794599739841019905", "is_retweet": false}, {"created_at": "Sat Jul 23 17:22:58 +0000 2016", "text": "The people who know @TimKaine best have voted to give him a promotion because he fights for the people he represents and delivers results.", "in_reply_to_screen_name": null, "retweet_count": 807, "favorite_count": 2559, "source": "TweetDeck", "id_str": "756902437898903553", "is_retweet": false}, {"created_at": "Tue Jan 19 14:02:26 +0000 2016", "text": ".@HRC You have fought with persistence and great courage for LGBT equality. From one \"HRC\" to another\u2014I\u2019m proud to have your support. -H", "in_reply_to_screen_name": "HRC", "retweet_count": 575, "favorite_count": 1203, "source": "Twitter Web Client", "id_str": "689447827630489600", "is_retweet": false}, {"created_at": "Mon Feb 01 16:02:56 +0000 2016", "text": ".@billclinton shares three stories to explain why Hillary\u2019s the \u201csingle best changemaker\u201d he\u2019s ever known. https://t.co/AxPl2KCj23", "in_reply_to_screen_name": null, "retweet_count": 314, "favorite_count": 638, "source": "TweetDeck", "id_str": "694189196366516224", "is_retweet": false}, {"created_at": "Sat Jul 30 16:10:37 +0000 2016", "text": "When any barrier falls in America, it clears the way for everyone. https://t.co/nz6Y29DMwP", "in_reply_to_screen_name": null, "retweet_count": 4183, "favorite_count": 14307, "source": "Twitter Web Client", "id_str": "759420944486174722", "is_retweet": false}, {"created_at": "Wed Apr 06 16:18:51 +0000 2016", "text": "My message to every American worker is this: I will stand with you, I will have your back. https://t.co/6po7XbU1CL", "in_reply_to_screen_name": null, "retweet_count": 1317, "favorite_count": 4186, "source": "TweetDeck", "id_str": "717748413698347013", "is_retweet": false}, {"created_at": "Mon Sep 19 19:30:23 +0000 2016", "text": "RT @BernieSanders: When @HillaryClinton says she\u2019s going to make public colleges and universities tuition-free, you know what? That's a ver\u2026", "in_reply_to_screen_name": null, "retweet_count": 5482, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "777952999100522496", "is_retweet": true}, {"created_at": "Tue Mar 22 22:25:43 +0000 2016", "text": "Idaho and Utah: Join thousands of your neighbors at the caucuses tonight! Confirm where to go here: https://t.co/dGE4E1NqW1", "in_reply_to_screen_name": null, "retweet_count": 515, "favorite_count": 1263, "source": "TweetDeck", "id_str": "712404920281014272", "is_retweet": false}, {"created_at": "Thu Jun 23 21:55:11 +0000 2016", "text": "People in Scotland are not thrilled about Trump coming to their country.\n\nWe know the feeling.\nhttps://t.co/M5NKiYnt4C", "in_reply_to_screen_name": null, "retweet_count": 8603, "favorite_count": 15657, "source": "Twitter Web Client", "id_str": "746099306390659072", "is_retweet": false}, {"created_at": "Fri Oct 28 19:07:38 +0000 2016", "text": "\"This is a man who relishes making women feel terrible about themselves, in every possible way.\u201d \u2014Hillary on Trump\n\nWe're better than that.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 970, "favorite_count": 2115, "source": "TweetDeck", "id_str": "792080400583622656", "is_retweet": false}, {"created_at": "Sat Jan 23 22:06:00 +0000 2016", "text": "Today in 1997, @madeleine\u2014a diplomat, author, and humanitarian\u2014became the first woman secretary of state. https://t.co/EdlUpwDfWC", "in_reply_to_screen_name": null, "retweet_count": 1921, "favorite_count": 4384, "source": "TweetDeck", "id_str": "691019074600603648", "is_retweet": false}, {"created_at": "Tue Oct 18 14:49:46 +0000 2016", "text": "RT @BernieSanders: Progressive economists agree: @HillaryClinton's economic agenda will reduce inequality, raise wages and create jobs. htt\u2026", "in_reply_to_screen_name": null, "retweet_count": 3409, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788391627865853953", "is_retweet": true}, {"created_at": "Tue Mar 15 13:03:44 +0000 2016", "text": "Live in FL IL, MO, NC, or OH and have questions about voting today? Call the hotline: 844-IM4-HILL (844-464-4455)", "in_reply_to_screen_name": null, "retweet_count": 1132, "favorite_count": 1731, "source": "TweetDeck", "id_str": "709726778915463168", "is_retweet": false}, {"created_at": "Fri Mar 04 20:10:33 +0000 2016", "text": "\"Michigan proves every day that American workers are the best in the world\u2014all they need is a fair chance on a fair playing field.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 490, "favorite_count": 1183, "source": "Twitter Web Client", "id_str": "705847921485467648", "is_retweet": false}, {"created_at": "Thu Jul 07 12:01:32 +0000 2016", "text": "We can't let Trump's approach to the economy anywhere near the White House. https://t.co/KYK95eht0p", "in_reply_to_screen_name": null, "retweet_count": 2314, "favorite_count": 7033, "source": "TweetDeck", "id_str": "751023340198952960", "is_retweet": false}, {"created_at": "Thu Jun 09 12:21:48 +0000 2016", "text": "Donald Trump's School of Philanthropy:\n1. Pledge money to causes\n2. Do nothing\n3. Cut a check only if you get caught\nhttps://t.co/cEpsCCrI06", "in_reply_to_screen_name": null, "retweet_count": 3256, "favorite_count": 6676, "source": "TweetDeck", "id_str": "740881580810502144", "is_retweet": false}, {"created_at": "Thu Aug 11 18:15:13 +0000 2016", "text": "The 400 richest taxpayers in America would get an average tax cut of more than $15 million a year from the Trump loophole.", "in_reply_to_screen_name": null, "retweet_count": 1533, "favorite_count": 3373, "source": "TweetDeck", "id_str": "763800955573956608", "is_retweet": false}, {"created_at": "Tue Oct 04 19:42:58 +0000 2016", "text": "Tonight, Mike Pence will either have to leave Trump out to dry\u2014or try to justify the things they both believe.\u2026 https://t.co/xePXXGgit3", "in_reply_to_screen_name": null, "retweet_count": 2173, "favorite_count": 4316, "source": "TweetDeck", "id_str": "783391985512177664", "is_retweet": false}, {"created_at": "Wed Apr 06 19:32:36 +0000 2016", "text": ".@BernieSanders prioritized gun manufacturers' rights over the parents of the children killed at Sandy Hook.\nhttps://t.co/c1oaOJLhCz", "in_reply_to_screen_name": null, "retweet_count": 2324, "favorite_count": 4041, "source": "Twitter Web Client", "id_str": "717797172154998784", "is_retweet": false}, {"created_at": "Mon Apr 18 17:38:21 +0000 2016", "text": "No child should have to live in fear of losing her parents to deportation. #FightForFamilies\nhttps://t.co/iOICFi8uQ2", "in_reply_to_screen_name": null, "retweet_count": 1538, "favorite_count": 3382, "source": "Twitter Web Client", "id_str": "722117073065750529", "is_retweet": false}, {"created_at": "Mon Jan 18 03:16:23 +0000 2016", "text": "Climate change is real. We can\u2019t afford a president who'd deny it instead of taking action. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 2615, "source": "TweetDeck", "id_str": "688922859327098880", "is_retweet": false}, {"created_at": "Wed Oct 12 11:57:17 +0000 2016", "text": "\"You want to give me a good send-off? Go vote!\" \u2014@POTUS: https://t.co/tTgeqy51PU https://t.co/ESQkLV2yaJ", "in_reply_to_screen_name": null, "retweet_count": 8358, "favorite_count": 17332, "source": "Media Studio", "id_str": "786173892893171713", "is_retweet": false}, {"created_at": "Sat Jul 23 17:36:10 +0000 2016", "text": "RT @Hillary_esp: \"Seremos compa\u00f1eros de alma en esta gran lucha por venir\"\u2014dijo @TimKaine sobre @HillaryClinton.", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 0, "source": "TweetDeck", "id_str": "756905758449627136", "is_retweet": true}, {"created_at": "Mon Sep 12 21:49:15 +0000 2016", "text": "\"You can't lead this nation if you have such a low opinion for its citizens.\" \u2014Donald Trump\n\nAbout that. https://t.co/pij0atGrgK", "in_reply_to_screen_name": null, "retweet_count": 16452, "favorite_count": 26346, "source": "Twitter Web Client", "id_str": "775451233536577536", "is_retweet": false}, {"created_at": "Sat Apr 30 20:22:47 +0000 2016", "text": "\u00bfCrees que cuando sea presidenta, le van a pagar lo mismo que le pagar\u00edan si fuera un hombre?\nhttps://t.co/ECFQYKscyO", "in_reply_to_screen_name": null, "retweet_count": 853, "favorite_count": 1478, "source": "Twitter Web Client", "id_str": "726507108917596160", "is_retweet": false}, {"created_at": "Sat Oct 22 21:32:34 +0000 2016", "text": "\"We\u2019re going to come together in the next 17 days and convince everybody you can to get out and vote.\u201d \u2014Hillary https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 801, "favorite_count": 2367, "source": "TweetDeck", "id_str": "789942547082772484", "is_retweet": false}, {"created_at": "Wed Sep 21 18:41:31 +0000 2016", "text": "Live from Orlando: Watch Hillary share her plan for building an inclusive economy that helps everyone get ahead \u2192 https://t.co/IX06FtcZG8", "in_reply_to_screen_name": null, "retweet_count": 1247, "favorite_count": 3394, "source": "TweetDeck", "id_str": "778665476071260160", "is_retweet": false}, {"created_at": "Wed Jun 22 18:27:33 +0000 2016", "text": "Live now from North Carolina: Hillary\u2019s plan to make the economy work for everyone. Watch here. https://t.co/byKmrx9XZy", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 1349, "source": "TweetDeck", "id_str": "745684668696117248", "is_retweet": false}, {"created_at": "Tue Aug 23 22:41:04 +0000 2016", "text": "Why would we give Trump's family a $4 billion tax cut when we could use that money to fix 8,000 bridges? https://t.co/fwD8O8o7eS", "in_reply_to_screen_name": null, "retweet_count": 4250, "favorite_count": 9709, "source": "TweetDeck", "id_str": "768216514713513984", "is_retweet": false}, {"created_at": "Thu Oct 27 18:38:38 +0000 2016", "text": "If you believe everyone deserves to be treated equally, no matter who they are or who they love\u2014you\u2019ve got to vote. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 527, "favorite_count": 1131, "source": "TweetDeck", "id_str": "791710716898181120", "is_retweet": false}, {"created_at": "Fri Jan 29 03:37:29 +0000 2016", "text": "With every Republican attacking safe and legal abortion, women need more than an ally in the White House: We need a fighter. #ImWithHer", "in_reply_to_screen_name": null, "retweet_count": 987, "favorite_count": 2697, "source": "TweetDeck", "id_str": "692914432213655553", "is_retweet": false}, {"created_at": "Tue Sep 20 01:04:06 +0000 2016", "text": "\"You want to give me a good send-off? Go vote.\u201d \u2014Barack Obama: https://t.co/tTgeqxNqYm https://t.co/Jqf2jmx3D0", "in_reply_to_screen_name": null, "retweet_count": 5942, "favorite_count": 11666, "source": "Twitter Web Client", "id_str": "778036983558004736", "is_retweet": false}, {"created_at": "Sat Jul 30 14:54:45 +0000 2016", "text": "RT @MSNBC: Watch: #KhizrKhan asks Mitch McConnell and Paul Ryan to repudiate Trump. Tune in to @TheLastWord for the interview https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 6590, "favorite_count": 0, "source": "TweetDeck", "id_str": "759401855046868992", "is_retweet": true}, {"created_at": "Thu Apr 07 01:12:46 +0000 2016", "text": "We need a president who can bring people together.\n\nHate and bigotry have no place in America.\nhttps://t.co/yIkerbNMP9", "in_reply_to_screen_name": null, "retweet_count": 2395, "favorite_count": 5646, "source": "Twitter Web Client", "id_str": "717882777882861568", "is_retweet": false}, {"created_at": "Thu Oct 20 01:44:15 +0000 2016", "text": "RT @BernieSanders: Donald Trump\u2019s vision for America: tax breaks for billionaires and large corporations, poverty wages for working familie\u2026", "in_reply_to_screen_name": null, "retweet_count": 6700, "favorite_count": 0, "source": "TweetDeck", "id_str": "788918723512004608", "is_retweet": true}, {"created_at": "Tue Jan 19 17:38:58 +0000 2016", "text": "\"She is the one person who can bring a tremendous amount of experience to the job of being a world leader.\"\nhttps://t.co/Ob2iZCXrca", "in_reply_to_screen_name": null, "retweet_count": 1055, "favorite_count": 2047, "source": "Twitter Web Client", "id_str": "689502322955661313", "is_retweet": false}, {"created_at": "Tue Oct 11 04:08:20 +0000 2016", "text": "Thinking of my friend and outstanding public servant Brooklyn DA Ken Thompson, who passed away yesterday. My prayer\u2026 https://t.co/ItcT1D3T3F", "in_reply_to_screen_name": null, "retweet_count": 2350, "favorite_count": 13061, "source": "TweetDeck", "id_str": "785693491678543872", "is_retweet": false}, {"created_at": "Wed Feb 10 03:13:10 +0000 2016", "text": "Tell the world you\u2019re proud to stand with Hillary. Get your free magnet now \u2192 https://t.co/rOOA04LBPL", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 1114, "source": "TweetDeck", "id_str": "697256967467876352", "is_retweet": false}, {"created_at": "Thu Feb 11 17:05:19 +0000 2016", "text": "Asking Tamir's family to pay for his ambulance is heartless. Cleveland should drop this fee. https://t.co/Gq8twYI1QD -H", "in_reply_to_screen_name": null, "retweet_count": 1146, "favorite_count": 1728, "source": "TweetDeck", "id_str": "697828774533009409", "is_retweet": false}, {"created_at": "Fri Aug 26 15:28:44 +0000 2016", "text": "We've made our union more perfect because people refused to be kept on the sidelines. Onward. #WomensEqualityDay\nhttps://t.co/QugGOqb2yl", "in_reply_to_screen_name": null, "retweet_count": 3756, "favorite_count": 7277, "source": "Twitter Web Client", "id_str": "769194879448604672", "is_retweet": false}, {"created_at": "Mon Jun 27 14:43:14 +0000 2016", "text": "\"When Donald Trump says he\u2019ll make America great, he means make it even greater for rich guys just like Donald Trump.\u201d \u2014@ElizabethForMA", "in_reply_to_screen_name": null, "retweet_count": 1312, "favorite_count": 3675, "source": "TweetDeck", "id_str": "747440153904418816", "is_retweet": false}, {"created_at": "Wed Jun 01 23:15:44 +0000 2016", "text": "Trump University students entrusted Trump with their futures, and he scammed them.\n\nHe'd do the same to our country. https://t.co/fYjE6dkoVg", "in_reply_to_screen_name": null, "retweet_count": 1732, "favorite_count": 2902, "source": "TweetDeck", "id_str": "738147047786717184", "is_retweet": false}, {"created_at": "Sun Feb 07 22:18:49 +0000 2016", "text": "\u201cYou deserve justice, and you deserve equality under the law.\u201d\nhttps://t.co/BwgF3FxvB2", "in_reply_to_screen_name": null, "retweet_count": 696, "favorite_count": 1387, "source": "Twitter Web Client", "id_str": "696458117765201920", "is_retweet": false}, {"created_at": "Fri Jul 29 00:43:44 +0000 2016", "text": "\"When Flint's water poisons its children, it hurts all of us. These are our children.\" \u2014@JenGranholm https://t.co/9MCjMKaLQQ", "in_reply_to_screen_name": null, "retweet_count": 1061, "favorite_count": 3176, "source": "TweetDeck", "id_str": "758825299370913792", "is_retweet": false}, {"created_at": "Mon May 23 21:08:34 +0000 2016", "text": "A Donald Trump presidency would pull us backward on nearly every issue we care about.\n\nWe can't let that happen.\nhttps://t.co/Ahc2uumjEI", "in_reply_to_screen_name": null, "retweet_count": 1770, "favorite_count": 3775, "source": "Twitter Web Client", "id_str": "734853553852841984", "is_retweet": false}, {"created_at": "Fri Oct 28 22:18:15 +0000 2016", "text": "Too many families have been ripped apart by gun violence. We need to bring people together to reform our laws. https://t.co/h2bXJntzJi", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1049, "favorite_count": 2345, "source": "TweetDeck", "id_str": "792128370825912320", "is_retweet": false}, {"created_at": "Wed Jul 27 02:16:47 +0000 2016", "text": "\"I asked her to take a walk with me to the Yale Art Museum. We\u2019ve been walking and talking and laughing together ever since.\u201d \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 1326, "favorite_count": 5372, "source": "TweetDeck", "id_str": "758123939327569920", "is_retweet": false}, {"created_at": "Tue Oct 11 14:08:10 +0000 2016", "text": "RT @ezraklein: Trump's plan today: start a fight with Paul Ryan\n\nClinton's plan today: outline agenda to fight deep poverty\n\nhttps://t.co/e\u2026", "in_reply_to_screen_name": null, "retweet_count": 5638, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "785844443672903681", "is_retweet": true}, {"created_at": "Tue Oct 11 19:36:17 +0000 2016", "text": "RT @algore: Our planet can't afford denial on climate or opposition to solutions. @HillaryClinton will work hard to solve the pressing issu\u2026", "in_reply_to_screen_name": null, "retweet_count": 3886, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785927019276099584", "is_retweet": true}, {"created_at": "Fri Apr 29 21:58:31 +0000 2016", "text": "Get your own #WomanCard*: https://t.co/3DgpQSy3qb\n\n*does not include a 21% discount on your purchases. https://t.co/2xiRyOws5F", "in_reply_to_screen_name": null, "retweet_count": 1180, "favorite_count": 2725, "source": "TweetDeck", "id_str": "726168813872517120", "is_retweet": false}, {"created_at": "Fri Oct 21 21:17:20 +0000 2016", "text": "Trump suits were made in Mexico\u2014he could have made them in Brooklyn, Ohio.\n\nTrump furniture is made in Turkey instead of Cleveland.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1117, "favorite_count": 2129, "source": "TweetDeck", "id_str": "789576326638399493", "is_retweet": false}, {"created_at": "Mon May 09 18:42:32 +0000 2016", "text": "Live on Facebook: Hillary leads a roundtable discussion with working families in Virginia. Watch \u2192 https://t.co/qM16OacO9H", "in_reply_to_screen_name": null, "retweet_count": 381, "favorite_count": 969, "source": "Twitter Web Client", "id_str": "729743373733658624", "is_retweet": false}, {"created_at": "Wed Nov 02 23:14:35 +0000 2016", "text": "\u201cI will do my best to bring people together, not pull them apart...let\u2019s make sure we win on Tuesday and prove that love trumps hate.\u201d", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1971, "favorite_count": 5111, "source": "TweetDeck", "id_str": "793954487702528000", "is_retweet": false}, {"created_at": "Mon Aug 22 21:58:02 +0000 2016", "text": "Cheryl lost her husband in Iraq. Then Trump's company targeted her and scammed her out of $35,000. https://t.co/Wjz6zohMIT", "in_reply_to_screen_name": null, "retweet_count": 2991, "favorite_count": 4447, "source": "TweetDeck", "id_str": "767843298279038978", "is_retweet": false}, {"created_at": "Fri Sep 23 02:27:16 +0000 2016", "text": "Our favorite moments from Hillary's appearance on Between Two Ferns \u2192 https://t.co/tXLPQtR7tb https://t.co/Er2YqHQVhl", "in_reply_to_screen_name": null, "retweet_count": 1917, "favorite_count": 6911, "source": "TweetDeck", "id_str": "779145074831663105", "is_retweet": false}, {"created_at": "Mon Sep 05 16:38:27 +0000 2016", "text": "Unions stand up for workers who need someone to have their backs. We need a president who will do the same. https://t.co/0OpO5kCyyg", "in_reply_to_screen_name": null, "retweet_count": 3655, "favorite_count": 9294, "source": "Twitter Web Client", "id_str": "772836300722434048", "is_retweet": false}, {"created_at": "Mon Aug 15 17:41:15 +0000 2016", "text": "RT @JoeBiden: \"Everyone is entitled to be treated with dignity and respect... and America can be defined in one single word \u2014 'possibilitie\u2026", "in_reply_to_screen_name": null, "retweet_count": 1301, "favorite_count": 0, "source": "TweetDeck", "id_str": "765241961443917824", "is_retweet": true}, {"created_at": "Sat Jul 23 17:28:01 +0000 2016", "text": "\"I can\u2019t think of any better person to have by my side on the campaign trail and in the White House.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 674, "favorite_count": 2474, "source": "TweetDeck", "id_str": "756903709586681856", "is_retweet": false}, {"created_at": "Sun Sep 18 14:57:15 +0000 2016", "text": "In a normal election, these 126 things would disqualify Trump from becoming president: https://t.co/VeDJknt4JH", "in_reply_to_screen_name": null, "retweet_count": 3016, "favorite_count": 5296, "source": "TweetDeck", "id_str": "777521877535322112", "is_retweet": false}, {"created_at": "Tue Mar 22 23:01:47 +0000 2016", "text": "Make sure your friends in AZ, ID, &amp; UT vote or caucus for Hillary today! Send them a message with our friend finder: https://t.co/BOifvWj1Cv", "in_reply_to_screen_name": null, "retweet_count": 536, "favorite_count": 1135, "source": "TweetDeck", "id_str": "712413996150870017", "is_retweet": false}, {"created_at": "Mon Sep 19 16:36:21 +0000 2016", "text": "If you work hard, you should be able to find a good job that pays well and lets you do what you love and make your mark on the world.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 532, "favorite_count": 1202, "source": "Twitter Web Client", "id_str": "777909201481916416", "is_retweet": false}, {"created_at": "Mon Oct 03 17:50:44 +0000 2016", "text": "For years, Trump has been taking from American taxpayers with both hands and giving nothing back. https://t.co/Xbu9LkD89T", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 781, "favorite_count": 1635, "source": "TweetDeck", "id_str": "783001352867868672", "is_retweet": false}, {"created_at": "Thu Oct 20 02:03:12 +0000 2016", "text": "RT @TheBriefing2016: While Republicans attack the Clinton Foundation, the Clinton Foundation is attacking HIV/AIDs and Malaria. #debatenigh\u2026", "in_reply_to_screen_name": null, "retweet_count": 2512, "favorite_count": 0, "source": "TweetDeck", "id_str": "788923491408117760", "is_retweet": true}, {"created_at": "Wed Jan 06 13:47:38 +0000 2016", "text": "What we learned from @billclinton\u2019s first stop on the campaign trail: https://t.co/iicO8vAUqz", "in_reply_to_screen_name": null, "retweet_count": 333, "favorite_count": 1151, "source": "Twitter for iPhone", "id_str": "684733062350004225", "is_retweet": false}, {"created_at": "Tue Aug 02 21:03:45 +0000 2016", "text": "RT @TheBriefing2016: No, this seriously happened... https://t.co/kAptsQAWR1", "in_reply_to_screen_name": null, "retweet_count": 2596, "favorite_count": 0, "source": "TweetDeck", "id_str": "760581880886558720", "is_retweet": true}, {"created_at": "Sun Apr 10 17:34:53 +0000 2016", "text": "Thank you for your support, @RepCummings. https://t.co/BmEZ9RsRHT", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 1757, "source": "TweetDeck", "id_str": "719217098497605633", "is_retweet": false}, {"created_at": "Mon Oct 17 23:05:24 +0000 2016", "text": "\"She\u2019s a tested, unshakable leader.\" \u2014@LasVegasSun endorsing Hillary: https://t.co/8Px21Dz3sx", "in_reply_to_screen_name": null, "retweet_count": 1571, "favorite_count": 5077, "source": "TweetDeck", "id_str": "788153970812395520", "is_retweet": false}, {"created_at": "Fri Apr 08 21:14:47 +0000 2016", "text": "Solo una candidata tiene m\u00e1s votos que Donald Trump. https://t.co/RFA1kqT4dB https://t.co/U4eHzt9bkC", "in_reply_to_screen_name": null, "retweet_count": 684, "favorite_count": 1328, "source": "Twitter Web Client", "id_str": "718547661280919552", "is_retweet": false}, {"created_at": "Sat Jun 04 18:04:56 +0000 2016", "text": "Muslims and Mexican immigrants serve with distinction in the U.S. military. Trump could learn something about being an American from them.", "in_reply_to_screen_name": null, "retweet_count": 3331, "favorite_count": 7834, "source": "TweetDeck", "id_str": "739155994035523588", "is_retweet": false}, {"created_at": "Mon Mar 14 00:37:42 +0000 2016", "text": "Donald Trump is not who we are. https://t.co/wgpp5Zw54X", "in_reply_to_screen_name": null, "retweet_count": 1914, "favorite_count": 3844, "source": "TweetDeck", "id_str": "709176644574044160", "is_retweet": false}, {"created_at": "Thu Oct 06 22:27:29 +0000 2016", "text": "Born 99 years ago today, civil rights activist Fannie Lou Hamer was a decades-long fighter for universal voting rig\u2026 https://t.co/HSgTygWlba", "in_reply_to_screen_name": null, "retweet_count": 4655, "favorite_count": 12563, "source": "TweetDeck", "id_str": "784158161062223873", "is_retweet": false}, {"created_at": "Sat Apr 16 00:40:15 +0000 2016", "text": ".@IAVA is right, Congress shouldn't cut GI Bill benefits. America should fulfill our commitment to our veterans. https://t.co/QviPHMiY00 -H", "in_reply_to_screen_name": null, "retweet_count": 641, "favorite_count": 1233, "source": "TweetDeck", "id_str": "721136085435342848", "is_retweet": false}, {"created_at": "Fri Mar 25 01:15:31 +0000 2016", "text": "Heartbroken &amp; angry at this Flint report. Unconscionable failure of leadership. Snyder should be held to account. https://t.co/LYmlLpJkMT -H", "in_reply_to_screen_name": null, "retweet_count": 1383, "favorite_count": 2497, "source": "TweetDeck", "id_str": "713172429569449984", "is_retweet": false}, {"created_at": "Thu Aug 18 21:26:20 +0000 2016", "text": "Donald Trump wants to eliminate the estate tax. Doing so could save his family $4 billion and 99.8% of families $0. https://t.co/iEjXi24GGR", "in_reply_to_screen_name": null, "retweet_count": 4319, "favorite_count": 9468, "source": "TweetDeck", "id_str": "766385768516419584", "is_retweet": false}, {"created_at": "Thu Sep 15 19:59:27 +0000 2016", "text": "As @FLOTUS said, the choice in this election is about who will have the power to shape our children for the next four years of their lives.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 891, "favorite_count": 2450, "source": "TweetDeck", "id_str": "776510761803870208", "is_retweet": false}, {"created_at": "Tue Jan 12 00:28:27 +0000 2016", "text": "\"You stand for everything that I want in a president.\u201d \u2014@theellenshow\nhttps://t.co/3vzhY5huZk", "in_reply_to_screen_name": null, "retweet_count": 1150, "favorite_count": 3031, "source": "Twitter Web Client", "id_str": "686706267679633408", "is_retweet": false}, {"created_at": "Fri Aug 19 01:00:01 +0000 2016", "text": "RT @AndraDayMusic: I was honored to be a part of history at the DNC. Hillary Clinton is an inspiration for women everywhere.\nhttps://t.co/E\u2026", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 0, "source": "TweetDeck", "id_str": "766439543281156096", "is_retweet": true}, {"created_at": "Wed Oct 26 16:21:49 +0000 2016", "text": "\"The future of the economy is on the ballot. I believe that when the middle class thrives, America thrives.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 666, "favorite_count": 1762, "source": "TweetDeck", "id_str": "791313896086835201", "is_retweet": false}, {"created_at": "Fri Jul 22 00:40:30 +0000 2016", "text": "RT @Hillary_esp: Primero, un \"taco bowl\". Y ahora, Joe Arpaio. Nada m\u00e1s que decir. #RNCinCLE", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 0, "source": "TweetDeck", "id_str": "756287770151313409", "is_retweet": true}, {"created_at": "Tue Sep 27 01:15:20 +0000 2016", "text": "Every time Trump makes a show of railing against outsourcing, remember the countries he shipped jobs and profits to: https://t.co/5MZTsOgYR9", "in_reply_to_screen_name": null, "retweet_count": 3894, "favorite_count": 6072, "source": "TweetDeck", "id_str": "780576523040489472", "is_retweet": false}, {"created_at": "Thu Oct 20 19:44:28 +0000 2016", "text": "We counted: Over the last three presidential debates, Donald Trump told 137 lies. \n\nHillary still won all three. https://t.co/FbhB0zUVpR", "in_reply_to_screen_name": null, "retweet_count": 3415, "favorite_count": 9004, "source": "TweetDeck", "id_str": "789190569712943108", "is_retweet": false}, {"created_at": "Tue Jul 19 14:07:20 +0000 2016", "text": "We\u2019re going to enfranchise as many Americans as possible, and we're going to win. Join us: https://t.co/ydtr1uvO1o\nhttps://t.co/TIueo6853B", "in_reply_to_screen_name": null, "retweet_count": 3036, "favorite_count": 5708, "source": "Twitter Web Client", "id_str": "755403653498884096", "is_retweet": false}, {"created_at": "Mon May 16 18:32:28 +0000 2016", "text": "Whenever you read about Trump's reckless foreign policy, imagine him in the Situation Room. https://t.co/vnzOi68NNz https://t.co/ruLhpqgEqJ", "in_reply_to_screen_name": null, "retweet_count": 1031, "favorite_count": 1605, "source": "TweetDeck", "id_str": "732277554170724352", "is_retweet": false}, {"created_at": "Tue Sep 27 01:13:13 +0000 2016", "text": "RT @washingtonpost: How many Trump products were made overseas? Here\u2019s the complete list. https://t.co/OdJOZeZau0", "in_reply_to_screen_name": null, "retweet_count": 1634, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780575993593524224", "is_retweet": true}, {"created_at": "Wed Nov 02 19:56:53 +0000 2016", "text": "\"This guy is temperamentally unfit to be Commander-in-Chief and he\u2019s not equipped to be president.\u201d \u2014@POTUS on Trump in North Carolina", "in_reply_to_screen_name": null, "retweet_count": 4011, "favorite_count": 11556, "source": "TweetDeck", "id_str": "793904736873377792", "is_retweet": false}, {"created_at": "Mon Aug 22 18:57:34 +0000 2016", "text": "RT @HillaryforMI: Michigan is on the front lines of a manufacturing renaissance. Hillary saw it herself at Futuramics in Warren. https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 574, "favorite_count": 0, "source": "TweetDeck", "id_str": "767797881868849152", "is_retweet": true}, {"created_at": "Fri Oct 21 19:24:13 +0000 2016", "text": "Captain Humayun Khan died serving his country\u2014and saving his entire unit.\n\nTrump seems to think someone like him do\u2026 https://t.co/LVbTEJ87aB", "in_reply_to_screen_name": null, "retweet_count": 9428, "favorite_count": 21733, "source": "Media Studio", "id_str": "789547858701774848", "is_retweet": false}, {"created_at": "Sat Apr 09 18:06:35 +0000 2016", "text": "Some say we can solve America\u2019s problems by turning against each other. \n\nWe know better.\nhttps://t.co/UjCS0UzXFc", "in_reply_to_screen_name": null, "retweet_count": 2125, "favorite_count": 4399, "source": "Twitter Web Client", "id_str": "718862686893658112", "is_retweet": false}, {"created_at": "Thu Aug 11 18:08:39 +0000 2016", "text": "If @TeamUSA was as fearful as Trump, Michael Phelps and Simone Biles would be cowering in the locker room.\n\nAmerica isn\u2019t afraid to compete.", "in_reply_to_screen_name": null, "retweet_count": 2012, "favorite_count": 7346, "source": "TweetDeck", "id_str": "763799303831822336", "is_retweet": false}, {"created_at": "Thu Oct 20 15:53:43 +0000 2016", "text": "RT @NickMarroletti: This is what it feels like to make #Herstory. Thank you for early voting for @HillaryClinton, @Alli_Wilber. #NCVotesEar\u2026", "in_reply_to_screen_name": null, "retweet_count": 1117, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789132496919228416", "is_retweet": true}, {"created_at": "Thu Oct 20 01:19:06 +0000 2016", "text": "RT @PPact: .@realdonaldtrump pledged to appoint judges who'd overturn Roe v. Wade. He released a list to prove it: https://t.co/70ACZIWMr2\u2026", "in_reply_to_screen_name": null, "retweet_count": 1793, "favorite_count": 0, "source": "TweetDeck", "id_str": "788912393346805760", "is_retweet": true}, {"created_at": "Fri Sep 30 16:46:00 +0000 2016", "text": "This election is about whether we\u2019re a country that lifts each other up or tears each other down. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 850, "favorite_count": 2234, "source": "TweetDeck", "id_str": "781897896065114118", "is_retweet": false}, {"created_at": "Fri Oct 14 22:21:46 +0000 2016", "text": "Meet six-year-old Jaylon and his mom\u2014residents of Flint, Michigan, and friends of Hillary's: https://t.co/jMYzbjgi69", "in_reply_to_screen_name": null, "retweet_count": 2752, "favorite_count": 7818, "source": "Media Studio", "id_str": "787055825294651392", "is_retweet": false}, {"created_at": "Mon Oct 31 01:04:31 +0000 2016", "text": "\"We don't miss voting in my family.\" A story from the 1992 presidential campaign that President @BillClinton will n\u2026 https://t.co/ahS6KYdxTT", "in_reply_to_screen_name": null, "retweet_count": 3932, "favorite_count": 9775, "source": "Media Studio", "id_str": "792894989495857152", "is_retweet": false}, {"created_at": "Tue Sep 06 18:58:45 +0000 2016", "text": "Trump says he \u201cknows more about ISIS than the generals do.\u201d\n\nNot only is that wrong, it's disrespectful to our men and women in uniform.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 934, "favorite_count": 2120, "source": "TweetDeck", "id_str": "773233995207303168", "is_retweet": false}, {"created_at": "Fri Sep 16 17:08:17 +0000 2016", "text": "Trump has spent years peddling a racist conspiracy aimed at undermining the first African American president. He can't just take it back.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2698, "favorite_count": 4583, "source": "TweetDeck", "id_str": "776830074205171713", "is_retweet": false}, {"created_at": "Wed Aug 31 19:07:42 +0000 2016", "text": "RT @HFA: When Trump talks about his mass deportation plan, he's talking about breaking up families like Karla's. https://t.co/MMDB4VFdCC", "in_reply_to_screen_name": null, "retweet_count": 2087, "favorite_count": 0, "source": "TweetDeck", "id_str": "771061920090685440", "is_retweet": true}, {"created_at": "Sat Sep 24 19:41:25 +0000 2016", "text": "\"A lifetime\u2019s commitment to solving problems in the real world qualifies Hillary Clinton for this job.\" \u2014@NYTimes https://t.co/qaswl7IOOJ", "in_reply_to_screen_name": null, "retweet_count": 3361, "favorite_count": 7963, "source": "TweetDeck", "id_str": "779767715040989184", "is_retweet": false}, {"created_at": "Sun Oct 02 02:03:26 +0000 2016", "text": "They're voting. Are you? Make sure you're registered: https://t.co/tTgeqxNqYm https://t.co/76koKQOTno", "in_reply_to_screen_name": null, "retweet_count": 1761, "favorite_count": 5902, "source": "TweetDeck", "id_str": "782400570497925120", "is_retweet": false}, {"created_at": "Wed Jul 27 23:25:27 +0000 2016", "text": "\"I am here to tell you that Hillary Clinton is as tough as they come.\" \u2014@MartinOMalley #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 693, "favorite_count": 2641, "source": "TweetDeck", "id_str": "758443213116043264", "is_retweet": false}, {"created_at": "Wed Aug 24 19:53:37 +0000 2016", "text": "Indiana organizer Hillary Rodham in 1976. Join her team: https://t.co/lJ4B5ZA92K https://t.co/cKu4LUhwzQ", "in_reply_to_screen_name": null, "retweet_count": 1386, "favorite_count": 5081, "source": "TweetDeck", "id_str": "768536760662056960", "is_retweet": false}, {"created_at": "Wed Aug 24 22:03:08 +0000 2016", "text": "FACT: The @ClintonFdn helps 11.5 million people with HIV/AIDS worldwide get their medication. https://t.co/wMAHC4u5RB", "in_reply_to_screen_name": null, "retweet_count": 5243, "favorite_count": 10414, "source": "TweetDeck", "id_str": "768569354959065088", "is_retweet": false}, {"created_at": "Tue May 03 19:36:48 +0000 2016", "text": "We don\u2019t have time to waste on Trump's fake solutions that won\u2019t do a thing to help your families.\nhttps://t.co/b4aq8SVVAB", "in_reply_to_screen_name": null, "retweet_count": 1718, "favorite_count": 3011, "source": "Twitter Web Client", "id_str": "727582702749159424", "is_retweet": false}, {"created_at": "Mon Sep 19 16:31:49 +0000 2016", "text": "You want something to vote for, not just against:\n\nOptimism, not resentment.\nAnswers, not anger.\nIdeas, not insults.\nBridges, not walls.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1350, "favorite_count": 2288, "source": "TweetDeck", "id_str": "777908063265251328", "is_retweet": false}, {"created_at": "Tue Feb 09 14:05:53 +0000 2016", "text": "They're counting on you, New Hampshire. Go vote!\nhttps://t.co/KlxS5wNrBH", "in_reply_to_screen_name": null, "retweet_count": 640, "favorite_count": 1348, "source": "Twitter Web Client", "id_str": "697058841528111105", "is_retweet": false}, {"created_at": "Sat Jul 23 01:42:04 +0000 2016", "text": "RT @NPR: About Tim Kaine: https://t.co/C04INo6nYF https://t.co/CM7Ufgo0TW", "in_reply_to_screen_name": null, "retweet_count": 3013, "favorite_count": 0, "source": "TweetDeck", "id_str": "756665651448647680", "is_retweet": true}, {"created_at": "Mon Apr 25 21:28:41 +0000 2016", "text": "\"Voters can count on her to bring that same passion for getting the job done to the White House.\" https://t.co/68uhWrwYmj", "in_reply_to_screen_name": null, "retweet_count": 712, "favorite_count": 1651, "source": "TweetDeck", "id_str": "724711752928247808", "is_retweet": false}, {"created_at": "Thu Jan 07 01:00:59 +0000 2016", "text": "Republicans just voted to repeal Obamacare and defund Planned Parenthood. Good thing we have a Democratic president: https://t.co/vGXkQRRCOE", "in_reply_to_screen_name": null, "retweet_count": 1139, "favorite_count": 2502, "source": "TweetDeck", "id_str": "684902518179147777", "is_retweet": false}, {"created_at": "Wed Mar 09 19:17:07 +0000 2016", "text": "Hillary dropped by @reddit to say \u201cthank you\u201d to some of her nicest supporters. (Yep, you read that right.) https://t.co/w7FncKcIei", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 1255, "source": "TweetDeck", "id_str": "707646416567595008", "is_retweet": false}, {"created_at": "Mon Jun 27 21:06:11 +0000 2016", "text": "It's not complicated: We need our economy to work for everyone, not just the rich or the well-connected.\nhttps://t.co/XIazcMasI4", "in_reply_to_screen_name": null, "retweet_count": 1491, "favorite_count": 4262, "source": "Twitter Web Client", "id_str": "747536527232622592", "is_retweet": false}, {"created_at": "Tue Feb 02 20:47:34 +0000 2016", "text": "Thank you, Iowa. https://t.co/rNV1SOgqeb", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 2339, "source": "TweetDeck", "id_str": "694623214283182082", "is_retweet": false}, {"created_at": "Mon Jan 04 17:34:04 +0000 2016", "text": "\u201cI'm a little feminist growing up to help all women with equal rights.\u201d Olivia joins the volunteer team at HQ.\nhttps://t.co/JQfqLV5TRa", "in_reply_to_screen_name": null, "retweet_count": 463, "favorite_count": 1137, "source": "Twitter Web Client", "id_str": "684065270529327105", "is_retweet": false}, {"created_at": "Thu Jun 02 17:41:08 +0000 2016", "text": "There's only one word for Trump's approach to foreign policy and national security: chaos.\nhttps://t.co/Sx9s6NAGmr", "in_reply_to_screen_name": null, "retweet_count": 2000, "favorite_count": 3230, "source": "Twitter Web Client", "id_str": "738425229584666624", "is_retweet": false}, {"created_at": "Thu May 12 18:11:02 +0000 2016", "text": "Trump stood by his proposed Muslim ban just last week. Now he's trying to backpedal. Don't let him.\nhttps://t.co/rILrbZpIrJ", "in_reply_to_screen_name": null, "retweet_count": 2146, "favorite_count": 3168, "source": "Twitter Web Client", "id_str": "730822607444922368", "is_retweet": false}, {"created_at": "Tue Jul 26 21:14:13 +0000 2016", "text": "\u201cSome people want to rant, but Hillary wants to get results.\u201d \u2014@SenatorBarb #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 2981, "source": "TweetDeck", "id_str": "758047795945279488", "is_retweet": false}, {"created_at": "Tue Oct 18 22:58:09 +0000 2016", "text": "The fate of the Supreme Court hinges on the choice we make in 21 days. Here's what's at stake: https://t.co/5fbqR2mDy2", "in_reply_to_screen_name": null, "retweet_count": 1748, "favorite_count": 4083, "source": "TweetDeck", "id_str": "788514533987979266", "is_retweet": false}, {"created_at": "Fri Oct 07 20:55:13 +0000 2016", "text": "This is horrific. We cannot allow this man to become president. https://t.co/RwhW7yeFI2", "in_reply_to_screen_name": null, "retweet_count": 47139, "favorite_count": 90609, "source": "TweetDeck", "id_str": "784497331647422464", "is_retweet": false}, {"created_at": "Thu Oct 20 21:27:26 +0000 2016", "text": "\"He thinks we should be afraid of our Muslim brothers and sisters\u2014because he has no idea who they really are.\" \u2014@FLOTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 653, "favorite_count": 1722, "source": "TweetDeck", "id_str": "789216480512643076", "is_retweet": false}, {"created_at": "Tue Feb 02 21:32:15 +0000 2016", "text": "Ruline, this means the world to me. https://t.co/AnRI2IHQ1d -H https://t.co/VenRDds8Qa", "in_reply_to_screen_name": null, "retweet_count": 442, "favorite_count": 1259, "source": "TweetDeck", "id_str": "694634458788544513", "is_retweet": false}, {"created_at": "Sat Jan 16 02:02:05 +0000 2016", "text": "Text BACKSTAGE to 47246 to get behind-the-scenes updates from Hillary as she gets ready for #DemDebate on Sunday. https://t.co/Wpt9f5KJOs", "in_reply_to_screen_name": null, "retweet_count": 469, "favorite_count": 1498, "source": "TweetDeck", "id_str": "688179385833144321", "is_retweet": false}, {"created_at": "Sat Aug 20 17:12:16 +0000 2016", "text": "Let's send Donald Trump a message in November: We're not going back. https://t.co/85ovKr3y2x", "in_reply_to_screen_name": null, "retweet_count": 3892, "favorite_count": 11473, "source": "TweetDeck", "id_str": "767046604041912320", "is_retweet": false}, {"created_at": "Thu Jan 28 20:23:14 +0000 2016", "text": "Predatory drug pricing is unjustified.\nIt is wrong.\nAnd it needs to stop. https://t.co/yjQzICSBxU", "in_reply_to_screen_name": null, "retweet_count": 346, "favorite_count": 737, "source": "TweetDeck", "id_str": "692805153397854208", "is_retweet": false}, {"created_at": "Tue Sep 27 02:30:00 +0000 2016", "text": "Donald Trump's \"cavalier attitude about nuclear weapons is so deeply troubling.\u201d #DebateNight https://t.co/z66rUZz31J", "in_reply_to_screen_name": null, "retweet_count": 4998, "favorite_count": 13142, "source": "TweetDeck", "id_str": "780595314210267137", "is_retweet": false}, {"created_at": "Fri Aug 05 23:41:11 +0000 2016", "text": "RT @HFA: Ready for the opening ceremony. U.S.A! U.S.A! https://t.co/zcDofsiIcJ", "in_reply_to_screen_name": null, "retweet_count": 1002, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "761708660452122624", "is_retweet": true}, {"created_at": "Thu Oct 20 01:40:53 +0000 2016", "text": "RT @TheBriefing2016: Here's how easy it would be for Donald Trump to launch a nuclear weapon on a whim. #debatenight https://t.co/iz5idvX94b", "in_reply_to_screen_name": null, "retweet_count": 663, "favorite_count": 0, "source": "TweetDeck", "id_str": "788917874521931776", "is_retweet": true}, {"created_at": "Tue Sep 13 02:03:46 +0000 2016", "text": "Only one candidate in this race has a plan to tackle these issues. See how her plan would help you: https://t.co/tdZGd8KJq3", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 758, "favorite_count": 2014, "source": "TweetDeck", "id_str": "775515283884740608", "is_retweet": false}, {"created_at": "Sat Oct 22 18:16:32 +0000 2016", "text": "\"Hillary Clinton is not just the only safe choice in this election \u2014 she\u2019s also the right choice.\" \u2014@BostonGlobe https://t.co/bpKDV6bJVU", "in_reply_to_screen_name": null, "retweet_count": 2691, "favorite_count": 7649, "source": "TweetDeck", "id_str": "789893216359346177", "is_retweet": false}, {"created_at": "Sat Jan 16 18:52:33 +0000 2016", "text": ".@POTUS wants to require universal background checks and hold gun manufacturers accountable. If you agree, sign on: https://t.co/S4lmtQMEtb", "in_reply_to_screen_name": null, "retweet_count": 526, "favorite_count": 1525, "source": "TweetDeck", "id_str": "688433674212257792", "is_retweet": false}, {"created_at": "Wed Sep 28 19:21:43 +0000 2016", "text": "RT @BernieSanders: I want young people to leave school excited about the future, not being saddled with tens of thousands of dollars in stu\u2026", "in_reply_to_screen_name": null, "retweet_count": 3796, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781212309486202880", "is_retweet": true}, {"created_at": "Thu Jul 28 01:17:15 +0000 2016", "text": "\"Everybody knows she\u2019s smart.\nEverybody knows she\u2019s tough.\n\nBut I know what she\u2019s passionate about\u2014I know Hillary.\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 891, "favorite_count": 3032, "source": "TweetDeck", "id_str": "758471347626541056", "is_retweet": false}, {"created_at": "Mon Aug 01 21:27:53 +0000 2016", "text": "Cheryl's husband died serving our country. \n\nTrump's company scammed her out of money she needed for her family. https://t.co/gfMeiJZ3DW", "in_reply_to_screen_name": null, "retweet_count": 5505, "favorite_count": 9172, "source": "TweetDeck", "id_str": "760225566318555140", "is_retweet": false}, {"created_at": "Tue Sep 27 01:56:13 +0000 2016", "text": "Donald Trump is more concerned with pandering to the gun lobby than keeping families safe. #DebateNight https://t.co/LspcUJNUc5", "in_reply_to_screen_name": null, "retweet_count": 7384, "favorite_count": 14322, "source": "TweetDeck", "id_str": "780586814126034945", "is_retweet": false}, {"created_at": "Thu Oct 13 16:54:10 +0000 2016", "text": "\"No one could be more qualified for this job than Hillary, no one.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 780, "favorite_count": 2119, "source": "TweetDeck", "id_str": "786610994734850048", "is_retweet": false}, {"created_at": "Sat Oct 15 21:55:25 +0000 2016", "text": "A conversation with Hillary's best friend Betsy about breakups, prom dates, and skateboards: https://t.co/fXiEv1GW1L", "in_reply_to_screen_name": null, "retweet_count": 1829, "favorite_count": 7217, "source": "Media Studio", "id_str": "787411583664140288", "is_retweet": false}, {"created_at": "Sat Jan 30 23:38:56 +0000 2016", "text": "\u201cI will get up every single day and keep fighting for the kind of America we all want and deserve for our kids.\u201d https://t.co/ODncIYE8wH", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 3760, "source": "TweetDeck", "id_str": "693579178189426693", "is_retweet": false}, {"created_at": "Thu Oct 20 21:19:55 +0000 2016", "text": "\"Decent men do not demean women, and we shouldn't tolerate this behavior from any man, let alone a man who wants to be president.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1191, "favorite_count": 2523, "source": "TweetDeck", "id_str": "789214587069534208", "is_retweet": false}, {"created_at": "Tue Oct 11 19:43:53 +0000 2016", "text": "The choice we face on climate change. https://t.co/ZbNvMcFwyr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 707, "favorite_count": 1479, "source": "TweetDeck", "id_str": "785928929764925440", "is_retweet": false}, {"created_at": "Wed Sep 28 19:37:39 +0000 2016", "text": "We should make public colleges tuition-free for working families and debt-free for everyone.", "in_reply_to_screen_name": null, "retweet_count": 2074, "favorite_count": 6646, "source": "TweetDeck", "id_str": "781216321484849152", "is_retweet": false}, {"created_at": "Sun May 01 20:16:35 +0000 2016", "text": "\"She\u2019s battle tested, she\u2019s got a dirty uniform, and that\u2019s who you want fighting for your kids\u2019 future.\u201d https://t.co/tQx1xcF3ew", "in_reply_to_screen_name": null, "retweet_count": 1235, "favorite_count": 2918, "source": "TweetDeck", "id_str": "726867935516565504", "is_retweet": false}, {"created_at": "Mon Apr 18 19:51:20 +0000 2016", "text": "To everyone in Houston, please stay safe and avoid traveling. Our prayers are with you. #HoustonFlood -H", "in_reply_to_screen_name": null, "retweet_count": 1206, "favorite_count": 2932, "source": "TweetDeck", "id_str": "722150542366085122", "is_retweet": false}, {"created_at": "Thu Feb 11 20:56:57 +0000 2016", "text": "\"More than anyone else in America today, she is prepared to be president...day one.\" \u2014@repjohnlewis\nhttps://t.co/DuD8KjI2BV", "in_reply_to_screen_name": null, "retweet_count": 1519, "favorite_count": 2198, "source": "Twitter Web Client", "id_str": "697887066059714560", "is_retweet": false}, {"created_at": "Fri Jul 22 03:33:25 +0000 2016", "text": "\"I\u2019m with you*\" \u2014@realDonaldTrump\n\n*Not included: women, African Americans, LGBT people, Muslims, Latinos, immigrants...", "in_reply_to_screen_name": null, "retweet_count": 30074, "favorite_count": 50546, "source": "TweetDeck", "id_str": "756331289037402112", "is_retweet": false}, {"created_at": "Thu Sep 15 01:00:50 +0000 2016", "text": "How will Trump guarantee that he'll put America's security over his own financial interests? https://t.co/xBHczp3xGg", "in_reply_to_screen_name": null, "retweet_count": 3858, "favorite_count": 6240, "source": "TweetDeck", "id_str": "776224222494527488", "is_retweet": false}, {"created_at": "Mon Oct 31 00:01:14 +0000 2016", "text": "\"Most of them deserved it.\" \u2014Donald Trump\n\nhttps://t.co/tTgeqxNqYm https://t.co/UjX7FYiLQo", "in_reply_to_screen_name": null, "retweet_count": 5845, "favorite_count": 9523, "source": "TweetDeck", "id_str": "792879062372982784", "is_retweet": false}, {"created_at": "Wed Sep 14 11:46:23 +0000 2016", "text": "Donald Trump's foundation allegedly paid off Florida's attorney general to prevent an investigation into his fraud. https://t.co/tCrtd6ab5h", "in_reply_to_screen_name": null, "retweet_count": 5310, "favorite_count": 8946, "source": "Twitter Web Client", "id_str": "776024291930411013", "is_retweet": false}, {"created_at": "Fri Sep 16 14:03:30 +0000 2016", "text": "Donald Trump looks at women and decides how their looks rate on a scale of one to 10.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2139, "favorite_count": 3509, "source": "TweetDeck", "id_str": "776783575375028224", "is_retweet": false}, {"created_at": "Fri Sep 30 16:21:12 +0000 2016", "text": "Every good thing that we\u2019ve ever achieved has always been because people have worked together to make it happen. https://t.co/ZxAsmgX6BH", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 481, "favorite_count": 1371, "source": "TweetDeck", "id_str": "781891655796453376", "is_retweet": false}, {"created_at": "Tue Oct 25 19:17:56 +0000 2016", "text": "Text JOIN to 47246 and get involved because the bigger the turnout, the bigger the statement we\u2019ll make about the kind of country we are.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 625, "favorite_count": 1673, "source": "TweetDeck", "id_str": "790995831700779009", "is_retweet": false}, {"created_at": "Fri Apr 01 22:04:21 +0000 2016", "text": "Candidates who support the assault on women's rights have no business being president. https://t.co/HlzSzuOACm", "in_reply_to_screen_name": null, "retweet_count": 3284, "favorite_count": 6515, "source": "TweetDeck", "id_str": "716023419834392577", "is_retweet": false}, {"created_at": "Thu May 19 15:46:17 +0000 2016", "text": "Donald Trump named 11 judges he would consider nominating to the Supreme Court.\n\nHere's what's at stake. https://t.co/Ft3TmCeeEA", "in_reply_to_screen_name": null, "retweet_count": 565, "favorite_count": 905, "source": "TweetDeck", "id_str": "733322896257515521", "is_retweet": false}, {"created_at": "Tue Feb 16 21:43:49 +0000 2016", "text": "\"White Americans need to do a better job of listening when African Americans talk about the seen &amp; unseen barriers that you face every day.\"", "in_reply_to_screen_name": null, "retweet_count": 1205, "favorite_count": 1902, "source": "TweetDeck", "id_str": "699710799200329728", "is_retweet": false}, {"created_at": "Tue Feb 16 21:04:56 +0000 2016", "text": "Watch live\u2014Hillary speaks about how we can combat systemic racism and break down barriers for black families: https://t.co/ouhkrXRaTS", "in_reply_to_screen_name": null, "retweet_count": 347, "favorite_count": 661, "source": "Twitter Web Client", "id_str": "699701016506327041", "is_retweet": false}, {"created_at": "Mon Mar 28 21:21:17 +0000 2016", "text": "\"If SCOTUS doesn\u2019t overturn Citizens United, I\u2019ll fight for a Constitutional amendment to limit influence of money in elections.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 946, "favorite_count": 2449, "source": "TweetDeck", "id_str": "714563034010628096", "is_retweet": false}, {"created_at": "Thu Jul 28 02:31:50 +0000 2016", "text": "RT @timkaine: Thousands of Trump University students believed Donald Trump when he said he would help them succeed.  \n\nThey all got stiffed.", "in_reply_to_screen_name": null, "retweet_count": 1219, "favorite_count": 0, "source": "TweetDeck", "id_str": "758490116859973633", "is_retweet": true}, {"created_at": "Wed Jul 06 16:38:46 +0000 2016", "text": "\"[@realDonaldTrump's] businesses were failing long before the rest of the town was struggling...his bad decisions hurt the whole city.\"", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1985, "source": "TweetDeck", "id_str": "750730721560502272", "is_retweet": false}, {"created_at": "Sat Aug 06 19:12:34 +0000 2016", "text": "Four years ago today. https://t.co/WPM1I9PPN3", "in_reply_to_screen_name": null, "retweet_count": 10766, "favorite_count": 18162, "source": "Twitter Web Client", "id_str": "762003451584745472", "is_retweet": false}, {"created_at": "Fri May 06 02:49:14 +0000 2016", "text": "This is the man the @GOP has selected to be their nominee for president. https://t.co/rm4BjlPhkk", "in_reply_to_screen_name": null, "retweet_count": 4685, "favorite_count": 6113, "source": "Twitter for iPhone", "id_str": "728416300872151040", "is_retweet": false}, {"created_at": "Fri Aug 05 16:48:19 +0000 2016", "text": "\u201cI believe with all my heart that America is better than this. America is better than Donald Trump.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2379, "favorite_count": 8049, "source": "TweetDeck", "id_str": "761604762030792704", "is_retweet": false}, {"created_at": "Mon Mar 28 21:06:18 +0000 2016", "text": "The ideological bent of the Supreme Court has led our country in the wrong direction\u2014stacking the deck in favor of the wealthy and powerful.", "in_reply_to_screen_name": null, "retweet_count": 608, "favorite_count": 1618, "source": "TweetDeck", "id_str": "714559260491915264", "is_retweet": false}, {"created_at": "Sat Jun 04 18:37:19 +0000 2016", "text": ".@lorellapraeli: HFA staffer. DREAMer. U.S. citizen. \n\nFirst time voter.\nhttps://t.co/zrTYJyvm5P", "in_reply_to_screen_name": null, "retweet_count": 1152, "favorite_count": 2521, "source": "Twitter Web Client", "id_str": "739164143823917058", "is_retweet": false}, {"created_at": "Fri Aug 19 23:45:16 +0000 2016", "text": "RT @MarlonDMarshall: Trump painting the entire African American community as living in poverty with no jobs shows he's completely out of to\u2026", "in_reply_to_screen_name": null, "retweet_count": 4345, "favorite_count": 0, "source": "TweetDeck", "id_str": "766783120167280640", "is_retweet": true}, {"created_at": "Wed Feb 24 02:31:12 +0000 2016", "text": "We need to make college affordable. We also need to lift the enormous burden of student debt that millions carry right now. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 2379, "source": "TweetDeck", "id_str": "702319836903428097", "is_retweet": false}, {"created_at": "Tue Aug 02 21:57:40 +0000 2016", "text": "RT @Dakota_Meyer: If @realDonaldTrump wants to be the Commander in Chief, he needs to act like one. And that cant start until he apologizes\u2026", "in_reply_to_screen_name": null, "retweet_count": 5355, "favorite_count": 0, "source": "TweetDeck", "id_str": "760595445588619264", "is_retweet": true}, {"created_at": "Tue Feb 23 16:00:40 +0000 2016", "text": "We shouldn't force families to choose between breaking apart or living in fear. https://t.co/jZQx2toJot", "in_reply_to_screen_name": null, "retweet_count": 477, "favorite_count": 981, "source": "TweetDeck", "id_str": "702161159328284673", "is_retweet": false}, {"created_at": "Mon Apr 25 16:06:35 +0000 2016", "text": "\"Ms. Clinton has advanced realistic, well thought out proposals.\" \u2014@BaltimoreSun: https://t.co/68uhWrwYmj https://t.co/srpUEWMZZg", "in_reply_to_screen_name": null, "retweet_count": 1034, "favorite_count": 2394, "source": "TweetDeck", "id_str": "724630697588211712", "is_retweet": false}, {"created_at": "Wed Sep 21 17:16:43 +0000 2016", "text": "Every student should be able to graduate from college without taking on any debt. https://t.co/1aWqDOKh7p https://t.co/KHguTDbKW9", "in_reply_to_screen_name": null, "retweet_count": 2274, "favorite_count": 5234, "source": "TweetDeck", "id_str": "778644136954036224", "is_retweet": false}, {"created_at": "Wed Feb 03 21:47:14 +0000 2016", "text": "2) Now, if you do want to make it about who's a \"real progressive,\" @BernieSanders, what were you on these days? https://t.co/8Q6hANYPhh", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1814, "favorite_count": 2033, "source": "TweetDeck", "id_str": "695000617308274689", "is_retweet": false}, {"created_at": "Tue Nov 08 06:13:13 +0000 2016", "text": "In America, we build bridges, not walls.\nLet\u2019s go out and prove that love trumps hate.\nhttps://t.co/jfd3CXLD1s https://t.co/VTl1jexKON", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4835, "favorite_count": 10365, "source": "TweetDeck", "id_str": "795871778769895425", "is_retweet": false}, {"created_at": "Sun Jan 31 20:46:18 +0000 2016", "text": "Follow Hillary on Instagram to see the family selfie! https://t.co/Z1vZhW7ADa", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 184, "favorite_count": 529, "source": "TweetDeck", "id_str": "693898120409845760", "is_retweet": false}, {"created_at": "Tue Sep 27 01:05:03 +0000 2016", "text": "Watch live: Hillary takes the stage for the first presidential debate \u2192 https://t.co/FbmDLQp03w #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 793, "favorite_count": 2135, "source": "TweetDeck", "id_str": "780573935582707712", "is_retweet": false}, {"created_at": "Tue Aug 16 19:08:14 +0000 2016", "text": "Last night, @allysonfelix won her 7th Olympic medal. Congrats to the most decorated woman in the history of @USATF! https://t.co/3LmdDx8iqn", "in_reply_to_screen_name": null, "retweet_count": 2274, "favorite_count": 9669, "source": "TweetDeck", "id_str": "765626239679946752", "is_retweet": false}, {"created_at": "Thu Sep 29 18:26:30 +0000 2016", "text": "We need to raise the minimum wage so nobody who works full-time is still in poverty: https://t.co/mPsFoen2KW", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 689, "favorite_count": 1551, "source": "TweetDeck", "id_str": "781560801840795648", "is_retweet": false}, {"created_at": "Thu Oct 20 02:15:58 +0000 2016", "text": "RT @timkaine: Donald won't commit to support our election outcome, won\u2019t condemn Putin, and won't defend American democracy. Yet he wants t\u2026", "in_reply_to_screen_name": null, "retweet_count": 12063, "favorite_count": 0, "source": "TweetDeck", "id_str": "788926702500122624", "is_retweet": true}, {"created_at": "Fri Sep 30 20:10:15 +0000 2016", "text": "\"My view is we are already great, and if we work together, we will become even greater in the years ahead.\u201d \u2014Hillary in Florida", "in_reply_to_screen_name": null, "retweet_count": 2426, "favorite_count": 8820, "source": "TweetDeck", "id_str": "781949300754571264", "is_retweet": false}, {"created_at": "Fri Sep 09 01:03:06 +0000 2016", "text": "Unlike Trump's, this plan to defeat ISIS isn\u2019t a \u201csecret.\u201d https://t.co/vJq6LUMuPW", "in_reply_to_screen_name": null, "retweet_count": 1151, "favorite_count": 3059, "source": "TweetDeck", "id_str": "774050466120409088", "is_retweet": false}, {"created_at": "Fri Oct 21 23:14:00 +0000 2016", "text": "\u201cIt\u2019s becoming clear that, to him, most of America is \u2018them.\u2019\u201d \u2014@FLOTUS on Donald Trump https://t.co/31JCixurBJ", "in_reply_to_screen_name": null, "retweet_count": 2771, "favorite_count": 7750, "source": "TweetDeck", "id_str": "789605688028827649", "is_retweet": false}, {"created_at": "Sun Jan 31 03:20:34 +0000 2016", "text": "\u201cMrs. Clinton has done her homework on pretty much any subject you\u2019d care to name.\u201d https://t.co/rgc1Zb5nSV", "in_reply_to_screen_name": null, "retweet_count": 1052, "favorite_count": 2604, "source": "Twitter for iPhone", "id_str": "693634950650789889", "is_retweet": false}, {"created_at": "Thu Oct 27 14:29:16 +0000 2016", "text": "\"Hillary Clinton is a distinctly capable candidate: experienced, serious, schooled, resilient.\" \u2014The @NewYorker\u2026 https://t.co/QSFiCVsefo", "in_reply_to_screen_name": null, "retweet_count": 2173, "favorite_count": 5747, "source": "TweetDeck", "id_str": "791647960190820352", "is_retweet": false}, {"created_at": "Fri Jul 29 02:52:43 +0000 2016", "text": "\"Simply caring is not enough. To drive real progress, you have to change both hearts and laws.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2886, "favorite_count": 6776, "source": "TweetDeck", "id_str": "758857758137397248", "is_retweet": false}, {"created_at": "Mon Aug 15 17:46:47 +0000 2016", "text": "\u201cThere\u2019s only one person in this election who will...help you, and that is Hillary Clinton.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 742, "favorite_count": 2698, "source": "TweetDeck", "id_str": "765243353520828416", "is_retweet": false}, {"created_at": "Tue Feb 09 12:00:55 +0000 2016", "text": "The New Hampshire primary is today! If you're with Hillary, let her know now: https://t.co/BSqdGMKcyb", "in_reply_to_screen_name": null, "retweet_count": 346, "favorite_count": 875, "source": "TweetDeck", "id_str": "697027392007761921", "is_retweet": false}, {"created_at": "Sat Nov 05 02:22:08 +0000 2016", "text": "\"Ohio, we are on the doorsteps of history.\n\nI'm here tonight because respect matters.\" \u2014@S_C_ https://t.co/BiMWwj4xvs", "in_reply_to_screen_name": null, "retweet_count": 2066, "favorite_count": 6616, "source": "TweetDeck", "id_str": "794726460695183360", "is_retweet": false}, {"created_at": "Thu Jul 07 23:42:03 +0000 2016", "text": "Too many African American families are mourning. Too many young black men and women have been taken from us. https://t.co/arkjOeLu7G", "in_reply_to_screen_name": null, "retweet_count": 7394, "favorite_count": 17095, "source": "TweetDeck", "id_str": "751199631728607232", "is_retweet": false}, {"created_at": "Thu Jul 21 02:48:26 +0000 2016", "text": "If you thought Donald Trump was going to pick a running mate who would appeal to moderates, think again. https://t.co/ZTYI5MnMYq", "in_reply_to_screen_name": null, "retweet_count": 3768, "favorite_count": 6326, "source": "TweetDeck", "id_str": "755957580703404032", "is_retweet": false}, {"created_at": "Fri Jul 29 02:46:03 +0000 2016", "text": "\"None of us can raise a family, build a business, heal a community or lift a country totally alone.\u201d \u2014Hillary #StrongerTogether", "in_reply_to_screen_name": null, "retweet_count": 2173, "favorite_count": 5569, "source": "TweetDeck", "id_str": "758856080793317378", "is_retweet": false}, {"created_at": "Wed Jun 29 12:53:39 +0000 2016", "text": "\"You are strong enough not to let yourself remain a victim.\" \u2014Hillary #CreatorsAskHRC\nhttps://t.co/yjMjjyKbrd", "in_reply_to_screen_name": null, "retweet_count": 1108, "favorite_count": 3415, "source": "Twitter Web Client", "id_str": "748137353298862080", "is_retweet": false}, {"created_at": "Sat May 28 19:55:52 +0000 2016", "text": "Some on the other side may say our best days are behind us. Let's prove them wrong. https://t.co/wiWY8WUVIh", "in_reply_to_screen_name": null, "retweet_count": 2154, "favorite_count": 6367, "source": "Twitter Web Client", "id_str": "736647194644713472", "is_retweet": false}, {"created_at": "Wed Apr 27 03:06:48 +0000 2016", "text": "Imagine a tomorrow where hard work is honored, families are supported, communities are strong, and love trumps hate.\nhttps://t.co/PaSVdd4MH6", "in_reply_to_screen_name": null, "retweet_count": 1647, "favorite_count": 3654, "source": "Twitter Web Client", "id_str": "725159230903218176", "is_retweet": false}, {"created_at": "Wed Nov 02 23:45:40 +0000 2016", "text": "Barack. Michelle. Joe. You?\n\nMake a plan to vote: https://t.co/alU46Pue6N", "in_reply_to_screen_name": null, "retweet_count": 1911, "favorite_count": 5894, "source": "TweetDeck", "id_str": "793962308871614465", "is_retweet": false}, {"created_at": "Mon Aug 15 19:36:26 +0000 2016", "text": "You oppose reproductive rights, support \"conversion therapy,\" and proposed a Muslim ban. https://t.co/H04wanQIub", "in_reply_to_screen_name": null, "retweet_count": 4981, "favorite_count": 9220, "source": "TweetDeck", "id_str": "765270946693382145", "is_retweet": false}, {"created_at": "Wed Sep 21 03:11:14 +0000 2016", "text": "Have student debt? \nPlanning for college?\nSee how much money Hillary's plan would save you:\nhttps://t.co/fiXgr6S3Ye https://t.co/B8PCks6yXL", "in_reply_to_screen_name": null, "retweet_count": 1728, "favorite_count": 3717, "source": "Twitter Web Client", "id_str": "778431365884833792", "is_retweet": false}, {"created_at": "Thu Oct 27 14:56:10 +0000 2016", "text": "Glad Secretary Carter did the right thing. Our men and women in uniform deserve our support and deepest gratitude,\u2026 https://t.co/59JRWpNFhi", "in_reply_to_screen_name": null, "retweet_count": 2636, "favorite_count": 8693, "source": "Twitter Web Client", "id_str": "791654727876505600", "is_retweet": false}, {"created_at": "Fri Sep 16 20:38:44 +0000 2016", "text": "Donald Trump spent five years lying about @POTUS's citizenship. He can\u2019t just take that back. https://t.co/HeafYwy0Fp", "in_reply_to_screen_name": null, "retweet_count": 5201, "favorite_count": 12156, "source": "Twitter Web Client", "id_str": "776883038651162624", "is_retweet": false}, {"created_at": "Sat Oct 15 17:07:23 +0000 2016", "text": "On Election Day, let's show what it means to be stronger together: https://t.co/tTgeqy51PU https://t.co/2F5bBWirme", "in_reply_to_screen_name": null, "retweet_count": 2482, "favorite_count": 7229, "source": "Media Studio", "id_str": "787339095676551168", "is_retweet": false}, {"created_at": "Wed Apr 06 16:47:34 +0000 2016", "text": "Refusing to serve LGBT people because of who they are is discrimination. End of story.\n https://t.co/mD5Jkq3gbA", "in_reply_to_screen_name": null, "retweet_count": 1936, "favorite_count": 3390, "source": "TweetDeck", "id_str": "717755641784352768", "is_retweet": false}, {"created_at": "Fri Jan 29 02:51:08 +0000 2016", "text": "There it is: the first candidate at #GOPdebate bragging about defunding Planned Parenthood. We can't let them near the Oval Office.", "in_reply_to_screen_name": null, "retweet_count": 1085, "favorite_count": 2763, "source": "TweetDeck", "id_str": "692902770865803264", "is_retweet": false}, {"created_at": "Tue Feb 16 21:43:21 +0000 2016", "text": "\"Ending systemic racism requires contributions from all of us\u2014especially those of us who haven\u2019t experienced it ourselves.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 944, "favorite_count": 1479, "source": "TweetDeck", "id_str": "699710681403232256", "is_retweet": false}, {"created_at": "Sun Oct 09 21:02:33 +0000 2016", "text": "If you read one thing before tonight's debate, make it this: https://t.co/PjyLJnfQrG", "in_reply_to_screen_name": null, "retweet_count": 2145, "favorite_count": 4821, "source": "TweetDeck", "id_str": "785223951534415876", "is_retweet": false}, {"created_at": "Tue Nov 08 02:32:03 +0000 2016", "text": "\u201cLet\u2019s make history!\u201d \u2014Hillary https://t.co/33JmMKRfR4", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 9144, "favorite_count": 20135, "source": "TweetDeck", "id_str": "795816121173741568", "is_retweet": false}, {"created_at": "Fri Jul 22 02:28:04 +0000 2016", "text": "RT @TheBriefing2016: Trump is just wrong about crime. #RNCInCLE  https://t.co/fQ6T44p78q https://t.co/E3ZBPqmF5Q", "in_reply_to_screen_name": null, "retweet_count": 1921, "favorite_count": 0, "source": "TweetDeck", "id_str": "756314843376918528", "is_retweet": true}, {"created_at": "Fri Sep 30 14:53:12 +0000 2016", "text": "What kind of man stays up all night to smear a woman with lies and conspiracy theories?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 12291, "favorite_count": 29137, "source": "TweetDeck", "id_str": "781869512983515136", "is_retweet": false}, {"created_at": "Sun Feb 14 03:15:06 +0000 2016", "text": "Demonizing immigrants, dangerous foreign policy proposals, and nonstop bickering\u2014no need to live-tweet #GOPdebate. We've seen enough.", "in_reply_to_screen_name": null, "retweet_count": 1816, "favorite_count": 4315, "source": "TweetDeck", "id_str": "698707008946622465", "is_retweet": false}, {"created_at": "Fri May 13 23:55:03 +0000 2016", "text": "Donald Trump wants to spend $3 trillion (yes, with a T) on tax cuts for people like him. https://t.co/UjYpjnCK8W https://t.co/Kn5Adb8w3X", "in_reply_to_screen_name": null, "retweet_count": 2218, "favorite_count": 2777, "source": "TweetDeck", "id_str": "731271572191842304", "is_retweet": false}, {"created_at": "Fri Jan 01 19:22:38 +0000 2016", "text": "94% of our fourth quarter donations were $100 or less, and more than 60% of donors were women.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 568, "favorite_count": 1292, "source": "TweetDeck", "id_str": "683005429635497985", "is_retweet": false}, {"created_at": "Tue Nov 08 16:18:24 +0000 2016", "text": "Already voted? That's great! Now help Hillary win by signing up to make calls now: https://t.co/2yc00omuvC", "in_reply_to_screen_name": null, "retweet_count": 1494, "favorite_count": 4320, "source": "TweetDeck", "id_str": "796024078993911808", "is_retweet": false}, {"created_at": "Thu Mar 10 15:19:46 +0000 2016", "text": "America grows when American workers\u2019 paychecks grow.", "in_reply_to_screen_name": null, "retweet_count": 818, "favorite_count": 1989, "source": "TweetDeck", "id_str": "707949070913040385", "is_retweet": false}, {"created_at": "Tue Sep 27 01:21:24 +0000 2016", "text": "We can step up and confront climate change, save our planet, and invest in clean energy. \n\nOr, we can do nothing.\u2026 https://t.co/U29h8UaYZP", "in_reply_to_screen_name": null, "retweet_count": 2745, "favorite_count": 6153, "source": "TweetDeck", "id_str": "780578052216676352", "is_retweet": false}, {"created_at": "Wed Oct 12 16:35:35 +0000 2016", "text": "RT @nicholaskitchel: Cecil is first in line to vote in Mahoning County: \"I wouldn't miss this because so many people fought for the right t\u2026", "in_reply_to_screen_name": null, "retweet_count": 2771, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786243931897856000", "is_retweet": true}, {"created_at": "Mon Oct 10 16:07:01 +0000 2016", "text": "RT @POTUS: Just like Michelle says, when they go low, we go high. @HillaryClinton went high and showed why she'll be a POTUS for all Americ\u2026", "in_reply_to_screen_name": null, "retweet_count": 26668, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785511966899052544", "is_retweet": true}, {"created_at": "Thu Aug 25 19:32:25 +0000 2016", "text": "Trump hired the head of Breitbart \"News\" to be CEO of his campaign. Here's a sample of their work: https://t.co/y8loOnkbNu", "in_reply_to_screen_name": null, "retweet_count": 12737, "favorite_count": 15978, "source": "TweetDeck", "id_str": "768893816053071872", "is_retweet": false}, {"created_at": "Wed Apr 27 22:15:14 +0000 2016", "text": "Yikes. https://t.co/iueuFgzGod", "in_reply_to_screen_name": null, "retweet_count": 812, "favorite_count": 1614, "source": "TweetDeck", "id_str": "725448246873755648", "is_retweet": false}, {"created_at": "Fri Mar 25 18:00:19 +0000 2016", "text": "When it comes to terrorism, we know what doesn\u2019t work (bluster and bigotry) and what does (steady leadership). https://t.co/IMvo4YQk1a", "in_reply_to_screen_name": null, "retweet_count": 1136, "favorite_count": 2676, "source": "TweetDeck", "id_str": "713425294179184640", "is_retweet": false}, {"created_at": "Fri Sep 16 13:51:53 +0000 2016", "text": "\"To drive real progress, you have to change both hearts and laws. You need both understanding and action.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 528, "favorite_count": 1252, "source": "TweetDeck", "id_str": "776780651454468096", "is_retweet": false}, {"created_at": "Sun May 08 14:02:38 +0000 2016", "text": "Happy Mother's Day to Charlotte's mom, and my wonderful daughter, @ChelseaClinton. -H https://t.co/tm3zS1jSRv", "in_reply_to_screen_name": null, "retweet_count": 2049, "favorite_count": 11700, "source": "Twitter Web Client", "id_str": "729310545480957952", "is_retweet": false}, {"created_at": "Tue Aug 30 23:16:48 +0000 2016", "text": "Trump loves his \"Make America Great Again\" hat a lot for a guy who outsourced jobs to 12 different countries. https://t.co/5MZTsOgYR9", "in_reply_to_screen_name": null, "retweet_count": 3894, "favorite_count": 7348, "source": "TweetDeck", "id_str": "770762224289841152", "is_retweet": false}, {"created_at": "Sat Oct 15 15:03:29 +0000 2016", "text": "\"Don't fall for the easy cynicism that says your vote doesn't matter...Your vote matters.\" \u2014@POTUS\u2026 https://t.co/67EeEIpEhy", "in_reply_to_screen_name": null, "retweet_count": 2683, "favorite_count": 6846, "source": "TweetDeck", "id_str": "787307915560574976", "is_retweet": false}, {"created_at": "Mon Feb 01 22:46:58 +0000 2016", "text": "The problems that are holding American families back are serious, they are urgent, and they call for real solutions.", "in_reply_to_screen_name": null, "retweet_count": 345, "favorite_count": 788, "source": "TweetDeck", "id_str": "694290873102815232", "is_retweet": false}, {"created_at": "Sun Jun 19 23:28:40 +0000 2016", "text": "Shirley was 5 years old when women won the right to vote. Today, she's rooting for the first woman president. https://t.co/azwiTfH9th", "in_reply_to_screen_name": null, "retweet_count": 1472, "favorite_count": 4422, "source": "TweetDeck", "id_str": "744673284059439104", "is_retweet": false}, {"created_at": "Wed Jul 27 02:31:58 +0000 2016", "text": "\"It was the greatest moment of my life...and the...conviction that my daughter had the best mother in the world\u201d \u2014Bill on Chelsea being born", "in_reply_to_screen_name": null, "retweet_count": 1236, "favorite_count": 5676, "source": "TweetDeck", "id_str": "758127762871902209", "is_retweet": false}, {"created_at": "Wed Oct 05 04:06:16 +0000 2016", "text": "RT @timkaine: Let's show the world that we're standing together. Chip in now: https://t.co/MXUeo6Jwxa #VPDebate https://t.co/kCmymMxz7d", "in_reply_to_screen_name": null, "retweet_count": 1049, "favorite_count": 0, "source": "TweetDeck", "id_str": "783518642872913920", "is_retweet": true}, {"created_at": "Wed May 04 18:25:43 +0000 2016", "text": "\"He's a loose cannon, and loose cannons tend to misfire.\" \u2014Hillary on @realDonaldTrump: https://t.co/lK8TyiTz2x", "in_reply_to_screen_name": null, "retweet_count": 781, "favorite_count": 1349, "source": "TweetDeck", "id_str": "727927199249092608", "is_retweet": false}, {"created_at": "Wed Oct 26 02:56:40 +0000 2016", "text": "In the 1970s, Trump's real estate company marked rental applications for African Americans with a \"C\" for \"colored.\" https://t.co/5FT8YQiU0g", "in_reply_to_screen_name": null, "retweet_count": 3192, "favorite_count": 5200, "source": "TweetDeck", "id_str": "791111272330854401", "is_retweet": false}, {"created_at": "Wed Jan 06 20:10:09 +0000 2016", "text": "Happy birthday, Kate McKinnon! The feeling's mutual. https://t.co/0xMZelxVkV", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 4173, "source": "TweetDeck", "id_str": "684829324457934849", "is_retweet": false}, {"created_at": "Sat Aug 06 18:41:07 +0000 2016", "text": "RT @HFA: Here's the story behind our campaign's first braille button: https://t.co/xbiY2gaPB5.", "in_reply_to_screen_name": null, "retweet_count": 1222, "favorite_count": 0, "source": "TweetDeck", "id_str": "761995535389691904", "is_retweet": true}, {"created_at": "Sat Oct 29 19:29:11 +0000 2016", "text": "\u201cThe Director owes it to the American people to immediately provide the full details of what he is now examining.\u201d https://t.co/WTjQMwALV9", "in_reply_to_screen_name": null, "retweet_count": 6877, "favorite_count": 15033, "source": "TweetDeck", "id_str": "792448213852848128", "is_retweet": false}, {"created_at": "Thu Jan 21 22:50:37 +0000 2016", "text": "\"Women need more than a vote or a supportive statement; we need a fighter in the White House.\" \u2014@cecilerichards https://t.co/IO9vVzNtNg", "in_reply_to_screen_name": null, "retweet_count": 695, "favorite_count": 1476, "source": "TweetDeck", "id_str": "690305525469331458", "is_retweet": false}, {"created_at": "Fri Nov 04 22:51:16 +0000 2016", "text": "For 30 years, @JoeBiden has known Hillary as a public servant, global leader, and friend. Here's why he's with her: https://t.co/dlzPfoxGGx", "in_reply_to_screen_name": null, "retweet_count": 2596, "favorite_count": 7437, "source": "TweetDeck", "id_str": "794673397104050176", "is_retweet": false}, {"created_at": "Thu Feb 18 02:31:11 +0000 2016", "text": "Thankful for @Pontifex's visit to the border and call for immigration reform. We need to keep families together, not break them apart.", "in_reply_to_screen_name": null, "retweet_count": 1456, "favorite_count": 2644, "source": "TweetDeck", "id_str": "700145508657074177", "is_retweet": false}, {"created_at": "Thu Apr 21 23:08:26 +0000 2016", "text": "It isn't enough to just say we support equal pay for women. We have to do everything we can to make it a reality.\nhttps://t.co/okNk0RDPmi", "in_reply_to_screen_name": null, "retweet_count": 1406, "favorite_count": 3172, "source": "Twitter Web Client", "id_str": "723287308171005952", "is_retweet": false}, {"created_at": "Mon Aug 15 18:03:24 +0000 2016", "text": "\u201cShe\u2019s strong. She\u2019s respected. She\u2019s admired. There\u2019s nothing that she doesn\u2019t understand about America\u2019s place in the world.\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 1483, "favorite_count": 4900, "source": "TweetDeck", "id_str": "765247533727834112", "is_retweet": false}, {"created_at": "Thu Jun 09 18:27:53 +0000 2016", "text": "Delete your account. https://t.co/Oa92sncRQY", "in_reply_to_screen_name": null, "retweet_count": 571016, "favorite_count": 726837, "source": "TweetDeck", "id_str": "740973710593654784", "is_retweet": false}, {"created_at": "Fri Mar 11 03:38:25 +0000 2016", "text": ".@realDonaldTrump: condoning violence against protesters and press at your rallies is the real disgrace. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 5088, "favorite_count": 9408, "source": "TweetDeck", "id_str": "708134958888591360", "is_retweet": false}, {"created_at": "Thu Aug 25 19:22:22 +0000 2016", "text": "In 2015, Trump launched his own campaign for president by describing Mexican immigrants as rapists and criminals. https://t.co/uSSd7XigYp", "in_reply_to_screen_name": null, "retweet_count": 1823, "favorite_count": 3122, "source": "TweetDeck", "id_str": "768891287303032833", "is_retweet": false}, {"created_at": "Mon Mar 28 21:23:29 +0000 2016", "text": "\u201cI will appoint justices...who will protect a woman\u2019s right to choose, rather than billionaires\u2019 right to buy elections.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1259, "favorite_count": 3257, "source": "TweetDeck", "id_str": "714563584110538757", "is_retweet": false}, {"created_at": "Mon Jun 06 17:54:11 +0000 2016", "text": "\"Hillary Clinton is the better candidate to take on Trump\" \u2014@latimes https://t.co/0OmE5v8IK7", "in_reply_to_screen_name": null, "retweet_count": 943, "favorite_count": 2395, "source": "TweetDeck", "id_str": "739878064730046464", "is_retweet": false}, {"created_at": "Wed Apr 20 19:01:59 +0000 2016", "text": "\"No more families should have to go through what we have.\" \u2014@EricaSmegs, daughter of Sandy Hook School principal\nhttps://t.co/DCVzc2qV9A", "in_reply_to_screen_name": null, "retweet_count": 1103, "favorite_count": 2411, "source": "Twitter Web Client", "id_str": "722862897710239744", "is_retweet": false}, {"created_at": "Tue Sep 27 21:35:28 +0000 2016", "text": "This election is too important to sit out. Go to https://t.co/tTgeqxNqYm and make sure you're registered. #NationalVoterRegistrationDay -H", "in_reply_to_screen_name": null, "retweet_count": 2026, "favorite_count": 4451, "source": "TweetDeck", "id_str": "780883582051123200", "is_retweet": false}, {"created_at": "Thu Jul 28 01:20:13 +0000 2016", "text": "\"His lack of empathy and compassion can be summed up in the phrase\u2026he\u2019s proud he made famous\u2014'you\u2019re fired.'\" \u2014@JoeBiden on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 1714, "favorite_count": 4548, "source": "TweetDeck", "id_str": "758472094778847233", "is_retweet": false}, {"created_at": "Thu Sep 08 00:26:51 +0000 2016", "text": "RT @TheBriefing2016: Unlike her opponent, Hillary's plan to defeat ISIS is not a secret. #NBCNewsForum https://t.co/oD3OtTss9z", "in_reply_to_screen_name": null, "retweet_count": 726, "favorite_count": 0, "source": "TweetDeck", "id_str": "773678952992894977", "is_retweet": true}, {"created_at": "Sun Oct 16 19:25:38 +0000 2016", "text": "RT @POTUS: For a century, Planned Parenthood has made it possible for women to determine their own lives. Here's to another #100YearsStrong.", "in_reply_to_screen_name": null, "retweet_count": 35861, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787736276925616128", "is_retweet": true}, {"created_at": "Tue Jun 14 16:39:38 +0000 2016", "text": "Trump's Muslim ban is wrong, dangerous, and in this instance, nonsensical. The terrorist in Orlando was born in Queens\u2014just like Donald.", "in_reply_to_screen_name": null, "retweet_count": 10511, "favorite_count": 18264, "source": "TweetDeck", "id_str": "742758405845176320", "is_retweet": false}, {"created_at": "Thu Nov 03 05:06:09 +0000 2016", "text": "They did it! 108 years later and the drought is finally over. Way to make history, @Cubs. #FlyTheW -H", "in_reply_to_screen_name": null, "retweet_count": 14646, "favorite_count": 59460, "source": "Twitter Web Client", "id_str": "794042961994596353", "is_retweet": false}, {"created_at": "Tue Apr 12 17:53:11 +0000 2016", "text": "The average woman makes just $0.79 for every $1 a man earns.\n\nRT if you agree we have to fix that. #EqualPayDay https://t.co/woffArPvnl", "in_reply_to_screen_name": null, "retweet_count": 4472, "favorite_count": 5644, "source": "TweetDeck", "id_str": "719946478895120384", "is_retweet": false}, {"created_at": "Tue Sep 27 02:18:09 +0000 2016", "text": "\"I hope the fact-checkers are turning up the volume. Donald Trump supported the invasion of Iraq.\u201d https://t.co/CoyJtoyxd0", "in_reply_to_screen_name": null, "retweet_count": 6909, "favorite_count": 12542, "source": "TweetDeck", "id_str": "780592331368128512", "is_retweet": false}, {"created_at": "Mon Mar 28 21:47:57 +0000 2016", "text": "In 1982, #SCOTUS ruled that undocumented children had the right to go to school. https://t.co/N8LiRYQhg8", "in_reply_to_screen_name": null, "retweet_count": 743, "favorite_count": 1695, "source": "Twitter Web Client", "id_str": "714569744666353667", "is_retweet": false}, {"created_at": "Wed Aug 31 16:53:14 +0000 2016", "text": "American leadership means standing with our allies, because our network of allies is part of what makes us exceptional.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 629, "favorite_count": 1501, "source": "TweetDeck", "id_str": "771028083302289408", "is_retweet": false}, {"created_at": "Thu Sep 08 20:07:45 +0000 2016", "text": "7 ways Donald Trump proved he\u2019s not ready to be Commander-in-Chief (in less than 30 minutes): https://t.co/iwW6bqyxP5", "in_reply_to_screen_name": null, "retweet_count": 1292, "favorite_count": 2742, "source": "TweetDeck", "id_str": "773976139031252992", "is_retweet": false}, {"created_at": "Sun Sep 11 01:22:01 +0000 2016", "text": "RT @TheBriefing2016: .@ClintonFdn: 4/4 stars from @CharityNav\n\nTrump Fdn: Fined by the IRS for illegal political donation\nhttps://t.co/sVWB\u2026", "in_reply_to_screen_name": null, "retweet_count": 2168, "favorite_count": 0, "source": "TweetDeck", "id_str": "774779998553145344", "is_retweet": true}, {"created_at": "Wed Oct 12 20:32:17 +0000 2016", "text": "\u201cWe\u2019ve got to get the economy working for everybody, not just those at the top.\u201d \u2014Hillary https://t.co/GuEupxMKKY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 635, "favorite_count": 1621, "source": "TweetDeck", "id_str": "786303498518421504", "is_retweet": false}, {"created_at": "Thu Aug 04 21:53:10 +0000 2016", "text": "RT @kenvogel: Obama: \"I obviously have very strong opinions about the two candidates running. One is very positive. The other one is not so\u2026", "in_reply_to_screen_name": null, "retweet_count": 1306, "favorite_count": 0, "source": "TweetDeck", "id_str": "761319089822437376", "is_retweet": true}, {"created_at": "Sat Mar 05 18:14:25 +0000 2016", "text": "Flint families have waited long enough for the help they need. No more excuses\u2014the Senate should pass the bipartisan aid bill before it. -H", "in_reply_to_screen_name": null, "retweet_count": 1533, "favorite_count": 3223, "source": "TweetDeck", "id_str": "706181084728401921", "is_retweet": false}, {"created_at": "Sun Jul 10 23:38:31 +0000 2016", "text": "Our economy added 287,000 jobs last month\u2014just another reminder of how far we've come under @POTUS: https://t.co/MGqgy6oloe", "in_reply_to_screen_name": null, "retweet_count": 1757, "favorite_count": 3992, "source": "Twitter for iPhone", "id_str": "752285907168919552", "is_retweet": false}, {"created_at": "Tue Oct 25 01:43:28 +0000 2016", "text": "No one who wants to be Commander-in-Chief should be calling active military operations a \"disaster.\u201d https://t.co/YjLRFyfE4f", "in_reply_to_screen_name": null, "retweet_count": 2907, "favorite_count": 6744, "source": "TweetDeck", "id_str": "790730465175011328", "is_retweet": false}, {"created_at": "Sat Oct 22 21:27:35 +0000 2016", "text": "\u201cIf you can be president of the United States, you can do anything.\u201d \u2014@TimKaine\u2019s message to girls in America", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 639, "favorite_count": 1862, "source": "TweetDeck", "id_str": "789941292889432064", "is_retweet": false}, {"created_at": "Tue Oct 11 01:52:05 +0000 2016", "text": "\"Trump is the worst major-party candidate this republic has ever produced.\" \u2014@ForeignPolicy https://t.co/UdsK7rdqAy", "in_reply_to_screen_name": null, "retweet_count": 3595, "favorite_count": 10784, "source": "TweetDeck", "id_str": "785659202324889604", "is_retweet": false}, {"created_at": "Fri Apr 22 15:27:46 +0000 2016", "text": "Zika is a threat to public health &amp; we have to act now. Tell Congress to approve funding to address this crisis: https://t.co/KjmWMDOgDl -H", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 1149, "source": "TweetDeck", "id_str": "723533764052324353", "is_retweet": false}, {"created_at": "Thu Jan 07 02:00:06 +0000 2016", "text": "Planned Parenthood defunded and 3 more reasons a Republican president would be a nightmare for women's health: https://t.co/TCBGZY5ay2", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 1368, "source": "TweetDeck", "id_str": "684917395765489664", "is_retweet": false}, {"created_at": "Fri Aug 05 22:33:04 +0000 2016", "text": "Trump just said he \u201cdoesn\u2019t throw babies out\u201d of his rallies...\n\nLet\u2019s review the record.\nhttps://t.co/u3a8RDNNrr", "in_reply_to_screen_name": null, "retweet_count": 5232, "favorite_count": 10253, "source": "Twitter Web Client", "id_str": "761691520218955777", "is_retweet": false}, {"created_at": "Mon Oct 31 13:44:32 +0000 2016", "text": "RT @PostOpinions: Eric Holder: James Comey is a good man, but he made a serious mistake https://t.co/fcZwWUFG2G", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 0, "source": "TweetDeck", "id_str": "793086253948428288", "is_retweet": true}, {"created_at": "Mon Oct 10 03:23:34 +0000 2016", "text": "RT @jes_chastain: Im very proud of @HillaryClinton tonight. It was a very uncomfortable debate. When he went low, she went high. #imwithher\u2026", "in_reply_to_screen_name": null, "retweet_count": 6276, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785319835899232256", "is_retweet": true}, {"created_at": "Fri Feb 26 02:25:59 +0000 2016", "text": ".@POTUS is doing his job to fill the vacancy on the Supreme Court. @marcorubio, @tedcruz, and GOP senators should do theirs. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 1787, "source": "TweetDeck", "id_str": "703043302816354304", "is_retweet": false}, {"created_at": "Tue Sep 06 18:47:22 +0000 2016", "text": "In America, we don't say, \u201cI alone can fix it.\u201d\n\nWe say, \"We'll fix it together.\u201d https://t.co/rKkXeL6c5X", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 726, "favorite_count": 1504, "source": "TweetDeck", "id_str": "773231133727358976", "is_retweet": false}, {"created_at": "Wed Sep 28 01:19:46 +0000 2016", "text": "RT @azcentral: The Arizona Republic ed board has endorsed @HillaryClinton. See why: https://t.co/FqStTwkesL via @azcopinions #elections2016", "in_reply_to_screen_name": null, "retweet_count": 2256, "favorite_count": 0, "source": "TweetDeck", "id_str": "780940026867769344", "is_retweet": true}, {"created_at": "Fri Jan 01 19:19:49 +0000 2016", "text": "The numbers are in: In the fourth quarter, people gave more than $55 million\u2014$37M to the campaign, and $18M to the Democratic Party.", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 1298, "source": "TweetDeck", "id_str": "683004721645391873", "is_retweet": false}, {"created_at": "Fri Jul 29 02:32:20 +0000 2016", "text": "\"Bill, that conversation we started in the law library 45 years ago, it is still going strong.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1200, "favorite_count": 4969, "source": "TweetDeck", "id_str": "758852632207167488", "is_retweet": false}, {"created_at": "Wed Sep 28 20:10:47 +0000 2016", "text": "We are going to end the federal government making money off of lending money to get your education. https://t.co/mvPmTGWuzR", "in_reply_to_screen_name": null, "retweet_count": 1715, "favorite_count": 4656, "source": "TweetDeck", "id_str": "781224659643731968", "is_retweet": false}, {"created_at": "Sat Oct 22 02:51:28 +0000 2016", "text": "Enter now for your once-in-a-lifetime chance to fly for free with Hillary on the official campaign plane: https://t.co/etGzuSlodX", "in_reply_to_screen_name": null, "retweet_count": 960, "favorite_count": 3968, "source": "Twitter for iPhone", "id_str": "789660412685975552", "is_retweet": false}, {"created_at": "Wed Sep 14 23:51:31 +0000 2016", "text": "Proud to have you on this team, @StephenCurry30. https://t.co/sBHOHU5dYn https://t.co/YcjQUb83qr", "in_reply_to_screen_name": null, "retweet_count": 2341, "favorite_count": 6559, "source": "TweetDeck", "id_str": "776206778749054976", "is_retweet": false}, {"created_at": "Mon Sep 19 16:12:15 +0000 2016", "text": "\u201cI\u2019m Hillary Clinton and I\u2019ve always approved this message.\u201d https://t.co/GgDeBBfoUm", "in_reply_to_screen_name": null, "retweet_count": 4690, "favorite_count": 11889, "source": "Twitter Web Client", "id_str": "777903138221109248", "is_retweet": false}, {"created_at": "Sat Feb 06 23:35:36 +0000 2016", "text": "Well done, @NYGovCuomo. LGBT kids don't need to be \"cured\" of anything.  https://t.co/YMkaFrjwIO", "in_reply_to_screen_name": null, "retweet_count": 732, "favorite_count": 1803, "source": "Twitter Web Client", "id_str": "696115051812487168", "is_retweet": false}, {"created_at": "Thu Sep 29 22:56:17 +0000 2016", "text": "\"Men and women.\nYoung and old.\nGay and straight.\nNative-born and immigrant.\n\nThat's who the hell we are.\"\u2026 https://t.co/Q1rZGtV3c1", "in_reply_to_screen_name": null, "retweet_count": 7601, "favorite_count": 17138, "source": "Media Studio", "id_str": "781628694997590017", "is_retweet": false}, {"created_at": "Sat Nov 05 01:11:03 +0000 2016", "text": "RT @dougmillsnyt: .@HillaryClinton with JAY Z and Beyonce in Cleveland before the concert. https://t.co/11IkkK8j8n", "in_reply_to_screen_name": null, "retweet_count": 7423, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794708572756185088", "is_retweet": true}, {"created_at": "Thu Aug 25 19:25:58 +0000 2016", "text": "When Donald Trump was asked about anti-Semitic slurs and death threats coming from his supporters, he refused to condemn them.", "in_reply_to_screen_name": null, "retweet_count": 1368, "favorite_count": 3318, "source": "TweetDeck", "id_str": "768892190248542208", "is_retweet": false}, {"created_at": "Tue Jul 05 19:47:41 +0000 2016", "text": "\"In America, we don\u2019t tear each other down, we lift each other up.\n\nWe build bridges, not walls.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1560, "favorite_count": 4141, "source": "TweetDeck", "id_str": "750415877456232448", "is_retweet": false}, {"created_at": "Mon Oct 10 02:38:35 +0000 2016", "text": "RT this if you're prouder than ever to be on Hillary's team. https://t.co/2m8BhIu29H #DebateNight https://t.co/Nh6ScMF0B4", "in_reply_to_screen_name": null, "retweet_count": 32006, "favorite_count": 36524, "source": "TweetDeck", "id_str": "785308517624385541", "is_retweet": false}, {"created_at": "Tue Oct 11 19:52:42 +0000 2016", "text": "We need to elect people up and down the ballot, at every level of government, who take climate change seriously and are ready to take it on.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1056, "favorite_count": 2731, "source": "TweetDeck", "id_str": "785931147821875201", "is_retweet": false}, {"created_at": "Wed May 25 22:16:53 +0000 2016", "text": "Donald Trump is fueling conspiracy theories out on the campaign trail. Can you imagine that in the Situation Room? https://t.co/rsXhqHxjeU", "in_reply_to_screen_name": null, "retweet_count": 1217, "favorite_count": 1990, "source": "TweetDeck", "id_str": "735595522506031105", "is_retweet": false}, {"created_at": "Tue Oct 04 02:10:07 +0000 2016", "text": "\"She is far and away the choice for the presidency of the United States in 2016.\" \u2014@NYDailyNews https://t.co/ocAedXTix2", "in_reply_to_screen_name": null, "retweet_count": 1842, "favorite_count": 5223, "source": "TweetDeck", "id_str": "783127024663683072", "is_retweet": false}, {"created_at": "Fri Oct 28 14:31:52 +0000 2016", "text": "RT @MoveOn: MUST WATCH: @AliciaKeys passionately makes the case for @HillaryClinton &amp; explains why she's chosen to #VoteLove in this new #M\u2026", "in_reply_to_screen_name": null, "retweet_count": 3622, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "792011003332534272", "is_retweet": true}, {"created_at": "Thu Sep 01 15:49:10 +0000 2016", "text": "RT @JoeBiden: We're fighting for the middle-class workers who make America great. Follow along as VP Biden is back in Ohio today. https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 920, "favorite_count": 0, "source": "TweetDeck", "id_str": "771374345281232896", "is_retweet": true}, {"created_at": "Mon May 30 13:20:31 +0000 2016", "text": "Our fallen heroes deserve our profound gratitude for giving their lives to protect our freedom, today and every day. #MemorialDay -H", "in_reply_to_screen_name": null, "retweet_count": 2984, "favorite_count": 7391, "source": "TweetDeck", "id_str": "737272479052365824", "is_retweet": false}, {"created_at": "Thu Jul 28 03:25:52 +0000 2016", "text": "\"We all need to get out and vote for Democrats up and down the ticket, and then hold them accountable until they get the job done.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3998, "favorite_count": 10192, "source": "TweetDeck", "id_str": "758503716223913984", "is_retweet": false}, {"created_at": "Fri Apr 22 20:58:58 +0000 2016", "text": "In ten years, we can generate enough renewable energy to power every home in America. #EarthDay\nhttps://t.co/k7EGD4G4dK", "in_reply_to_screen_name": null, "retweet_count": 1404, "favorite_count": 2776, "source": "Twitter Web Client", "id_str": "723617111466070018", "is_retweet": false}, {"created_at": "Sun Jan 17 16:25:07 +0000 2016", "text": "Millions of people like Angelina live with autism\u2014they and their families need our support.\nhttps://t.co/kRwaPedkFq", "in_reply_to_screen_name": null, "retweet_count": 777, "favorite_count": 1779, "source": "Twitter Web Client", "id_str": "688758962695442432", "is_retweet": false}, {"created_at": "Mon Jul 04 18:44:30 +0000 2016", "text": "Happy Fourth of July! Today let's celebrate the best of America\u2014our freedom, diversity, and the values we share. -H https://t.co/C6Mdt4iVg5", "in_reply_to_screen_name": null, "retweet_count": 3039, "favorite_count": 10820, "source": "Twitter Web Client", "id_str": "750037589118291968", "is_retweet": false}, {"created_at": "Fri Jul 29 02:11:19 +0000 2016", "text": "\"She always feels like there isn\u2019t a moment to lose because she knows that for that mother, for that family, there isn\u2019t.\u201d \u2014@ChelseaClinton", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 2638, "source": "TweetDeck", "id_str": "758847341361102849", "is_retweet": false}, {"created_at": "Mon Jul 25 01:01:33 +0000 2016", "text": "For more than a decade, @TimKaine's been leading the fight against the NRA\u2014right in their own backyard.\nhttps://t.co/oXpSCA43xG", "in_reply_to_screen_name": null, "retweet_count": 1823, "favorite_count": 5635, "source": "Twitter Web Client", "id_str": "757380230382178304", "is_retweet": false}, {"created_at": "Mon Nov 07 17:46:47 +0000 2016", "text": "This has to be our mission together\u2014doing everything we can to help all our kids, and every American, live up to their God-given potential.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 929, "favorite_count": 2391, "source": "TweetDeck", "id_str": "795683933140697089", "is_retweet": false}, {"created_at": "Fri Oct 28 16:50:11 +0000 2016", "text": "RT @HillaryforAZ: BREAKING: @HillaryClinton will return to Arizona on Wednesday! RSVP here: https://t.co/G4fr9DXFUK https://t.co/OvRtEP7fPS", "in_reply_to_screen_name": null, "retweet_count": 1170, "favorite_count": 0, "source": "TweetDeck", "id_str": "792045809177137155", "is_retweet": true}, {"created_at": "Wed Oct 05 02:21:16 +0000 2016", "text": "RT @timkaine: The Clinton Foundation has an A+ rating from Charity Watch.\n\nYesterday the Trump Foundation was ordered to stop fundraising i\u2026", "in_reply_to_screen_name": null, "retweet_count": 8245, "favorite_count": 0, "source": "TweetDeck", "id_str": "783492219839938560", "is_retweet": true}, {"created_at": "Tue Sep 27 01:59:34 +0000 2016", "text": "Still a complete lie. #DebateNight \nhttps://t.co/F8aCfIqYWs", "in_reply_to_screen_name": null, "retweet_count": 4454, "favorite_count": 7129, "source": "TweetDeck", "id_str": "780587655109181440", "is_retweet": false}, {"created_at": "Wed Aug 03 13:54:08 +0000 2016", "text": "If Trump is serious about \"making America great again,\" he should start by making his products in America.\nhttps://t.co/1VVoUbgAn3", "in_reply_to_screen_name": null, "retweet_count": 6706, "favorite_count": 13943, "source": "Twitter Web Client", "id_str": "760836150760050689", "is_retweet": false}, {"created_at": "Tue Sep 27 11:57:38 +0000 2016", "text": "Only one person on last night's stage is prepared to be Commander-in-Chief. Make sure she gets the chance:\u2026 https://t.co/o50AezGRrb", "in_reply_to_screen_name": null, "retweet_count": 6534, "favorite_count": 18064, "source": "TweetDeck", "id_str": "780738162880634880", "is_retweet": false}, {"created_at": "Fri May 06 01:21:45 +0000 2016", "text": "Volkswagen workers in TN are raising their voices for the rights they deserve. VW should meet them at the table. -H https://t.co/kQQTEXplGL", "in_reply_to_screen_name": null, "retweet_count": 842, "favorite_count": 1810, "source": "TweetDeck", "id_str": "728394286736261120", "is_retweet": false}, {"created_at": "Mon Aug 08 15:14:31 +0000 2016", "text": "When you're comparing Hillary's and Trump's economic plans, there are two numbers you need to know. https://t.co/GdanBYOMUz", "in_reply_to_screen_name": null, "retweet_count": 4170, "favorite_count": 9508, "source": "TweetDeck", "id_str": "762668316842401794", "is_retweet": false}, {"created_at": "Fri Sep 23 16:49:24 +0000 2016", "text": "\"She gives us hope for the future. She's our girl.\"  \u2014Roxie, co-owner of @MercersDairy, on Hillary https://t.co/s5zyaOBLXB", "in_reply_to_screen_name": null, "retweet_count": 2237, "favorite_count": 5846, "source": "Media Studio", "id_str": "779362039839887360", "is_retweet": false}, {"created_at": "Wed Feb 17 03:45:32 +0000 2016", "text": "These are not only issues of economic inequality\u2014they are also issues of racial inequality.\nhttps://t.co/PQf21DUWyc", "in_reply_to_screen_name": null, "retweet_count": 1151, "favorite_count": 2109, "source": "Twitter Web Client", "id_str": "699801830352523266", "is_retweet": false}, {"created_at": "Fri Aug 12 19:47:13 +0000 2016", "text": "LGBT kids are perfect the way they are. They deserve love and acceptance\u2014not bullying and violence. https://t.co/RXcjvISf3O", "in_reply_to_screen_name": null, "retweet_count": 7511, "favorite_count": 18077, "source": "Twitter Web Client", "id_str": "764186498044456961", "is_retweet": false}, {"created_at": "Thu Sep 15 18:13:51 +0000 2016", "text": "RT @timkaine: People have seen almost 40 years of tax returns from Hillary. One set from Trump really isn't too much to ask. https://t.co/K\u2026", "in_reply_to_screen_name": null, "retweet_count": 3533, "favorite_count": 0, "source": "TweetDeck", "id_str": "776484189977837568", "is_retweet": true}, {"created_at": "Mon Aug 15 12:31:18 +0000 2016", "text": "Trump says, \"I know more about ISIS than the generals do, believe me.\" \n\nYou know what? We don't.\nhttps://t.co/OynjnrpRbJ", "in_reply_to_screen_name": null, "retweet_count": 4642, "favorite_count": 9514, "source": "Twitter Web Client", "id_str": "765163960504950784", "is_retweet": false}, {"created_at": "Tue Feb 16 21:46:27 +0000 2016", "text": "\"When we come together\u2014all of us\u2014with a sense of shared purpose and shared humanity, we can solve any problem and heal any divide.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 800, "favorite_count": 1549, "source": "TweetDeck", "id_str": "699711465092202496", "is_retweet": false}, {"created_at": "Tue Sep 27 17:52:47 +0000 2016", "text": "When you work hard, you should not be living in poverty. https://t.co/86sTOCAkkq", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 716, "favorite_count": 1983, "source": "TweetDeck", "id_str": "780827541670076416", "is_retweet": false}, {"created_at": "Wed Sep 07 21:16:00 +0000 2016", "text": "RT @timkaine: RT if you believe Donald Trump's actions speak louder than his empty words. https://t.co/VcLIIDNQdJ", "in_reply_to_screen_name": null, "retweet_count": 4870, "favorite_count": 0, "source": "TweetDeck", "id_str": "773630924433068032", "is_retweet": true}, {"created_at": "Mon Jan 18 02:40:29 +0000 2016", "text": "\"I will go anywhere to meet with anyone at any time to find common ground.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 659, "favorite_count": 1549, "source": "TweetDeck", "id_str": "688913824532049920", "is_retweet": false}, {"created_at": "Mon Nov 07 00:49:38 +0000 2016", "text": "RT @HFA: A lot's changed since 1992. https://t.co/6JXiNkDU4n", "in_reply_to_screen_name": null, "retweet_count": 1213, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795427957837856768", "is_retweet": true}, {"created_at": "Fri Jul 29 03:47:20 +0000 2016", "text": "Thank you. https://t.co/zTgGmMfHQg", "in_reply_to_screen_name": null, "retweet_count": 10302, "favorite_count": 45166, "source": "TweetDeck", "id_str": "758871502590574594", "is_retweet": false}, {"created_at": "Mon Oct 10 19:50:53 +0000 2016", "text": "It\u2019s easy to get cynical about politics, but that\u2019s what the other side wants you to feel.\n\nProve them wrong: https://t.co/u72wraOmhX", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1083, "favorite_count": 3141, "source": "TweetDeck", "id_str": "785568304656224256", "is_retweet": false}, {"created_at": "Mon Oct 10 12:24:16 +0000 2016", "text": "If Trump stands by what he said about women as \u201clocker room talk,\u201d he's clearly not sorry. https://t.co/Uhw4795mA9", "in_reply_to_screen_name": null, "retweet_count": 11845, "favorite_count": 25561, "source": "Media Studio", "id_str": "785455909883568128", "is_retweet": false}, {"created_at": "Sat Jun 18 13:41:16 +0000 2016", "text": "On June 18, 1983, Sally Ride became the first American woman and first LGBT astronaut to go to space. https://t.co/tT08U2WiiW", "in_reply_to_screen_name": null, "retweet_count": 5869, "favorite_count": 15378, "source": "Twitter Web Client", "id_str": "744163071074140161", "is_retweet": false}, {"created_at": "Wed Aug 03 20:18:57 +0000 2016", "text": "Trump: \"I love war, in a certain way.\" https://t.co/fnY9NFRE3R", "in_reply_to_screen_name": null, "retweet_count": 1541, "favorite_count": 3415, "source": "TweetDeck", "id_str": "760932990583205888", "is_retweet": false}, {"created_at": "Sun Oct 09 17:58:15 +0000 2016", "text": "Hillary has earned nearly every newspaper endorsement of the general election. Here's why: https://t.co/Nl9hweC8jO", "in_reply_to_screen_name": null, "retweet_count": 2109, "favorite_count": 6205, "source": "TweetDeck", "id_str": "785177570002276354", "is_retweet": false}, {"created_at": "Wed Jun 01 15:45:50 +0000 2016", "text": "New documents confirm Trump \"University\" was a scam that preyed on families to make money. Caution\u2014may cause nausea. https://t.co/d2qYRLKsou", "in_reply_to_screen_name": null, "retweet_count": 2683, "favorite_count": 4261, "source": "TweetDeck", "id_str": "738033823464710144", "is_retweet": false}, {"created_at": "Fri Aug 26 13:17:06 +0000 2016", "text": "RT @Morning_Joe: .@HillaryClinton: From the start, Trump has built his campaign on prejudice and paranoia https://t.co/7iAKFenZLo", "in_reply_to_screen_name": null, "retweet_count": 1482, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "769161751795474432", "is_retweet": true}, {"created_at": "Tue Apr 12 19:58:35 +0000 2016", "text": "Women lose out on every paycheck\u2014and women of color feel it the most. It\u2019s time to close the pay gap. #EqualPayDay https://t.co/MaWQC9oqg9", "in_reply_to_screen_name": null, "retweet_count": 2657, "favorite_count": 4684, "source": "TweetDeck", "id_str": "719978036175773696", "is_retweet": false}, {"created_at": "Wed Apr 20 17:55:47 +0000 2016", "text": "A woman, a leader, and a freedom fighter. I can't think of a better choice for the $20 bill than Harriet Tubman: https://t.co/YcsZC4ZrKg -H", "in_reply_to_screen_name": null, "retweet_count": 3056, "favorite_count": 5830, "source": "TweetDeck", "id_str": "722846239335804928", "is_retweet": false}, {"created_at": "Fri Apr 29 20:29:50 +0000 2016", "text": "An entire deck of woman cards? Deal us in. https://t.co/W5AHQO70Br", "in_reply_to_screen_name": null, "retweet_count": 752, "favorite_count": 1818, "source": "TweetDeck", "id_str": "726146494542282752", "is_retweet": false}, {"created_at": "Wed Jul 06 16:35:47 +0000 2016", "text": "And the Trump Taj Mahal, which Donald called the 8th Wonder of the World, is bankrupt. It canceled workers' health insurance and pensions.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1149, "favorite_count": 2185, "source": "TweetDeck", "id_str": "750729972407468034", "is_retweet": false}, {"created_at": "Wed Apr 13 16:47:12 +0000 2016", "text": "Tune in to watch Hillary speak at @NationalAction on her plan to fight for environmental justice: https://t.co/rPbIl61Vp0", "in_reply_to_screen_name": null, "retweet_count": 256, "favorite_count": 601, "source": "TweetDeck", "id_str": "720292264552067073", "is_retweet": false}, {"created_at": "Thu Feb 04 04:00:47 +0000 2016", "text": "It is absolutely unconscionable to lose 33,000 Americans a year to gun violence. We are going to take on the gun lobby. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1083, "favorite_count": 2469, "source": "TweetDeck", "id_str": "695094625976127488", "is_retweet": false}, {"created_at": "Wed Mar 09 02:31:27 +0000 2016", "text": "Watch live: Hillary speaks after winning in Mississippi \u2192 https://t.co/OqeUISgB88", "in_reply_to_screen_name": null, "retweet_count": 343, "favorite_count": 824, "source": "TweetDeck", "id_str": "707393329965735936", "is_retweet": false}, {"created_at": "Tue Apr 19 02:39:58 +0000 2016", "text": "Every Republican presidential candidate would reverse @POTUS\u2019s executive actions on immigration. https://t.co/UejylRk2Qb #FightForFamilies", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 1242, "source": "TweetDeck", "id_str": "722253376206041088", "is_retweet": false}, {"created_at": "Tue Oct 25 00:52:28 +0000 2016", "text": "RT @HillaryforFL: As early voting begins in many counties in Florida, see how many Floridians have already voted. #EarlyVote4Her https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 939, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "790717628671201280", "is_retweet": true}, {"created_at": "Sat Mar 26 16:53:05 +0000 2016", "text": "Make sure your friends in AK, HI, and WA caucus for Hillary today! Send them a message with our friend finder: https://t.co/8myXocJ6u5", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 1653, "source": "TweetDeck", "id_str": "713770759789744128", "is_retweet": false}, {"created_at": "Mon Jun 27 19:29:15 +0000 2016", "text": "\"Every day, Donald Trump proves that he\u2019s not in this for the American people. He\u2019s in it for himself.\" \u2014Hillary https://t.co/4NIRN69Xp6", "in_reply_to_screen_name": null, "retweet_count": 1012, "favorite_count": 2532, "source": "TweetDeck", "id_str": "747512134876209153", "is_retweet": false}, {"created_at": "Fri Apr 15 22:59:22 +0000 2016", "text": "In 1992, 75% of New York's prison population came from seven neighborhoods in NYC. @EAFNYC is changing that.\nhttps://t.co/QoaXpigX7K", "in_reply_to_screen_name": null, "retweet_count": 852, "favorite_count": 1714, "source": "Twitter Web Client", "id_str": "721110695341731841", "is_retweet": false}, {"created_at": "Sat Sep 17 12:39:04 +0000 2016", "text": "It\u2019s time for Donald Trump to be held to the same standard of disclosure as any other major party nominee. https://t.co/UP93LCzURv", "in_reply_to_screen_name": null, "retweet_count": 4626, "favorite_count": 9012, "source": "TweetDeck", "id_str": "777124713575378944", "is_retweet": false}, {"created_at": "Tue Jul 19 15:13:18 +0000 2016", "text": "\"Nothing is more ridiculous than Trump's claim that he's the enemy of Wall Street.\" \u2014@BarneyFrank\nhttps://t.co/AXnllFHCTL", "in_reply_to_screen_name": null, "retweet_count": 2303, "favorite_count": 4808, "source": "Twitter Web Client", "id_str": "755420257125212161", "is_retweet": false}, {"created_at": "Sat Feb 27 22:02:00 +0000 2016", "text": "Just a few hours left to vote in the SC primary! Hillary is counting on you. Confirm your polling place and go vote: https://t.co/FDBAU8vMHH", "in_reply_to_screen_name": null, "retweet_count": 417, "favorite_count": 1172, "source": "Twitter Web Client", "id_str": "703701644987535361", "is_retweet": false}, {"created_at": "Tue Aug 30 17:52:03 +0000 2016", "text": "We're facing the highest suicide rate in 30 years. Let's make sure every family can access mental health treatment. https://t.co/wg0K9WXWuD", "in_reply_to_screen_name": null, "retweet_count": 2180, "favorite_count": 5345, "source": "TweetDeck", "id_str": "770680497697648640", "is_retweet": false}, {"created_at": "Wed Oct 05 00:38:28 +0000 2016", "text": "RT @timkaine: You're never too old to invite your parents to your #VPDebate. Tune in to watch at 9pm ET. https://t.co/BZeq351Quf", "in_reply_to_screen_name": null, "retweet_count": 1437, "favorite_count": 0, "source": "TweetDeck", "id_str": "783466351650279424", "is_retweet": true}, {"created_at": "Sun Jan 31 04:08:53 +0000 2016", "text": "\"Here\u2019s what I know about Hillary: She\u2019s the single best changemaker I\u2019ve ever met in my life.\" \u2014@billclinton https://t.co/V27iB2UO6v", "in_reply_to_screen_name": null, "retweet_count": 1129, "favorite_count": 2342, "source": "Twitter for iPhone", "id_str": "693647113192882176", "is_retweet": false}, {"created_at": "Thu Jul 21 21:35:27 +0000 2016", "text": "RT @JohnKasich: The only one to benefit by casting our commitment to NATO in doubt is Russia. #NATO #StandTogether", "in_reply_to_screen_name": null, "retweet_count": 1620, "favorite_count": 0, "source": "TweetDeck", "id_str": "756241204073857024", "is_retweet": true}, {"created_at": "Wed Aug 31 22:02:00 +0000 2016", "text": "Great news for North Carolinians. Let's make voting easier so every voice in our democracy can be heard. -H https://t.co/EK0ziD99rl", "in_reply_to_screen_name": null, "retweet_count": 3341, "favorite_count": 8602, "source": "TweetDeck", "id_str": "771105785996775424", "is_retweet": false}, {"created_at": "Thu Oct 20 02:57:47 +0000 2016", "text": "RT @Toure: Hillary wins another debate. She was strong and smart. Trump said nothing that hurt her and never sounded like he actually knows\u2026", "in_reply_to_screen_name": null, "retweet_count": 2295, "favorite_count": 0, "source": "TweetDeck", "id_str": "788937227237810176", "is_retweet": true}, {"created_at": "Tue Jul 26 01:37:02 +0000 2016", "text": "Watch live as @CoryBooker takes the stage at the #DemConvention: https://t.co/PW5q7YNIIC", "in_reply_to_screen_name": null, "retweet_count": 413, "favorite_count": 1953, "source": "TweetDeck", "id_str": "757751551955984384", "is_retweet": false}, {"created_at": "Tue Sep 13 01:58:46 +0000 2016", "text": "A quick search of Trump\u2019s website shows the top mentions of \u201cstudent debt\u201d and \u201ccollege\u201d are attacks\u2014not solutions. https://t.co/6H70vXs9c1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1228, "favorite_count": 2854, "source": "TweetDeck", "id_str": "775514025660653568", "is_retweet": false}, {"created_at": "Mon Sep 26 15:40:07 +0000 2016", "text": "\"Donald Trump is a man who dwells in bigotry, bluster and false promises.\" \u2014@NYTimes https://t.co/dGBX93R3PK #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 2568, "favorite_count": 5030, "source": "TweetDeck", "id_str": "780431767710928897", "is_retweet": false}, {"created_at": "Wed Aug 31 17:01:17 +0000 2016", "text": "The last thing we need is a president who brings more name-calling and temper tantrums to Washington.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 920, "favorite_count": 2007, "source": "TweetDeck", "id_str": "771030109922926592", "is_retweet": false}, {"created_at": "Fri Aug 12 20:22:10 +0000 2016", "text": "RT @TheBriefing2016: Wonder what Trump's hiding in his tax returns? Tap through the reel to see some of the best guesses! https://t.co/XARm\u2026", "in_reply_to_screen_name": null, "retweet_count": 2292, "favorite_count": 0, "source": "TweetDeck", "id_str": "764195293244059648", "is_retweet": true}, {"created_at": "Thu Oct 20 20:27:29 +0000 2016", "text": "\"Don't boo, vote! Booing doesn't do any good. Vote, and get your friends to vote.\u201d \u2014@POTUS https://t.co/tTgeqy51PU", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 615, "favorite_count": 1449, "source": "TweetDeck", "id_str": "789201393655566336", "is_retweet": false}, {"created_at": "Wed Jul 20 22:53:09 +0000 2016", "text": "Whose rights has Mike Pence restricted?\n\u2713Women\n\u2713Immigrants\n\u2713LGBT people https://t.co/mpWiUDRvxM", "in_reply_to_screen_name": null, "retweet_count": 3379, "favorite_count": 5479, "source": "TweetDeck", "id_str": "755898368329670656", "is_retweet": false}, {"created_at": "Mon Mar 07 18:54:30 +0000 2016", "text": "Necesitamos una presidenta que pueda defendernos de las propuestas de los republicanos.", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 972, "source": "TweetDeck", "id_str": "706915946955407360", "is_retweet": false}, {"created_at": "Thu Jul 28 03:02:55 +0000 2016", "text": "\"We\u2019re not done perfecting our union or living up to our founding creed\u2014that all of us are created equal.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1059, "favorite_count": 2999, "source": "TweetDeck", "id_str": "758497939551555584", "is_retweet": false}, {"created_at": "Mon Oct 10 23:22:25 +0000 2016", "text": "RT @tyleroakley: the new episode of #TheTylerOakleyShow is my favorite one yet. @HillaryClinton's running-mate @timkaine is the real deal!\u2026", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785621538951208960", "is_retweet": true}, {"created_at": "Thu Jul 28 03:02:09 +0000 2016", "text": "\u201cWe still have more work to do. More work to do for every American still in need of a good job or a raise.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 817, "favorite_count": 2631, "source": "TweetDeck", "id_str": "758497746932342791", "is_retweet": false}, {"created_at": "Thu Jun 30 02:24:19 +0000 2016", "text": "\"I will fight with the people of Puerto Rico to put the island\u2019s economy back on a stable and prosperous path.\" https://t.co/x7bnMc8VoA", "in_reply_to_screen_name": null, "retweet_count": 1715, "favorite_count": 5659, "source": "TweetDeck", "id_str": "748341366242021376", "is_retweet": false}, {"created_at": "Fri Aug 05 03:11:26 +0000 2016", "text": "Watch an exclusive interview with @POTUS backstage at the Democratic Convention.\nhttps://t.co/EJ9xI5Eflx", "in_reply_to_screen_name": null, "retweet_count": 2752, "favorite_count": 7046, "source": "Twitter Web Client", "id_str": "761399185258127360", "is_retweet": false}, {"created_at": "Mon Mar 28 21:03:48 +0000 2016", "text": "Watch live as Hillary speaks on the future of the Supreme Court in Madison, WI: https://t.co/l9O4qMkELj", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 700, "source": "TweetDeck", "id_str": "714558630478131205", "is_retweet": false}, {"created_at": "Fri Feb 05 03:33:44 +0000 2016", "text": "No questions on this at #DemDebate, but a reminder: women deserve a champion in the White House. https://t.co/QEtLUH2twa", "in_reply_to_screen_name": null, "retweet_count": 1165, "favorite_count": 2402, "source": "TweetDeck", "id_str": "695450203868954629", "is_retweet": false}, {"created_at": "Wed Nov 02 20:05:45 +0000 2016", "text": "\"You have a candidate who is worthy of your vote\u2014who is smart, who is steady, who is tested.\u201d \u2014@POTUS on Hillary https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 745, "favorite_count": 1785, "source": "TweetDeck", "id_str": "793906964468228096", "is_retweet": false}, {"created_at": "Tue Oct 04 13:36:12 +0000 2016", "text": "RT @CNNPolitics: Joe Biden criticizes Donald Trump's comments on PTSD: \"This is an ignorant man\" https://t.co/CG3n1ssNQA https://t.co/g8ii8\u2026", "in_reply_to_screen_name": null, "retweet_count": 2364, "favorite_count": 0, "source": "TweetDeck", "id_str": "783299684802723840", "is_retweet": true}, {"created_at": "Thu Oct 20 02:07:56 +0000 2016", "text": "Here's how Trump reacts when he loses an Emmy, the Iowa caucus, a primary, and polls. So yeah, he seems fit for the\u2026 https://t.co/xKGCiUUyrq", "in_reply_to_screen_name": null, "retweet_count": 16727, "favorite_count": 27776, "source": "Twitter Web Client", "id_str": "788924680556179457", "is_retweet": false}, {"created_at": "Tue Jul 26 02:27:48 +0000 2016", "text": "Watch @ElizabethForMA live at the #DemConvention in Philadelphia: https://t.co/AQaQTNCxdl", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 2133, "source": "TweetDeck", "id_str": "757764326128283648", "is_retweet": false}, {"created_at": "Tue Jun 14 16:34:54 +0000 2016", "text": "Americans don\u2019t need conspiracy theories and pathological self-congratulations. We need leadership, common sense, and concrete plans.", "in_reply_to_screen_name": null, "retweet_count": 1944, "favorite_count": 5544, "source": "TweetDeck", "id_str": "742757215333928961", "is_retweet": false}, {"created_at": "Tue Sep 27 16:03:49 +0000 2016", "text": "RT @repjohnlewis: Today is #NationalVoterRegistrationDay - I was beaten, left bloody &amp; unconscious so that every person could register and\u2026", "in_reply_to_screen_name": null, "retweet_count": 30676, "favorite_count": 0, "source": "TweetDeck", "id_str": "780800117867683841", "is_retweet": true}, {"created_at": "Wed May 11 18:31:14 +0000 2016", "text": "When women are paid less, they're also short-changed in saving for retirement and contributing to Social Security. We've got to change this.", "in_reply_to_screen_name": null, "retweet_count": 2197, "favorite_count": 4896, "source": "TweetDeck", "id_str": "730465305999380480", "is_retweet": false}, {"created_at": "Wed Aug 24 21:02:26 +0000 2016", "text": "RT @sarajacobs89: .@hillaryclinton announced a new public health fund to fight pandemics like Zika and keep American families safe https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 0, "source": "TweetDeck", "id_str": "768554081476632577", "is_retweet": true}, {"created_at": "Fri Apr 22 18:52:21 +0000 2016", "text": "Proud of my friend @GovernorVA for continuing to break down barriers to voting. -H https://t.co/sL6NBLKwho", "in_reply_to_screen_name": null, "retweet_count": 774, "favorite_count": 1697, "source": "TweetDeck", "id_str": "723585247443619840", "is_retweet": false}, {"created_at": "Fri Oct 14 17:41:52 +0000 2016", "text": "RT @TheEllenShow: I watched @FLOTUS Michelle Obama\u2019s incredible speech. I asked @HillaryClinton about it. https://t.co/pEFbg29hP5", "in_reply_to_screen_name": null, "retweet_count": 1795, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786985389030535168", "is_retweet": true}, {"created_at": "Fri Sep 09 02:45:20 +0000 2016", "text": "The next time Trump throws a tantrum, picture him in the Situation Room making life-or-death decisions for us. https://t.co/YjyAe2IMzr", "in_reply_to_screen_name": null, "retweet_count": 10125, "favorite_count": 18311, "source": "Twitter Web Client", "id_str": "774076193259810816", "is_retweet": false}, {"created_at": "Wed Jan 20 15:33:46 +0000 2016", "text": "If we want American families to get ahead, we have to make college, child care, and health care more affordable.", "in_reply_to_screen_name": null, "retweet_count": 788, "favorite_count": 2176, "source": "TweetDeck", "id_str": "689833203536936960", "is_retweet": false}, {"created_at": "Wed Nov 09 01:55:01 +0000 2016", "text": "This team has so much to be proud of. Whatever happens tonight, thank you for everything. https://t.co/x13iWOzILL", "in_reply_to_screen_name": null, "retweet_count": 138990, "favorite_count": 365224, "source": "TweetDeck", "id_str": "796169187882369024", "is_retweet": false}, {"created_at": "Wed May 25 15:58:25 +0000 2016", "text": "Donald Trump has spent his career looking to turn a profit, no matter who gets hurt in the process. https://t.co/V9lKg2F44l", "in_reply_to_screen_name": null, "retweet_count": 947, "favorite_count": 1693, "source": "TweetDeck", "id_str": "735500275960688643", "is_retweet": false}, {"created_at": "Mon Apr 11 13:04:14 +0000 2016", "text": "Hillary talked with @GlennThrush about being a wonk, standing up to bullies, and some great advice for flying. https://t.co/QaL6w2Kxly", "in_reply_to_screen_name": null, "retweet_count": 547, "favorite_count": 1183, "source": "TweetDeck", "id_str": "719511377363234817", "is_retweet": false}, {"created_at": "Fri Oct 14 20:46:29 +0000 2016", "text": "\"We are Black, we are proud, and here\u2019s why we are working to elect Hillary.\" @HFA staffers on why they're with her\u2026 https://t.co/g54tZFxDIH", "in_reply_to_screen_name": null, "retweet_count": 3222, "favorite_count": 9218, "source": "Media Studio", "id_str": "787031849197592576", "is_retweet": false}, {"created_at": "Fri Aug 19 21:00:07 +0000 2016", "text": "So who exactly is advising Trump on foreign policy? https://t.co/OVMdxGT736", "in_reply_to_screen_name": null, "retweet_count": 2401, "favorite_count": 4223, "source": "Twitter Web Client", "id_str": "766741559278698496", "is_retweet": false}, {"created_at": "Tue Sep 13 15:14:35 +0000 2016", "text": "RT @texasinafrica: .@HillaryClinton's HBCU plan is really smart. Addresses so many critical issues around access &amp; debt. I'm impressed. htt\u2026", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "775714298966450176", "is_retweet": true}, {"created_at": "Sat Oct 29 21:02:50 +0000 2016", "text": "RT @TheBriefing2016: James Comey said it himself -- \"we don't know the significance\" of these emails. \n\nBut he sent the letter anyway. http\u2026", "in_reply_to_screen_name": null, "retweet_count": 2200, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "792471781021982720", "is_retweet": true}, {"created_at": "Thu Feb 18 19:09:08 +0000 2016", "text": "Excited to launch #MadeForHistory, featuring tees by Marc Jacobs, Tory Burch, and more of your favorite designers! https://t.co/nDl4X5m17K", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 1117, "source": "TweetDeck", "id_str": "700396646912364544", "is_retweet": false}, {"created_at": "Wed Apr 20 02:58:22 +0000 2016", "text": "\u00a1Esta victoria es de todos ustedes Nueva York! Muchas gracias por su apoyo. Unete a la campa\u00f1a aqu\u00ed \u2192 https://t.co/29hAgCxpQM", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 1466, "source": "TweetDeck", "id_str": "722620394734231553", "is_retweet": false}, {"created_at": "Thu Jul 14 19:03:05 +0000 2016", "text": "We\u2019ve got to say with one voice that Latinos are a vital part of the American community.\nhttps://t.co/feC7H7fQ4K", "in_reply_to_screen_name": null, "retweet_count": 1971, "favorite_count": 4694, "source": "Twitter Web Client", "id_str": "753666142137233408", "is_retweet": false}, {"created_at": "Tue Jan 12 18:28:19 +0000 2016", "text": "\u201cAs a woman seeking the presidency...it\u2019s a really delicate balancing act.\u201d Tomorrow on @TheConversation.\nhttps://t.co/C10y0CPQol", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 668, "source": "Twitter Web Client", "id_str": "686978026710536196", "is_retweet": false}, {"created_at": "Fri Oct 28 13:03:26 +0000 2016", "text": "\"Kids and families have been the passion of my life\u2014and they'll be the heart of my presidency.\" https://t.co/xpfJ2ZAjJv", "in_reply_to_screen_name": null, "retweet_count": 2774, "favorite_count": 8490, "source": "Media Studio", "id_str": "791988749139779586", "is_retweet": false}, {"created_at": "Mon Apr 04 13:07:49 +0000 2016", "text": "No student should have to borrow money to pay tuition at a public college. Here's how we can achieve that: https://t.co/A4pWb3fOf4", "in_reply_to_screen_name": null, "retweet_count": 1175, "favorite_count": 2478, "source": "TweetDeck", "id_str": "716975562183548929", "is_retweet": false}, {"created_at": "Sun Apr 10 14:05:24 +0000 2016", "text": "\"No one is better prepared to help our working families.\" \u2014@Chirlane, first lady of New York City https://t.co/KXwqz8KzfZ", "in_reply_to_screen_name": null, "retweet_count": 1034, "favorite_count": 2612, "source": "TweetDeck", "id_str": "719164382253551616", "is_retweet": false}, {"created_at": "Mon Sep 26 18:21:34 +0000 2016", "text": "RT @voxdotcom: Hillary Clinton has a $10 billion plan to stop the heroin epidemic. Donald Trump has some slogans. https://t.co/tN8jGGWrvn", "in_reply_to_screen_name": null, "retweet_count": 1190, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780472397694693376", "is_retweet": true}, {"created_at": "Sat Nov 05 16:33:59 +0000 2016", "text": "RT @brianefallon: .@NickMerrill's wit, perceptiveness and knowledge of @HillaryClinton sure do make for a compelling podcast interview\nhttp\u2026", "in_reply_to_screen_name": null, "retweet_count": 470, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794940835347435520", "is_retweet": true}, {"created_at": "Wed Apr 20 02:32:57 +0000 2016", "text": "Donald Trump &amp; Ted Cruz are pushing a vision for America that's divisive &amp; dangerous.\n\nWe should be lifting people up\u2014not tearing them down.", "in_reply_to_screen_name": null, "retweet_count": 1152, "favorite_count": 2921, "source": "TweetDeck", "id_str": "722613998349381637", "is_retweet": false}, {"created_at": "Mon Jan 04 02:48:02 +0000 2016", "text": "Dr. Sakran nearly died after a gunshot wound at 17. Today, he's a trauma surgeon fighting to end gun violence. https://t.co/vmcB35p6bQ", "in_reply_to_screen_name": null, "retweet_count": 581, "favorite_count": 1491, "source": "TweetDeck", "id_str": "683842294324269058", "is_retweet": false}, {"created_at": "Wed Mar 16 05:00:22 +0000 2016", "text": "Florida, North Carolina, Ohio, Illinois, Missouri: We did it. And together, we're going to win this nomination. https://t.co/6uPW4X3RUJ", "in_reply_to_screen_name": null, "retweet_count": 7081, "favorite_count": 17077, "source": "TweetDeck", "id_str": "709967521290571777", "is_retweet": false}, {"created_at": "Sat Feb 06 20:59:02 +0000 2016", "text": "Watch live on @facebook: Hillary talks to students at @NewEngCollege about the issues on their mind. https://t.co/rRpqiX6Eve", "in_reply_to_screen_name": null, "retweet_count": 215, "favorite_count": 484, "source": "TweetDeck", "id_str": "696075651086999552", "is_retweet": false}, {"created_at": "Mon Jul 18 16:51:28 +0000 2016", "text": "\"Perhaps the best way to honor our police is to follow the lead of police departments across the country who are striving to do better.\"", "in_reply_to_screen_name": null, "retweet_count": 753, "favorite_count": 2745, "source": "TweetDeck", "id_str": "755082571306954752", "is_retweet": false}, {"created_at": "Sat Oct 15 20:01:19 +0000 2016", "text": "\"If we keep at it the way Hillary has kept at it decade after decade, progress happens.\" \u2014@POTUS https://t.co/pNsmg4T4H4", "in_reply_to_screen_name": null, "retweet_count": 2427, "favorite_count": 8568, "source": "TweetDeck", "id_str": "787382866934202368", "is_retweet": false}, {"created_at": "Thu Nov 03 21:09:18 +0000 2016", "text": "RT @HillaryforIA: Ruline Steininger has seen a lot of history over the years, and when it comes to Hillary versus Trump, she has something\u2026", "in_reply_to_screen_name": null, "retweet_count": 2900, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794285346238464001", "is_retweet": true}, {"created_at": "Mon Mar 21 15:53:19 +0000 2016", "text": "One million people have donated to help elect Hillary, and a majority of those donations were $100 or less. https://t.co/zTxcWE61tB", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 2091, "source": "TweetDeck", "id_str": "711943781277442049", "is_retweet": false}, {"created_at": "Wed Sep 21 19:12:46 +0000 2016", "text": "We believe that everyone has value.\nWe believe that everyone's created equal.\nWe believe that love trumps hate.\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1232, "favorite_count": 2531, "source": "TweetDeck", "id_str": "778673342404501504", "is_retweet": false}, {"created_at": "Fri Jul 22 03:02:50 +0000 2016", "text": "Your party's official platform supports \u201cconversion therapy,\u201d  @realDonaldTrump. https://t.co/RhgfCSNSxR", "in_reply_to_screen_name": null, "retweet_count": 6117, "favorite_count": 9298, "source": "TweetDeck", "id_str": "756323589570322432", "is_retweet": false}, {"created_at": "Wed Aug 10 18:01:12 +0000 2016", "text": "If you're a millionaire, you'll do great under Trump's economic plan. Everyone else? Well...\n\nTake a look: https://t.co/zavnOS2RdL", "in_reply_to_screen_name": null, "retweet_count": 1342, "favorite_count": 3117, "source": "TweetDeck", "id_str": "763435041628315648", "is_retweet": false}, {"created_at": "Sun Apr 24 16:12:52 +0000 2016", "text": "When someone shows you who they are, believe them. Trump has shown us who he is.\nhttps://t.co/7ZIcpDr1Iv", "in_reply_to_screen_name": null, "retweet_count": 3592, "favorite_count": 5433, "source": "Twitter Web Client", "id_str": "724269891063156736", "is_retweet": false}, {"created_at": "Sat Jul 30 02:11:57 +0000 2016", "text": "Hillary accepted the Democratic nomination for president on Thursday. (There were balloons.) https://t.co/yURPGlmYkR https://t.co/jbh1J7Oqwx", "in_reply_to_screen_name": null, "retweet_count": 2904, "favorite_count": 14086, "source": "TweetDeck", "id_str": "759209887209549824", "is_retweet": false}, {"created_at": "Mon Feb 01 21:26:47 +0000 2016", "text": "America can\u2019t wait. Families need their next president to roll up her sleeves and make a difference in their lives right now.", "in_reply_to_screen_name": null, "retweet_count": 576, "favorite_count": 1406, "source": "TweetDeck", "id_str": "694270696072056832", "is_retweet": false}, {"created_at": "Wed Oct 05 15:37:50 +0000 2016", "text": "\"Mr. Pence simply ignored the Donald Trump we have seen on the trail for more than a year.\" \u2014@NYTimes https://t.co/zjIh98ur04", "in_reply_to_screen_name": null, "retweet_count": 1372, "favorite_count": 3463, "source": "TweetDeck", "id_str": "783692683621572608", "is_retweet": false}, {"created_at": "Tue Jul 26 21:17:03 +0000 2016", "text": "\u201cWe have made too much progress, and we are not going back, we are going forward.\" \u2014@RepJohnLewis #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1099, "favorite_count": 3716, "source": "TweetDeck", "id_str": "758048511783006208", "is_retweet": false}, {"created_at": "Tue May 10 14:09:44 +0000 2016", "text": "West Virginians, head to the polls today. RT this if you\u2019re voting for Hillary. https://t.co/2ECEOO7DYh", "in_reply_to_screen_name": null, "retweet_count": 1374, "favorite_count": 3265, "source": "TweetDeck", "id_str": "730037109134901248", "is_retweet": false}, {"created_at": "Sat Sep 10 18:09:54 +0000 2016", "text": "\"I won't stop calling out bigotry and racist rhetoric in this campaign.\" \u2014Hillary https://t.co/C3Z7GybJ53", "in_reply_to_screen_name": null, "retweet_count": 12880, "favorite_count": 30824, "source": "TweetDeck", "id_str": "774671254850772992", "is_retweet": false}, {"created_at": "Thu Feb 04 17:33:24 +0000 2016", "text": "Shkreli &amp; Schiller's testimony today is another reminder: Price gouging is reprehensible and we need to stop it. https://t.co/c1zd8xkNVR -H", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 967, "source": "TweetDeck", "id_str": "695299128440537089", "is_retweet": false}, {"created_at": "Tue Aug 23 20:10:42 +0000 2016", "text": "The gender wage gap is even wider for women of color.\n\nIt's time to ensure equal pay. #BlackWomensEqualPay https://t.co/CLRq4Qq4iZ", "in_reply_to_screen_name": null, "retweet_count": 2429, "favorite_count": 5392, "source": "TweetDeck", "id_str": "768178673316990976", "is_retweet": false}, {"created_at": "Wed Nov 09 01:42:10 +0000 2016", "text": "RT @timkaine: Thinking about my daughter right now. No little girl will ever again have to wonder whether she, too, can be president. https\u2026", "in_reply_to_screen_name": null, "retweet_count": 16249, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796165954048757760", "is_retweet": true}, {"created_at": "Thu Sep 29 18:14:03 +0000 2016", "text": "\"I want this election to be about something, not just against somebody.\u201d \u2014Hillary in Iowa: https://t.co/NA4hBw6vR1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 693, "favorite_count": 1655, "source": "TweetDeck", "id_str": "781557666963415040", "is_retweet": false}, {"created_at": "Fri Mar 04 16:08:32 +0000 2016", "text": "We need to make it a national mission to create millions of jobs in clean energy, manufacturing, and infrastructure.", "in_reply_to_screen_name": null, "retweet_count": 777, "favorite_count": 2172, "source": "TweetDeck", "id_str": "705787019423834112", "is_retweet": false}, {"created_at": "Sun Jan 03 20:52:48 +0000 2016", "text": "This election isn\u2019t about style or rhetoric; it\u2019s about tackling the issues that American families face every day. https://t.co/x8TXobgy0e", "in_reply_to_screen_name": null, "retweet_count": 383, "favorite_count": 815, "source": "TweetDeck", "id_str": "683752896937242624", "is_retweet": false}, {"created_at": "Wed Apr 13 17:14:52 +0000 2016", "text": "Hillary's environmental justice plan would eliminate lead as a major public health threat within 5 years: https://t.co/Tg8iljE9v0", "in_reply_to_screen_name": null, "retweet_count": 508, "favorite_count": 1057, "source": "TweetDeck", "id_str": "720299225192333312", "is_retweet": false}, {"created_at": "Tue Nov 01 19:47:06 +0000 2016", "text": "\"It\u2019s really clear that he does not respect women. He just judges us on our looks.\u201d \u2014@MachadoOficial on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 833, "favorite_count": 1891, "source": "TweetDeck", "id_str": "793539886993272833", "is_retweet": false}, {"created_at": "Mon Oct 24 18:04:42 +0000 2016", "text": "No matter where you go to college, we\u2019ll make it easier for you to pay back and pay down your student debt. https://t.co/VkVm51nWIY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 521, "favorite_count": 1237, "source": "TweetDeck", "id_str": "790615014008905731", "is_retweet": false}, {"created_at": "Mon Oct 31 18:51:43 +0000 2016", "text": "U.S. intelligence has confirmed the Russian government is directing cyberattacks against the U.S. to influence the outcome of our election.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2489, "favorite_count": 3219, "source": "TweetDeck", "id_str": "793163559475838976", "is_retweet": false}, {"created_at": "Tue Aug 16 14:24:13 +0000 2016", "text": "Trump's top adviser was designated $12.7 million from pro-Russia forces in Ukraine. That's the tip of the iceberg. https://t.co/4tYa2Y4nN9", "in_reply_to_screen_name": null, "retweet_count": 2860, "favorite_count": 5056, "source": "TweetDeck", "id_str": "765554761231892480", "is_retweet": false}, {"created_at": "Wed Mar 30 23:00:35 +0000 2016", "text": "At this point, Donald Trump has insulted the vast majority of Americans. The good news is, there's something we can all do about it: Vote.", "in_reply_to_screen_name": null, "retweet_count": 5794, "favorite_count": 12136, "source": "TweetDeck", "id_str": "715312796498571265", "is_retweet": false}, {"created_at": "Thu Sep 08 19:03:53 +0000 2016", "text": "Hillary chats favorite books, handling criticism, and life on the trail in episode 3 of With Her. Listen here \ud83c\udfa7 : https://t.co/3t2bb1d1mT", "in_reply_to_screen_name": null, "retweet_count": 652, "favorite_count": 1747, "source": "TweetDeck", "id_str": "773960064638025729", "is_retweet": false}, {"created_at": "Fri Jul 15 15:35:33 +0000 2016", "text": "Get to know Trump's VP pick, Mike Pence: current governor of Indiana and potential disaster for America. https://t.co/CdqSgz4tKV", "in_reply_to_screen_name": null, "retweet_count": 1758, "favorite_count": 2676, "source": "TweetDeck", "id_str": "753976302970044416", "is_retweet": false}, {"created_at": "Wed Oct 26 00:11:23 +0000 2016", "text": "\"I feel very, very angry. So much so that it still evokes anger and hurt.\" \u2014Mae Wiggins, on experiencing discrimina\u2026 https://t.co/MHAJSJSdjy", "in_reply_to_screen_name": null, "retweet_count": 6473, "favorite_count": 12753, "source": "Media Studio", "id_str": "791069680924372993", "is_retweet": false}, {"created_at": "Mon Aug 22 02:03:32 +0000 2016", "text": "This week, Donald Trump made a shockingly ignorant pitch to African American voters. https://t.co/acxeolbsuv", "in_reply_to_screen_name": null, "retweet_count": 2006, "favorite_count": 4622, "source": "TweetDeck", "id_str": "767542690825269248", "is_retweet": false}, {"created_at": "Thu Jul 21 18:38:58 +0000 2016", "text": "Now might be a good time to follow us on Snapchat. https://t.co/NEpNSdyNzs https://t.co/k1oxo6N0CC", "in_reply_to_screen_name": null, "retweet_count": 678, "favorite_count": 2027, "source": "TweetDeck", "id_str": "756196788831477760", "is_retweet": false}, {"created_at": "Tue May 24 21:24:36 +0000 2016", "text": "Trying to profit off of people losing their homes isn't the \"kind of thinking our country needs.\" https://t.co/AQQ6allvIv", "in_reply_to_screen_name": null, "retweet_count": 960, "favorite_count": 1925, "source": "TweetDeck", "id_str": "735219976055971840", "is_retweet": false}, {"created_at": "Tue Jul 12 23:29:50 +0000 2016", "text": "Happy birthday, Malala! Thank you for fighting for every girl's right to an education. https://t.co/GjC69J0rSr", "in_reply_to_screen_name": null, "retweet_count": 5966, "favorite_count": 16228, "source": "TweetDeck", "id_str": "753008496099090432", "is_retweet": false}, {"created_at": "Thu Aug 25 23:18:29 +0000 2016", "text": "RT @HFA: Enjoying a quiet moment at @GrandTetonNPS back in 1995.\n\nHappy #NPS100! https://t.co/of8cMaj8mR", "in_reply_to_screen_name": null, "retweet_count": 743, "favorite_count": 0, "source": "TweetDeck", "id_str": "768950705705062401", "is_retweet": true}, {"created_at": "Fri Jul 22 01:29:30 +0000 2016", "text": "Follow @TheBriefing2016 tonight for live fact-checking of Donald Trump\u2019s #RNCinCLE speech. The best facts, in fact.", "in_reply_to_screen_name": null, "retweet_count": 1136, "favorite_count": 2597, "source": "TweetDeck", "id_str": "756300100696244225", "is_retweet": false}, {"created_at": "Thu Oct 20 01:32:41 +0000 2016", "text": "It's pretty clear that Vladimir Putin would rather have a puppet in the White House than a president. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 7274, "favorite_count": 16578, "source": "TweetDeck", "id_str": "788915810110676993", "is_retweet": false}, {"created_at": "Tue Jul 26 01:57:02 +0000 2016", "text": "\"We are the United States of America.\nWe will not falter or fail.\nWe will not retreat or surrender.\" \u2014@CoryBooker #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1902, "favorite_count": 4899, "source": "TweetDeck", "id_str": "757756583430479872", "is_retweet": false}, {"created_at": "Fri Jun 24 00:20:06 +0000 2016", "text": "We can\u2019t let @realdonaldtrump bankrupt America the way he bankrupted his casinos.\nhttps://t.co/RzHrHkvsoh", "in_reply_to_screen_name": null, "retweet_count": 1751, "favorite_count": 4432, "source": "Twitter Web Client", "id_str": "746135775327092736", "is_retweet": false}, {"created_at": "Tue Jul 05 19:57:57 +0000 2016", "text": "\"Let me tell you, my faith in Hillary Clinton has always been rewarded.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 919, "favorite_count": 2544, "source": "TweetDeck", "id_str": "750418457594851328", "is_retweet": false}, {"created_at": "Mon Jul 18 17:09:18 +0000 2016", "text": "\"In times like these, we need a president who can help pull us together, not split us apart. I will work every single day to do just that.\"", "in_reply_to_screen_name": null, "retweet_count": 1111, "favorite_count": 3526, "source": "TweetDeck", "id_str": "755087059392626688", "is_retweet": false}, {"created_at": "Fri Aug 19 14:24:43 +0000 2016", "text": "45 years later, I couldn\u2019t be happier to have you by my side. Happy birthday, Bill! -H https://t.co/KDhgLsNr7K", "in_reply_to_screen_name": null, "retweet_count": 8465, "favorite_count": 47295, "source": "TweetDeck", "id_str": "766642051844800512", "is_retweet": false}, {"created_at": "Tue Jun 14 23:21:04 +0000 2016", "text": "When @BillClinton took office, @GeorgeHWBush left him a note that represents the best of our values.\nhttps://t.co/N6dpHeF5cV", "in_reply_to_screen_name": null, "retweet_count": 2038, "favorite_count": 5461, "source": "Twitter Web Client", "id_str": "742859429763158018", "is_retweet": false}, {"created_at": "Fri Oct 21 01:30:57 +0000 2016", "text": "\"It is great, also, to see Mayor Bloomberg here. It\u2019s a shame he\u2019s not speaking tonight. I\u2019m curious to hear what a billionaire has to say.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1790, "favorite_count": 5209, "source": "TweetDeck", "id_str": "789277762313940992", "is_retweet": false}, {"created_at": "Wed Mar 16 17:30:15 +0000 2016", "text": "Los seis mejores momentos del discurso de Hillary Clinton. https://t.co/vknYLk4uY2", "in_reply_to_screen_name": null, "retweet_count": 369, "favorite_count": 811, "source": "TweetDeck", "id_str": "710156237376200704", "is_retweet": false}, {"created_at": "Sun Jun 12 19:06:09 +0000 2016", "text": "\"To the LGBT community: please know that you have millions of allies across our country. I am one of them.\u201d \u2014Hillary https://t.co/MmaGjrSufr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 7182, "favorite_count": 15236, "source": "TweetDeck", "id_str": "742070501032534017", "is_retweet": false}, {"created_at": "Fri Jul 29 02:39:12 +0000 2016", "text": "\u201cWe have to decide whether we\u2019re going to work together so we can all rise together.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1352, "favorite_count": 3715, "source": "TweetDeck", "id_str": "758854358867939329", "is_retweet": false}, {"created_at": "Wed Jul 27 02:46:34 +0000 2016", "text": "\"She launched a team to fight back against terrorists online and built a new global counter-terrorism effort.\u201d \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 1090, "favorite_count": 4060, "source": "TweetDeck", "id_str": "758131436549509120", "is_retweet": false}, {"created_at": "Tue Nov 01 20:13:40 +0000 2016", "text": "\"He doesn't see us as full human beings with our own dreams, our own capabilities.\u201d \u2014Hillary on what Trump thinks of women", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1143, "favorite_count": 2303, "source": "TweetDeck", "id_str": "793546568834117632", "is_retweet": false}, {"created_at": "Tue Oct 11 19:34:57 +0000 2016", "text": "\u201cClimate change is real, it\u2019s urgent, and America can take the lead in the world in addressing it.\u201d \u2014Hillary in Miami", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 685, "favorite_count": 1662, "source": "TweetDeck", "id_str": "785926683052376065", "is_retweet": false}, {"created_at": "Tue May 24 14:55:50 +0000 2016", "text": "The 2008 crash caused millions of Americans to lose their jobs and homes.\n\nIn 2006, Trump rooted for it to happen. https://t.co/tnngHNVqoL", "in_reply_to_screen_name": null, "retweet_count": 1681, "favorite_count": 2323, "source": "TweetDeck", "id_str": "735122140916293633", "is_retweet": false}, {"created_at": "Tue Nov 08 02:11:22 +0000 2016", "text": "\"I\u2019m betting that young people turn out to vote because your future is at stake.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1147, "favorite_count": 3012, "source": "TweetDeck", "id_str": "795810916445065220", "is_retweet": false}, {"created_at": "Mon Jun 27 16:04:36 +0000 2016", "text": "\"Hillary believes that racism, hatred, injustice, and bigotry have no place in our country.\" \u2014@ElizabethforMA\nhttps://t.co/OK5UueAaZn", "in_reply_to_screen_name": null, "retweet_count": 2551, "favorite_count": 5973, "source": "Twitter Web Client", "id_str": "747460630249013248", "is_retweet": false}, {"created_at": "Fri May 13 21:37:46 +0000 2016", "text": "We've got to do everything we can to make it easier for people like Frankie to reach their potential. https://t.co/BB0g7tLEjZ", "in_reply_to_screen_name": null, "retweet_count": 543, "favorite_count": 1481, "source": "Twitter Web Client", "id_str": "731237020597637120", "is_retweet": false}, {"created_at": "Fri Apr 08 23:01:54 +0000 2016", "text": "\"Right to Work\" is wrong for America. Great news in WI\u2014we should stand with workers in the fight for their rights. https://t.co/HxIzN5lkr6", "in_reply_to_screen_name": null, "retweet_count": 1337, "favorite_count": 2940, "source": "Twitter Web Client", "id_str": "718574621524680708", "is_retweet": false}, {"created_at": "Fri Apr 15 02:32:20 +0000 2016", "text": "We can\u2019t afford a President Trump, Cruz, or Kasich. We need a leader on women's rights. https://t.co/JaBtp05Gjs", "in_reply_to_screen_name": null, "retweet_count": 682, "favorite_count": 1731, "source": "TweetDeck", "id_str": "720801905136545793", "is_retweet": false}, {"created_at": "Fri Aug 12 14:57:51 +0000 2016", "text": "RT @maxlinsky: I'm doing a new podcast that will run through Election Day and @hillaryclinton is my co-host \n https://t.co/FhBROuw0zy", "in_reply_to_screen_name": null, "retweet_count": 503, "favorite_count": 0, "source": "TweetDeck", "id_str": "764113674239901700", "is_retweet": true}, {"created_at": "Fri Nov 04 00:03:17 +0000 2016", "text": "Join Hillary on the trail in North Carolina with @BernieSanders and @Pharrell. https://t.co/ffvKpYDAe7\n\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": null, "retweet_count": 1171, "favorite_count": 3709, "source": "TweetDeck", "id_str": "794329131894837248", "is_retweet": false}, {"created_at": "Sat Mar 26 15:52:35 +0000 2016", "text": "It\u2019s Caucus Day, Alaska, Hawaii, and Washington! Retweet if you're with her. https://t.co/gKBMJ3UKgc", "in_reply_to_screen_name": null, "retweet_count": 3364, "favorite_count": 5332, "source": "TweetDeck", "id_str": "713755536236228608", "is_retweet": false}, {"created_at": "Sun Oct 30 18:11:00 +0000 2016", "text": "\"When you\u2019re knocked down, what matters is whether you get up again...I\u2019m not stopping now.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1838, "favorite_count": 3913, "source": "TweetDeck", "id_str": "792790924615151621", "is_retweet": false}, {"created_at": "Mon Jul 25 17:59:06 +0000 2016", "text": "\"He is a progressive who likes to get things done. That\u2019s just my kind of guy.\" \u2013Hillary on @TimKaine https://t.co/vHsoDiNib8", "in_reply_to_screen_name": null, "retweet_count": 1787, "favorite_count": 6871, "source": "TweetDeck", "id_str": "757636305803182080", "is_retweet": false}, {"created_at": "Thu Jul 28 00:23:19 +0000 2016", "text": "\"Speaking is difficult for me. But come January, I want to say these two words: Madam President.\u201d \u2014@GabbyGiffords https://t.co/StCmJArarq", "in_reply_to_screen_name": null, "retweet_count": 2857, "favorite_count": 7503, "source": "TweetDeck", "id_str": "758457774351093761", "is_retweet": false}, {"created_at": "Mon Oct 10 16:34:33 +0000 2016", "text": "RT @timkaine: I spent an afternoon visiting with retirees in Pennsylvania, and one thing is clear\u2014they aren't buying what Donald Trump is s\u2026", "in_reply_to_screen_name": null, "retweet_count": 4473, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785518895302049792", "is_retweet": true}, {"created_at": "Tue Apr 12 14:51:35 +0000 2016", "text": "One year ago today.\nhttps://t.co/DNtMxhzKk3", "in_reply_to_screen_name": null, "retweet_count": 765, "favorite_count": 1598, "source": "Twitter Web Client", "id_str": "719900777163022336", "is_retweet": false}, {"created_at": "Sat Apr 02 20:51:48 +0000 2016", "text": "Watch @HamiltonMusical's @reneeelisegolds welcome Hillary to Harlem with the national anthem. Work.\nhttps://t.co/7OISyErw1j", "in_reply_to_screen_name": null, "retweet_count": 1951, "favorite_count": 4522, "source": "Twitter Web Client", "id_str": "716367552247504896", "is_retweet": false}, {"created_at": "Tue May 24 13:42:32 +0000 2016", "text": "Millions of Americans lost jobs and homes in the 2008 crash. A man who hoped for it has no business being president.\nhttps://t.co/tnngHOd1gj", "in_reply_to_screen_name": null, "retweet_count": 2215, "favorite_count": 2941, "source": "Twitter Web Client", "id_str": "735103692546809857", "is_retweet": false}, {"created_at": "Sat May 14 13:53:34 +0000 2016", "text": "FACT: Donald Trump would force schools to allow guns in classrooms on his first day in office. https://t.co/Y1YSjDDUXC", "in_reply_to_screen_name": null, "retweet_count": 1775, "favorite_count": 2234, "source": "Twitter Web Client", "id_str": "731482592059527168", "is_retweet": false}, {"created_at": "Wed Jul 20 23:20:45 +0000 2016", "text": "I applaud the 5th Circuit for blocking Texas's voter ID law\u2014one of the most restrictive in America. Let's make voting easier, not harder. -H", "in_reply_to_screen_name": null, "retweet_count": 3606, "favorite_count": 9794, "source": "TweetDeck", "id_str": "755905315120480259", "is_retweet": false}, {"created_at": "Fri Sep 30 14:57:40 +0000 2016", "text": "When something gets under Donald's thin skin, he lashes out and can't let go. This is dangerous for a president.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 9025, "favorite_count": 20395, "source": "TweetDeck", "id_str": "781870635324694528", "is_retweet": false}, {"created_at": "Wed Jun 01 02:06:39 +0000 2016", "text": "\"Hillary Clinton, with her long experience ... will be prepared to lead our country on day one.\" \u2014@JerryBrownGov: https://t.co/NDAUs6a8bp", "in_reply_to_screen_name": null, "retweet_count": 1137, "favorite_count": 2846, "source": "TweetDeck", "id_str": "737827672248717313", "is_retweet": false}, {"created_at": "Sun Jul 03 01:47:10 +0000 2016", "text": "\"We join all those around the world in mourning his loss\" \u2014Hillary and @BillClinton on the passing of Elie Wiesel https://t.co/HNVH0LlWpr", "in_reply_to_screen_name": null, "retweet_count": 2522, "favorite_count": 7855, "source": "Twitter for iPhone", "id_str": "749419180097695744", "is_retweet": false}, {"created_at": "Sun May 22 00:43:03 +0000 2016", "text": "\"I believe we have a moral obligation\u2026to stand up against systematic racism.\" \u2014Hillary at the @TTMFoundation dinner", "in_reply_to_screen_name": null, "retweet_count": 1701, "favorite_count": 4240, "source": "Twitter for iPhone", "id_str": "734182751847522304", "is_retweet": false}, {"created_at": "Thu Jan 07 16:41:47 +0000 2016", "text": "Marriage equality is the law of the land\u2014and that includes Alabama. -H \nhttps://t.co/1xPFXPlN8j", "in_reply_to_screen_name": null, "retweet_count": 1118, "favorite_count": 2328, "source": "TweetDeck", "id_str": "685139278200963072", "is_retweet": false}, {"created_at": "Wed Sep 21 18:44:01 +0000 2016", "text": "We've also seen the targeting of police officers\u2014but so many serve every day with courage and honor and are committed to reform.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 452, "favorite_count": 1103, "source": "TweetDeck", "id_str": "778666108853313536", "is_retweet": false}, {"created_at": "Mon Feb 15 21:42:16 +0000 2016", "text": "Couldn't agree more, @IAmSteveHarvey: It's time to act on gun violence. Thank you for telling these stories today. \nhttps://t.co/gAdyidq2Xv", "in_reply_to_screen_name": null, "retweet_count": 708, "favorite_count": 1625, "source": "TweetDeck", "id_str": "699348023051231233", "is_retweet": false}, {"created_at": "Mon Jan 18 02:53:34 +0000 2016", "text": "\"There should be no bank too big to fail and no individual too big to jail.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 5841, "favorite_count": 5549, "source": "TweetDeck", "id_str": "688917116314120192", "is_retweet": false}, {"created_at": "Thu Jun 02 19:16:29 +0000 2016", "text": "America\u2019s network of allies is part of what makes us exceptional. And our allies deliver for us every day.", "in_reply_to_screen_name": null, "retweet_count": 955, "favorite_count": 2395, "source": "TweetDeck", "id_str": "738449225692946432", "is_retweet": false}, {"created_at": "Fri Aug 19 21:30:34 +0000 2016", "text": "RT @rosenbergerlm: When bombs rain down, they rush in. Inspired by the White Helmets &amp; others helping those in need worldwide.  #WHD https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 668, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "766749220590219265", "is_retweet": true}, {"created_at": "Sun Feb 07 19:03:23 +0000 2016", "text": "\"Clean water is not optional. It is not a luxury.\" \u2014Hillary in Flint, MI. Watch live: https://t.co/6W1AgXBJPo", "in_reply_to_screen_name": null, "retweet_count": 586, "favorite_count": 1149, "source": "TweetDeck", "id_str": "696408934270242816", "is_retweet": false}, {"created_at": "Thu Jul 28 01:24:54 +0000 2016", "text": "\u201cA man who seeks to sow division in America for his own gain\u2026we simply cannot let that happen as Americans\u2014period.\u201d \u2014@JoeBiden on Trump", "in_reply_to_screen_name": null, "retweet_count": 1719, "favorite_count": 4757, "source": "TweetDeck", "id_str": "758473271604051968", "is_retweet": false}, {"created_at": "Fri Aug 26 16:24:51 +0000 2016", "text": "Even as we celebrate the 19th Amendment, remember the struggle for voting rights continued for women of color. That fight continues today.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1666, "favorite_count": 3996, "source": "TweetDeck", "id_str": "769209001464573952", "is_retweet": false}, {"created_at": "Fri Jun 24 18:14:04 +0000 2016", "text": "Hours after the #BrexitVote, Donald Trump was in the U.K.\n\nTalking about how he, personally, would benefit.\nhttps://t.co/YEt5LozDpt", "in_reply_to_screen_name": null, "retweet_count": 7903, "favorite_count": 11092, "source": "Twitter Web Client", "id_str": "746406051747008513", "is_retweet": false}, {"created_at": "Wed Oct 05 03:31:12 +0000 2016", "text": "RT @JohnDingell: Mike Pence continually threatens to defend Trump's horrible comments, then immediately discusses an unrelated topic.\n\nA pr\u2026", "in_reply_to_screen_name": null, "retweet_count": 2675, "favorite_count": 0, "source": "TweetDeck", "id_str": "783509820125089792", "is_retweet": true}, {"created_at": "Fri Jul 22 02:21:26 +0000 2016", "text": "Show @realDonaldTrump that his hateful words have a cost. Chip in $1 every time he lies. https://t.co/V2keRkBYDS https://t.co/8JFHZNCeET", "in_reply_to_screen_name": null, "retweet_count": 956, "favorite_count": 2180, "source": "TweetDeck", "id_str": "756313173800652800", "is_retweet": false}, {"created_at": "Mon Mar 07 19:18:35 +0000 2016", "text": "Bloody Sunday, March 7, 1965, was a day of horror and pain. But it was also a day of resilience and grace. #Selma51 -H", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 1513, "source": "TweetDeck", "id_str": "706922008790114305", "is_retweet": false}, {"created_at": "Wed Jul 20 03:09:24 +0000 2016", "text": "So...what exactly did we learn tonight about Donald Trump's economic plan? #RNCinCLE\nhttps://t.co/GI51bfHSsi", "in_reply_to_screen_name": null, "retweet_count": 4420, "favorite_count": 8323, "source": "Twitter Web Client", "id_str": "755600468483551232", "is_retweet": false}, {"created_at": "Mon Jun 27 14:46:31 +0000 2016", "text": "\"She knows what it takes to beat a thin-skinned bully who is driven by greed and hate.\u201d \u2014@ElizabethForMA on Hillary", "in_reply_to_screen_name": null, "retweet_count": 995, "favorite_count": 3087, "source": "TweetDeck", "id_str": "747440982946381825", "is_retweet": false}, {"created_at": "Fri Mar 04 03:59:36 +0000 2016", "text": "How many more of these do we have to sit through? Asking for a friend. #GOPdebate https://t.co/AxGFlerSRW", "in_reply_to_screen_name": null, "retweet_count": 14769, "favorite_count": 30415, "source": "TweetDeck", "id_str": "705603574575706112", "is_retweet": false}, {"created_at": "Mon Aug 15 17:16:13 +0000 2016", "text": "Under @POTUS and @JoeBiden:\n\u2713 Our businesses created 15 million new jobs.\n\u2713 20 million people have health care.\nhttps://t.co/2SCUXK3VAP", "in_reply_to_screen_name": null, "retweet_count": 838, "favorite_count": 2094, "source": "TweetDeck", "id_str": "765235662043873282", "is_retweet": false}, {"created_at": "Sun Aug 07 15:00:45 +0000 2016", "text": "\u201cOn the issues, there\u2019s no comparison in terms of thoughtfulness, thoroughness, and practicality.\" \u2014@HoustonChron https://t.co/hcFQLBYJfS", "in_reply_to_screen_name": null, "retweet_count": 1862, "favorite_count": 5270, "source": "Twitter for iPhone", "id_str": "762302466297827328", "is_retweet": false}, {"created_at": "Thu Apr 28 00:14:28 +0000 2016", "text": "Turning away Muslims, pitting Americans against each other, inciting violence and chaos\u2014these aren't our values.\nhttps://t.co/6bJfM4KlzY", "in_reply_to_screen_name": null, "retweet_count": 2604, "favorite_count": 4451, "source": "Twitter Web Client", "id_str": "725478252156841984", "is_retweet": false}, {"created_at": "Fri Sep 30 16:30:14 +0000 2016", "text": "RT @HFA: Too often volunteering becomes something only people with lots of time and financial security can do. Everyone should be able to c\u2026", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781893931512520704", "is_retweet": true}, {"created_at": "Sun Sep 18 01:18:38 +0000 2016", "text": "We need ideas, not insults. Plans, not paranoia.\n\nWe can\u2019t let @POTUS's legacy fall into the hands of someone who doesn\u2019t understand that.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1956, "favorite_count": 4976, "source": "TweetDeck", "id_str": "777315864987181056", "is_retweet": false}, {"created_at": "Tue Oct 04 20:04:25 +0000 2016", "text": "\"Tim is a good man. He\u2019s a true progressive. And he will make a great vice president.\" \u2014@POTUS on @TimKaine https://t.co/bPBJ4NdCPX", "in_reply_to_screen_name": null, "retweet_count": 1079, "favorite_count": 3097, "source": "TweetDeck", "id_str": "783397382058901504", "is_retweet": false}, {"created_at": "Sat Jun 25 19:59:33 +0000 2016", "text": "You'll tell the story of your night at @HamiltonMusical with Hillary. Enter to win here: https://t.co/MO6hkcxf8A https://t.co/whfzT5tdfv", "in_reply_to_screen_name": null, "retweet_count": 786, "favorite_count": 2930, "source": "Twitter Web Client", "id_str": "746794981977894912", "is_retweet": false}, {"created_at": "Fri Jul 22 21:50:47 +0000 2016", "text": "\"Hard to believe they spent so much time talking about me and no time talking about jobs or education or health care.\" \u2014Hillary on the RNC", "in_reply_to_screen_name": null, "retweet_count": 4558, "favorite_count": 12103, "source": "TweetDeck", "id_str": "756607450074185730", "is_retweet": false}, {"created_at": "Thu Feb 04 04:05:15 +0000 2016", "text": "We have more to do for equality. We're going to fight for LGBT rights, women's rights, voting rights, workers' rights\u2014and more. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 861, "favorite_count": 2118, "source": "TweetDeck", "id_str": "695095748413755392", "is_retweet": false}, {"created_at": "Tue Sep 27 01:28:03 +0000 2016", "text": "RT @TheBriefing2016: In the spirit of friendship, here's Donald Trump's ISIS plan for your consideration. #debate https://t.co/YCXFWZyiGA", "in_reply_to_screen_name": null, "retweet_count": 3997, "favorite_count": 0, "source": "TweetDeck", "id_str": "780579726389809152", "is_retweet": true}, {"created_at": "Mon Oct 10 02:43:44 +0000 2016", "text": "Hillary won tonight. Chip in to help her win on November 8th: https://t.co/b8lLNPWUiM #Debate", "in_reply_to_screen_name": null, "retweet_count": 4886, "favorite_count": 16343, "source": "TweetDeck", "id_str": "785309814574419968", "is_retweet": false}, {"created_at": "Thu Oct 20 20:51:46 +0000 2016", "text": "\"Progress is on the ballot.\nCivility is on the ballot.\nTolerance is on the ballot.\u201d\n\u2014@POTUS\n\nGo vote: https://t.co/tTgeqy51PU", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 834, "favorite_count": 2443, "source": "TweetDeck", "id_str": "789207504743903232", "is_retweet": false}, {"created_at": "Sun May 29 23:06:07 +0000 2016", "text": "The Adoption and Safe Families Act helped thousands of kids find loving families\u2014including this one. https://t.co/jnKtaTLjeL", "in_reply_to_screen_name": null, "retweet_count": 1122, "favorite_count": 2899, "source": "TweetDeck", "id_str": "737057463330050048", "is_retweet": false}, {"created_at": "Sun Jan 31 01:25:37 +0000 2016", "text": "\"She wasn't elected to anything\u2014she just made something good happen.\" @billclinton on Hillary's work for kids in AR:\nhttps://t.co/n2CK8CDIg6", "in_reply_to_screen_name": null, "retweet_count": 578, "favorite_count": 1288, "source": "Twitter Web Client", "id_str": "693606025773973504", "is_retweet": false}, {"created_at": "Wed Jul 27 23:32:09 +0000 2016", "text": "\"It\u2019s time to put a bully, racist in his place and a tough woman in hers\u2014the White House!\" \u2014@MartinOMalley https://t.co/DjYseIe488", "in_reply_to_screen_name": null, "retweet_count": 1920, "favorite_count": 4869, "source": "TweetDeck", "id_str": "758444896512606208", "is_retweet": false}, {"created_at": "Tue Sep 13 17:46:27 +0000 2016", "text": "\"Even though I have run my last campaign, I am going to work as hard as I can this fall to elect Hillary Clinton.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1237, "favorite_count": 4261, "source": "TweetDeck", "id_str": "775752516684374018", "is_retweet": false}, {"created_at": "Wed Nov 09 16:50:46 +0000 2016", "text": "\"To all the women...who put their faith in this campaign and in me...nothing has made me prouder than to be your champion.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 90201, "favorite_count": 258896, "source": "TweetDeck", "id_str": "796394614244646912", "is_retweet": false}, {"created_at": "Fri Aug 05 16:46:05 +0000 2016", "text": "It\u2019s past time for comprehensive immigration reform, and we\u2019re going to do everything we can to get it done: https://t.co/M3doGLY5rL", "in_reply_to_screen_name": null, "retweet_count": 809, "favorite_count": 2624, "source": "TweetDeck", "id_str": "761604198312050689", "is_retweet": false}, {"created_at": "Sat Jul 23 17:37:40 +0000 2016", "text": "Tim has spent most of his life in public service because he believes in doing everything he can to make a difference in people\u2019s lives.", "in_reply_to_screen_name": null, "retweet_count": 940, "favorite_count": 3198, "source": "TweetDeck", "id_str": "756906138898141188", "is_retweet": false}, {"created_at": "Mon Apr 18 22:44:14 +0000 2016", "text": ".@NYTimes on Hillary: \"One of the most broadly and deeply qualified presidential candidates in modern history.\" https://t.co/UMtPYHminz", "in_reply_to_screen_name": null, "retweet_count": 1968, "favorite_count": 3475, "source": "TweetDeck", "id_str": "722194052129648640", "is_retweet": false}, {"created_at": "Mon Jun 20 20:19:24 +0000 2016", "text": "This is just common sense. It's time for Congress to act. https://t.co/SsJuC4D7Pm", "in_reply_to_screen_name": null, "retweet_count": 2663, "favorite_count": 8272, "source": "TweetDeck", "id_str": "744988038493769728", "is_retweet": false}, {"created_at": "Thu Jul 28 22:49:25 +0000 2016", "text": "RT @Hillary_esp: \u201cAl igual que Hillary... he luchado toda mi vida por los derechos humanos, mujeres, trabajadores\u201d  \u2014@DoloresHuerta. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 500, "favorite_count": 0, "source": "TweetDeck", "id_str": "758796530627125249", "is_retweet": true}, {"created_at": "Tue Jul 26 01:55:29 +0000 2016", "text": "\u201cAmerica, we will rise.\u201d \u2014@CoryBooker #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2779, "favorite_count": 6909, "source": "TweetDeck", "id_str": "757756194626895873", "is_retweet": false}, {"created_at": "Tue Mar 29 15:00:23 +0000 2016", "text": "\"Every day, another Republican bemoans the rise of Donald Trump... but [he] didn\u2019t come out of nowhere.\" \u2014Hillary\nhttps://t.co/pupR70Pm55", "in_reply_to_screen_name": null, "retweet_count": 2413, "favorite_count": 5429, "source": "Twitter Web Client", "id_str": "714829564078198786", "is_retweet": false}, {"created_at": "Tue Apr 26 01:46:39 +0000 2016", "text": "\"As a white person, I have to talk about [racism] more. We are not a post-racial society.\" \u2014Hillary to @Maddow #MSNBCTownhall", "in_reply_to_screen_name": null, "retweet_count": 1343, "favorite_count": 3327, "source": "TweetDeck", "id_str": "724776675205079040", "is_retweet": false}, {"created_at": "Sat Jul 23 17:24:03 +0000 2016", "text": "Make no mistake: Behind that smile, @TimKaine has a backbone of steel.\n\nJust ask the NRA.", "in_reply_to_screen_name": null, "retweet_count": 1279, "favorite_count": 3858, "source": "TweetDeck", "id_str": "756902711006724096", "is_retweet": false}, {"created_at": "Sun Feb 14 22:28:17 +0000 2016", "text": "The children of Flint deserve bright futures\u2014and today, those children need our help. Please chip in if you're able: https://t.co/ISG0ZXq5lQ", "in_reply_to_screen_name": null, "retweet_count": 698, "favorite_count": 1355, "source": "TweetDeck", "id_str": "698997213763149824", "is_retweet": false}, {"created_at": "Tue Jan 12 23:15:55 +0000 2016", "text": "A Republican president could stack the Supreme Court with justices who will rip away all of the progress we\u2019ve made. https://t.co/peZv2sXdQO", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 803, "source": "TweetDeck", "id_str": "687050404971069442", "is_retweet": false}, {"created_at": "Sat Feb 06 03:04:24 +0000 2016", "text": "\"I\u2019m proud of the experience and judgment I would bring to this job. A president has to be able to do ALL parts of the job.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 617, "favorite_count": 1693, "source": "TweetDeck", "id_str": "695805210753703936", "is_retweet": false}, {"created_at": "Sun Oct 30 17:29:01 +0000 2016", "text": "\u201cTo those of you celebrating this joyous occasion, I wish you and your loved ones a Happy Diwali and Saal Mubarak.\u201d\u2026 https://t.co/lM4YgJL5HX", "in_reply_to_screen_name": null, "retweet_count": 2978, "favorite_count": 9290, "source": "TweetDeck", "id_str": "792780359624720385", "is_retweet": false}, {"created_at": "Sun Jun 26 21:13:37 +0000 2016", "text": "No person should be gunned down while learning, teaching, praying, or dancing. It's time for us to come together to strengthen our gun laws.", "in_reply_to_screen_name": null, "retweet_count": 3321, "favorite_count": 9398, "source": "TweetDeck", "id_str": "747176012610404352", "is_retweet": false}, {"created_at": "Mon Oct 03 20:55:09 +0000 2016", "text": "Veterans who experience PTS are stronger than we'll ever understand. We owe them nothing short of world-class care: https://t.co/skZijed0k3", "in_reply_to_screen_name": null, "retweet_count": 2812, "favorite_count": 6731, "source": "TweetDeck", "id_str": "783047762824790017", "is_retweet": false}, {"created_at": "Fri Jul 29 02:20:22 +0000 2016", "text": "\"Regardless of what was happening in her life, she was always, always there for me.\u201d \u2014@ChelseaClinton https://t.co/nuIjrwZC1M", "in_reply_to_screen_name": null, "retweet_count": 1288, "favorite_count": 4603, "source": "TweetDeck", "id_str": "758849619631538176", "is_retweet": false}, {"created_at": "Fri Jul 22 03:22:18 +0000 2016", "text": "RT @Hillary_esp: S\u00ed, construiremos un muro\u2014entre t\u00fa y la presidencia, Donald Trump. #RNCinCLE", "in_reply_to_screen_name": null, "retweet_count": 2198, "favorite_count": 0, "source": "TweetDeck", "id_str": "756328491428306946", "is_retweet": true}, {"created_at": "Tue May 17 00:40:26 +0000 2016", "text": "Conoce c\u00f3mo Hillary ha luchado durante varias d\u00e9cadas por las familias, mujeres y ni\u00f1os. https://t.co/UsOmgcNCJa https://t.co/OqKQnk6EYv", "in_reply_to_screen_name": null, "retweet_count": 465, "favorite_count": 1053, "source": "TweetDeck", "id_str": "732370156995936256", "is_retweet": false}, {"created_at": "Sun Oct 30 22:01:19 +0000 2016", "text": "In 9 days, we'll choose who succeeds @POTUS in the Oval Office. Make sure we make the right choice:\u2026 https://t.co/3P5SZFuQ1U", "in_reply_to_screen_name": null, "retweet_count": 2679, "favorite_count": 7803, "source": "TweetDeck", "id_str": "792848884418609154", "is_retweet": false}, {"created_at": "Tue Feb 09 21:25:43 +0000 2016", "text": "\u201cShe\u2019s the single best changemaker I\u2019ve ever met.\" Watch @billclinton\u2019s closing argument for Hillary. https://t.co/V27iB2UO6v", "in_reply_to_screen_name": null, "retweet_count": 639, "favorite_count": 1226, "source": "Twitter Web Client", "id_str": "697169528741040129", "is_retweet": false}, {"created_at": "Wed Feb 17 18:24:26 +0000 2016", "text": "Behind the vote totals and the delegate counts are the voters themselves. Their stories: https://t.co/IBaaTPJGoa https://t.co/2mIN2qJiz1", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 999, "source": "TweetDeck", "id_str": "700023011995492352", "is_retweet": false}, {"created_at": "Fri Feb 19 01:41:39 +0000 2016", "text": "\u201cI\u2019m going to do everything I can so you don\u2019t have to be scared. Let me do the worrying, is that a deal?\u201d\nhttps://t.co/KaNACJzb7T", "in_reply_to_screen_name": null, "retweet_count": 1129, "favorite_count": 2326, "source": "Twitter Web Client", "id_str": "700495428169564161", "is_retweet": false}, {"created_at": "Wed Mar 09 18:05:27 +0000 2016", "text": "La brecha salarial entre hombres y mujeres es inaceptable. https://t.co/TkFZRmzTeS", "in_reply_to_screen_name": null, "retweet_count": 356, "favorite_count": 703, "source": "TweetDeck", "id_str": "707628377704939521", "is_retweet": false}, {"created_at": "Thu Oct 20 02:37:43 +0000 2016", "text": "RT if you\u2019re proud of Hillary tonight. #DebateNight #SheWon https://t.co/H7CJep7APX", "in_reply_to_screen_name": null, "retweet_count": 69843, "favorite_count": 92353, "source": "TweetDeck", "id_str": "788932179082567680", "is_retweet": false}, {"created_at": "Tue Jun 07 02:11:27 +0000 2016", "text": "To everyone who's worked so hard, thank you. Let's go win this thing. https://t.co/T6ou2Znh9D", "in_reply_to_screen_name": null, "retweet_count": 3943, "favorite_count": 10069, "source": "TweetDeck", "id_str": "740003205166321665", "is_retweet": false}, {"created_at": "Thu Sep 22 20:42:37 +0000 2016", "text": "Very concerned about the outage in Puerto Rico and the millions of families who don't have power. Hoping it's resto\u2026 https://t.co/Y2oG1CS2AN", "in_reply_to_screen_name": null, "retweet_count": 2086, "favorite_count": 5121, "source": "TweetDeck", "id_str": "779058340315951104", "is_retweet": false}, {"created_at": "Thu Sep 22 00:07:52 +0000 2016", "text": "Going to bat for kids who are too often counted out has always been a priority for Hillary. https://t.co/lTxRVn3NBM", "in_reply_to_screen_name": null, "retweet_count": 1467, "favorite_count": 3633, "source": "TweetDeck", "id_str": "778747606864306176", "is_retweet": false}, {"created_at": "Thu Aug 18 01:58:50 +0000 2016", "text": "At the 1988 Olympic games, Jackie Joyner-Kersee became the first woman to win gold in the long jump for @TeamUSA. https://t.co/SM21RY7QWn", "in_reply_to_screen_name": null, "retweet_count": 1419, "favorite_count": 6351, "source": "TweetDeck", "id_str": "766091955898023936", "is_retweet": false}, {"created_at": "Thu Oct 27 17:19:48 +0000 2016", "text": "RT @McFaul: Trump insults every single person working in the intelligence community by claiming that they are in the PR business.  Incredib\u2026", "in_reply_to_screen_name": null, "retweet_count": 2279, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791690876871409664", "is_retweet": true}, {"created_at": "Sun Apr 10 21:46:07 +0000 2016", "text": "Happy birthday to a personal hero, @DoloresHuerta.\nhttps://t.co/8XlGwOkZ7N", "in_reply_to_screen_name": null, "retweet_count": 1092, "favorite_count": 2769, "source": "Twitter Web Client", "id_str": "719280325206024192", "is_retweet": false}, {"created_at": "Sat Nov 05 13:28:10 +0000 2016", "text": "\"That reporter and I have the same condition. When Mr. Trump made fun of him, that hurt my feelings.\" https://t.co/fOwLxPsa37", "in_reply_to_screen_name": null, "retweet_count": 15550, "favorite_count": 25998, "source": "Media Studio", "id_str": "794894074037866496", "is_retweet": false}, {"created_at": "Wed Oct 05 17:15:50 +0000 2016", "text": "RT @RosieGray: me on Mike Pence winning the debate in an alternate reality where Donald Trump is not the nominee https://t.co/IKPgJWirat", "in_reply_to_screen_name": null, "retweet_count": 415, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783717343633502208", "is_retweet": true}, {"created_at": "Sat Jan 09 15:28:42 +0000 2016", "text": "This father wrote a letter to his daughters to make sure they know nothing should stand in the way of their dreams: https://t.co/8xdnJUE8jP", "in_reply_to_screen_name": null, "retweet_count": 373, "favorite_count": 860, "source": "TweetDeck", "id_str": "685845662257262593", "is_retweet": false}, {"created_at": "Fri Jan 29 23:26:07 +0000 2016", "text": "This campaign, in 100 amazing photos. https://t.co/TYfp7pqjy3 https://t.co/OKMemWJrf9", "in_reply_to_screen_name": null, "retweet_count": 477, "favorite_count": 1079, "source": "TweetDeck", "id_str": "693213565482856448", "is_retweet": false}, {"created_at": "Fri Jan 15 18:10:45 +0000 2016", "text": "On the trail in New Hampshire this week, @billclinton told one of his favorite stories about Hillary:\nhttps://t.co/1D99CMHurl", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 921, "source": "Twitter Web Client", "id_str": "688060770072965121", "is_retweet": false}, {"created_at": "Thu Aug 11 18:25:12 +0000 2016", "text": "\"One of the reasons I asked Tim Kaine to be my running mate is that he...has a record of working across the aisle.\" https://t.co/CNwtLVWl8n", "in_reply_to_screen_name": null, "retweet_count": 1188, "favorite_count": 4328, "source": "TweetDeck", "id_str": "763803468347928577", "is_retweet": false}, {"created_at": "Wed Jun 01 16:54:26 +0000 2016", "text": "Trump's candidacy is built on his business \"credibility.\" But his business record matches his character: His only concern is his own profit.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1265, "favorite_count": 2383, "source": "TweetDeck", "id_str": "738051088478294016", "is_retweet": false}, {"created_at": "Mon May 23 22:20:37 +0000 2016", "text": "We can't defeat ISIS with bigotry and bluster. https://t.co/qyQ2AR9AkH", "in_reply_to_screen_name": null, "retweet_count": 725, "favorite_count": 1668, "source": "Twitter Web Client", "id_str": "734871684470218757", "is_retweet": false}, {"created_at": "Mon Nov 07 21:25:59 +0000 2016", "text": "\"I really believe that America\u2019s best days are still ahead of us if we reach for them together!\u201d \u2014Hillary\u2026 https://t.co/XQBrcWjPlg", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 956, "favorite_count": 2522, "source": "TweetDeck", "id_str": "795739098514391040", "is_retweet": false}, {"created_at": "Fri Jan 15 03:37:36 +0000 2016", "text": "Let\u2019s be clear: Islam isn't our enemy. Hateful rhetoric against Muslims isn't just wrong\u2014it plays into terrorists' hands. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 2296, "favorite_count": 3944, "source": "TweetDeck", "id_str": "687841034009731073", "is_retweet": false}, {"created_at": "Fri Mar 18 14:03:57 +0000 2016", "text": "Nearly a million people have chipped in to power this campaign. Here's why: https://t.co/sz4RezbSg0 https://t.co/147B1D8ZQv", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1832, "source": "TweetDeck", "id_str": "710829093126873088", "is_retweet": false}, {"created_at": "Mon Sep 19 16:45:01 +0000 2016", "text": "RT @HFA: No one gets through life alone. We have to look out for each other and lift each other up. https://t.co/FEStrnjjOO", "in_reply_to_screen_name": null, "retweet_count": 780, "favorite_count": 0, "source": "TweetDeck", "id_str": "777911385200230400", "is_retweet": true}, {"created_at": "Thu Oct 20 03:03:42 +0000 2016", "text": "RT @HFA: Show Donald that love will always come out on top, including on Election Day. Create your own #LoveTrumpsHate video: https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 2139, "favorite_count": 0, "source": "TweetDeck", "id_str": "788938715762655232", "is_retweet": true}, {"created_at": "Mon Apr 25 17:15:47 +0000 2016", "text": "In 1990, explorer and marine biologist Sylvia Earle became the first woman appointed chief scientist at @NOAA. https://t.co/WSDCF3c2je", "in_reply_to_screen_name": null, "retweet_count": 1323, "favorite_count": 3127, "source": "TweetDeck", "id_str": "724648111403077632", "is_retweet": false}, {"created_at": "Sat Jul 23 17:29:10 +0000 2016", "text": "\"Join us. Take out your phone right now and text JOIN to 47246. Or go to https://t.co/L7Dd6Uu8yR.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 536, "favorite_count": 1348, "source": "TweetDeck", "id_str": "756904000381943808", "is_retweet": false}, {"created_at": "Sat Feb 13 20:31:45 +0000 2016", "text": "\"Only Clinton can win in November and is prepared for the nation's highest office.\u201d \u2014The @TB_Times https://t.co/NenxyNe8kf", "in_reply_to_screen_name": null, "retweet_count": 738, "favorite_count": 1682, "source": "TweetDeck", "id_str": "698605500687085569", "is_retweet": false}, {"created_at": "Mon Mar 21 22:01:04 +0000 2016", "text": "Young people should be able to see teaching as a profession that\u2019s both noble and sustainable. https://t.co/yRKz0U7NQ7", "in_reply_to_screen_name": null, "retweet_count": 4300, "favorite_count": 9967, "source": "TweetDeck", "id_str": "712036328268034049", "is_retweet": false}, {"created_at": "Sat Jun 04 20:17:00 +0000 2016", "text": "This week, we saw the REAL @realDonaldTrump. Which story appalled you the most?", "in_reply_to_screen_name": null, "retweet_count": 1402, "favorite_count": 2394, "source": "Twitter Web Client", "id_str": "739189229205499904", "is_retweet": false}, {"created_at": "Thu Sep 08 00:31:54 +0000 2016", "text": "Tonight, Trump is going to try and claim he's ready to be Commander-in-Chief. The facts say otherwise. \n\nFollow @TheBriefing2016 to see why.", "in_reply_to_screen_name": null, "retweet_count": 1087, "favorite_count": 3444, "source": "TweetDeck", "id_str": "773680224936615937", "is_retweet": false}, {"created_at": "Sat May 21 20:05:24 +0000 2016", "text": "This week, Donald Trump proved just how dangerous he'd be as president. https://t.co/wu18YIWuRh", "in_reply_to_screen_name": null, "retweet_count": 2912, "favorite_count": 6248, "source": "TweetDeck", "id_str": "734112880178651136", "is_retweet": false}, {"created_at": "Fri Aug 05 16:24:42 +0000 2016", "text": "\"Trump is not only unqualified for the job, but he may well pose a threat to our national security.\" \u2014Michael Morell https://t.co/zmI3BOCH9Y", "in_reply_to_screen_name": null, "retweet_count": 2840, "favorite_count": 6412, "source": "TweetDeck", "id_str": "761598819238813697", "is_retweet": false}, {"created_at": "Thu Oct 06 14:00:41 +0000 2016", "text": "RT @leedanielsent: #Iwillvote https://t.co/N6LhWblUt5 @HillaryClinton https://t.co/62YhZ2I39R", "in_reply_to_screen_name": null, "retweet_count": 3719, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784030620355792896", "is_retweet": true}, {"created_at": "Fri Jul 29 02:57:59 +0000 2016", "text": "\"We\u2019ve reached a milestone...the first time that a major party has nominated a woman for president.\" \u2014Hillary https://t.co/WizdsD8vgk", "in_reply_to_screen_name": null, "retweet_count": 7938, "favorite_count": 23514, "source": "TweetDeck", "id_str": "758859084166668289", "is_retweet": false}, {"created_at": "Wed Jul 27 02:37:20 +0000 2016", "text": "\u201cThis woman had never been satisfied with the status quo. She always wants to move the ball forward.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1473, "favorite_count": 4915, "source": "TweetDeck", "id_str": "758129111525097472", "is_retweet": false}, {"created_at": "Tue Apr 05 00:39:33 +0000 2016", "text": "How can you stop @GovWalker and the GOP's attacks on education and women's rights?\n\nVote: https://t.co/XmpM1irN6v https://t.co/UnkPhFhXU1", "in_reply_to_screen_name": null, "retweet_count": 928, "favorite_count": 1899, "source": "TweetDeck", "id_str": "717149644443230208", "is_retweet": false}, {"created_at": "Tue Sep 27 02:57:56 +0000 2016", "text": "The presidency isn't a reality show\u2014it's as real as it gets. Make sure you're registered to vote:\u2026 https://t.co/gBZ42fzFnF", "in_reply_to_screen_name": null, "retweet_count": 8632, "favorite_count": 20759, "source": "TweetDeck", "id_str": "780602342890737664", "is_retweet": false}, {"created_at": "Wed Sep 14 16:32:01 +0000 2016", "text": "4. If you were willing to work with Qaddafi\u2014a known terrorist and dictator\u2014is there anyone you aren't willing to make a deal with? Who?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3347, "favorite_count": 5393, "source": "TweetDeck", "id_str": "776096173723615232", "is_retweet": false}, {"created_at": "Fri Nov 04 01:15:16 +0000 2016", "text": "Get out and vote.\nGet everybody you know to vote.\n\nThis is one of the most consequential elections in our lifetimes. https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 817, "favorite_count": 1583, "source": "TweetDeck", "id_str": "794347246418624512", "is_retweet": false}, {"created_at": "Thu Sep 08 23:10:30 +0000 2016", "text": "Together, we\u2019ll face head-on the reality of systemic racism and work to reform our criminal justice system. https://t.co/ZdPJoscLBX", "in_reply_to_screen_name": null, "retweet_count": 954, "favorite_count": 2732, "source": "TweetDeck", "id_str": "774022125510197249", "is_retweet": false}, {"created_at": "Mon Aug 15 17:17:40 +0000 2016", "text": "We\u2019re going to make college debt-free for all and help millions of people struggling with existing student debt: https://t.co/l3h7YDCX3d", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 2284, "source": "TweetDeck", "id_str": "765236024654127104", "is_retweet": false}, {"created_at": "Fri Feb 12 03:11:27 +0000 2016", "text": "It's not enough to only crack down on big banks. We need to go further and tackle other dangerous risks. #DemDebate https://t.co/TY5W0RSXF2", "in_reply_to_screen_name": null, "retweet_count": 955, "favorite_count": 2380, "source": "TweetDeck", "id_str": "697981312423084032", "is_retweet": false}, {"created_at": "Tue Apr 26 15:39:01 +0000 2016", "text": "It\u2019s Primary Day in CT, DE, MD, PA, and RI. If you\u2019re with Hillary, add your name and make a plan to vote today: https://t.co/eFckwXMhOI", "in_reply_to_screen_name": null, "retweet_count": 616, "favorite_count": 1251, "source": "TweetDeck", "id_str": "724986144774086658", "is_retweet": false}, {"created_at": "Mon Jul 18 16:57:33 +0000 2016", "text": "Fixing the mass incarceration crisis.\nDismantling the school-to-prison pipeline.\nHelping the formerly incarcerated.\n\nIt's time to act.", "in_reply_to_screen_name": null, "retweet_count": 1056, "favorite_count": 3389, "source": "TweetDeck", "id_str": "755084102617993221", "is_retweet": false}, {"created_at": "Thu Aug 25 19:39:42 +0000 2016", "text": "The week after 9/11, George W. Bush went to a mosque and declared for everyone to hear that Muslims 'love America just as much as I do.'", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1136, "favorite_count": 2394, "source": "TweetDeck", "id_str": "768895648099921920", "is_retweet": false}, {"created_at": "Fri Nov 04 17:17:53 +0000 2016", "text": "With just 4 days left, join Hillary and @MCuban as they get out the vote in Pittsburgh: https://t.co/IgQyCFKKRY\n\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": null, "retweet_count": 1718, "favorite_count": 5085, "source": "TweetDeck", "id_str": "794589497879044096", "is_retweet": false}, {"created_at": "Sat Jul 30 18:16:30 +0000 2016", "text": "Get live updates from Hillary and @TimKaine's bus tour \u2192 https://t.co/8kbj5eeWmS https://t.co/Y2NJ43ovA3", "in_reply_to_screen_name": null, "retweet_count": 870, "favorite_count": 3635, "source": "Twitter Web Client", "id_str": "759452623468654593", "is_retweet": false}, {"created_at": "Wed Jul 27 23:54:06 +0000 2016", "text": "Thank you, Christine. We're all standing by your side. https://t.co/7WimmvECqU", "in_reply_to_screen_name": null, "retweet_count": 2534, "favorite_count": 6664, "source": "TweetDeck", "id_str": "758450423002959872", "is_retweet": false}, {"created_at": "Fri Jul 22 00:34:04 +0000 2016", "text": ".@MarshaBlackburn has the best words when you're not running for president. #RNCinCLE https://t.co/iSWmSK80Bm", "in_reply_to_screen_name": null, "retweet_count": 2399, "favorite_count": 5019, "source": "TweetDeck", "id_str": "756286150550118401", "is_retweet": false}, {"created_at": "Fri Oct 14 01:07:06 +0000 2016", "text": "Six reasons you need to vote, courtesy of @FLOTUS. https://t.co/LbjrZiLL3C https://t.co/vLZBKik1IC", "in_reply_to_screen_name": null, "retweet_count": 3041, "favorite_count": 8044, "source": "TweetDeck", "id_str": "786735048275980288", "is_retweet": false}, {"created_at": "Sun Feb 07 01:17:21 +0000 2016", "text": "Here we go. #GOPdebate https://t.co/nc5zEljR23", "in_reply_to_screen_name": null, "retweet_count": 1287, "favorite_count": 2934, "source": "TweetDeck", "id_str": "696140660177555456", "is_retweet": false}, {"created_at": "Fri Oct 28 19:04:06 +0000 2016", "text": "\u201cMore than 16.5 million people have already voted in this election.\u201d \u2014Hillary\n\nJoin them: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 502, "favorite_count": 1185, "source": "TweetDeck", "id_str": "792079510384570369", "is_retweet": false}, {"created_at": "Sun Nov 06 12:58:44 +0000 2016", "text": "\u201cThe reason a lot of [Ku Klux] Klan members like Donald Trump is because a lot of what he believes, we believe in.\u201d https://t.co/WcsNiEHBUI", "in_reply_to_screen_name": null, "retweet_count": 4887, "favorite_count": 7835, "source": "TweetDeck", "id_str": "795249055521787904", "is_retweet": false}, {"created_at": "Wed Mar 09 01:21:13 +0000 2016", "text": "Text CONGRATS to 47246 to tell Hillary you\u2019re proud to be on her team tonight.", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 1439, "source": "TweetDeck", "id_str": "707375657286811648", "is_retweet": false}, {"created_at": "Thu Oct 20 15:24:13 +0000 2016", "text": "Our democracy is built on fair elections and peaceful transfer of power. Trump can't threaten that just because he\u2026 https://t.co/NXRPbrjvk8", "in_reply_to_screen_name": null, "retweet_count": 6435, "favorite_count": 17497, "source": "Media Studio", "id_str": "789125071986130945", "is_retweet": false}, {"created_at": "Thu Apr 14 00:14:16 +0000 2016", "text": "Southerners\u2019 votes count as much as everyone else\u2019s\u2014whether you won them or not. https://t.co/wI7qmvOP8A", "in_reply_to_screen_name": null, "retweet_count": 1800, "favorite_count": 2907, "source": "TweetDeck", "id_str": "720404768967958529", "is_retweet": false}, {"created_at": "Thu Mar 17 18:33:49 +0000 2016", "text": "\"An extraordinary power is unleashed when women reach out to their neighbors and find common ground.\"\nhttps://t.co/tvvcwxJKHS", "in_reply_to_screen_name": null, "retweet_count": 2335, "favorite_count": 5133, "source": "Twitter Web Client", "id_str": "710534620148736001", "is_retweet": false}, {"created_at": "Mon Oct 03 02:33:37 +0000 2016", "text": "Newspapers that have endorsed @realDonaldTrump:\n1. ...\n2. ...\n3. (Uh, the National Enquirer?) https://t.co/WWNMSZGeFa", "in_reply_to_screen_name": null, "retweet_count": 3106, "favorite_count": 8127, "source": "TweetDeck", "id_str": "782770554252234752", "is_retweet": false}, {"created_at": "Fri Aug 19 23:19:07 +0000 2016", "text": "This is so ignorant it\u2019s staggering. https://t.co/t2fZl9sqKs", "in_reply_to_screen_name": null, "retweet_count": 9216, "favorite_count": 17013, "source": "TweetDeck", "id_str": "766776538679443456", "is_retweet": false}, {"created_at": "Mon Feb 01 22:33:13 +0000 2016", "text": "Text TONIGHT to 47246 to be one of the first to hear from the campaign after the #iowacaucus results!", "in_reply_to_screen_name": null, "retweet_count": 220, "favorite_count": 428, "source": "Twitter Web Client", "id_str": "694287413011714049", "is_retweet": false}, {"created_at": "Sun Oct 30 18:30:43 +0000 2016", "text": "On November 9, if you want to say you voted for a better future, make a plan to vote now: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1086, "favorite_count": 2999, "source": "TweetDeck", "id_str": "792795884828450816", "is_retweet": false}, {"created_at": "Thu Mar 31 22:41:23 +0000 2016", "text": "On #CesarChavezDay, we honor a champion of the American labor movement who empowered workers everywhere. https://t.co/XU5ma4XEDP", "in_reply_to_screen_name": null, "retweet_count": 2107, "favorite_count": 4786, "source": "TweetDeck", "id_str": "715670353968803840", "is_retweet": false}, {"created_at": "Thu Mar 17 00:53:26 +0000 2016", "text": "Hillary es una l\u00edder que va a luchar para todos. Ella tiene la experiencia y la dedicaci\u00f3n para liderar el pa\u00eds.", "in_reply_to_screen_name": null, "retweet_count": 586, "favorite_count": 1397, "source": "Twitter for iPhone", "id_str": "710267768743063553", "is_retweet": false}, {"created_at": "Fri Aug 19 23:44:49 +0000 2016", "text": "RT @MarlonDMarshall: Donald Trump asks what the African American community has to lose by voting for him. The answer: everything.", "in_reply_to_screen_name": null, "retweet_count": 5371, "favorite_count": 0, "source": "TweetDeck", "id_str": "766783004379348996", "is_retweet": true}, {"created_at": "Mon Feb 29 15:16:49 +0000 2016", "text": "Even presidential candidates get starstruck when meeting their heroes.\nhttps://t.co/20GKVYWBxV", "in_reply_to_screen_name": null, "retweet_count": 827, "favorite_count": 1937, "source": "Twitter Web Client", "id_str": "704324449596604417", "is_retweet": false}, {"created_at": "Sat Jun 11 01:35:08 +0000 2016", "text": "A man with this much contempt and disrespect for women has no business becoming president. https://t.co/eaOpDVixJD", "in_reply_to_screen_name": null, "retweet_count": 7234, "favorite_count": 12745, "source": "Twitter for iPhone", "id_str": "741443616594395137", "is_retweet": false}, {"created_at": "Wed Jul 06 19:51:42 +0000 2016", "text": "Praying for a safe Eid Al-Fitr. My heart breaks for families struck by terror in Turkey, Iraq, Saudi Arabia, and Bangladesh this Ramadan. -H", "in_reply_to_screen_name": null, "retweet_count": 2609, "favorite_count": 7008, "source": "TweetDeck", "id_str": "750779275217932288", "is_retweet": false}, {"created_at": "Thu Aug 11 18:06:08 +0000 2016", "text": "\"As president, I will stand up to China and anyone else who tries to take advantage of American workers and companies.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 964, "favorite_count": 4145, "source": "TweetDeck", "id_str": "763798669971886080", "is_retweet": false}, {"created_at": "Thu Sep 29 18:33:02 +0000 2016", "text": "A four-year college should not be the only path to a middle-class life: https://t.co/6t1rONo6DW", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 671, "favorite_count": 2118, "source": "TweetDeck", "id_str": "781562444447641600", "is_retweet": false}, {"created_at": "Wed May 04 16:50:59 +0000 2016", "text": "\"Everything I say, I'm going to do, folks.\" \u2014Trump\n\nHere's what the presumptive @GOP nominee would do as president.\nhttps://t.co/SG6qjpzJ8E", "in_reply_to_screen_name": null, "retweet_count": 4015, "favorite_count": 4617, "source": "Twitter Web Client", "id_str": "727903361983356928", "is_retweet": false}, {"created_at": "Sat Sep 17 19:49:56 +0000 2016", "text": "Let's be clear: Nothing\u2014including an audit\u2014is preventing Trump from releasing his tax returns. https://t.co/mpGiRIaPgD", "in_reply_to_screen_name": null, "retweet_count": 5864, "favorite_count": 10456, "source": "TweetDeck", "id_str": "777233144093310976", "is_retweet": false}, {"created_at": "Wed Sep 14 02:57:51 +0000 2016", "text": "\"You don't grade the presidency on a curve.\" \u2014@POTUS https://t.co/gbywfNfrQq", "in_reply_to_screen_name": null, "retweet_count": 1648, "favorite_count": 4409, "source": "TweetDeck", "id_str": "775891280220028928", "is_retweet": false}, {"created_at": "Fri Jul 15 15:45:47 +0000 2016", "text": "If you like Donald Trump, you\u2019re going to love his choice for vice president. https://t.co/5F5jIz89HA", "in_reply_to_screen_name": null, "retweet_count": 2942, "favorite_count": 4853, "source": "TweetDeck", "id_str": "753978880097222656", "is_retweet": false}, {"created_at": "Thu Aug 25 18:27:51 +0000 2016", "text": "America has a lot to lose by electing Trump. But there\u2019s one group in particular who has everything to gain. https://t.co/A6DFHnMOjd", "in_reply_to_screen_name": null, "retweet_count": 1436, "favorite_count": 2879, "source": "TweetDeck", "id_str": "768877567285850112", "is_retweet": false}, {"created_at": "Thu Jul 28 03:11:37 +0000 2016", "text": "\u201cShe sat with me in the Situation Room and forcefully argued in favor of the mission that took out Osama bin Laden\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1484, "favorite_count": 4842, "source": "TweetDeck", "id_str": "758500126730162176", "is_retweet": false}, {"created_at": "Mon Oct 24 17:59:27 +0000 2016", "text": "Last night, Trump called a military effort to push terrorists out of Mosul a \u201ctotal disaster.\u201d\n\nThat\u2019s dangerous. https://t.co/1MzyauM3Nw", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 755, "favorite_count": 1567, "source": "TweetDeck", "id_str": "790613689447682048", "is_retweet": false}, {"created_at": "Sat Oct 22 21:56:40 +0000 2016", "text": "\"We\u2019re going to make public colleges and universities tuition-free for families making less than $125,000 a year.\u201d https://t.co/ICfynSCYQ7", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1695, "favorite_count": 5133, "source": "TweetDeck", "id_str": "789948612067426305", "is_retweet": false}, {"created_at": "Sun Feb 28 00:11:37 +0000 2016", "text": "We did it, South Carolina. https://t.co/7qGDnavcID", "in_reply_to_screen_name": null, "retweet_count": 4242, "favorite_count": 11027, "source": "TweetDeck", "id_str": "703734263041159168", "is_retweet": false}, {"created_at": "Sat Sep 03 18:54:45 +0000 2016", "text": "RT @johnpodesta: Hillary will deliver on Paris &amp; go further to cut emissions, build renewable energy to power every home in America. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 1441, "favorite_count": 0, "source": "TweetDeck", "id_str": "772145826579767296", "is_retweet": true}, {"created_at": "Thu Jun 02 12:47:12 +0000 2016", "text": "\u201cIt\u2019s O.K., just max out your credit card.\" \u2014Trump University on how to pay for classes https://t.co/oz5ycvA2J1", "in_reply_to_screen_name": null, "retweet_count": 1047, "favorite_count": 1721, "source": "TweetDeck", "id_str": "738351259917422593", "is_retweet": false}, {"created_at": "Mon Mar 07 23:54:42 +0000 2016", "text": "Every American should have access to higher education without having to go into debt. https://t.co/A4pWb3fOf4 #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1274, "source": "TweetDeck", "id_str": "706991494150885376", "is_retweet": false}, {"created_at": "Thu Oct 13 16:53:38 +0000 2016", "text": "\"Now is the time for all of us to stand up and say, enough is enough.\u201d \u2014@FLOTUS on Trump https://t.co/rLgM6tYu8V", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2256, "favorite_count": 4131, "source": "TweetDeck", "id_str": "786610860303192064", "is_retweet": false}, {"created_at": "Mon Nov 07 03:57:24 +0000 2016", "text": "Pantsuit up. https://t.co/3TKJ4H68Kz https://t.co/vQY0YeDzEB", "in_reply_to_screen_name": null, "retweet_count": 6232, "favorite_count": 20661, "source": "TweetDeck", "id_str": "795475213739769857", "is_retweet": false}, {"created_at": "Thu Mar 31 23:25:46 +0000 2016", "text": "Chip in $1 and get this sticker if you agree: We can\u2019t afford a President Trump. https://t.co/CWvQntNYK3", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 1048, "source": "TweetDeck", "id_str": "715681523643625473", "is_retweet": false}, {"created_at": "Mon Oct 10 19:40:54 +0000 2016", "text": "Donald Trump actually stood on a debate stage and said wages in America are too high.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1117, "favorite_count": 2847, "source": "TweetDeck", "id_str": "785565789789315072", "is_retweet": false}, {"created_at": "Fri Oct 28 02:03:12 +0000 2016", "text": "We can fight for the country we want and make history at the same time. Are you ready to vote?\u2026 https://t.co/vvYp0DU6Ev", "in_reply_to_screen_name": null, "retweet_count": 2989, "favorite_count": 8706, "source": "TweetDeck", "id_str": "791822595872198656", "is_retweet": false}, {"created_at": "Tue Oct 04 15:51:03 +0000 2016", "text": "Imagine Donald Trump's most hateful rhetoric signed into law. Mike Pence's record shows that it could happen. https://t.co/MnpZstqYTP", "in_reply_to_screen_name": null, "retweet_count": 1696, "favorite_count": 3091, "source": "TweetDeck", "id_str": "783333621201600512", "is_retweet": false}, {"created_at": "Wed Jul 27 16:10:04 +0000 2016", "text": "RT @timkaine: .@realDonaldTrump the Hotel Roanoke AC is fine &amp; you should pay them for it. You're the one who brought the hot air! https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 2263, "favorite_count": 0, "source": "TweetDeck", "id_str": "758333642456309761", "is_retweet": true}, {"created_at": "Wed Aug 31 14:32:05 +0000 2016", "text": "RT this if you agree. https://t.co/32mjc23tME", "in_reply_to_screen_name": null, "retweet_count": 8179, "favorite_count": 11474, "source": "TweetDeck", "id_str": "770992562618368000", "is_retweet": false}, {"created_at": "Wed Aug 31 12:22:18 +0000 2016", "text": "A big, beautiful list of literally every tweet Donald Trump has sent about Mexico over the last two years. https://t.co/WCKL7oNdpg", "in_reply_to_screen_name": null, "retweet_count": 10255, "favorite_count": 11958, "source": "TweetDeck", "id_str": "770959899186561024", "is_retweet": false}, {"created_at": "Thu Oct 27 15:28:28 +0000 2016", "text": "Don't boo, vote early! Find out when you can vote in your state at https://t.co/tTgeqxNqYm. https://t.co/chXIWlE3L2", "in_reply_to_screen_name": null, "retweet_count": 1752, "favorite_count": 4211, "source": "TweetDeck", "id_str": "791662860367753216", "is_retweet": false}, {"created_at": "Mon Nov 07 17:23:00 +0000 2016", "text": "\"Today, I'm asking for your vote. Tomorrow, let's make history together.\" \u2014Hillary https://t.co/jfd3CXu1CS https://t.co/TFyaTifghr", "in_reply_to_screen_name": null, "retweet_count": 22293, "favorite_count": 44509, "source": "Media Studio", "id_str": "795677947088670721", "is_retweet": false}, {"created_at": "Sun Feb 07 03:44:16 +0000 2016", "text": "Only reaction to #GOPdebate? Bring it on. https://t.co/GifU4CEhIM", "in_reply_to_screen_name": null, "retweet_count": 1185, "favorite_count": 3180, "source": "TweetDeck", "id_str": "696177630199083008", "is_retweet": false}, {"created_at": "Mon Oct 03 00:08:11 +0000 2016", "text": "RT @businessinsider: [Exclusive] \u2014 @KingJames: Why I'm endorsing @HillaryClinton for president https://t.co/WLMcbeOxs0 https://t.co/cLQG3Yp\u2026", "in_reply_to_screen_name": null, "retweet_count": 3945, "favorite_count": 0, "source": "TweetDeck", "id_str": "782733950875828224", "is_retweet": true}, {"created_at": "Tue Mar 22 02:11:36 +0000 2016", "text": ".@andersoncooper asked: Do you think it's sexist when you're told to smile or stop yelling?\nhttps://t.co/vwXl3BelOi", "in_reply_to_screen_name": null, "retweet_count": 2106, "favorite_count": 4857, "source": "Twitter Web Client", "id_str": "712099377553125376", "is_retweet": false}, {"created_at": "Sun Jan 10 15:21:19 +0000 2016", "text": "We need to make it easier for parents to balance the demands of work and family. https://t.co/3ZRKeWPCAx", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 3338, "source": "Twitter for iPhone", "id_str": "686206188778852352", "is_retweet": false}, {"created_at": "Thu Jul 28 02:09:02 +0000 2016", "text": "RT @timkaine: \"I humbly accept my party's nomination to be vice president of the United States!\" \u2014Tim https://t.co/aCUajLy29q", "in_reply_to_screen_name": null, "retweet_count": 1762, "favorite_count": 0, "source": "TweetDeck", "id_str": "758484379148558336", "is_retweet": true}, {"created_at": "Tue Aug 16 01:01:58 +0000 2016", "text": "Vice President @JoeBiden had the keys to our Instagram today. Check it out: https://t.co/N09gfgmFmN https://t.co/W6rlqb9C6N", "in_reply_to_screen_name": null, "retweet_count": 1007, "favorite_count": 4570, "source": "TweetDeck", "id_str": "765352872016023552", "is_retweet": false}, {"created_at": "Thu Oct 20 01:11:55 +0000 2016", "text": "The Supreme Court needs to stand on the side of the American people, not on the side of the powerful and wealthy. https://t.co/A9Q1R3xWrm", "in_reply_to_screen_name": null, "retweet_count": 1709, "favorite_count": 5046, "source": "TweetDeck", "id_str": "788910585207459840", "is_retweet": false}, {"created_at": "Thu May 26 20:52:54 +0000 2016", "text": "Born on this day in 1951, Dr. Sally Ride was the first American woman &amp; first LGBT astronaut in space. #SallyRideDay https://t.co/N0ckF5Ew7x", "in_reply_to_screen_name": null, "retweet_count": 2930, "favorite_count": 6487, "source": "TweetDeck", "id_str": "735936775181479937", "is_retweet": false}, {"created_at": "Sun Nov 06 15:35:10 +0000 2016", "text": "RT @creynoldsnc: No one keeps us more informed or entertained from the road than @NickMerrill. We miss him in HQ, but this helps:  https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "795288421812019205", "is_retweet": true}, {"created_at": "Fri Jul 29 03:26:28 +0000 2016", "text": "\"She never let me back down from any challenge...she was right. You have to stand up to bullies.\" \u2014Hillary on advice from her mom, Dorothy", "in_reply_to_screen_name": null, "retweet_count": 2477, "favorite_count": 9746, "source": "TweetDeck", "id_str": "758866254333489152", "is_retweet": false}, {"created_at": "Tue Jan 05 16:32:06 +0000 2016", "text": "\"We need more than an ally. We need a champion, and Hillary Clinton is that champion\u200a.\" Thank you, @NARAL &amp; @ilyseh. https://t.co/rkzCNiyMbS", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 690, "source": "TweetDeck", "id_str": "684412065969213440", "is_retweet": false}, {"created_at": "Thu Sep 15 21:40:06 +0000 2016", "text": "RT @Jorge_Silva: Celebrating #HispanicHeritageMonth with @HillaryClinton's quotes read by @DNCLatinos. \ud83c\uddfa\ud83c\uddf8 https://t.co/BEPgn0hQNd", "in_reply_to_screen_name": null, "retweet_count": 1371, "favorite_count": 0, "source": "TweetDeck", "id_str": "776536090643689472", "is_retweet": true}, {"created_at": "Fri Nov 04 01:18:16 +0000 2016", "text": "This election isn\u2019t just about who Trump is\u2014it\u2019s about who WE are.\n\nAre you ready to vote? https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 933, "favorite_count": 2813, "source": "TweetDeck", "id_str": "794347999971393545", "is_retweet": false}, {"created_at": "Fri Aug 05 12:50:31 +0000 2016", "text": "We don't know why Trump and Putin praise each other so much and share many foreign policies.\n\nWe'll let you guess.\nhttps://t.co/N6ySNJ3zE5", "in_reply_to_screen_name": null, "retweet_count": 7932, "favorite_count": 12596, "source": "Twitter Web Client", "id_str": "761544914144403456", "is_retweet": false}, {"created_at": "Mon Oct 24 17:39:53 +0000 2016", "text": "\"Racism and sexism and bigotry have no place in our country.\u201d \u2014@ElizabethForMA in New Hampshire", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 871, "favorite_count": 1950, "source": "TweetDeck", "id_str": "790608765078867968", "is_retweet": false}, {"created_at": "Wed Jul 20 02:37:10 +0000 2016", "text": "It's not brain surgery: Republicans tend to be a bit more truth-y when the presidency isn't on the line. #RNCinCLE https://t.co/LX3y5Iq7p7", "in_reply_to_screen_name": null, "retweet_count": 4112, "favorite_count": 11345, "source": "TweetDeck", "id_str": "755592356146085888", "is_retweet": false}, {"created_at": "Wed May 18 13:27:44 +0000 2016", "text": "It's middle-class families that need a raise\u2014not millionaires and billionaires. https://t.co/1rTh78IFs2", "in_reply_to_screen_name": null, "retweet_count": 813, "favorite_count": 1544, "source": "TweetDeck", "id_str": "732925640354172932", "is_retweet": false}, {"created_at": "Sun Jan 31 17:29:04 +0000 2016", "text": "\u201cSpeaking is hard for me. But, come January, I want to say these two words: Madam President.\u201d \u2014@gabbygiffords\nhttps://t.co/vMFNFTwy49", "in_reply_to_screen_name": null, "retweet_count": 1542, "favorite_count": 3033, "source": "Twitter Web Client", "id_str": "693848484114362368", "is_retweet": false}, {"created_at": "Sat Jun 18 20:57:24 +0000 2016", "text": "Donald Trump launched his campaign one year ago this week. And what a year it\u2019s been. https://t.co/ag02ZD9QOP", "in_reply_to_screen_name": null, "retweet_count": 998, "favorite_count": 2509, "source": "TweetDeck", "id_str": "744272825406586881", "is_retweet": false}, {"created_at": "Wed Sep 28 15:15:42 +0000 2016", "text": "RT @timkaine: Making calls for Hillary is easy!\n1. Go to https://t.co/Q6ysvu6KjU\n2. Pick a state\n3. Follow the script https://t.co/bKlGbbKS\u2026", "in_reply_to_screen_name": null, "retweet_count": 1693, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781150396966404096", "is_retweet": true}, {"created_at": "Sun Aug 07 16:35:53 +0000 2016", "text": "Three-time world all-around champion @Simone_Biles is set to make history at the Olympics. Good luck, Simone! https://t.co/JkiQ8hc1Xt", "in_reply_to_screen_name": null, "retweet_count": 3511, "favorite_count": 13720, "source": "TweetDeck", "id_str": "762326407649329152", "is_retweet": false}, {"created_at": "Fri Jul 29 17:34:31 +0000 2016", "text": "\u201cAs of tomorrow, we have 100 days to make our case to America. \n\nSo what better place to kick off this campaign than where it all started?\"", "in_reply_to_screen_name": null, "retweet_count": 1386, "favorite_count": 6935, "source": "TweetDeck", "id_str": "759079674064560128", "is_retweet": false}, {"created_at": "Sat Oct 22 17:21:47 +0000 2016", "text": "\"Hillary Clinton is far better than Trump or anyone else running. She should be president.\" \u2014@PhillyDotCom https://t.co/HCVjLSXW0r", "in_reply_to_screen_name": null, "retweet_count": 2323, "favorite_count": 7811, "source": "Twitter Web Client", "id_str": "789879437991043072", "is_retweet": false}, {"created_at": "Tue May 10 13:00:04 +0000 2016", "text": "\"I would borrow knowing that if the economy crashed, I could make a deal.\" \u2014@realDonaldTrump\nhttps://t.co/yXKufwOU6g", "in_reply_to_screen_name": null, "retweet_count": 1250, "favorite_count": 1675, "source": "Twitter Web Client", "id_str": "730019573500510208", "is_retweet": false}, {"created_at": "Wed Apr 06 14:29:51 +0000 2016", "text": "Glad to hear Pfizer is calling off the merger. We need to close the loopholes that let corporations escape paying their taxes. -H", "in_reply_to_screen_name": null, "retweet_count": 893, "favorite_count": 2436, "source": "TweetDeck", "id_str": "717720983323480065", "is_retweet": false}, {"created_at": "Sun Nov 06 21:43:26 +0000 2016", "text": "\"I love our country, and I believe in our people, and I will never, ever quit on you. No matter what.\u201d \u2014Hillary in Ohio", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1383, "favorite_count": 3071, "source": "TweetDeck", "id_str": "795381101665648642", "is_retweet": false}, {"created_at": "Thu Oct 13 16:45:30 +0000 2016", "text": "\"This was not just 'locker room banter.' This was a powerful individual speaking freely &amp; openly about predatory behavior\u201d \u2014@FLOTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1082, "favorite_count": 2117, "source": "TweetDeck", "id_str": "786608813034070020", "is_retweet": false}, {"created_at": "Wed Oct 05 01:08:42 +0000 2016", "text": "Thanks for the kind words, Mike. #VPDebate https://t.co/DfObNG1PM3", "in_reply_to_screen_name": null, "retweet_count": 8410, "favorite_count": 18116, "source": "TweetDeck", "id_str": "783473957617954820", "is_retweet": false}, {"created_at": "Tue Jul 26 17:22:33 +0000 2016", "text": "Day one of the Democratic Convention is in the books. Catch up on what you missed here: https://t.co/xEMN7oRCxN #DemsInPHL", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 1844, "source": "TweetDeck", "id_str": "757989498982658049", "is_retweet": false}, {"created_at": "Tue Apr 19 22:13:54 +0000 2016", "text": "\u00bfC\u00f3mo funciona el sistema de delegados? Nuestro experto en delegados nos explica en esta entrevista. https://t.co/ylM6d6mDoy", "in_reply_to_screen_name": null, "retweet_count": 280, "favorite_count": 570, "source": "TweetDeck", "id_str": "722548805732798464", "is_retweet": false}, {"created_at": "Fri Sep 30 22:50:45 +0000 2016", "text": "RT @BernieSanders: It's pretty telling that Donald Trump thinks the problem with his sexist tweets is the time that they were sent. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 18593, "favorite_count": 0, "source": "TweetDeck", "id_str": "781989690660556800", "is_retweet": true}, {"created_at": "Mon Mar 07 19:58:26 +0000 2016", "text": "Myrlie, you're right. There's still work to do in the struggle for equality &amp; justice. Grateful for your support. https://t.co/UAhwISfGDZ -H", "in_reply_to_screen_name": null, "retweet_count": 635, "favorite_count": 1310, "source": "TweetDeck", "id_str": "706932038029459458", "is_retweet": false}, {"created_at": "Fri Sep 16 01:06:14 +0000 2016", "text": "Despite what Donald Trump may say, immigrants are not rapists and criminals.", "in_reply_to_screen_name": null, "retweet_count": 1725, "favorite_count": 5099, "source": "TweetDeck", "id_str": "776587969138401280", "is_retweet": false}, {"created_at": "Thu Sep 01 16:45:27 +0000 2016", "text": "\"Trump, the self-proclaimed tough negotiator, not only choked but openly lied about choking.\" https://t.co/lDCNMIpP7r", "in_reply_to_screen_name": null, "retweet_count": 2622, "favorite_count": 5156, "source": "TweetDeck", "id_str": "771388511752716289", "is_retweet": false}, {"created_at": "Wed Jun 08 04:14:26 +0000 2016", "text": "Don\u2019t let anyone tell you that great things can\u2019t happen in America. https://t.co/dtgjwmcfMm", "in_reply_to_screen_name": null, "retweet_count": 7341, "favorite_count": 21340, "source": "TweetDeck", "id_str": "740396544403378176", "is_retweet": false}, {"created_at": "Wed Sep 28 19:40:53 +0000 2016", "text": "Go to https://t.co/VkVm51nWIY to see how much Hillary\u2019s college plan could help you save.", "in_reply_to_screen_name": null, "retweet_count": 852, "favorite_count": 1891, "source": "TweetDeck", "id_str": "781217133388759040", "is_retweet": false}, {"created_at": "Mon Sep 12 22:09:34 +0000 2016", "text": "If you won\u2019t say the KKK is deplorable, you have no business running the country. https://t.co/mFut8Qrz9A", "in_reply_to_screen_name": null, "retweet_count": 14475, "favorite_count": 26303, "source": "TweetDeck", "id_str": "775456345474695168", "is_retweet": false}, {"created_at": "Sat Nov 05 18:04:18 +0000 2016", "text": "RT @RobbyMook: Despite rain, thousands here in Pembroke Pines to VOTE EARLY. We are soaked but psyched! https://t.co/kylJKXREz3", "in_reply_to_screen_name": null, "retweet_count": 2664, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794963564805103620", "is_retweet": true}, {"created_at": "Mon May 02 02:31:12 +0000 2016", "text": "If we're going to build strong communities and help our kids succeed, we need to respect working parents.\nhttps://t.co/eUjn6mGJC6", "in_reply_to_screen_name": null, "retweet_count": 1190, "favorite_count": 2477, "source": "Twitter Web Client", "id_str": "726962211290120192", "is_retweet": false}, {"created_at": "Wed Oct 26 19:33:16 +0000 2016", "text": "More than 10,000,000 Americans have already voted in this election.\n\nYou can make it 10,000,001: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 646, "favorite_count": 1514, "source": "TweetDeck", "id_str": "791362075423571969", "is_retweet": false}, {"created_at": "Fri Jul 29 01:50:02 +0000 2016", "text": "About to head out and accept your nomination for president. I\u2019m so grateful to everyone who made this moment possible. -H", "in_reply_to_screen_name": null, "retweet_count": 7404, "favorite_count": 33505, "source": "TweetDeck", "id_str": "758841983330725888", "is_retweet": false}, {"created_at": "Tue Sep 27 22:30:27 +0000 2016", "text": "Both candidates were asked about how they'd confront racial injustice. Only one had a real answer. https://t.co/sjnEokckis", "in_reply_to_screen_name": null, "retweet_count": 1660, "favorite_count": 4943, "source": "TweetDeck", "id_str": "780897419462602752", "is_retweet": false}, {"created_at": "Fri Jul 01 21:20:26 +0000 2016", "text": "La evidencia muestra que Trump es un p\u00e9simo empresario \u00bfpor qu\u00e9 debemos creer \u00e9l sabr\u00e1 manejar la econom\u00eda del pa\u00eds? https://t.co/GCO9ICi1hj", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 1548, "source": "TweetDeck", "id_str": "748989663646322688", "is_retweet": false}, {"created_at": "Thu Apr 14 01:28:16 +0000 2016", "text": "Environmental justice isn't just a public health issue\u2014it's a civil rights issue. https://t.co/CJVWY0NXHK", "in_reply_to_screen_name": null, "retweet_count": 604, "favorite_count": 1129, "source": "TweetDeck", "id_str": "720423395314286592", "is_retweet": false}, {"created_at": "Sat Oct 29 20:42:39 +0000 2016", "text": "\"On January 20, we\u2019re going to have a new president. I will be proud to build on the progress we\u2019ve made under @POTUS and go even further.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1477, "favorite_count": 4858, "source": "TweetDeck", "id_str": "792466701774356480", "is_retweet": false}, {"created_at": "Sat Jan 02 23:15:25 +0000 2016", "text": "It's outrageous that many U.S. moms have to go back to work a few weeks after having a baby\u2014and too many dads get no parental leave at all.", "in_reply_to_screen_name": null, "retweet_count": 1308, "favorite_count": 3942, "source": "Twitter for iPhone", "id_str": "683426400452370433", "is_retweet": false}, {"created_at": "Wed Mar 23 18:53:37 +0000 2016", "text": "\"We can\u2019t let fear stop us from doing what\u2019s necessary to keep us safe\u2014nor let it push us into reckless actions that make us less safe.\"", "in_reply_to_screen_name": null, "retweet_count": 789, "favorite_count": 1676, "source": "TweetDeck", "id_str": "712713931379359744", "is_retweet": false}, {"created_at": "Sat Oct 29 15:08:22 +0000 2016", "text": "RT @HFA: Yes she can. https://t.co/SvSvlg48vI https://t.co/cuSUeBOO5R", "in_reply_to_screen_name": null, "retweet_count": 2031, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "792382575767646210", "is_retweet": true}, {"created_at": "Thu Feb 18 03:04:47 +0000 2016", "text": "President Trump? Cruz? Rubio? Carson? https://t.co/dX1uXmHmkK #GOPTownHall #TrumpSCTownHall https://t.co/H9HaAOYyY6", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 1932, "source": "TweetDeck", "id_str": "700153963866386432", "is_retweet": false}, {"created_at": "Tue Sep 06 18:31:03 +0000 2016", "text": "63 days left.\n\nWatch live as Hillary hits the trail in Tampa \u2192 https://t.co/LZD1Asr7TS", "in_reply_to_screen_name": null, "retweet_count": 711, "favorite_count": 2455, "source": "TweetDeck", "id_str": "773227026333433856", "is_retweet": false}, {"created_at": "Sun Sep 25 14:11:28 +0000 2016", "text": "Meet three women who inspired Hillary to become the person she is today: https://t.co/1O4rw3ecBH https://t.co/Df9X0o5E6h", "in_reply_to_screen_name": null, "retweet_count": 1725, "favorite_count": 5812, "source": "TweetDeck", "id_str": "780047067389517824", "is_retweet": false}, {"created_at": "Sun Nov 06 16:39:22 +0000 2016", "text": "We are better than bigotry, fear, and hate.\n\nShare this if you agree. https://t.co/3TKJ4H68Kz https://t.co/P3XekjLyza", "in_reply_to_screen_name": null, "retweet_count": 6446, "favorite_count": 11661, "source": "TweetDeck", "id_str": "795304578984067073", "is_retweet": false}, {"created_at": "Thu Sep 29 17:46:13 +0000 2016", "text": "The images from the train derailment in NJ are horrifying. My prayers are with those who lost loved ones and the dozens who were injured. -H", "in_reply_to_screen_name": null, "retweet_count": 2048, "favorite_count": 9050, "source": "TweetDeck", "id_str": "781550664631586816", "is_retweet": false}, {"created_at": "Thu Sep 29 21:36:29 +0000 2016", "text": "\u201cThis is not me just going through the motions here.\n\nI really, really, really want to elect Hillary.\u201d \u2014@POTUS:\u2026 https://t.co/rTuksEME3r", "in_reply_to_screen_name": null, "retweet_count": 3525, "favorite_count": 8787, "source": "Media Studio", "id_str": "781608611063721984", "is_retweet": false}, {"created_at": "Fri Aug 26 23:21:16 +0000 2016", "text": "Happy National Dog Day! https://t.co/qmpQsNQxGL", "in_reply_to_screen_name": null, "retweet_count": 3818, "favorite_count": 17822, "source": "Twitter for iPhone", "id_str": "769313795416219648", "is_retweet": false}, {"created_at": "Tue Oct 11 15:39:13 +0000 2016", "text": "RT @rtraister: HRC unveils plan to tackle deep poverty. Everything about this, at this stage of the race, is remarkable. https://t.co/dEGWh\u2026", "in_reply_to_screen_name": null, "retweet_count": 2042, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785867358745354240", "is_retweet": true}, {"created_at": "Mon Mar 14 14:51:43 +0000 2016", "text": "You don\u2019t make America great by getting rid of everything that made America great in the first place. https://t.co/zfpkYT3UTD", "in_reply_to_screen_name": null, "retweet_count": 3463, "favorite_count": 7740, "source": "TweetDeck", "id_str": "709391565186330624", "is_retweet": false}, {"created_at": "Tue Feb 02 05:07:36 +0000 2016", "text": "Muchas gracias a todos los que trabajaron tanto en Iowa. Ma\u00f1ana continuaremos luchando.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 686, "favorite_count": 1646, "source": "TweetDeck", "id_str": "694386662969905152", "is_retweet": false}, {"created_at": "Thu Oct 20 01:26:52 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump went to Mexico, got beat in the room, lied about it, and then pretended it never happened. #debatenight h\u2026", "in_reply_to_screen_name": null, "retweet_count": 1592, "favorite_count": 0, "source": "TweetDeck", "id_str": "788914346403454976", "is_retweet": true}, {"created_at": "Tue Sep 20 16:40:10 +0000 2016", "text": "Donald Trump is using his foundation\u2014funded by other people's money\u2014to settle lawsuits. https://t.co/2LRtZBls9A", "in_reply_to_screen_name": null, "retweet_count": 3942, "favorite_count": 5515, "source": "TweetDeck", "id_str": "778272551659147265", "is_retweet": false}, {"created_at": "Wed Aug 17 17:51:54 +0000 2016", "text": "The Trump Loophole would let millionaires cut their tax rates in half and do nothing for 99.8% of Americans. https://t.co/xmbflUy84w", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 948, "favorite_count": 1710, "source": "TweetDeck", "id_str": "765969414554542080", "is_retweet": false}, {"created_at": "Thu Aug 18 22:36:26 +0000 2016", "text": "Glad to see that the Justice Department is ending the use of private prisons. This is the right step forward. -H https://t.co/5IxHvGULtR", "in_reply_to_screen_name": null, "retweet_count": 3163, "favorite_count": 10678, "source": "TweetDeck", "id_str": "766403410090483712", "is_retweet": false}, {"created_at": "Sat Jul 23 17:12:51 +0000 2016", "text": "\"After everything we saw at the Republican Convention...being here with you on this beautiful day is like a breath of fresh air.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 3408, "source": "TweetDeck", "id_str": "756899892212166656", "is_retweet": false}, {"created_at": "Tue Jun 14 16:36:11 +0000 2016", "text": "\"It matters what we do, not just what we say. It didn\u2019t matter what we called bin Laden\u2014it mattered that we got bin Laden.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1215, "favorite_count": 3464, "source": "TweetDeck", "id_str": "742757536818995200", "is_retweet": false}, {"created_at": "Sun Jan 17 03:06:40 +0000 2016", "text": "\"I\u2019ll fight to close the loophole that the Charleston shooter slipped through when he bought his gun.\" \u2014Hillary #HRCinSC", "in_reply_to_screen_name": null, "retweet_count": 537, "favorite_count": 1455, "source": "TweetDeck", "id_str": "688558022940061700", "is_retweet": false}, {"created_at": "Wed Aug 24 20:05:45 +0000 2016", "text": "Thinking about the people of both Italy and Myanmar as they respond to today's earthquakes. My heart goes out to the victims\u2019 families. -H", "in_reply_to_screen_name": null, "retweet_count": 2986, "favorite_count": 12259, "source": "TweetDeck", "id_str": "768539813913985024", "is_retweet": false}, {"created_at": "Thu May 12 00:37:48 +0000 2016", "text": "This election isn\u2019t a reality show.\nhttps://t.co/48MePw25Sz", "in_reply_to_screen_name": null, "retweet_count": 2070, "favorite_count": 3030, "source": "Twitter Web Client", "id_str": "730557554644770817", "is_retweet": false}, {"created_at": "Fri Sep 16 13:59:10 +0000 2016", "text": "Barack Obama was born in America, plain and simple.\n\nDonald Trump owes him and the American people an apology.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1359, "favorite_count": 2749, "source": "TweetDeck", "id_str": "776782482352009216", "is_retweet": false}, {"created_at": "Thu Jun 23 00:56:45 +0000 2016", "text": "It\u2019s ridiculous that teachers and nurses have a higher tax rate than many hedge fund managers. https://t.co/oZp5efgjzV", "in_reply_to_screen_name": null, "retweet_count": 3264, "favorite_count": 7573, "source": "TweetDeck", "id_str": "745782613797969920", "is_retweet": false}, {"created_at": "Thu Oct 20 01:33:04 +0000 2016", "text": "RT @TheBriefing2016: There's no question Russia's trying to put their thumb on the scales for Trump. There is a question of why Trump is de\u2026", "in_reply_to_screen_name": null, "retweet_count": 1209, "favorite_count": 0, "source": "TweetDeck", "id_str": "788915907313762312", "is_retweet": true}, {"created_at": "Thu Oct 20 01:25:35 +0000 2016", "text": "We are not going to build a wall and deport 16 million people. That's not happening. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 6276, "favorite_count": 16420, "source": "TweetDeck", "id_str": "788914026940104709", "is_retweet": false}, {"created_at": "Sun Aug 28 19:40:35 +0000 2016", "text": "We're stronger together\u2014and the diversity of our athletes in Rio proved it.\nhttps://t.co/YYflz51Y9Y", "in_reply_to_screen_name": null, "retweet_count": 2270, "favorite_count": 7760, "source": "Twitter Web Client", "id_str": "769983034464563200", "is_retweet": false}, {"created_at": "Mon Oct 10 01:33:26 +0000 2016", "text": "Americans deserve a real plan to expand access to health care and get costs down. https://t.co/6J5vpfTxhs #debate", "in_reply_to_screen_name": null, "retweet_count": 1313, "favorite_count": 3697, "source": "TweetDeck", "id_str": "785292120957550592", "is_retweet": false}, {"created_at": "Thu Jan 21 21:06:10 +0000 2016", "text": "33,000 people are killed by guns every year. We\u2019re better than that\u2014we need commonsense reform now.", "in_reply_to_screen_name": null, "retweet_count": 824, "favorite_count": 1864, "source": "TweetDeck", "id_str": "690279239459938304", "is_retweet": false}, {"created_at": "Fri Sep 30 16:35:25 +0000 2016", "text": "RT @HFA: \"I intend to make sure that 10% of @AmeriCorps slots go to Americans over the age of 55.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 588, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781895235475472384", "is_retweet": true}, {"created_at": "Thu Sep 08 14:28:09 +0000 2016", "text": "The next time Donald Trump throws a temper tantrum, imagine if he had the nuclear codes. https://t.co/m11adVj9v8", "in_reply_to_screen_name": null, "retweet_count": 5155, "favorite_count": 8787, "source": "Twitter Web Client", "id_str": "773890674521440256", "is_retweet": false}, {"created_at": "Mon Jun 13 14:46:48 +0000 2016", "text": "\"We cannot demonize, demagogue, and declare war on an entire religion...Hate is not the answer to hate.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 8314, "favorite_count": 18825, "source": "TweetDeck", "id_str": "742367624089194496", "is_retweet": false}, {"created_at": "Sat Aug 06 22:57:08 +0000 2016", "text": "Seriously, what is going on with Trump and Russia? https://t.co/N6ySNILYMx", "in_reply_to_screen_name": null, "retweet_count": 9846, "favorite_count": 15752, "source": "TweetDeck", "id_str": "762059962101198848", "is_retweet": false}, {"created_at": "Wed Aug 31 16:56:28 +0000 2016", "text": "Getting countries to work together takes more than trying to make up for a year of insults by dropping in for a few hours, then flying home.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1460, "favorite_count": 2267, "source": "TweetDeck", "id_str": "771028895420260353", "is_retweet": false}, {"created_at": "Tue Jan 26 22:52:29 +0000 2016", "text": "Step 1: Commit to vote or caucus for Hillary \u2192 https://t.co/pl6DnIjemN\nStep 2: Tell the world with your own card \ud83c\udf89 https://t.co/I0HAG5bTJc", "in_reply_to_screen_name": null, "retweet_count": 397, "favorite_count": 1080, "source": "TweetDeck", "id_str": "692117934328696832", "is_retweet": false}, {"created_at": "Mon Aug 08 17:50:47 +0000 2016", "text": "RT @UAW: .@realDonaldTrump has an economic plan...to cut the pay of hardworking UAW members. https://t.co/IhIohjOtwq #NeverTrump", "in_reply_to_screen_name": null, "retweet_count": 695, "favorite_count": 0, "source": "TweetDeck", "id_str": "762707643488202752", "is_retweet": true}, {"created_at": "Wed Jan 13 02:56:58 +0000 2016", "text": ".@POTUS ha mantenido la econom\u00eda fuerte y el pa\u00eds seguro. Eso es lo que el presidente tiene que hacer. Es su deber. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 758, "source": "TweetDeck", "id_str": "687106030623440896", "is_retweet": false}, {"created_at": "Sat Feb 27 02:32:32 +0000 2016", "text": "Hillary no le aumentar\u00e1 los impuestos a la clase media. Cuando la clase media es fuerte, el pa\u00eds es fuerte.", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 866, "source": "TweetDeck", "id_str": "703407338024206336", "is_retweet": false}, {"created_at": "Thu Jan 28 22:50:19 +0000 2016", "text": "There\u2019s a great story behind this unusual campaign stop. \ud83c\udfb3 https://t.co/aeufKpFrGs", "in_reply_to_screen_name": null, "retweet_count": 204, "favorite_count": 460, "source": "TweetDeck", "id_str": "692842165135736832", "is_retweet": false}, {"created_at": "Sat Oct 22 02:18:43 +0000 2016", "text": "\"It\u2019s time to get out the vote.\" https://t.co/tTgeqxNqYm https://t.co/0sMlFJwVHb #JuntosSePuede https://t.co/ilH8xA0R3Q", "in_reply_to_screen_name": null, "retweet_count": 2417, "favorite_count": 6088, "source": "Media Studio", "id_str": "789652171650465792", "is_retweet": false}, {"created_at": "Fri Apr 15 03:46:36 +0000 2016", "text": "One candidate delivers catchy lines\u2014the other delivers results. Add your name to say you're with Hillary: https://t.co/15QJBF9ZC6 #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1145, "favorite_count": 2950, "source": "TweetDeck", "id_str": "720820593420058624", "is_retweet": false}, {"created_at": "Mon Sep 19 16:35:53 +0000 2016", "text": "We can build a cleaner, more resilient electrical grid with enough renewable energy to power every home in the country.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 559, "favorite_count": 1167, "source": "Twitter Web Client", "id_str": "777909084955762688", "is_retweet": false}, {"created_at": "Fri Oct 07 15:14:45 +0000 2016", "text": "RT @robdelaney: Are you registered to vote? Can you vote early? Find out! RT! \ud83c\uddfa\ud83c\uddf8 https://t.co/xj8ZM1kdbm", "in_reply_to_screen_name": null, "retweet_count": 953, "favorite_count": 0, "source": "TweetDeck", "id_str": "784411647226023936", "is_retweet": true}, {"created_at": "Sat Oct 29 20:24:39 +0000 2016", "text": "With just 10 days until Election Day, Hillary\u2019s on the trail in Florida.\n\nWatch live: https://t.co/Hc1AV275a6", "in_reply_to_screen_name": null, "retweet_count": 1322, "favorite_count": 4707, "source": "TweetDeck", "id_str": "792462172454526980", "is_retweet": false}, {"created_at": "Tue Nov 08 00:08:00 +0000 2016", "text": "\"Hillary is the role model Michelle and I want for our daughters and for kids across the country.\" \u2014@POTUS https://t.co/AnLw4t3349", "in_reply_to_screen_name": null, "retweet_count": 3844, "favorite_count": 10824, "source": "TweetDeck", "id_str": "795779871590981632", "is_retweet": false}, {"created_at": "Tue Mar 22 15:18:19 +0000 2016", "text": "Caucus today, Idaho and Utah! Retweet if you're with her. https://t.co/NXLpbajRTs", "in_reply_to_screen_name": null, "retweet_count": 1545, "favorite_count": 2237, "source": "TweetDeck", "id_str": "712297360353837056", "is_retweet": false}, {"created_at": "Mon Apr 11 17:08:46 +0000 2016", "text": "Hard choices. https://t.co/OLUXNaqiuY", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 2207, "source": "TweetDeck", "id_str": "719572914027282432", "is_retweet": false}, {"created_at": "Wed May 18 21:14:22 +0000 2016", "text": "America has always been about working together to get things done. https://t.co/hO6931hVwb", "in_reply_to_screen_name": null, "retweet_count": 1822, "favorite_count": 4756, "source": "TweetDeck", "id_str": "733043070791520257", "is_retweet": false}, {"created_at": "Thu Feb 04 13:13:18 +0000 2016", "text": "\u201cPractice the discipline of gratitude.\u201d Hillary on faith, humility, and living a life of service. #DemTownHall\nhttps://t.co/wcSRuKCDKi", "in_reply_to_screen_name": null, "retweet_count": 930, "favorite_count": 1951, "source": "Twitter Web Client", "id_str": "695233669909204993", "is_retweet": false}, {"created_at": "Tue Apr 26 16:42:19 +0000 2016", "text": "Women deserve the same rights as men in every aspect of our economy and our society\u2014at home and around the world.\nhttps://t.co/C8doMvHIs7", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 2571, "source": "Twitter Web Client", "id_str": "725002074459512832", "is_retweet": false}, {"created_at": "Fri Jul 29 03:14:37 +0000 2016", "text": "\"Keeping our nation safe and honoring the people who do that work will be my highest priority.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1299, "favorite_count": 5034, "source": "TweetDeck", "id_str": "758863271231299584", "is_retweet": false}, {"created_at": "Sat Oct 29 22:20:16 +0000 2016", "text": "\"I want you hustling all the way until the polls close on November 8.\" \u2014@POTUS https://t.co/HmTeeo6bye https://t.co/70NjaDrt7D", "in_reply_to_screen_name": null, "retweet_count": 3957, "favorite_count": 9777, "source": "TweetDeck", "id_str": "792491267984912388", "is_retweet": false}, {"created_at": "Tue Sep 20 20:05:13 +0000 2016", "text": "Donald hasn't given his own money to the Trump Foundation since 2008\u2014but it's still paying his bills. https://t.co/2LRtZB3Ri2", "in_reply_to_screen_name": null, "retweet_count": 4028, "favorite_count": 5922, "source": "TweetDeck", "id_str": "778324154269458432", "is_retweet": false}, {"created_at": "Mon Feb 29 23:41:14 +0000 2016", "text": "Today on @LinkedIn: We need to solve America's student debt crisis. https://t.co/GyEmaYXOkF", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 1082, "source": "TweetDeck", "id_str": "704451391515918336", "is_retweet": false}, {"created_at": "Sun Apr 24 22:53:50 +0000 2016", "text": "La lucha por la cobertura m\u00e9dica a bajo costo lleva m\u00e1s de medio siglo y Hillary ha sido una l\u00edder por d\u00e9cadas. https://t.co/GVcn5EnO42", "in_reply_to_screen_name": null, "retweet_count": 426, "favorite_count": 815, "source": "Twitter Web Client", "id_str": "724370797452767232", "is_retweet": false}, {"created_at": "Tue Nov 08 18:59:21 +0000 2016", "text": "It's going to be close, and we need you on this team. Confirm where to vote today: https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": null, "retweet_count": 2415, "favorite_count": 7589, "source": "TweetDeck", "id_str": "796064581865078784", "is_retweet": false}, {"created_at": "Wed Jul 27 02:23:25 +0000 2016", "text": "\u201cShe never made fun of people with disabilities. She tried to empower them based on their abilities.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 2262, "favorite_count": 6072, "source": "TweetDeck", "id_str": "758125611869167616", "is_retweet": false}, {"created_at": "Fri Nov 04 17:48:09 +0000 2016", "text": "Think about what it would mean to entrust the nuclear codes to someone who lashes out at anyone who challenges him.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1002, "favorite_count": 1868, "source": "TweetDeck", "id_str": "794597111874654213", "is_retweet": false}, {"created_at": "Thu Sep 08 23:09:18 +0000 2016", "text": "Rosa Parks opened up every seat on the bus\u2014now it\u2019s our job to create more good jobs so everyone can afford the fare.", "in_reply_to_screen_name": null, "retweet_count": 1306, "favorite_count": 4694, "source": "TweetDeck", "id_str": "774021824053116928", "is_retweet": false}, {"created_at": "Wed Oct 05 15:06:29 +0000 2016", "text": "RT @NewRepublic: If politicians are measured by their honesty, Pence destroyed his reputation tonight. https://t.co/ZBJM7ljEWV https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783684792076345344", "is_retweet": true}, {"created_at": "Tue Oct 11 20:17:55 +0000 2016", "text": "\"Take it from me, your vote can make all the difference in this election.\u201d \u2014@AlGore\n\nText CLIMATE to 47246 to make sure you're registered.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 917, "favorite_count": 2787, "source": "TweetDeck", "id_str": "785937495250829312", "is_retweet": false}, {"created_at": "Thu Aug 04 16:23:18 +0000 2016", "text": "\"That\u2019s what 21st century feminism is about: The idea that when everybody is equal, we are all more free.\" \u2014@POTUS https://t.co/6Ou7XEOE3j", "in_reply_to_screen_name": null, "retweet_count": 3108, "favorite_count": 7998, "source": "TweetDeck", "id_str": "761236077294260224", "is_retweet": false}, {"created_at": "Mon Jul 25 23:02:43 +0000 2016", "text": "RT @BernieSanders: We have got to defeat Donald Trump and do everything we can to elect Hillary Clinton to the White house. #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 25505, "favorite_count": 0, "source": "TweetDeck", "id_str": "757712714672246785", "is_retweet": true}, {"created_at": "Tue Oct 18 15:13:21 +0000 2016", "text": "RT @ChelseaClinton: What a wonderful tribute to Mrs. Obama &amp; the incredible role model she\u2019s been to countless people, including me https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 5231, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "788397564647317504", "is_retweet": true}, {"created_at": "Tue Sep 27 19:31:01 +0000 2016", "text": "\u201cShe gained about 55 pounds in...9 months. She was like an eating machine.\u201d \u2014Trump, a man who wants to be president: https://t.co/1ht91eZCyw", "in_reply_to_screen_name": null, "retweet_count": 2636, "favorite_count": 4835, "source": "TweetDeck", "id_str": "780852261442445312", "is_retweet": false}, {"created_at": "Mon Oct 03 21:31:45 +0000 2016", "text": "RT @TheBriefing2016: If you pay your taxes, what does this mean Donald Trump thinks of you? https://t.co/1BmmT8SEMI", "in_reply_to_screen_name": null, "retweet_count": 1196, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783056972866318336", "is_retweet": true}, {"created_at": "Tue Mar 01 20:44:22 +0000 2016", "text": "\"She has fought for social justice, equality and policies that expand civil rights.\" -@IAmSteveHarvey https://t.co/0KnzzinD9m", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 1764, "source": "TweetDeck", "id_str": "704769270543163392", "is_retweet": false}, {"created_at": "Tue Nov 08 00:07:28 +0000 2016", "text": "RT @JoshSchwerin: Philly is out in full force tonight https://t.co/k9pl43izHZ", "in_reply_to_screen_name": null, "retweet_count": 2604, "favorite_count": 0, "source": "TweetDeck", "id_str": "795779734928052225", "is_retweet": true}, {"created_at": "Sun Jul 24 20:12:58 +0000 2016", "text": "\"Couldn't have said it better!\" \u2014David Duke, former grand wizard of the Ku Klux Klan, on Donald Trump's RNC speech https://t.co/nt355hYBQb", "in_reply_to_screen_name": null, "retweet_count": 1709, "favorite_count": 3258, "source": "TweetDeck", "id_str": "757307608097325061", "is_retweet": false}, {"created_at": "Mon Mar 14 01:53:54 +0000 2016", "text": "\"I am sick and tired of these murders and random acts of gun violence.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1046, "favorite_count": 2844, "source": "TweetDeck", "id_str": "709195819736571904", "is_retweet": false}, {"created_at": "Wed Oct 26 19:21:35 +0000 2016", "text": "Live from Tampa: Hillary campaigns with just 13 days left in this campaign \u2192 https://t.co/jHTI4ug4Pj\n\nhttps://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 888, "favorite_count": 3270, "source": "TweetDeck", "id_str": "791359137187856384", "is_retweet": false}, {"created_at": "Thu Jul 21 17:02:27 +0000 2016", "text": "Hillary's spent her career helping others. @realDonaldTrump? He only helps himself. A side-by-side comparison: https://t.co/iscRzdQqo5", "in_reply_to_screen_name": null, "retweet_count": 1367, "favorite_count": 2804, "source": "TweetDeck", "id_str": "756172499512156160", "is_retweet": false}, {"created_at": "Thu Sep 29 18:39:04 +0000 2016", "text": "We can\u2019t do any of these things without your help.\nOur future is on the ballot.\nLet's prove that #LoveTrumpsHate: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 523, "favorite_count": 1517, "source": "TweetDeck", "id_str": "781563964803211264", "is_retweet": false}, {"created_at": "Tue Aug 30 22:37:14 +0000 2016", "text": "Trump's plan:\n1. Round up and deport every single undocumented immigrant\n2. Build a concrete wall\n\nAn alternative: https://t.co/RCou5SMZPI", "in_reply_to_screen_name": null, "retweet_count": 4395, "favorite_count": 9337, "source": "TweetDeck", "id_str": "770752265552531456", "is_retweet": false}, {"created_at": "Tue Sep 27 04:04:38 +0000 2016", "text": "43 days left. Let\u2019s go win this thing: https://t.co/vJShYQPqJb #DebateNight https://t.co/MzR30MEI0J", "in_reply_to_screen_name": null, "retweet_count": 6406, "favorite_count": 21938, "source": "TweetDeck", "id_str": "780619128210087937", "is_retweet": false}, {"created_at": "Mon Feb 01 23:29:17 +0000 2016", "text": "Team @hillaryforIA has been organizing with heart and winning every single day. https://t.co/EVSPcoCEJr", "in_reply_to_screen_name": null, "retweet_count": 219, "favorite_count": 521, "source": "Twitter Web Client", "id_str": "694301524558741504", "is_retweet": false}, {"created_at": "Mon Oct 31 18:42:45 +0000 2016", "text": "A man you can bait with a tweet is not a man we can trust with nuclear weapons.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1280, "favorite_count": 2525, "source": "TweetDeck", "id_str": "793161304802463745", "is_retweet": false}, {"created_at": "Fri Jul 29 17:39:33 +0000 2016", "text": "\"We've got to make this economy work for everyone, not just those at the top.\" \u2014Hillary: https://t.co/Et5D2WbDNI", "in_reply_to_screen_name": null, "retweet_count": 1044, "favorite_count": 4060, "source": "TweetDeck", "id_str": "759080936692654080", "is_retweet": false}, {"created_at": "Thu Sep 08 17:08:57 +0000 2016", "text": "Hillary\u2019s speaking in North Carolina on her vision to build an economy that works for everyone. Tune in: https://t.co/5VPr9qVgkv", "in_reply_to_screen_name": null, "retweet_count": 725, "favorite_count": 2382, "source": "TweetDeck", "id_str": "773931142001127424", "is_retweet": false}, {"created_at": "Mon Aug 15 17:29:06 +0000 2016", "text": "Take out your phone and text JOIN to 47246.\n\nWe\u2019re hiring organizers right here in Pennsylvania and across the country.", "in_reply_to_screen_name": null, "retweet_count": 542, "favorite_count": 1575, "source": "TweetDeck", "id_str": "765238901950808065", "is_retweet": false}, {"created_at": "Fri Oct 14 15:18:46 +0000 2016", "text": "RT @HillaryforOH: HAPPENING NOW: @POTUS speaks at our #OHVotesEarly rally in Cleveland about what\u2019s at stake in this election! Watch: https\u2026", "in_reply_to_screen_name": null, "retweet_count": 531, "favorite_count": 0, "source": "TweetDeck", "id_str": "786949375356506112", "is_retweet": true}, {"created_at": "Thu Oct 27 19:11:18 +0000 2016", "text": "\u201cHillary has done her job. Now we need to do our job and get her elected president of the United States.\u201d \u2014@FLOTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 610, "favorite_count": 1267, "source": "TweetDeck", "id_str": "791718934793883648", "is_retweet": false}, {"created_at": "Thu May 05 19:11:15 +0000 2016", "text": "\"Everything I say I'm gonna do, folks, I do.\"\n\nWhat Trump says he'll do as president: deport millions of immigrants.\nhttps://t.co/HzFWUTjywT", "in_reply_to_screen_name": null, "retweet_count": 1323, "favorite_count": 1857, "source": "Twitter Web Client", "id_str": "728301048826241025", "is_retweet": false}, {"created_at": "Thu Jun 02 03:29:20 +0000 2016", "text": "Here's what you need to know about Trump's \"university.\" https://t.co/D5lXNmzGWP", "in_reply_to_screen_name": null, "retweet_count": 1521, "favorite_count": 2622, "source": "TweetDeck", "id_str": "738210865577615360", "is_retweet": false}, {"created_at": "Tue Oct 11 01:01:28 +0000 2016", "text": "It'd been 100 years since @DispatchAlerts endorsed a Democrat for president\u2014until now: https://t.co/nR8Eo57KVr", "in_reply_to_screen_name": null, "retweet_count": 1977, "favorite_count": 6347, "source": "TweetDeck", "id_str": "785646466081628160", "is_retweet": false}, {"created_at": "Fri Jul 22 22:07:38 +0000 2016", "text": "\"I've never known America to quit on ourselves. I've never known us to give up in the face of tough challenges.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1266, "favorite_count": 4502, "source": "TweetDeck", "id_str": "756611689517285377", "is_retweet": false}, {"created_at": "Sat Oct 15 23:11:09 +0000 2016", "text": "Colin knows Hillary\u2014not as first lady, secretary of state, or senator\u2014but as his mom's best friend. Read his letter: https://t.co/MeqyAXQocS", "in_reply_to_screen_name": null, "retweet_count": 2433, "favorite_count": 7535, "source": "TweetDeck", "id_str": "787430642996940800", "is_retweet": false}, {"created_at": "Thu Aug 18 16:55:17 +0000 2016", "text": "Don't waste it. Make sure you're registered to vote: https://t.co/tTgeqy51PU https://t.co/XA0iPATVmR", "in_reply_to_screen_name": null, "retweet_count": 1641, "favorite_count": 3109, "source": "TweetDeck", "id_str": "766317555631861760", "is_retweet": false}, {"created_at": "Mon Oct 31 19:00:49 +0000 2016", "text": "\"With the election just 8 days away...Trump should immediately disclose all of his ties and connections to the Kremlin and its associates.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1605, "favorite_count": 2877, "source": "TweetDeck", "id_str": "793165849267990528", "is_retweet": false}, {"created_at": "Thu Jul 28 03:11:15 +0000 2016", "text": "\u201cNothing truly prepares you for the demands of the Oval Office\u2026but Hillary\u2019s been in the room; she\u2019s been part of those decisions.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1479, "favorite_count": 4794, "source": "TweetDeck", "id_str": "758500036149927936", "is_retweet": false}, {"created_at": "Mon Aug 08 17:17:05 +0000 2016", "text": "RT @TheDemocrats: Creating jobs \u2014 it's what Democrats do. In 3 months, let's elect another one: https://t.co/qvnYQxtH0A https://t.co/ywlFN9\u2026", "in_reply_to_screen_name": null, "retweet_count": 1041, "favorite_count": 0, "source": "TweetDeck", "id_str": "762699163368816641", "is_retweet": true}, {"created_at": "Tue Aug 23 02:56:42 +0000 2016", "text": "Donald Trump's economic plan is rigged so rich people like him get tax cuts at the expense of everybody else. https://t.co/D0oOe5TVHC", "in_reply_to_screen_name": null, "retweet_count": 3194, "favorite_count": 6250, "source": "TweetDeck", "id_str": "767918458612875264", "is_retweet": false}, {"created_at": "Wed Feb 03 04:21:38 +0000 2016", "text": "RT if you are, too. https://t.co/4Xu3issMlN", "in_reply_to_screen_name": null, "retweet_count": 3563, "favorite_count": 4153, "source": "Twitter Web Client", "id_str": "694737486157869056", "is_retweet": false}, {"created_at": "Fri Feb 05 03:36:16 +0000 2016", "text": "...and while we're at it... #DemDebate https://t.co/PRgl9FOYrE", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 635, "favorite_count": 1496, "source": "TweetDeck", "id_str": "695450842728525824", "is_retweet": false}, {"created_at": "Wed Oct 19 14:25:54 +0000 2016", "text": "A man you can bait with a tweet is not a man we can trust with nuclear weapons. https://t.co/YZJvqHDkkq", "in_reply_to_screen_name": null, "retweet_count": 5836, "favorite_count": 12680, "source": "Media Studio", "id_str": "788748010771456000", "is_retweet": false}, {"created_at": "Sun Mar 27 23:06:08 +0000 2016", "text": "Hillary received two memorable gifts during a meeting with Puyallup tribal leaders. https://t.co/NXRwv8LbTH", "in_reply_to_screen_name": null, "retweet_count": 769, "favorite_count": 2240, "source": "Twitter for iPhone", "id_str": "714227031572156416", "is_retweet": false}, {"created_at": "Thu Aug 11 17:40:38 +0000 2016", "text": "Hillary is speaking live from Detroit on the economy. Don\u2019t miss it. Tune in now: https://t.co/YgVauYf0Ol", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 1346, "source": "TweetDeck", "id_str": "763792253190041600", "is_retweet": false}, {"created_at": "Fri Oct 21 01:22:12 +0000 2016", "text": "Watch Hillary speak live at the #AlSmithDinner in New York City: https://t.co/yuy57F9LFz", "in_reply_to_screen_name": null, "retweet_count": 926, "favorite_count": 4064, "source": "TweetDeck", "id_str": "789275561193537537", "is_retweet": false}, {"created_at": "Sat Jan 16 00:03:36 +0000 2016", "text": "Hillary and @CecileRichards on politics, mansplaining, and reproductive rights: https://t.co/1xTf3e81Wo https://t.co/rz1cmTh8uu", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 797, "source": "TweetDeck", "id_str": "688149565271244802", "is_retweet": false}, {"created_at": "Wed Oct 26 17:04:53 +0000 2016", "text": "Wish Hillary a happy birthday by making a plan to vote: https://t.co/tTgeqxNqYm https://t.co/Zavx99ZLdC", "in_reply_to_screen_name": null, "retweet_count": 2426, "favorite_count": 8727, "source": "Media Studio", "id_str": "791324733463756800", "is_retweet": false}, {"created_at": "Wed Jul 20 17:46:01 +0000 2016", "text": "Trump says he'd run the U.S. like his businesses.\n\nWhich pretty much means letting America go bankrupt. https://t.co/2aEDjaNX0M", "in_reply_to_screen_name": null, "retweet_count": 2519, "favorite_count": 4834, "source": "TweetDeck", "id_str": "755821073782992897", "is_retweet": false}, {"created_at": "Tue Sep 27 16:37:19 +0000 2016", "text": "RT @Hillary_esp: Trump sobre Alicia Machado en 1996: \"Miss Piggy\"\n\nEsta ma\u00f1ana: \"Aument\u00f3 mucho de peso... era un problema serio\". https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 3061, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780808548498468865", "is_retweet": true}, {"created_at": "Wed Jan 13 14:03:11 +0000 2016", "text": ".@POTUS by the numbers: 18 million insured, 14 million new jobs, 27 executive actions to stop gun violence... https://t.co/1APbfYFZ4C", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 1752, "source": "Twitter for iPhone", "id_str": "687273691827273728", "is_retweet": false}, {"created_at": "Mon Sep 26 23:59:10 +0000 2016", "text": "No matter what Donald says at tonight's debate, we already know the real Trump.\n\nFollow @TheBriefing2016 for the fa\u2026 https://t.co/ueK4tWWMN0", "in_reply_to_screen_name": null, "retweet_count": 5993, "favorite_count": 11761, "source": "Media Studio", "id_str": "780557354748129280", "is_retweet": false}, {"created_at": "Sun Oct 30 21:38:59 +0000 2016", "text": "A young girl asked: \"What are you going to do about all this bullying?\" https://t.co/ItziFrwa9b https://t.co/zw1UwMOPNg", "in_reply_to_screen_name": null, "retweet_count": 4247, "favorite_count": 10279, "source": "Media Studio", "id_str": "792843265183744000", "is_retweet": false}, {"created_at": "Fri Jun 03 20:00:26 +0000 2016", "text": ".@maddow: \"She's not caricaturing Donald Trump...she's just quoting him directly, and that's deadly.\"\nhttps://t.co/pGzHEat82l", "in_reply_to_screen_name": null, "retweet_count": 3506, "favorite_count": 6361, "source": "Twitter Web Client", "id_str": "738822672444887042", "is_retweet": false}, {"created_at": "Sun Oct 30 18:13:40 +0000 2016", "text": "\"Let\u2019s break every single record. Let\u2019s make that the story of this election.\u201d \u2014Hillary https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1068, "favorite_count": 2259, "source": "TweetDeck", "id_str": "792791594453925888", "is_retweet": false}, {"created_at": "Tue Jan 19 23:56:29 +0000 2016", "text": "You shouldn't have to worry about your paycheck or your job when you have a baby or someone in your family gets sick.", "in_reply_to_screen_name": null, "retweet_count": 823, "favorite_count": 2300, "source": "TweetDeck", "id_str": "689597325468110848", "is_retweet": false}, {"created_at": "Mon Apr 04 20:10:30 +0000 2016", "text": "Hillary Clinton cree que la educaci\u00f3n es la clave para salir adelante. Lee el art\u00edculo. https://t.co/J2qtMtuk2E", "in_reply_to_screen_name": null, "retweet_count": 324, "favorite_count": 655, "source": "TweetDeck", "id_str": "717081935898656773", "is_retweet": false}, {"created_at": "Wed Jun 08 02:40:47 +0000 2016", "text": "\"On the very day Mom was being born in Chicago, Congress was passing the 19th Amendment to the Constitution\u2014giving women the right to vote.\"", "in_reply_to_screen_name": null, "retweet_count": 2282, "favorite_count": 7456, "source": "TweetDeck", "id_str": "740372974939852800", "is_retweet": false}, {"created_at": "Tue Feb 16 21:25:29 +0000 2016", "text": "\"We need end-to-end reform in our criminal justice system\u2014not half-measures, but a full commitment with real follow-through.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 494, "favorite_count": 1023, "source": "TweetDeck", "id_str": "699706188745850880", "is_retweet": false}, {"created_at": "Sat Feb 13 00:00:05 +0000 2016", "text": "We don't live in a single-issue country. We need to tackle all the barriers holding Americans back. https://t.co/DbKMEDwaGc", "in_reply_to_screen_name": null, "retweet_count": 801, "favorite_count": 1770, "source": "TweetDeck", "id_str": "698295540530966529", "is_retweet": false}, {"created_at": "Thu Oct 20 04:20:03 +0000 2016", "text": "That feeling when you win three straight debates. #DebateNight https://t.co/KlH090F57W", "in_reply_to_screen_name": null, "retweet_count": 17373, "favorite_count": 68836, "source": "TweetDeck", "id_str": "788957930867548161", "is_retweet": false}, {"created_at": "Fri Oct 28 22:42:08 +0000 2016", "text": "\"If you want hope instead of fear, then you will elect Hillary Clinton as president of the United States.\u201d \u2014@POTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1801, "favorite_count": 4737, "source": "TweetDeck", "id_str": "792134381347430400", "is_retweet": false}, {"created_at": "Sat Nov 05 23:31:12 +0000 2016", "text": "For respect.\nFor the future.\nFor our planet.\n\nOn Tuesday, they're gonna hear us roar: https://t.co/3TKJ4HnJC7 https://t.co/3G9XwUq6Mb", "in_reply_to_screen_name": null, "retweet_count": 6272, "favorite_count": 13123, "source": "Media Studio", "id_str": "795045831309017088", "is_retweet": false}, {"created_at": "Mon Jan 25 16:58:18 +0000 2016", "text": "Live in Iowa? \n\nLearn how to caucus here! \u2192 https://t.co/nKQ7gGWIn1 https://t.co/W7CIe2Xb6F", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 809, "source": "TweetDeck", "id_str": "691666413132632065", "is_retweet": false}, {"created_at": "Wed Sep 14 16:52:50 +0000 2016", "text": "16. You've mentioned ~120 foreign deals, including in countries with national security implications. Where and with whom are you working?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2599, "favorite_count": 4329, "source": "TweetDeck", "id_str": "776101413441134592", "is_retweet": false}, {"created_at": "Thu Jul 28 03:04:23 +0000 2016", "text": "\u201cWhat we heard was a deeply pessimistic vision of a country where we turn against each other.\u201d \u2014@POTUS on last week\u2019s GOP convention", "in_reply_to_screen_name": null, "retweet_count": 976, "favorite_count": 3128, "source": "TweetDeck", "id_str": "758498307547291648", "is_retweet": false}, {"created_at": "Fri Nov 04 16:21:47 +0000 2016", "text": "RT @DaveedDiggs: Nov. 8th is fast approaching. Please VOTE!!! https://t.co/8VAUqgq84m", "in_reply_to_screen_name": null, "retweet_count": 883, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794575379226906625", "is_retweet": true}, {"created_at": "Sun Sep 25 13:06:07 +0000 2016", "text": "\"Our endorsement is rooted in respect for her intellect, experience, toughness and courage.\" \u2014@NYTimes on Hillary\u2026 https://t.co/ihdRZdqGva", "in_reply_to_screen_name": null, "retweet_count": 3178, "favorite_count": 7778, "source": "TweetDeck", "id_str": "780030623247392768", "is_retweet": false}, {"created_at": "Fri Feb 05 20:33:46 +0000 2016", "text": "\u201cThis. Is. An. Emergency.\u201d Hillary on the Flint water crisis at last night's #DemDebate:\nhttps://t.co/azC1CCUnuo", "in_reply_to_screen_name": null, "retweet_count": 492, "favorite_count": 1028, "source": "Twitter Web Client", "id_str": "695706906929725440", "is_retweet": false}, {"created_at": "Mon Jun 13 17:39:05 +0000 2016", "text": "Our open, diverse society is an asset in the struggle against terrorism, not a liability. It makes us stronger.", "in_reply_to_screen_name": null, "retweet_count": 1691, "favorite_count": 5059, "source": "TweetDeck", "id_str": "742410978701238272", "is_retweet": false}, {"created_at": "Thu Mar 24 14:19:14 +0000 2016", "text": "This isn't who we are, and it also isn't how we keep America safe. https://t.co/ELATJuWuhn", "in_reply_to_screen_name": null, "retweet_count": 1513, "favorite_count": 3393, "source": "TweetDeck", "id_str": "713007268615360512", "is_retweet": false}, {"created_at": "Wed Mar 30 16:42:49 +0000 2016", "text": "\"We need a president who will help break down all the barriers holding Americans back, not just some.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 662, "favorite_count": 1589, "source": "TweetDeck", "id_str": "715217729666461696", "is_retweet": false}, {"created_at": "Sat Oct 01 14:00:18 +0000 2016", "text": "Nobody here was \u201chaving fun\u201d except for Trump. https://t.co/uklRuFJaus", "in_reply_to_screen_name": null, "retweet_count": 11402, "favorite_count": 20562, "source": "Media Studio", "id_str": "782218585653534720", "is_retweet": false}, {"created_at": "Mon Feb 15 15:35:24 +0000 2016", "text": "A day on the campaign trail with @MsVivicaFox and @ImAngelaBassett. https://t.co/YOUSf1L9i9", "in_reply_to_screen_name": null, "retweet_count": 674, "favorite_count": 1380, "source": "TweetDeck", "id_str": "699255697435979776", "is_retweet": false}, {"created_at": "Fri Jan 08 22:21:15 +0000 2016", "text": "Hillary, Ellen, and @tonygoldwyn duked it out in a game of Heads Up! on @TheEllenShow. Tune in on Monday! https://t.co/zkqTWUkBQy", "in_reply_to_screen_name": null, "retweet_count": 294, "favorite_count": 739, "source": "Twitter Web Client", "id_str": "685587096187305984", "is_retweet": false}, {"created_at": "Thu Jul 28 03:17:31 +0000 2016", "text": "\"Meanwhile, Donald Trump calls our military a disaster\u2026he suggests America is weak.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1071, "favorite_count": 3430, "source": "TweetDeck", "id_str": "758501612105105408", "is_retweet": false}, {"created_at": "Mon Sep 05 18:02:29 +0000 2016", "text": ".@iamwill Yes. https://t.co/8tfBTtpZFN", "in_reply_to_screen_name": "iamwill", "retweet_count": 765, "favorite_count": 2190, "source": "Twitter Web Client", "id_str": "772857447149109249", "is_retweet": false}, {"created_at": "Tue Jan 19 22:39:36 +0000 2016", "text": "LGBT kids don\u2019t need to be \u201ccured,\u201d they need to be loved and supported. https://t.co/GixB3AJrUV", "in_reply_to_screen_name": null, "retweet_count": 1572, "favorite_count": 3575, "source": "TweetDeck", "id_str": "689577979626819586", "is_retweet": false}, {"created_at": "Mon Jul 25 15:45:00 +0000 2016", "text": "\"I believe in being firm but wise with our rivals\u2014finding common ground where we can and standing our ground when we must.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 862, "favorite_count": 3227, "source": "TweetDeck", "id_str": "757602560681402368", "is_retweet": false}, {"created_at": "Mon Oct 10 01:55:36 +0000 2016", "text": "Ask yourself: Do you want the guy who lost a billion dollars in one year\u2014running a casino!\u2014to run the U.S. economy? #debate", "in_reply_to_screen_name": null, "retweet_count": 6069, "favorite_count": 13671, "source": "TweetDeck", "id_str": "785297698408787968", "is_retweet": false}, {"created_at": "Wed Oct 05 18:39:45 +0000 2016", "text": "RT @timkaine: And proud of it. https://t.co/eTkYtcuAw4", "in_reply_to_screen_name": null, "retweet_count": 11093, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783738462583287808", "is_retweet": true}, {"created_at": "Thu Aug 04 18:13:57 +0000 2016", "text": "RT @TheBriefing2016: Most of Trump's merchandise is MADE IN (just about everywhere except) THE USA. https://t.co/A0d7fxyzXx", "in_reply_to_screen_name": null, "retweet_count": 1773, "favorite_count": 0, "source": "TweetDeck", "id_str": "761263924901769220", "is_retweet": true}, {"created_at": "Thu Feb 18 13:52:55 +0000 2016", "text": "We need to face up to the reality of systemic racism and then work to dismantle it. https://t.co/2e7uIDRNTh", "in_reply_to_screen_name": null, "retweet_count": 1226, "favorite_count": 2531, "source": "TweetDeck", "id_str": "700317069523427328", "is_retweet": false}, {"created_at": "Mon Mar 28 21:24:53 +0000 2016", "text": "\"Ask yourselves: what kind of justice would a President Trump appoint? Or for that matter, what kind of Attorney General?\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 854, "favorite_count": 2146, "source": "TweetDeck", "id_str": "714563937501581313", "is_retweet": false}, {"created_at": "Tue Sep 27 01:10:36 +0000 2016", "text": "We have to build an economy that works for everyone, not just those at the top. #DebateNight https://t.co/XPTvh4Dovf", "in_reply_to_screen_name": null, "retweet_count": 2696, "favorite_count": 6279, "source": "TweetDeck", "id_str": "780575331996532737", "is_retweet": false}, {"created_at": "Fri Apr 08 17:13:51 +0000 2016", "text": "How much more money would you have if you didn\u2019t have student loan debt? https://t.co/1TPQhv1j7d https://t.co/D4kNBgsVAU", "in_reply_to_screen_name": null, "retweet_count": 783, "favorite_count": 1548, "source": "TweetDeck", "id_str": "718487029378637824", "is_retweet": false}, {"created_at": "Sat Feb 20 20:21:46 +0000 2016", "text": "Stay in line, Nevada! You can still caucus if you\u2019re in line. https://t.co/NuxaqNZIRQ", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 971, "source": "TweetDeck", "id_str": "701139705476337667", "is_retweet": false}, {"created_at": "Fri Sep 16 01:56:14 +0000 2016", "text": "RT @Hillary_esp: \u201cAdem\u00e1s de defender a DAPA y DACA, debemos hacer mucho m\u00e1s\u201d\u2014Hillary.\nhttps://t.co/Rs7LRr95Ua", "in_reply_to_screen_name": null, "retweet_count": 453, "favorite_count": 0, "source": "TweetDeck", "id_str": "776600548963385344", "is_retweet": true}, {"created_at": "Tue Sep 27 02:04:16 +0000 2016", "text": "Donald Trump's answer for his five years of pushing the racist birther conspiracy theory?\n\n\"I say nothing.\" #debatenight", "in_reply_to_screen_name": null, "retweet_count": 6102, "favorite_count": 13461, "source": "TweetDeck", "id_str": "780588840201388032", "is_retweet": false}, {"created_at": "Tue Sep 13 17:49:18 +0000 2016", "text": "\"We lifted 3.5 million people out of poverty. That's the largest one-year drop in poverty since 1968.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1365, "favorite_count": 3682, "source": "TweetDeck", "id_str": "775753235512619008", "is_retweet": false}, {"created_at": "Mon May 02 00:44:27 +0000 2016", "text": "We should be making it easier to vote, not harder. The attacks on voting rights have to end.", "in_reply_to_screen_name": null, "retweet_count": 817, "favorite_count": 2128, "source": "TweetDeck", "id_str": "726935349973385216", "is_retweet": false}, {"created_at": "Tue Oct 25 15:05:52 +0000 2016", "text": "When a black tenant applied for an apartment in one of Trump's buildings, she was told it wasn't available.\n\nA whit\u2026 https://t.co/RM58eMAyx6", "in_reply_to_screen_name": null, "retweet_count": 8071, "favorite_count": 13302, "source": "Media Studio", "id_str": "790932394664599552", "is_retweet": false}, {"created_at": "Wed Jul 27 02:01:59 +0000 2016", "text": "\"Safeguarding freedom and security is not like hosting a TV reality show. It...demands a cool head, but also a big heart.\" \u2014@Madeleine", "in_reply_to_screen_name": null, "retweet_count": 1272, "favorite_count": 3721, "source": "TweetDeck", "id_str": "758120215154655232", "is_retweet": false}, {"created_at": "Sun Mar 20 16:06:18 +0000 2016", "text": "\"Her first instinct is always to ask, 'What can I do to make it better?'\" \u2014@billclinton\nhttps://t.co/r0jf6kHXVa", "in_reply_to_screen_name": null, "retweet_count": 1695, "favorite_count": 4256, "source": "Twitter Web Client", "id_str": "711584662817153024", "is_retweet": false}, {"created_at": "Wed Jul 20 16:30:07 +0000 2016", "text": "\"I will bring people together.\" \u2014@realDonaldTrump\n\nYeah, we don't think so.\nhttps://t.co/ckcYkBz8Tx", "in_reply_to_screen_name": null, "retweet_count": 2616, "favorite_count": 4918, "source": "Twitter Web Client", "id_str": "755801973249613824", "is_retweet": false}, {"created_at": "Fri Sep 30 15:09:31 +0000 2016", "text": "Trump on equal pay: \"Do as good a job\" as men.\n\nAbortion? Should be \"punished.\"\n\nPregnancy? An \"inconvenience.\"\n\nWives working? \"Dangerous.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 7545, "favorite_count": 15446, "source": "TweetDeck", "id_str": "781873616971526144", "is_retweet": false}, {"created_at": "Tue Jul 05 20:02:31 +0000 2016", "text": "\"There has never been any man or woman more qualified for this office than Hillary Clinton. That's the truth.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1838, "favorite_count": 4242, "source": "TweetDeck", "id_str": "750419606758653953", "is_retweet": false}, {"created_at": "Thu Oct 20 21:45:44 +0000 2016", "text": "\"In difficult times, we don't give up, we don't discard our highest ideals, we rise up to meet them.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1015, "favorite_count": 3240, "source": "TweetDeck", "id_str": "789221087599071232", "is_retweet": false}, {"created_at": "Thu Oct 20 02:17:05 +0000 2016", "text": "\"Google it.\" \u2014Hillary https://t.co/2kptvkpqxn #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 3165, "favorite_count": 8141, "source": "TweetDeck", "id_str": "788926986160832512", "is_retweet": false}, {"created_at": "Fri Jan 08 19:13:39 +0000 2016", "text": "The new jobs report confirms: The economy is stronger with a Democrat in the White House. https://t.co/5ZxRSpMPrf https://t.co/CYOZWYe5lb", "in_reply_to_screen_name": null, "retweet_count": 1373, "favorite_count": 2771, "source": "TweetDeck", "id_str": "685539884321341440", "is_retweet": false}, {"created_at": "Tue Sep 27 14:53:01 +0000 2016", "text": "\"Anyone who complains about microphone problems is not having a good night.\" \u2014Hillary #SheWon", "in_reply_to_screen_name": null, "retweet_count": 5159, "favorite_count": 16666, "source": "TweetDeck", "id_str": "780782299524792320", "is_retweet": false}, {"created_at": "Mon Sep 12 14:33:30 +0000 2016", "text": "Introducing our college calculator: Find out how much Hillary's plan could save you or your family on student loans. https://t.co/nG8sti3EOV", "in_reply_to_screen_name": null, "retweet_count": 1483, "favorite_count": 3025, "source": "TweetDeck", "id_str": "775341572875493376", "is_retweet": false}, {"created_at": "Mon Jan 25 15:44:03 +0000 2016", "text": "A quick stop for lunch in Cedar Rapids with @CoryBooker yesterday. https://t.co/XjWH665VPP", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 1471, "source": "TweetDeck", "id_str": "691647730884702208", "is_retweet": false}, {"created_at": "Fri Sep 30 19:08:54 +0000 2016", "text": "Meet Hillary's lifelong friend, Betsy. https://t.co/KVEICHVuRL", "in_reply_to_screen_name": null, "retweet_count": 2164, "favorite_count": 6093, "source": "Media Studio", "id_str": "781933860955107328", "is_retweet": false}, {"created_at": "Tue Jun 28 18:53:53 +0000 2016", "text": "Trump's speaking about outsourcing right now.\n\nHere\u2019s one of his shirts\u2014made in Bangladesh: https://t.co/GBx8oJhE6W https://t.co/2jeNO3NDbq", "in_reply_to_screen_name": null, "retweet_count": 6648, "favorite_count": 10876, "source": "TweetDeck", "id_str": "747865622030200832", "is_retweet": false}, {"created_at": "Wed Feb 10 02:15:50 +0000 2016", "text": "\"People are angry. And they have every right to be. But I know they\u2019re also hungry. They\u2019re hungry for solutions.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 690, "favorite_count": 1736, "source": "Twitter Web Client", "id_str": "697242540630790144", "is_retweet": false}, {"created_at": "Wed Nov 09 16:51:46 +0000 2016", "text": "\"We have still have not shattered that highest and hardest glass ceiling. But some day, someone will.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 56256, "favorite_count": 140276, "source": "TweetDeck", "id_str": "796394862429999104", "is_retweet": false}, {"created_at": "Thu Oct 20 02:36:56 +0000 2016", "text": "\"Nobody respects women more than me.\" \u2014Donald Trump earlier tonight\n\n\"Such a nasty woman.\" \u2014Donald Trump just now #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 59499, "favorite_count": 107214, "source": "TweetDeck", "id_str": "788931981446877184", "is_retweet": false}, {"created_at": "Fri Apr 15 03:07:54 +0000 2016", "text": "Donald Trump said women should be punished for seeking an abortion. That's not a distraction\u2014it's a disgrace.\nhttps://t.co/sbJ3opebyB", "in_reply_to_screen_name": null, "retweet_count": 3261, "favorite_count": 8294, "source": "Twitter Web Client", "id_str": "720810853109338113", "is_retweet": false}, {"created_at": "Thu Jul 28 00:20:23 +0000 2016", "text": "\"As president, she will do what is right for our nation, not what is politically expedient.\u201d \u2014@ShuttleCDRKelly on Hillary", "in_reply_to_screen_name": null, "retweet_count": 584, "favorite_count": 2270, "source": "TweetDeck", "id_str": "758457034819772416", "is_retweet": false}, {"created_at": "Mon Aug 29 16:05:15 +0000 2016", "text": "Charity Watch called the @ClintonFdn \"one of the great humanitarian charities of our generation.\" https://t.co/YqAIhcmI2P", "in_reply_to_screen_name": null, "retweet_count": 3750, "favorite_count": 9069, "source": "TweetDeck", "id_str": "770291230966251520", "is_retweet": false}, {"created_at": "Wed Aug 31 17:17:56 +0000 2016", "text": "Our veterans deserve our thanks. You deserve a country that honors your service, not just with words but with deeds. https://t.co/Hi5VK3rrlJ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 747, "favorite_count": 1791, "source": "TweetDeck", "id_str": "771034298996645889", "is_retweet": false}, {"created_at": "Wed Oct 12 22:27:07 +0000 2016", "text": "\"The best choice, without a doubt, is Hillary Clinton.\" \u2014@SLTrib endorsing Hillary https://t.co/BCKVKCUzDz", "in_reply_to_screen_name": null, "retweet_count": 1691, "favorite_count": 5468, "source": "TweetDeck", "id_str": "786332395297447936", "is_retweet": false}, {"created_at": "Thu May 26 02:26:27 +0000 2016", "text": ".@realDonaldTrump, trying to profit off people losing their homes isn't the \"kind of thinking our country needs.\"\nhttps://t.co/Gke82XosxI", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 3059, "source": "Twitter Web Client", "id_str": "735658327812628480", "is_retweet": false}, {"created_at": "Fri Sep 23 22:23:01 +0000 2016", "text": "\"Donald Trump committed perjury. Or he looked into the faces of the Republican faithful and knowingly lied.\" https://t.co/enl4NTjdX4", "in_reply_to_screen_name": null, "retweet_count": 4482, "favorite_count": 6718, "source": "TweetDeck", "id_str": "779445994987610112", "is_retweet": false}, {"created_at": "Wed Jul 20 20:16:10 +0000 2016", "text": "This week in 1848, the Seneca Falls Convention declared that women deserve equal rights.\n\n168 years later... https://t.co/h0TXCr4Rn4", "in_reply_to_screen_name": null, "retweet_count": 5538, "favorite_count": 8473, "source": "TweetDeck", "id_str": "755858863300026368", "is_retweet": false}, {"created_at": "Thu Jul 28 01:13:22 +0000 2016", "text": "\u201cHe\u2019s become a brother to Jill and me\u2014and Michelle\u2026you are incredible.\u201d \u2014@JoeBiden on @POTUS and @FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 715, "favorite_count": 2921, "source": "TweetDeck", "id_str": "758470370307534848", "is_retweet": false}, {"created_at": "Tue Sep 27 03:18:22 +0000 2016", "text": "RT @TheAtlantic: Hillary Clinton did what she needed to do: https://t.co/OhN5ZjCu2G https://t.co/4P3f6pNXB3", "in_reply_to_screen_name": null, "retweet_count": 2245, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780607486516690944", "is_retweet": true}, {"created_at": "Thu Apr 28 22:31:51 +0000 2016", "text": "Fact: Donald Trump said women should be punished for seeking an abortion. https://t.co/DhqWE2LNEF", "in_reply_to_screen_name": null, "retweet_count": 810, "favorite_count": 1383, "source": "TweetDeck", "id_str": "725814812865892352", "is_retweet": false}, {"created_at": "Thu Sep 01 17:24:46 +0000 2016", "text": "This choice couldn't be starker. https://t.co/9msdztcXbE", "in_reply_to_screen_name": null, "retweet_count": 2695, "favorite_count": 5574, "source": "TweetDeck", "id_str": "771398407877517312", "is_retweet": false}, {"created_at": "Fri Sep 16 16:52:37 +0000 2016", "text": "What Trump just did is a disgrace.", "in_reply_to_screen_name": null, "retweet_count": 17373, "favorite_count": 41021, "source": "TweetDeck", "id_str": "776826132691881985", "is_retweet": false}, {"created_at": "Fri Oct 21 13:18:31 +0000 2016", "text": "Want to know if Donald Trump is lying? Just Google it. https://t.co/Ujm9H1Sha9", "in_reply_to_screen_name": null, "retweet_count": 6272, "favorite_count": 11320, "source": "Media Studio", "id_str": "789455826922582016", "is_retweet": false}, {"created_at": "Wed Sep 14 16:21:54 +0000 2016", "text": "In light of @kurteichenwald's report on the Trump Organization's dangerous ties, here are 20 questions that Trump needs to answer\u2014now.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3866, "favorite_count": 5774, "source": "TweetDeck", "id_str": "776093629249191936", "is_retweet": false}, {"created_at": "Mon Aug 15 18:37:26 +0000 2016", "text": "RT @PolitiFact: ICYMI: Donald Trump is against gay marriage. https://t.co/4XPeFxAolR", "in_reply_to_screen_name": null, "retweet_count": 901, "favorite_count": 0, "source": "TweetDeck", "id_str": "765256097930305536", "is_retweet": true}, {"created_at": "Tue Oct 11 19:41:50 +0000 2016", "text": "FACT: The Pentagon has identified climate change as a threat to America\u2019s national security.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 883, "favorite_count": 1768, "source": "TweetDeck", "id_str": "785928414503002112", "is_retweet": false}, {"created_at": "Tue Sep 13 15:41:09 +0000 2016", "text": "\"It just seems that the economy does better under the Democrats than the Republicans.\" \u2014Donald Trump, March 2004 https://t.co/rKW1wpaDNk", "in_reply_to_screen_name": null, "retweet_count": 3520, "favorite_count": 6038, "source": "TweetDeck", "id_str": "775720983332356096", "is_retweet": false}, {"created_at": "Fri Aug 05 21:08:02 +0000 2016", "text": "\"We have never had a candidate that was more qualified to take the office of president.\" \u2014@POTUS on Hillary https://t.co/EJ9xI5VQK7", "in_reply_to_screen_name": null, "retweet_count": 2810, "favorite_count": 7841, "source": "TweetDeck", "id_str": "761670119458217984", "is_retweet": false}, {"created_at": "Fri Sep 30 14:55:29 +0000 2016", "text": "Alicia deserves praise for courageously standing up to Trump's attacks. And he has the gall to blame her\u2014and say he \"helped\"?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2883, "favorite_count": 9131, "source": "TweetDeck", "id_str": "781870087032700928", "is_retweet": false}, {"created_at": "Tue Aug 23 18:11:19 +0000 2016", "text": "RT @WhiteHouse: \"What I want the people of Louisiana to know is this\u2014you\u2019re not alone.\"\u2014@POTUS in Baton Rouge: https://t.co/6Uet2HpPXI #LAf\u2026", "in_reply_to_screen_name": null, "retweet_count": 657, "favorite_count": 0, "source": "TweetDeck", "id_str": "768148628158443520", "is_retweet": true}, {"created_at": "Thu Oct 27 19:18:42 +0000 2016", "text": "\u201cFolks marched &amp; protested for our right to vote. They endured beatings and jail time. They sacrificed their lives for this right.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1283, "favorite_count": 3327, "source": "TweetDeck", "id_str": "791720798226640896", "is_retweet": false}, {"created_at": "Sun Jul 24 16:09:59 +0000 2016", "text": "\"It's hard to find a project he touched that did not produce allegations of broken promises...or outright fraud.\"\nhttps://t.co/Tn1vkBbEtF", "in_reply_to_screen_name": null, "retweet_count": 2093, "favorite_count": 5240, "source": "Twitter Web Client", "id_str": "757246458563219456", "is_retweet": false}, {"created_at": "Thu Oct 20 01:34:40 +0000 2016", "text": "\"Vladimir Putin...isn't my best friend.\" \u2014Donald Trump #DebateNight https://t.co/sMlHIuxvYx", "in_reply_to_screen_name": null, "retweet_count": 15751, "favorite_count": 20338, "source": "TweetDeck", "id_str": "788916311149666306", "is_retweet": false}, {"created_at": "Fri Mar 04 20:32:09 +0000 2016", "text": "\"As we lay the foundation for a brighter future, we have to deal with the legacy of the past: barriers that hold back communities of color.\"", "in_reply_to_screen_name": null, "retweet_count": 611, "favorite_count": 1405, "source": "TweetDeck", "id_str": "705853360637923329", "is_retweet": false}, {"created_at": "Thu Sep 22 23:04:19 +0000 2016", "text": "Let's make sure nobody who works full-time in America has to live in poverty. https://t.co/mpGBCNlemA https://t.co/fCcXd1MrTo", "in_reply_to_screen_name": null, "retweet_count": 2219, "favorite_count": 5684, "source": "Media Studio", "id_str": "779094002805182464", "is_retweet": false}, {"created_at": "Mon Sep 19 16:39:11 +0000 2016", "text": "We have a Republican nominee for president who incites hatred and violence like we\u2019ve never seen before.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 927, "favorite_count": 2029, "source": "Twitter Web Client", "id_str": "777909915268550660", "is_retweet": false}, {"created_at": "Fri Aug 26 03:09:25 +0000 2016", "text": "Donald Trump\u2019s campaign of prejudice and paranoia is unlike anything we\u2019ve seen\u2014and it\u2019s profoundly dangerous. https://t.co/av4EtesW6l", "in_reply_to_screen_name": null, "retweet_count": 2948, "favorite_count": 6796, "source": "TweetDeck", "id_str": "769008821515739136", "is_retweet": false}, {"created_at": "Fri Oct 07 15:29:51 +0000 2016", "text": "To everyone in the path of Hurricane Matthew: Stay safe, and know that America is with you. https://t.co/0KuidMhEHm", "in_reply_to_screen_name": null, "retweet_count": 2207, "favorite_count": 7344, "source": "TweetDeck", "id_str": "784415451132690432", "is_retweet": false}, {"created_at": "Mon Jun 20 02:10:40 +0000 2016", "text": "Gay rights are human rights and human rights are gay rights. Being LGBT does not make you less human.\nhttps://t.co/JkWZto9fz9", "in_reply_to_screen_name": null, "retweet_count": 4542, "favorite_count": 11521, "source": "Twitter Web Client", "id_str": "744714049779171328", "is_retweet": false}, {"created_at": "Sun Jan 24 23:52:42 +0000 2016", "text": "Thank you, Marion, IA! #iacaucus https://t.co/DD0hwSnJ0u", "in_reply_to_screen_name": null, "retweet_count": 243, "favorite_count": 697, "source": "TweetDeck", "id_str": "691408313817395200", "is_retweet": false}, {"created_at": "Tue Nov 01 22:06:27 +0000 2016", "text": "On average, Latinas make only $0.54 for each $1 white men earn. Time to close that gap. #LatinaEqualPay https://t.co/Qk77Lp3GPK", "in_reply_to_screen_name": null, "retweet_count": 4167, "favorite_count": 8881, "source": "TweetDeck", "id_str": "793574955568988161", "is_retweet": false}, {"created_at": "Sun Jun 26 17:47:49 +0000 2016", "text": "Want to be in the room where it happens? Here's your shot: Win tickets to see @HamiltonMusical with Hillary: https://t.co/sef18uLjSd", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 1510, "source": "TweetDeck", "id_str": "747124218635165697", "is_retweet": false}, {"created_at": "Thu Oct 27 13:46:29 +0000 2016", "text": "RT @just_jenna: 1881 ppl pledged an av. of 23\u00a2 to @HFA for every @realDonaldTrump tweet. \n\n191 tweets last week = $83,744.08.\n\nJoin: https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 0, "source": "TweetDeck", "id_str": "791637192930103297", "is_retweet": true}, {"created_at": "Tue Oct 04 19:50:33 +0000 2016", "text": "RT @elizabethforma: Think about it: @realDonaldTrump calls Latinos rapists, African Americans thugs, &amp; women fat pigs, &amp; Kelly Ayotte think\u2026", "in_reply_to_screen_name": null, "retweet_count": 5634, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783393894742581248", "is_retweet": true}, {"created_at": "Tue Apr 05 21:41:17 +0000 2016", "text": "This is it, Wisconsin\u2014just a few more hours to vote for Hillary. Confirm your polling place here: https://t.co/IYfWifa8q7 and head over now!", "in_reply_to_screen_name": null, "retweet_count": 550, "favorite_count": 1159, "source": "TweetDeck", "id_str": "717467168837906432", "is_retweet": false}, {"created_at": "Sat May 21 00:22:18 +0000 2016", "text": "Republican lawmakers in Oklahoma voted to make it a felony to perform an abortion: https://t.co/JPtKu7jJ4U", "in_reply_to_screen_name": null, "retweet_count": 768, "favorite_count": 1356, "source": "TweetDeck", "id_str": "733815145495941120", "is_retweet": false}, {"created_at": "Tue Aug 02 17:21:45 +0000 2016", "text": "RT @CNN: President Obama strongly rebukes Donald Trump: He is \"unfit to serve as president\" https://t.co/tFiDnVuOD4 https://t.co/AeentEOpfq", "in_reply_to_screen_name": null, "retweet_count": 3430, "favorite_count": 0, "source": "TweetDeck", "id_str": "760526010744012800", "is_retweet": true}, {"created_at": "Thu Feb 04 19:16:24 +0000 2016", "text": "A new dad wrote to Hillary about his hopes for his family: https://t.co/9tLIylkF0u https://t.co/EVeVYUiaph", "in_reply_to_screen_name": null, "retweet_count": 583, "favorite_count": 1549, "source": "TweetDeck", "id_str": "695325046055780359", "is_retweet": false}, {"created_at": "Mon Sep 19 18:24:24 +0000 2016", "text": "Find out how much Hillary's college plan will save you: https://t.co/svkSUzhwYz https://t.co/tmHf8m2CdX", "in_reply_to_screen_name": null, "retweet_count": 976, "favorite_count": 1960, "source": "TweetDeck", "id_str": "777936395319009280", "is_retweet": false}, {"created_at": "Tue Feb 02 23:11:58 +0000 2016", "text": "\"I know Hillary will fight for the issues most important to me and to so many women and families.\" \u2014@SenGillibrand https://t.co/zazrlD7RGj", "in_reply_to_screen_name": null, "retweet_count": 483, "favorite_count": 1399, "source": "TweetDeck", "id_str": "694659552667660290", "is_retweet": false}, {"created_at": "Thu Jul 28 02:59:28 +0000 2016", "text": "\"I stand before you again tonight, after almost two terms as your president, to tell you I am even more optimistic about the future\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1320, "favorite_count": 4370, "source": "TweetDeck", "id_str": "758497069313171456", "is_retweet": false}, {"created_at": "Thu Oct 13 17:00:59 +0000 2016", "text": "\"On November 8, we can show our children that we reject hatred and fear.\u201d \u2014@FLOTUS: https://t.co/tTgeqxNqYm https://t.co/0pnvt9gqM9", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2401, "favorite_count": 5943, "source": "TweetDeck", "id_str": "786612712574951424", "is_retweet": false}, {"created_at": "Wed Aug 31 04:02:02 +0000 2016", "text": "\"From the first days of his campaign, Donald Trump has painted Mexicans as 'rapists' and criminals.\" https://t.co/kwu8TJynrM", "in_reply_to_screen_name": null, "retweet_count": 7686, "favorite_count": 10532, "source": "TweetDeck", "id_str": "770834003985301504", "is_retweet": false}, {"created_at": "Wed Sep 14 16:42:51 +0000 2016", "text": "9. Have you or your campaign discussed U.S.-Russian relations with the Russian billionaires with whom you've done business?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2718, "favorite_count": 4456, "source": "TweetDeck", "id_str": "776098900520345600", "is_retweet": false}, {"created_at": "Sat Aug 06 16:05:14 +0000 2016", "text": "America is stronger when we expand access to the ballot box, not restrict it. It's time to #RestoreTheVRA. https://t.co/uId57oQgUn", "in_reply_to_screen_name": null, "retweet_count": 3553, "favorite_count": 9110, "source": "TweetDeck", "id_str": "761956307054235648", "is_retweet": false}, {"created_at": "Sat Apr 30 18:30:12 +0000 2016", "text": "There's a lot more that unites us than divides us.\nhttps://t.co/DLS4wsovcL", "in_reply_to_screen_name": null, "retweet_count": 1283, "favorite_count": 2703, "source": "Twitter Web Client", "id_str": "726478777253945344", "is_retweet": false}, {"created_at": "Mon Oct 03 18:45:15 +0000 2016", "text": "https://t.co/H2MOa4W86W https://t.co/8ovRZly1r6", "in_reply_to_screen_name": null, "retweet_count": 1292, "favorite_count": 2504, "source": "TweetDeck", "id_str": "783015073308704772", "is_retweet": false}, {"created_at": "Wed Oct 12 17:31:23 +0000 2016", "text": "In 2001, Hillary worked to support and rebuild New York after 9/11. Trump pocketed emergency funds for himself.\u2026 https://t.co/ooYm1JIvSO", "in_reply_to_screen_name": null, "retweet_count": 5427, "favorite_count": 9087, "source": "TweetDeck", "id_str": "786257974188707841", "is_retweet": false}, {"created_at": "Thu Oct 27 18:39:53 +0000 2016", "text": "\"Dignity and respect for women and girls is also on the ballot this election.\u201d \u2014Hillary https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 617, "favorite_count": 1306, "source": "TweetDeck", "id_str": "791711031139729408", "is_retweet": false}, {"created_at": "Tue Sep 27 18:12:06 +0000 2016", "text": "\"I love this country.\nI\u2019m proud of this country.\nI want to be a leader who brings people together.\"\n\u2014Hillary #LoveTrumpsHate", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1835, "favorite_count": 6020, "source": "TweetDeck", "id_str": "780832403392790529", "is_retweet": false}, {"created_at": "Thu Mar 10 03:47:07 +0000 2016", "text": "\u201cPuerto Ricans are citizens of America. They deserve to be treated as citizens.\u201d \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1542, "favorite_count": 3280, "source": "TweetDeck", "id_str": "707774762035052545", "is_retweet": false}, {"created_at": "Thu Jun 02 19:22:01 +0000 2016", "text": "The tools Donald Trump brings to the table\u2014bragging, mocking, composing nasty tweets\u2014won\u2019t do the trick.", "in_reply_to_screen_name": null, "retweet_count": 1923, "favorite_count": 4471, "source": "TweetDeck", "id_str": "738450617849524224", "is_retweet": false}, {"created_at": "Tue Nov 08 17:09:08 +0000 2016", "text": "Today, let's show the world that love will always trump hate. https://t.co/jfd3CXu1CS https://t.co/a7FXGtAfiG", "in_reply_to_screen_name": null, "retweet_count": 15443, "favorite_count": 31667, "source": "Media Studio", "id_str": "796036845700141056", "is_retweet": false}, {"created_at": "Tue May 03 19:29:34 +0000 2016", "text": "\u201cWhat is the other side offering? Unfortunately, it\u2019s the same old trickle-down economics that failed us before.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 544, "favorite_count": 1185, "source": "TweetDeck", "id_str": "727580882178027520", "is_retweet": false}, {"created_at": "Tue Jun 14 16:33:57 +0000 2016", "text": "Trump's rhetoric is shameful.\n\nIt was one thing when he was a reality TV personality. It\u2019s another when he\u2019s running for president.", "in_reply_to_screen_name": null, "retweet_count": 1900, "favorite_count": 5427, "source": "TweetDeck", "id_str": "742756974622822400", "is_retweet": false}, {"created_at": "Thu Jun 23 02:04:54 +0000 2016", "text": "Proud of 17 years of progress for those with disabilities under the historic #Olmstead ruling. Let's keep going. https://t.co/pSgfiAgAHf", "in_reply_to_screen_name": null, "retweet_count": 694, "favorite_count": 2375, "source": "TweetDeck", "id_str": "745799764004978694", "is_retweet": false}, {"created_at": "Thu Sep 15 19:46:16 +0000 2016", "text": "\"I\u2019m running for young people like so many of you who dream of changing our world for the better.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 695, "favorite_count": 1977, "source": "TweetDeck", "id_str": "776507447234158593", "is_retweet": false}, {"created_at": "Sun Apr 03 02:15:28 +0000 2016", "text": "Nueva York le dio una oportunidad a Hillary de ser su senadora. Ella luch\u00f3 por ellos y estos fueron los resultados. https://t.co/odn7GITEdL", "in_reply_to_screen_name": null, "retweet_count": 594, "favorite_count": 1214, "source": "Twitter for iPhone", "id_str": "716449003903315969", "is_retweet": false}, {"created_at": "Wed Oct 05 02:30:23 +0000 2016", "text": "\"We trust American women.\"\n\nThank you, @TimKaine. #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 8037, "favorite_count": 23486, "source": "TweetDeck", "id_str": "783494516363890688", "is_retweet": false}, {"created_at": "Mon Nov 07 21:28:44 +0000 2016", "text": "\"Every single one of us has something to contribute to this great country.\u201d \u2014Hillary https://t.co/hCBaY6ZHYo", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1216, "favorite_count": 2931, "source": "TweetDeck", "id_str": "795739790528417792", "is_retweet": false}, {"created_at": "Thu Sep 15 18:37:57 +0000 2016", "text": "If you're in college\u2014or have a kid who is\u2014find out how much you could save with Hillary's college plan: https://t.co/v7pLQaC6BW", "in_reply_to_screen_name": null, "retweet_count": 826, "favorite_count": 1864, "source": "TweetDeck", "id_str": "776490251644796928", "is_retweet": false}, {"created_at": "Fri Jan 01 05:01:19 +0000 2016", "text": "Happy New Year! https://t.co/ji8Bl7v97h", "in_reply_to_screen_name": null, "retweet_count": 2325, "favorite_count": 9019, "source": "Twitter for iPhone", "id_str": "682788671259553792", "is_retweet": false}, {"created_at": "Thu Jul 28 01:36:26 +0000 2016", "text": "\"We must unite around the candidate who can defeat a dangerous demagogue.\" \u2014@MikeBloomberg on the stakes in this race", "in_reply_to_screen_name": null, "retweet_count": 1468, "favorite_count": 3972, "source": "TweetDeck", "id_str": "758476174800453633", "is_retweet": false}, {"created_at": "Tue Sep 13 01:28:58 +0000 2016", "text": "The cost of attending HBCUs should never prevent @_bxddxss\u2014or anyone\u2014from attending one: https://t.co/dexkwGKhXm https://t.co/XxxIA2hqit", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 412, "favorite_count": 907, "source": "TweetDeck", "id_str": "775506523434938368", "is_retweet": false}, {"created_at": "Sat Sep 17 23:09:30 +0000 2016", "text": "So how exactly did Donald Trump build his own bank account?\n\nOn the backs of American taxpayers: https://t.co/4uBuIljQML", "in_reply_to_screen_name": null, "retweet_count": 2844, "favorite_count": 4687, "source": "TweetDeck", "id_str": "777283365355552768", "is_retweet": false}, {"created_at": "Wed Jul 20 02:15:54 +0000 2016", "text": "Lots of talk of \"talent and drive\" about someone who repeatedly drives his businesses into the ground. #RNCinCLE https://t.co/ZpbJL2BgXv", "in_reply_to_screen_name": null, "retweet_count": 8455, "favorite_count": 6820, "source": "TweetDeck", "id_str": "755587002989412353", "is_retweet": false}, {"created_at": "Wed Aug 24 15:35:50 +0000 2016", "text": "A message from Hillary to young women everywhere: https://t.co/6xfdyQ3H4Y https://t.co/eEOcd3VsXi", "in_reply_to_screen_name": null, "retweet_count": 1694, "favorite_count": 4316, "source": "TweetDeck", "id_str": "768471887903096833", "is_retweet": false}, {"created_at": "Wed Apr 27 16:22:49 +0000 2016", "text": "Civil rights and voting rights.\nWorkers\u2019 rights and women\u2019s rights.\n\nLet's defend them all.\nhttps://t.co/7oSXoIynpr", "in_reply_to_screen_name": null, "retweet_count": 1218, "favorite_count": 2513, "source": "Twitter Web Client", "id_str": "725359556109299712", "is_retweet": false}, {"created_at": "Sun Oct 02 22:40:58 +0000 2016", "text": "L'Shana Tovah to everyone celebrating Rosh Hashanah! May the coming year be filled with sweetness and joy. -H", "in_reply_to_screen_name": null, "retweet_count": 3664, "favorite_count": 13727, "source": "TweetDeck", "id_str": "782712005719384064", "is_retweet": false}, {"created_at": "Fri Nov 04 01:03:56 +0000 2016", "text": "\"Are we going to build a better, stronger America\u2014or are we going to fear each other, and fear our future?\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1063, "favorite_count": 2616, "source": "TweetDeck", "id_str": "794344396430934016", "is_retweet": false}, {"created_at": "Mon Feb 22 20:33:55 +0000 2016", "text": "Hillary\u2019s doing a Facebook Q&amp;A with @theGrio this afternoon! Join the conversation and leave your questions here: https://t.co/h42T01MMxX", "in_reply_to_screen_name": null, "retweet_count": 307, "favorite_count": 829, "source": "TweetDeck", "id_str": "701867535537414144", "is_retweet": false}, {"created_at": "Fri Mar 11 04:34:55 +0000 2016", "text": "Climate change is too urgent a threat to wait on Congress. Proud of the US-Canada announcement to take steps to reduce methane emissions. -H", "in_reply_to_screen_name": null, "retweet_count": 1502, "favorite_count": 4260, "source": "TweetDeck", "id_str": "708149176723492864", "is_retweet": false}, {"created_at": "Wed Apr 20 20:03:25 +0000 2016", "text": "A fitting tribute yesterday for Susan B. Anthony, who fought to win women the right to vote: \"I voted\" stickers. https://t.co/NKyVdxfA4Z", "in_reply_to_screen_name": null, "retweet_count": 1138, "favorite_count": 2691, "source": "TweetDeck", "id_str": "722878358346973184", "is_retweet": false}, {"created_at": "Tue Jul 26 03:06:12 +0000 2016", "text": "\"Hillary Clinton must become the next president of the United States.\u201d \u2014@BernieSanders #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 5021, "favorite_count": 11583, "source": "TweetDeck", "id_str": "757773990173806592", "is_retweet": false}, {"created_at": "Tue Oct 25 20:01:40 +0000 2016", "text": "RT @samifayebaker: Grassroots activism FTW! #NationalPantsuitDay was the life-affirming, shoulder-padded love-fest we needed! Now vote! htt\u2026", "in_reply_to_screen_name": null, "retweet_count": 804, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791006837000765441", "is_retweet": true}, {"created_at": "Wed Oct 05 05:56:09 +0000 2016", "text": "RT @politico: 6 things Trump definitely said that Pence claimed he didn\u2019t https://t.co/6p4zIRSAZQ | AP Photo https://t.co/pHQn9bdjAg", "in_reply_to_screen_name": null, "retweet_count": 3614, "favorite_count": 0, "source": "TweetDeck", "id_str": "783546297315917829", "is_retweet": true}, {"created_at": "Mon Sep 12 23:56:45 +0000 2016", "text": "Your student debt collector would really like you not to vote for Hillary. https://t.co/ihgnBFtCtA https://t.co/cEdleJFcE9", "in_reply_to_screen_name": null, "retweet_count": 1359, "favorite_count": 3237, "source": "Twitter Web Client", "id_str": "775483318557151232", "is_retweet": false}, {"created_at": "Fri Feb 05 03:44:09 +0000 2016", "text": "\"This. Is. An. Emergency.\" \u2014Hillary  calling for action on the Flint water crisis #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 700, "favorite_count": 1537, "source": "TweetDeck", "id_str": "695452827913572352", "is_retweet": false}, {"created_at": "Mon Nov 07 18:16:40 +0000 2016", "text": "RT @politico: Chelsea Clinton on @HillaryClinton: \"I am fiercely, ridiculously proud to be her daughter.\" https://t.co/72UKFDqNWE", "in_reply_to_screen_name": null, "retweet_count": 2480, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795691452412133377", "is_retweet": true}, {"created_at": "Thu Nov 03 18:25:36 +0000 2016", "text": "RT @repjohnlewis: I\u2019ve marched, protested, been beaten and arrested--all for the right to vote. Friends of mine gave their lives. Honor the\u2026", "in_reply_to_screen_name": null, "retweet_count": 53338, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794244152624107525", "is_retweet": true}, {"created_at": "Mon Oct 03 22:19:03 +0000 2016", "text": "\"We both believe every child should have the chance to live up to his or her God-given potential\u201d \u2014Hillary on LeBron https://t.co/PcBChoxpf9", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1184, "favorite_count": 3529, "source": "TweetDeck", "id_str": "783068877165125638", "is_retweet": false}, {"created_at": "Wed Mar 16 20:01:25 +0000 2016", "text": "We\u2019re not going to succeed by dividing this country between \u201cus\u201d and \u201cthem.\u201d We\u2019re in this together.\nhttps://t.co/6NX9V0ChFF", "in_reply_to_screen_name": null, "retweet_count": 2255, "favorite_count": 5082, "source": "Twitter Web Client", "id_str": "710194278467698688", "is_retweet": false}, {"created_at": "Sun Jun 26 17:08:58 +0000 2016", "text": "Every LGBT American deserves to live, work, and marry free from discrimination or violence.\nhttps://t.co/GQeL2HcI7l", "in_reply_to_screen_name": null, "retweet_count": 2040, "favorite_count": 4770, "source": "Twitter Web Client", "id_str": "747114444514168832", "is_retweet": false}, {"created_at": "Thu Oct 20 01:07:27 +0000 2016", "text": "This election is over in 20 days\u2014but the decision we make will affect our country for generations.  #DebateNight https://t.co/SfQM2FdOAr", "in_reply_to_screen_name": null, "retweet_count": 2455, "favorite_count": 5533, "source": "TweetDeck", "id_str": "788909459586314240", "is_retweet": false}, {"created_at": "Sat Feb 06 02:45:56 +0000 2016", "text": "Hillary on the Flint water crisis: \"Would it have happened if they were rich and white instead of poor and black?\" #NHdems2016", "in_reply_to_screen_name": null, "retweet_count": 541, "favorite_count": 1240, "source": "TweetDeck", "id_str": "695800564924420098", "is_retweet": false}, {"created_at": "Thu Oct 27 17:29:32 +0000 2016", "text": "\"Would my son have a place in your America?\" \u2014Khizr Khan, father of a fallen American hero, to Donald Trump https://t.co/TRmSe4qfRr", "in_reply_to_screen_name": null, "retweet_count": 4167, "favorite_count": 10073, "source": "Media Studio", "id_str": "791693326466461697", "is_retweet": false}, {"created_at": "Thu Oct 20 01:04:09 +0000 2016", "text": "#DebateNight https://t.co/CkUnCp2o0F", "in_reply_to_screen_name": null, "retweet_count": 2409, "favorite_count": 6766, "source": "TweetDeck", "id_str": "788908632838664192", "is_retweet": false}, {"created_at": "Mon Oct 03 03:30:59 +0000 2016", "text": "RT @Hillary_esp: Seg\u00fan @NYTimes,Trump pudo haber contribuido menos para el ej\u00e9rcito y las universidades que los inmigrantes indocumentados\u2026", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "782784990924902400", "is_retweet": true}, {"created_at": "Sat Jun 04 21:16:15 +0000 2016", "text": "Trump said the judge presiding over a lawsuit against Trump U. should be disqualified from his job because of his \u201cMexican heritage.\u201d", "in_reply_to_screen_name": null, "retweet_count": 1875, "favorite_count": 3942, "source": "TweetDeck", "id_str": "739204141055102976", "is_retweet": false}, {"created_at": "Fri Sep 02 12:51:23 +0000 2016", "text": "As a candidate, Trump has already embarrassed us on the world stage.\n\nImagine the damage he'd do as president. https://t.co/nmOVOboTYf", "in_reply_to_screen_name": null, "retweet_count": 10367, "favorite_count": 20373, "source": "Twitter Web Client", "id_str": "771691993835638784", "is_retweet": false}, {"created_at": "Thu Aug 25 19:24:53 +0000 2016", "text": "Trump refused to disavow the support of David Duke, a notorious former leader of the Ku Klux Klan. https://t.co/PD8bNwuS3c", "in_reply_to_screen_name": null, "retweet_count": 2304, "favorite_count": 4072, "source": "TweetDeck", "id_str": "768891920731017216", "is_retweet": false}, {"created_at": "Tue Jun 21 16:55:50 +0000 2016", "text": "In America, we don\u2019t begrudge people being successful \u2013 but we know they shouldn\u2019t do it by destroying other people. https://t.co/lQ1IzXFZrV", "in_reply_to_screen_name": null, "retweet_count": 2061, "favorite_count": 5467, "source": "TweetDeck", "id_str": "745299197600145408", "is_retweet": false}, {"created_at": "Fri Sep 30 20:50:46 +0000 2016", "text": "RT @jmpalmieri: @realDonaldTrump's problem isn't that he couldn't be heard on Monday night. His problem is we all heard him quite clearly.", "in_reply_to_screen_name": null, "retweet_count": 3284, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781959494112841728", "is_retweet": true}, {"created_at": "Tue Sep 27 01:19:02 +0000 2016", "text": "\"That's called business.\" \u2014Donald Trump on the housing crash.\n\nFor millions of Americans it was called \"losing their home.\" #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 12748, "favorite_count": 20729, "source": "TweetDeck", "id_str": "780577456080166912", "is_retweet": false}, {"created_at": "Wed Sep 21 18:49:04 +0000 2016", "text": "When we leave people out or write them off, we not only shortchange them and their dreams, we shortchange our country and our future.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 631, "favorite_count": 1321, "source": "TweetDeck", "id_str": "778667376686559232", "is_retweet": false}, {"created_at": "Wed Oct 05 02:49:05 +0000 2016", "text": "RT @jessetyler: My takeaway of the #VPDebate: Pence is asking Americans to get behind a candidate who's words he himself can not defend.", "in_reply_to_screen_name": null, "retweet_count": 7786, "favorite_count": 0, "source": "TweetDeck", "id_str": "783499218723958784", "is_retweet": true}, {"created_at": "Tue Feb 02 04:32:35 +0000 2016", "text": "\u201cI know we can protect our rights: women\u2019s rights, gay rights, voting rights, immigrants' rights, workers' rights.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2073, "favorite_count": 4044, "source": "TweetDeck", "id_str": "694377850334527488", "is_retweet": false}, {"created_at": "Sun Jun 12 18:56:20 +0000 2016", "text": "\"I join Americans in praying for the victims of the attack in Orlando.\" \n\nHillary's statement: https://t.co/MmaGjrSufr", "in_reply_to_screen_name": null, "retweet_count": 4028, "favorite_count": 11760, "source": "TweetDeck", "id_str": "742068030620962817", "is_retweet": false}, {"created_at": "Sun Nov 06 23:56:23 +0000 2016", "text": "\"My son was Captain Humayun Khan ... and he was a Muslim American. I want to ask Mr. Trump: Would my son have a pla\u2026 https://t.co/XzjM7mAhvS", "in_reply_to_screen_name": null, "retweet_count": 8145, "favorite_count": 20170, "source": "Media Studio", "id_str": "795414558626160644", "is_retweet": false}, {"created_at": "Wed Sep 21 01:02:30 +0000 2016", "text": "Four months from today, our next president will walk into the Oval Office.\n\nHelp make sure it's not Donald Trump: https://t.co/Gxp2QdeIhH", "in_reply_to_screen_name": null, "retweet_count": 3403, "favorite_count": 9528, "source": "TweetDeck", "id_str": "778398968225079302", "is_retweet": false}, {"created_at": "Fri Jun 10 17:01:08 +0000 2016", "text": "\u201cBeing able to plan their families not only saved women\u2019s lives\u2014it also transformed them.\u201d \u2014Hillary to @PPact", "in_reply_to_screen_name": null, "retweet_count": 943, "favorite_count": 3149, "source": "TweetDeck", "id_str": "741314267253772292", "is_retweet": false}, {"created_at": "Sun May 01 20:57:50 +0000 2016", "text": "This #APAHM, let's celebrate the tremendous contributions from Asian Americans &amp; Pacific Islanders to our country. https://t.co/QM2PQ07zWH", "in_reply_to_screen_name": null, "retweet_count": 1275, "favorite_count": 3625, "source": "TweetDeck", "id_str": "726878319736672256", "is_retweet": false}, {"created_at": "Sat Jul 16 16:16:27 +0000 2016", "text": "Bad for:\n\u2714\ufe0f The economy\n\u2714\ufe0f Women\n\u2714\ufe0f Immigrants \n\u2714\ufe0f And *literally* the planet https://t.co/M0s5sQOGrd", "in_reply_to_screen_name": null, "retweet_count": 3113, "favorite_count": 6550, "source": "TweetDeck", "id_str": "754348981648515072", "is_retweet": false}, {"created_at": "Sat Apr 23 00:03:51 +0000 2016", "text": "Passover is a chance to gather with loved ones and recommit to fighting all forms of injustice. Chag sameach to those celebrating. -H", "in_reply_to_screen_name": null, "retweet_count": 1372, "favorite_count": 4260, "source": "TweetDeck", "id_str": "723663639450947584", "is_retweet": false}, {"created_at": "Mon Oct 10 18:13:43 +0000 2016", "text": "Hillary's been fighting for kids and families her entire career\u2014and that's the experience she'll take to the White\u2026 https://t.co/2syqm2ACqq", "in_reply_to_screen_name": null, "retweet_count": 4984, "favorite_count": 15786, "source": "Media Studio", "id_str": "785543851448606721", "is_retweet": false}, {"created_at": "Fri Sep 16 02:19:05 +0000 2016", "text": "RT @WhiteHouse: Immigrants aren\u2019t somehow changing the American character; immigrants are the American character. https://t.co/S2vtM157TI", "in_reply_to_screen_name": null, "retweet_count": 2603, "favorite_count": 0, "source": "TweetDeck", "id_str": "776606300738314244", "is_retweet": true}, {"created_at": "Sat Nov 05 22:13:25 +0000 2016", "text": "Your vote could make all the difference. Confirm where you'll cast your vote for Hillary: https://t.co/3TKJ4H68Kz https://t.co/6SNysBsVHs", "in_reply_to_screen_name": null, "retweet_count": 2560, "favorite_count": 7490, "source": "TweetDeck", "id_str": "795026257696145409", "is_retweet": false}, {"created_at": "Tue Sep 27 18:45:39 +0000 2016", "text": "It's #NationalVoterRegistrationDay. Celebrate by registering to vote \u2192 https://t.co/tTgeqxNqYm https://t.co/R6lVvgLECG", "in_reply_to_screen_name": null, "retweet_count": 2056, "favorite_count": 4173, "source": "TweetDeck", "id_str": "780840847256453120", "is_retweet": false}, {"created_at": "Thu Aug 25 19:41:57 +0000 2016", "text": "Our rising generation of young Americans is the most open, diverse, and connected we\u2019ve ever seen.", "in_reply_to_screen_name": null, "retweet_count": 1304, "favorite_count": 3678, "source": "TweetDeck", "id_str": "768896213454299137", "is_retweet": false}, {"created_at": "Sun Jan 31 00:59:35 +0000 2016", "text": "What\u2019s happening in Flint is unconscionable\u2014and there are too many other Flints out there. https://t.co/ecaP9pWwSU -H", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 895, "source": "TweetDeck", "id_str": "693599472090222593", "is_retweet": false}, {"created_at": "Mon Oct 31 14:04:32 +0000 2016", "text": "In 1964, Monique was three years old and appeared in \u201cDaisy,\u201d a political ad about avoiding nuclear war. Here\u2019s wha\u2026 https://t.co/0bPW7R3ziV", "in_reply_to_screen_name": null, "retweet_count": 2849, "favorite_count": 5340, "source": "Media Studio", "id_str": "793091287293407233", "is_retweet": false}, {"created_at": "Wed Sep 14 16:25:58 +0000 2016", "text": "1. Will you sever ties with your company linked to foreign leaders, questionable organizations, and criminals if you become president?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3411, "favorite_count": 5668, "source": "TweetDeck", "id_str": "776094652336369664", "is_retweet": false}, {"created_at": "Tue Oct 04 19:25:04 +0000 2016", "text": "Concerned for the millions of families in Hurricane Matthew's path. You can donate to help those in need here. https://t.co/cZ1mBHhWtD -H", "in_reply_to_screen_name": null, "retweet_count": 1440, "favorite_count": 3303, "source": "TweetDeck", "id_str": "783387480418574336", "is_retweet": false}, {"created_at": "Mon Oct 10 02:44:34 +0000 2016", "text": "RT @GabbyGiffords: .@HillaryClinton showed tonight that she is the only candidate in this race who is prepared to be Commander-in-Chief. #d\u2026", "in_reply_to_screen_name": null, "retweet_count": 5164, "favorite_count": 0, "source": "TweetDeck", "id_str": "785310023773741056", "is_retweet": true}, {"created_at": "Tue May 10 02:58:15 +0000 2016", "text": "\"Trump is floating an insane idea that would tank the American economy.\" \u2014@businessinsider https://t.co/ssVajpX6Yf", "in_reply_to_screen_name": null, "retweet_count": 1724, "favorite_count": 2541, "source": "TweetDeck", "id_str": "729868122673577984", "is_retweet": false}, {"created_at": "Tue Jul 26 00:03:50 +0000 2016", "text": "RT @klyouell: I cannot ever say enough how much it means to me that @HillaryClinton speaks about addiction and substance abuse. #DemsInPhil\u2026", "in_reply_to_screen_name": null, "retweet_count": 486, "favorite_count": 0, "source": "TweetDeck", "id_str": "757728095763824640", "is_retweet": true}, {"created_at": "Thu Nov 03 20:43:33 +0000 2016", "text": ".@FLOTUS is with her. Are you? https://t.co/gGLS6SO7sf https://t.co/F05u8pq2rP", "in_reply_to_screen_name": null, "retweet_count": 2279, "favorite_count": 8082, "source": "TweetDeck", "id_str": "794278866181357572", "is_retweet": false}, {"created_at": "Fri Jul 29 03:23:25 +0000 2016", "text": "\"I refuse to believe we can't find common ground here. We have to heal the divides in our country.\u201d \u2014Hillary https://t.co/hGRbyjBeMl", "in_reply_to_screen_name": null, "retweet_count": 3029, "favorite_count": 8678, "source": "TweetDeck", "id_str": "758865484209008640", "is_retweet": false}, {"created_at": "Mon Oct 03 20:05:03 +0000 2016", "text": "RT @timkaine: My dad Al owned a union ironworking shop in Kansas City. That's where I learned about respecting hard work and hardworking pe\u2026", "in_reply_to_screen_name": null, "retweet_count": 3410, "favorite_count": 0, "source": "TweetDeck", "id_str": "783035155334172673", "is_retweet": true}, {"created_at": "Tue Sep 13 18:12:17 +0000 2016", "text": "\u201cShe knows that love trumps hate.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 937, "favorite_count": 3176, "source": "TweetDeck", "id_str": "775759018149179392", "is_retweet": false}, {"created_at": "Thu Apr 28 21:00:49 +0000 2016", "text": "#TBT to 2008 when Hillary helped make emergency contraception available over the counter: https://t.co/w1mvZrP1b8", "in_reply_to_screen_name": null, "retweet_count": 933, "favorite_count": 2781, "source": "TweetDeck", "id_str": "725791904089161728", "is_retweet": false}, {"created_at": "Mon Jan 04 22:30:16 +0000 2016", "text": "No one's had a better seat to watch Hillary's public service career over the past 45 years than @BillClinton:\nhttps://t.co/yKFEfHWsRh", "in_reply_to_screen_name": null, "retweet_count": 654, "favorite_count": 1475, "source": "Twitter Web Client", "id_str": "684139811460890624", "is_retweet": false}, {"created_at": "Thu Oct 13 22:55:35 +0000 2016", "text": "\"Nobody can fully know what it\u2019s like to manage a global crisis\u2026but I tell you nobody\u2019s been closer to those decisi\u2026 https://t.co/ZnIFtRF4SK", "in_reply_to_screen_name": null, "retweet_count": 3726, "favorite_count": 12772, "source": "TweetDeck", "id_str": "786701947470577665", "is_retweet": false}, {"created_at": "Sun Sep 25 22:19:14 +0000 2016", "text": "59 years ago, 9 brave students integrated Central High School, changing the course of history. Let's recommit to fi\u2026 https://t.co/wzF4WRU5IS", "in_reply_to_screen_name": null, "retweet_count": 6356, "favorite_count": 18308, "source": "Twitter Web Client", "id_str": "780169819379343364", "is_retweet": false}, {"created_at": "Sat Jul 23 14:37:20 +0000 2016", "text": "This is what dauntless leadership looks like. Thank you, @GovernorVA\u2014proud to call you a friend. -H https://t.co/c72c0HUSyw", "in_reply_to_screen_name": null, "retweet_count": 1358, "favorite_count": 3852, "source": "TweetDeck", "id_str": "756860753668440064", "is_retweet": false}, {"created_at": "Mon Sep 19 16:30:25 +0000 2016", "text": "\u201cYour generation is the most inclusive, progressive, and entrepreneurial we\u2019ve ever seen.\u201d \u2014Hillary to students at @TempleUniv", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 560, "favorite_count": 1250, "source": "TweetDeck", "id_str": "777907710205554688", "is_retweet": false}, {"created_at": "Sun May 22 17:52:52 +0000 2016", "text": "\u201cMentiroso\", \"fraude\", \u201cxen\u00f3fobo\" y otras cosas que l\u00edderes republicanos dicen sobre Trump. https://t.co/QnPOgws3F7", "in_reply_to_screen_name": null, "retweet_count": 512, "favorite_count": 909, "source": "Twitter for iPhone", "id_str": "734441915958071296", "is_retweet": false}, {"created_at": "Mon Apr 11 20:04:24 +0000 2016", "text": "We can protect our Second Amendment rights AND take commonsense steps to prevent gun violence. It\u2019s just a question of whether we choose to.", "in_reply_to_screen_name": null, "retweet_count": 1634, "favorite_count": 3802, "source": "TweetDeck", "id_str": "719617115217661953", "is_retweet": false}, {"created_at": "Fri Sep 16 16:54:22 +0000 2016", "text": "Expressing zero regret for years of pushing a racist conspiracy theory, Trump again appointed himself judge &amp; jury on @POTUS's citizenship.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3663, "favorite_count": 8131, "source": "TweetDeck", "id_str": "776826575161614336", "is_retweet": false}, {"created_at": "Thu Sep 22 19:24:40 +0000 2016", "text": "Most people who are bullies grow out of it. \n\nDonald Trump hasn't. https://t.co/tEJ9ATm9BS", "in_reply_to_screen_name": null, "retweet_count": 3979, "favorite_count": 7826, "source": "Twitter Web Client", "id_str": "779038725128855552", "is_retweet": false}, {"created_at": "Tue May 31 20:36:32 +0000 2016", "text": "\"The future is at stake. And that\u2019s why we\u2019re with her.\" \u2014@NRDC_AF on its first-ever presidential endorsement https://t.co/tH4uO2YpcA", "in_reply_to_screen_name": null, "retweet_count": 1012, "favorite_count": 2350, "source": "TweetDeck", "id_str": "737744594847305728", "is_retweet": false}, {"created_at": "Mon Jun 13 17:11:17 +0000 2016", "text": "Watch live: Hillary speaks on the terrorist attack in Orlando \u2192 https://t.co/ARky5hVf9F", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 1267, "source": "TweetDeck", "id_str": "742403983839506432", "is_retweet": false}, {"created_at": "Fri Jul 29 03:23:48 +0000 2016", "text": "Let\u2019s put ourselves in the shoes of young black &amp; Latino people who face the effects of systemic racism and feel their lives are disposable.", "in_reply_to_screen_name": null, "retweet_count": 7314, "favorite_count": 17236, "source": "TweetDeck", "id_str": "758865582603198465", "is_retweet": false}, {"created_at": "Tue Feb 09 13:09:09 +0000 2016", "text": "Primary Day is here, New Hampshire! Text WHERE to 47246 to find your polling location. Hillary\u2019s counting on you. https://t.co/j3oS454d7R", "in_reply_to_screen_name": null, "retweet_count": 492, "favorite_count": 1027, "source": "TweetDeck", "id_str": "697044565828755456", "is_retweet": false}, {"created_at": "Thu Jul 28 03:00:25 +0000 2016", "text": "\"We brought more of our troops home to their families, and we delivered justice to Osama bin Laden.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 845, "favorite_count": 3329, "source": "TweetDeck", "id_str": "758497308031975424", "is_retweet": false}, {"created_at": "Tue Apr 19 10:01:38 +0000 2016", "text": "Go vote today, New York\u2014Hillary needs you. Text WHERE to 47246 to find your polling place.", "in_reply_to_screen_name": null, "retweet_count": 1428, "favorite_count": 2528, "source": "Twitter for iPhone", "id_str": "722364527719936000", "is_retweet": false}, {"created_at": "Mon Jul 18 17:55:03 +0000 2016", "text": "\"No nos representas. Tus ideas no nos representan. Tus valores no nos representan\"\nCarta abierta a Trump. Firma hoy: https://t.co/LnuTNGzIvs", "in_reply_to_screen_name": null, "retweet_count": 642, "favorite_count": 1179, "source": "TweetDeck", "id_str": "755098573742698496", "is_retweet": false}, {"created_at": "Fri Oct 21 01:27:13 +0000 2016", "text": "\"Donald, I did enjoy listening to your speech\u2026I\u2019m sure I\u2019ll enjoy listening to Mike Pence deny you ever gave it.\" \u2014Hillary #AlSmithDinner", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3127, "favorite_count": 8105, "source": "TweetDeck", "id_str": "789276825683890177", "is_retweet": false}, {"created_at": "Thu Jan 21 13:31:03 +0000 2016", "text": "No one would tolerate these conditions in a wealthy suburb. Detroit students and teachers deserve better. -H \nhttps://t.co/z07LVKNSsx", "in_reply_to_screen_name": null, "retweet_count": 1320, "favorite_count": 2147, "source": "TweetDeck", "id_str": "690164705135083520", "is_retweet": false}, {"created_at": "Wed May 04 18:46:12 +0000 2016", "text": "\"President Trump\" is a dangerous proposition.\n\nMitt Romney, Ted Cruz, and Marco Rubio agree.\nhttps://t.co/fUkISvgaXC", "in_reply_to_screen_name": null, "retweet_count": 6811, "favorite_count": 9448, "source": "Twitter Web Client", "id_str": "727932354883248129", "is_retweet": false}, {"created_at": "Tue Jul 26 23:22:40 +0000 2016", "text": "RT @HFA: We made history. https://t.co/TBvItE7oSa", "in_reply_to_screen_name": null, "retweet_count": 2457, "favorite_count": 0, "source": "TweetDeck", "id_str": "758080121936936960", "is_retweet": true}, {"created_at": "Sat Mar 05 13:57:06 +0000 2016", "text": "It\u2019s Election Day for KS, LA, and NE! Confirm your polling place here and vote today: https://t.co/LdIBwMPzC4 https://t.co/RyYhlO8D4P", "in_reply_to_screen_name": null, "retweet_count": 1282, "favorite_count": 2386, "source": "TweetDeck", "id_str": "706116330097909761", "is_retweet": false}, {"created_at": "Wed Mar 16 04:25:42 +0000 2016", "text": "Love you back, Illinois. https://t.co/mTmxFfA1lA", "in_reply_to_screen_name": null, "retweet_count": 2238, "favorite_count": 7254, "source": "TweetDeck", "id_str": "709958795997347842", "is_retweet": false}, {"created_at": "Thu Sep 01 20:22:06 +0000 2016", "text": "RT @timkaine: This election is about looking in the mirror. Do we see a nation that respects people or divides people? https://t.co/uQZLNiB\u2026", "in_reply_to_screen_name": null, "retweet_count": 2850, "favorite_count": 0, "source": "TweetDeck", "id_str": "771443033246138368", "is_retweet": true}, {"created_at": "Fri Jun 03 02:54:27 +0000 2016", "text": "Recordatorio para Mr. Trump. https://t.co/d1boHQIp6X", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 1755, "source": "TweetDeck", "id_str": "738564475771576321", "is_retweet": false}, {"created_at": "Sun Nov 06 01:35:52 +0000 2016", "text": "More people are voting in this election than ever before. Make a plan to vote today: https://t.co/3TKJ4H68Kz https://t.co/hi7IsIZQni", "in_reply_to_screen_name": null, "retweet_count": 3009, "favorite_count": 8993, "source": "TweetDeck", "id_str": "795077204992466944", "is_retweet": false}, {"created_at": "Tue Jul 19 16:18:58 +0000 2016", "text": "We think Trump's been involved in more than 5,500 lawsuits. We're going to try and read them all in 4 hours: https://t.co/uEDYLIKkFk", "in_reply_to_screen_name": null, "retweet_count": 2189, "favorite_count": 5027, "source": "TweetDeck", "id_str": "755436780086759425", "is_retweet": false}, {"created_at": "Wed Sep 07 23:55:40 +0000 2016", "text": "Donald Trump has proven over and over again that he's unfit to be our Commander-in-Chief. https://t.co/uLoHJdzXte", "in_reply_to_screen_name": null, "retweet_count": 2176, "favorite_count": 4932, "source": "TweetDeck", "id_str": "773671107111034880", "is_retweet": false}, {"created_at": "Tue May 03 19:21:49 +0000 2016", "text": "Revitalizing Appalachia means investing in education and training\u2014from pre-K to college to vocational and retraining programs.", "in_reply_to_screen_name": null, "retweet_count": 504, "favorite_count": 1256, "source": "TweetDeck", "id_str": "727578932766228480", "is_retweet": false}, {"created_at": "Wed Aug 03 21:40:49 +0000 2016", "text": "\"We gotta make this economy work for everybody, not just those at the top.\u201d \u2014Hillary https://t.co/xUQEFdxnWO", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 3627, "source": "TweetDeck", "id_str": "760953595990794240", "is_retweet": false}, {"created_at": "Wed Sep 14 16:18:54 +0000 2016", "text": "Today's must-read: \"Almost every foreign policy decision [Trump] makes will raise serious conflicts of interest.\" https://t.co/rmTos7en9t", "in_reply_to_screen_name": null, "retweet_count": 5613, "favorite_count": 8567, "source": "TweetDeck", "id_str": "776092870545707008", "is_retweet": false}, {"created_at": "Wed Jul 27 01:08:12 +0000 2016", "text": "\"Donald Trump and Mike Pence: We are not going back to the dark days when women died in back alleys.\" \u2014@BarbaraBoxer https://t.co/e6Gsjv8aan", "in_reply_to_screen_name": null, "retweet_count": 1579, "favorite_count": 4933, "source": "TweetDeck", "id_str": "758106679590420480", "is_retweet": false}, {"created_at": "Wed Feb 03 19:39:28 +0000 2016", "text": ".@BernieSanders says Hillary\u2019s been a progressive \u201csome days.\u201d Hillary responds:\nhttps://t.co/RCWx5w8oYU", "in_reply_to_screen_name": null, "retweet_count": 1348, "favorite_count": 2336, "source": "Twitter Web Client", "id_str": "694968463622668288", "is_retweet": false}, {"created_at": "Mon Jun 20 19:56:27 +0000 2016", "text": "We owe families of gun violence victims more than prayers.\n\nTell your senators to act on gun violence prevention: https://t.co/v0defjTptE", "in_reply_to_screen_name": null, "retweet_count": 1546, "favorite_count": 3723, "source": "TweetDeck", "id_str": "744982262987493376", "is_retweet": false}, {"created_at": "Wed Jul 27 23:59:50 +0000 2016", "text": "Text LAWS to 47246 to learn about the dangerous loopholes in our gun laws and get the information you need to help reduce gun violence.", "in_reply_to_screen_name": null, "retweet_count": 899, "favorite_count": 2162, "source": "TweetDeck", "id_str": "758451863477944322", "is_retweet": false}, {"created_at": "Thu Jan 28 22:04:04 +0000 2016", "text": "We will go after pharmaceutical companies that gouge patients with pricing. They are wrong, and we will stop them.\nhttps://t.co/Hv841YgK1M", "in_reply_to_screen_name": null, "retweet_count": 802, "favorite_count": 1632, "source": "Twitter Web Client", "id_str": "692830526411927552", "is_retweet": false}, {"created_at": "Tue Mar 29 19:02:20 +0000 2016", "text": "#Friedrichs decision rightfully leaves in place protections for workers and unions\u2014and is a reminder that our values are at stake on SCOTUS.", "in_reply_to_screen_name": null, "retweet_count": 690, "favorite_count": 1421, "source": "TweetDeck", "id_str": "714890453699538944", "is_retweet": false}, {"created_at": "Thu Jul 14 12:04:21 +0000 2016", "text": "Remember: When @realDonaldTrump opens his mouth, our kids are listening.\nhttps://t.co/pdphHQEzuk", "in_reply_to_screen_name": null, "retweet_count": 5093, "favorite_count": 8361, "source": "Twitter Web Client", "id_str": "753560766645620736", "is_retweet": false}, {"created_at": "Fri Sep 16 14:01:46 +0000 2016", "text": "\"Donald Trump looks at a distinguished judge born in Indiana, and he sees a Mexican, not an American.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 820, "favorite_count": 1658, "source": "TweetDeck", "id_str": "776783135447089152", "is_retweet": false}, {"created_at": "Tue Jan 26 03:50:26 +0000 2016", "text": "\"Every person in this country deserves to be treated with respect.\u201d \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1076, "favorite_count": 2152, "source": "TweetDeck", "id_str": "691830530682281990", "is_retweet": false}, {"created_at": "Thu Oct 06 02:10:07 +0000 2016", "text": "\u201cI\u2019m inspired by her heart, her persistence, and her guts.\u201d \u2014@FLOTUS on Hillary: https://t.co/tTgeqxNqYm https://t.co/vCTqwSuRqp", "in_reply_to_screen_name": null, "retweet_count": 3119, "favorite_count": 8311, "source": "Media Studio", "id_str": "783851803200872448", "is_retweet": false}, {"created_at": "Wed Mar 16 01:11:44 +0000 2016", "text": "\"If we lift each other up instead of tearing each other down, there\u2019s nothing we can\u2019t accomplish together.\" \u2014Hillary in FL", "in_reply_to_screen_name": null, "retweet_count": 2324, "favorite_count": 4924, "source": "TweetDeck", "id_str": "709909985803821056", "is_retweet": false}, {"created_at": "Sat Feb 13 23:36:34 +0000 2016", "text": "There are six Republicans left in the race for the White House\u2014and we can\u2019t afford to let any of them near it. https://t.co/K8c89zkwjj", "in_reply_to_screen_name": null, "retweet_count": 1540, "favorite_count": 3504, "source": "TweetDeck", "id_str": "698652012230135808", "is_retweet": false}, {"created_at": "Fri Sep 30 18:05:50 +0000 2016", "text": "Trump admits he \"can't say\" he treats women with respect. https://t.co/eaOpDVixJD", "in_reply_to_screen_name": null, "retweet_count": 4054, "favorite_count": 6749, "source": "TweetDeck", "id_str": "781917990463868929", "is_retweet": false}, {"created_at": "Tue May 24 21:33:44 +0000 2016", "text": "In Trump\u2019s world, a \u201cgood result\u201d means Trump gets his and working families get hurt. We're better than that.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 728, "favorite_count": 1576, "source": "TweetDeck", "id_str": "735222273909620736", "is_retweet": false}, {"created_at": "Mon Apr 04 15:39:46 +0000 2016", "text": "New York is about to #RaiseTheWage and expand paid leave.\n\nWatch Hillary and @NYGovCuomo speak at the bill signing. https://t.co/n4rfrEuBE8", "in_reply_to_screen_name": null, "retweet_count": 709, "favorite_count": 1615, "source": "TweetDeck", "id_str": "717013800378101760", "is_retweet": false}, {"created_at": "Fri Oct 28 13:10:54 +0000 2016", "text": "Thankful for @TammyforIL's\u2014and her family's\u2014service to this country. It's really not that hard to grasp, @MarkKirk. https://t.co/rKY0rberiB", "in_reply_to_screen_name": null, "retweet_count": 4180, "favorite_count": 10851, "source": "Twitter for iPhone", "id_str": "791990628263624704", "is_retweet": false}, {"created_at": "Thu Oct 06 01:10:43 +0000 2016", "text": "Unfortunately for Mike Pence and Donald Trump, Google exists (and we aren't stupid). https://t.co/dT15XthSSR", "in_reply_to_screen_name": null, "retweet_count": 3054, "favorite_count": 8432, "source": "TweetDeck", "id_str": "783836854680428544", "is_retweet": false}, {"created_at": "Fri May 20 22:03:55 +0000 2016", "text": "Hillary nerds out with a nurse in New Jersey. https://t.co/ALUsGsmkRq\nhttps://t.co/89r91aZeZt", "in_reply_to_screen_name": null, "retweet_count": 1150, "favorite_count": 2501, "source": "Twitter Web Client", "id_str": "733780318377771008", "is_retweet": false}, {"created_at": "Mon Oct 31 22:34:25 +0000 2016", "text": "RT @FranklinFoer: I just reported: Donald Trump has a secret server...it connects to Moscow. \nhttps://t.co/lVgvKdYpbx", "in_reply_to_screen_name": null, "retweet_count": 14534, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793219604659175424", "is_retweet": true}, {"created_at": "Mon Aug 15 17:22:19 +0000 2016", "text": "Under Trump's child care plan, hardworking families that can\u2019t afford child care in the first place would get little to no real help.", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 2796, "source": "TweetDeck", "id_str": "765237193518485504", "is_retweet": false}, {"created_at": "Mon Apr 18 20:03:10 +0000 2016", "text": "I will protect President Obama's executive actions to keep these families together and go even further to bring more families relief. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 659, "favorite_count": 1210, "source": "Twitter Web Client", "id_str": "722153518082232320", "is_retweet": false}, {"created_at": "Sat Jul 23 23:41:03 +0000 2016", "text": "Outraged by today's attack in Kabul that killed dozens who were peacefully demonstrating. We stand with the Afghan people against terror. -H", "in_reply_to_screen_name": null, "retweet_count": 2628, "favorite_count": 8968, "source": "TweetDeck", "id_str": "756997587522191360", "is_retweet": false}, {"created_at": "Wed Aug 31 02:34:15 +0000 2016", "text": "What you need to know about the \"alt-right\" and @realDonaldTrump's connections to white supremacy and hate groups: https://t.co/JfQLDRP8dZ", "in_reply_to_screen_name": null, "retweet_count": 1886, "favorite_count": 3154, "source": "TweetDeck", "id_str": "770811910560284672", "is_retweet": false}, {"created_at": "Tue May 03 19:07:18 +0000 2016", "text": "\u201cEven if people don\u2019t vote for me in November, I\u2019m going to be for them and for you every single day.\u201d https://t.co/PpHOgsErpy", "in_reply_to_screen_name": null, "retweet_count": 1196, "favorite_count": 3770, "source": "TweetDeck", "id_str": "727575277161857024", "is_retweet": false}, {"created_at": "Sat Feb 13 17:25:36 +0000 2016", "text": "\u2705 @dallasnews\n\u2705 @TB_Times\n\u2705 @mySA\nWhy a few of the largest newspapers in Florida and Texas just endorsed Hillary: https://t.co/n9BhYjXa6N", "in_reply_to_screen_name": null, "retweet_count": 674, "favorite_count": 1377, "source": "TweetDeck", "id_str": "698558652643459072", "is_retweet": false}, {"created_at": "Fri Apr 15 03:09:31 +0000 2016", "text": "Southern Democratic voters matter just as much as every other Democratic voter. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1681, "favorite_count": 3457, "source": "TweetDeck", "id_str": "720811261215289344", "is_retweet": false}, {"created_at": "Mon Mar 14 01:51:52 +0000 2016", "text": "\"Failing to do anything\u2014which is what we're doing now\u2014will only lead to more loss of life.\" \u2014Hillary on gun violence prevention #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1072, "favorite_count": 2446, "source": "TweetDeck", "id_str": "709195309562384384", "is_retweet": false}, {"created_at": "Mon Oct 10 15:28:52 +0000 2016", "text": "Ryan is still endorsing Trump. https://t.co/L30EZvUbm0", "in_reply_to_screen_name": null, "retweet_count": 4322, "favorite_count": 9656, "source": "TweetDeck", "id_str": "785502365130555393", "is_retweet": false}, {"created_at": "Wed Feb 24 18:23:54 +0000 2016", "text": "\"[Hillary] tried to help the person that's less fortunate.\u201d https://t.co/K0YclxQQbv https://t.co/UEiHiBtOUj", "in_reply_to_screen_name": null, "retweet_count": 518, "favorite_count": 1293, "source": "TweetDeck", "id_str": "702559591364763648", "is_retweet": false}, {"created_at": "Fri Sep 16 23:56:21 +0000 2016", "text": "The brave men and women who have served our country deserve better than Donald Trump. https://t.co/SmLmTrVhOr", "in_reply_to_screen_name": null, "retweet_count": 7661, "favorite_count": 15683, "source": "Twitter Web Client", "id_str": "776932768081031168", "is_retweet": false}, {"created_at": "Tue Aug 23 15:28:11 +0000 2016", "text": "RT @Hillary_esp: Escuchamos claramente los comentarios de Trump demonizando a los inmigrantes la primera vez, la segunda, tercera...\nhttps:\u2026", "in_reply_to_screen_name": null, "retweet_count": 3194, "favorite_count": 0, "source": "TweetDeck", "id_str": "768107576303218688", "is_retweet": true}, {"created_at": "Sat Mar 19 19:30:53 +0000 2016", "text": "It\u2019s clearer than ever that this may be the most consequential election of our lifetimes. https://t.co/0BToAfq2o2", "in_reply_to_screen_name": null, "retweet_count": 3719, "favorite_count": 10107, "source": "Twitter Web Client", "id_str": "711273756933693440", "is_retweet": false}, {"created_at": "Thu Oct 27 18:37:07 +0000 2016", "text": "If you believe that America should stand with those who serve, because they\u2019ve served us, you\u2019ve got to vote. https://t.co/VV1vwoEiNZ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 527, "favorite_count": 1180, "source": "TweetDeck", "id_str": "791710334616735744", "is_retweet": false}, {"created_at": "Tue Sep 27 01:19:47 +0000 2016", "text": "\"I never said that.\" \u2014Donald Trump, who said that. #debatenight https://t.co/6T8qV2HCbL", "in_reply_to_screen_name": null, "retweet_count": 98378, "favorite_count": 158496, "source": "TweetDeck", "id_str": "780577643456565248", "is_retweet": false}, {"created_at": "Thu Mar 10 03:14:16 +0000 2016", "text": "Said it before. Will say it again. #DemDebate https://t.co/xyXikHXJJr", "in_reply_to_screen_name": null, "retweet_count": 778, "favorite_count": 1508, "source": "TweetDeck", "id_str": "707766494009102336", "is_retweet": false}, {"created_at": "Tue Nov 08 01:51:48 +0000 2016", "text": "\"Tomorrow, with your vote, you can say that this country has always been great, that it is the greatest nation on earth.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1091, "favorite_count": 2613, "source": "TweetDeck", "id_str": "795805991283683328", "is_retweet": false}, {"created_at": "Sat Aug 13 14:02:13 +0000 2016", "text": "Press play for a preview of the new campaign podcast With Her. Stream the full episode here: https://t.co/3B2EmK8eDc\nhttps://t.co/G6TVuRAgIO", "in_reply_to_screen_name": null, "retweet_count": 1192, "favorite_count": 3322, "source": "Twitter Web Client", "id_str": "764462062776950785", "is_retweet": false}, {"created_at": "Mon Apr 04 20:59:52 +0000 2016", "text": "Raising the minimum wage will help millions of families around the country\u2014especially women: https://t.co/edDNkcvh8z https://t.co/0US54cez7X", "in_reply_to_screen_name": null, "retweet_count": 1328, "favorite_count": 2675, "source": "TweetDeck", "id_str": "717094357011140609", "is_retweet": false}, {"created_at": "Thu May 26 18:00:26 +0000 2016", "text": "\u201cDonald Trump said profiting off working families getting kicked out of their homes &amp; losing their jobs would be a \u2018good result.\u2019\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1072, "favorite_count": 2155, "source": "TweetDeck", "id_str": "735893370539773952", "is_retweet": false}, {"created_at": "Mon Mar 28 22:16:31 +0000 2016", "text": "Add your name to tell Senate Republicans: #DoYourJob and hold a hearing on @POTUS's Supreme Court nominee. https://t.co/9RY2PVHcQB", "in_reply_to_screen_name": null, "retweet_count": 648, "favorite_count": 1381, "source": "TweetDeck", "id_str": "714576930335490049", "is_retweet": false}, {"created_at": "Sat Oct 01 22:05:18 +0000 2016", "text": "Don't boo. Vote! https://t.co/tTgeqy51PU https://t.co/9un3FUVxoG", "in_reply_to_screen_name": null, "retweet_count": 4675, "favorite_count": 11434, "source": "Media Studio", "id_str": "782340638297567232", "is_retweet": false}, {"created_at": "Mon Aug 15 19:59:25 +0000 2016", "text": "Whenever you hear Trump talk about foreign policy, picture him in the Situation Room making decisions for all of us. https://t.co/7QBVFziTdN", "in_reply_to_screen_name": null, "retweet_count": 1341, "favorite_count": 2862, "source": "TweetDeck", "id_str": "765276731406184448", "is_retweet": false}, {"created_at": "Sat Mar 26 14:39:09 +0000 2016", "text": "We face serious challenges around the world. We need serious leadership. https://t.co/0hDEOm8K8N", "in_reply_to_screen_name": null, "retweet_count": 1980, "favorite_count": 5233, "source": "TweetDeck", "id_str": "713737057135370240", "is_retweet": false}, {"created_at": "Thu Sep 15 19:42:34 +0000 2016", "text": "\"It\u2019s great to be back on the campaign trail.\u201d \u2014Hillary in North Carolina. Watch live: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 753, "favorite_count": 2741, "source": "TweetDeck", "id_str": "776506515507310592", "is_retweet": false}, {"created_at": "Tue Oct 25 19:09:46 +0000 2016", "text": "We can create millions of jobs and protect our environment at the same time. https://t.co/mCzHzYxMfz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 854, "favorite_count": 1684, "source": "TweetDeck", "id_str": "790993774134591488", "is_retweet": false}, {"created_at": "Sat Feb 13 16:12:50 +0000 2016", "text": "HBCUs provide more than a quality education\u2014they increase opportunity. Supporting them is critical. https://t.co/dGnS2202vK", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 1030, "source": "TweetDeck", "id_str": "698540343638290432", "is_retweet": false}, {"created_at": "Sat Jul 23 18:10:27 +0000 2016", "text": "\u201cLet\u2019s go make history and elect Hillary Clinton the 45th president of the United States.\u201d \u2014@TimKaine https://t.co/RrEPx0FdXE", "in_reply_to_screen_name": null, "retweet_count": 6609, "favorite_count": 19434, "source": "TweetDeck", "id_str": "756914386002972672", "is_retweet": false}, {"created_at": "Tue Sep 27 16:24:03 +0000 2016", "text": "RT @AndrewJenks: I've been fortunate to meet young Americans from all over the country. We all make choices. This is mine...#iRegistered #L\u2026", "in_reply_to_screen_name": null, "retweet_count": 1111, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780805211472486401", "is_retweet": true}, {"created_at": "Sat Jun 11 03:53:13 +0000 2016", "text": "Lights, camera, history.\nhttps://t.co/C7XFFZtz8Z", "in_reply_to_screen_name": null, "retweet_count": 1317, "favorite_count": 4263, "source": "Twitter Web Client", "id_str": "741478368676192256", "is_retweet": false}, {"created_at": "Fri Jul 29 17:45:13 +0000 2016", "text": "\u201cContrary to Donald Trump, I believe every time we knock down a barrier in America, it liberates everyone in America.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2248, "favorite_count": 9142, "source": "TweetDeck", "id_str": "759082364857360384", "is_retweet": false}, {"created_at": "Tue Sep 13 01:05:17 +0000 2016", "text": "We need to make college debt-free. You shouldn't have to take out loans (or more drastic measures) to attend college https://t.co/Z1k6gqfg53", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 708, "favorite_count": 1978, "source": "TweetDeck", "id_str": "775500565572878337", "is_retweet": false}, {"created_at": "Mon Oct 10 01:27:23 +0000 2016", "text": "RT this to make sure everyone you know is registered to vote: https://t.co/tTgeqxNqYm #Debate https://t.co/BKCSA2wipR", "in_reply_to_screen_name": null, "retweet_count": 8565, "favorite_count": 11624, "source": "TweetDeck", "id_str": "785290600077754368", "is_retweet": false}, {"created_at": "Fri Mar 11 02:17:10 +0000 2016", "text": "#GOPdebate https://t.co/aAE5q0IBYN", "in_reply_to_screen_name": null, "retweet_count": 4543, "favorite_count": 8511, "source": "Twitter Web Client", "id_str": "708114512034045952", "is_retweet": false}, {"created_at": "Thu Aug 18 15:01:59 +0000 2016", "text": "We know that giving millionaires huge tax breaks doesn't help our economy. So why would we try it again, Donald? https://t.co/Js7FhLOZxW", "in_reply_to_screen_name": null, "retweet_count": 4080, "favorite_count": 11781, "source": "TweetDeck", "id_str": "766289045144109056", "is_retweet": false}, {"created_at": "Tue Jul 26 23:15:36 +0000 2016", "text": "This moment is for every little girl who dreams big. #WeMadeHistory\nhttps://t.co/DRAJuUUhOr", "in_reply_to_screen_name": null, "retweet_count": 9134, "favorite_count": 17990, "source": "Twitter Web Client", "id_str": "758078343845515264", "is_retweet": false}, {"created_at": "Fri Jul 22 22:06:11 +0000 2016", "text": "\"We need more love and kindness in this country...The last thing we need are leaders who try to divide us even more than we are.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3073, "favorite_count": 8375, "source": "TweetDeck", "id_str": "756611324596092928", "is_retweet": false}, {"created_at": "Thu Sep 29 18:47:36 +0000 2016", "text": "Trump appears to have broken the law and acted against our nation's interest, all so he could line his own pockets.\u2026 https://t.co/F3TnA5hbXt", "in_reply_to_screen_name": null, "retweet_count": 5054, "favorite_count": 8311, "source": "TweetDeck", "id_str": "781566110265212928", "is_retweet": false}, {"created_at": "Mon Sep 19 16:28:29 +0000 2016", "text": "50 days to go. Don't miss Hillary live from @TempleUniv: https://t.co/qg6J7SXrr0", "in_reply_to_screen_name": null, "retweet_count": 847, "favorite_count": 3141, "source": "TweetDeck", "id_str": "777907223670493184", "is_retweet": false}, {"created_at": "Thu Apr 07 13:25:09 +0000 2016", "text": "\"Voters have the chance to choose one of the most broadly and deeply qualified presidential candidates in...history\" https://t.co/lm1APfexFr", "in_reply_to_screen_name": null, "retweet_count": 1580, "favorite_count": 3133, "source": "TweetDeck", "id_str": "718067088632492033", "is_retweet": false}, {"created_at": "Thu Jul 28 00:32:35 +0000 2016", "text": "RT @JoeBiden: It\u2019s good to be back, folks. We've got less than 4 months until Election Day, and I need you with me. Let's go elect some Dem\u2026", "in_reply_to_screen_name": null, "retweet_count": 2737, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758460105880993792", "is_retweet": true}, {"created_at": "Tue Nov 08 15:09:05 +0000 2016", "text": "Happy Election Day! https://t.co/jfd3CXLD1s https://t.co/IfOBRuvQzJ", "in_reply_to_screen_name": null, "retweet_count": 7232, "favorite_count": 26061, "source": "TweetDeck", "id_str": "796006636078985216", "is_retweet": false}, {"created_at": "Fri Feb 19 03:12:00 +0000 2016", "text": "\"I am a progressive who likes to make progress. I don't make promises I can't keep.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1114, "favorite_count": 2559, "source": "TweetDeck", "id_str": "700518164451500032", "is_retweet": false}, {"created_at": "Tue Jun 14 20:39:46 +0000 2016", "text": ".@realdonaldtrump: Attacking Muslim Americans is wrong, and it makes it harder for us to defeat terrorism. https://t.co/6aqz2PLKL2", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 4256, "source": "TweetDeck", "id_str": "742818837817622529", "is_retweet": false}, {"created_at": "Tue Apr 26 21:43:11 +0000 2016", "text": "Love this. Great to see Chobani sharing its success with the employees who helped make it possible. -H https://t.co/KpGWgpX5rW", "in_reply_to_screen_name": null, "retweet_count": 964, "favorite_count": 2324, "source": "TweetDeck", "id_str": "725077793697062912", "is_retweet": false}, {"created_at": "Tue May 24 20:37:02 +0000 2016", "text": "We need a president who's fighting to raise incomes for all Americans, not one who tries to profit at their expense. https://t.co/8kwnvVKp9v", "in_reply_to_screen_name": null, "retweet_count": 1933, "favorite_count": 5352, "source": "TweetDeck", "id_str": "735208003155165184", "is_retweet": false}, {"created_at": "Thu Oct 20 02:06:05 +0000 2016", "text": "We have undocumented immigrants in America who are paying more federal income tax than a so-called billionaire. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 9244, "favorite_count": 20529, "source": "TweetDeck", "id_str": "788924215084912640", "is_retweet": false}, {"created_at": "Fri Oct 14 15:38:41 +0000 2016", "text": "\"He may be up at 3am, but it\u2019s because he\u2019s tweeting insults at somebody who got under his skin.\u201d \u2014@POTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 997, "favorite_count": 2628, "source": "TweetDeck", "id_str": "786954388682203141", "is_retweet": false}, {"created_at": "Wed Aug 10 14:48:15 +0000 2016", "text": "RT @timkaine: David's letter to his daughter about why he can't support Donald Trump really hits home. https://t.co/uyDaDdcpab", "in_reply_to_screen_name": null, "retweet_count": 1596, "favorite_count": 0, "source": "TweetDeck", "id_str": "763386482312744960", "is_retweet": true}, {"created_at": "Wed Oct 12 16:24:24 +0000 2016", "text": "RT @omerizer: Doors opened at 8! Cleveland is voting early for Hillary! #OHHillYes #HRCle https://t.co/NVzdwvKIza", "in_reply_to_screen_name": null, "retweet_count": 2535, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786241116878221312", "is_retweet": true}, {"created_at": "Tue Sep 13 01:18:30 +0000 2016", "text": ".@sspiderboy's worries are all-too-common. We need to make attending a community college completely tuition free. https://t.co/fwZz7Yujml", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 511, "favorite_count": 1328, "source": "TweetDeck", "id_str": "775503892301897729", "is_retweet": false}, {"created_at": "Thu Jun 02 00:17:09 +0000 2016", "text": "Trump University was a vehicle for @realDonaldTrump to exploit vulnerable Americans for his own gain.\nhttps://t.co/9P4GR2Gfog", "in_reply_to_screen_name": null, "retweet_count": 2708, "favorite_count": 3890, "source": "Twitter Web Client", "id_str": "738162503532699648", "is_retweet": false}, {"created_at": "Mon Sep 12 13:51:08 +0000 2016", "text": "Trump uses his foundation to pay for things with other people's money. https://t.co/y0bY1efHwL https://t.co/e9cwP7RPul", "in_reply_to_screen_name": null, "retweet_count": 2887, "favorite_count": 4994, "source": "Twitter for iPhone", "id_str": "775330910635958274", "is_retweet": false}, {"created_at": "Fri Mar 04 20:34:53 +0000 2016", "text": "Creating good-paying jobs has to be a top priority for the next president. We\u2019ve got to build on the progress we\u2019ve made under @POTUS.", "in_reply_to_screen_name": null, "retweet_count": 706, "favorite_count": 1847, "source": "Twitter Web Client", "id_str": "705854047866195968", "is_retweet": false}, {"created_at": "Fri Sep 30 21:01:57 +0000 2016", "text": "RT @SunSentinel: .@SunSentinelOpinion has endorsed @HillaryClinton to serve as the next president of the United States: https://t.co/q3EPcO\u2026", "in_reply_to_screen_name": null, "retweet_count": 1079, "favorite_count": 0, "source": "TweetDeck", "id_str": "781962308130074626", "is_retweet": true}, {"created_at": "Sat Oct 29 20:39:15 +0000 2016", "text": "The future of our economy is at stake.\nLGBT equality is at stake.\nEqual pay for women is at stake.\n\nGo vote: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1700, "favorite_count": 4459, "source": "TweetDeck", "id_str": "792465845410787328", "is_retweet": false}, {"created_at": "Tue Jun 21 16:31:01 +0000 2016", "text": "\"He says women will start making equal pay as soon as they do as good a job as men\u2014as if we aren\u2019t already.\" \u2014Hillary on @realDonaldTrump", "in_reply_to_screen_name": null, "retweet_count": 2125, "favorite_count": 4529, "source": "TweetDeck", "id_str": "745292954626048000", "is_retweet": false}, {"created_at": "Thu Jun 23 16:43:12 +0000 2016", "text": "The Supreme Court's Fisher decision is a win for us all. The doors to higher education should be open to every American, not just some. -H", "in_reply_to_screen_name": null, "retweet_count": 1686, "favorite_count": 5090, "source": "TweetDeck", "id_str": "746020796007591938", "is_retweet": false}, {"created_at": "Wed Apr 06 14:58:22 +0000 2016", "text": "Instead of absurd and offensive proposals to build a wall, let's fight for comprehensive immigration reform. https://t.co/v7JRimOpv2", "in_reply_to_screen_name": null, "retweet_count": 1609, "favorite_count": 3935, "source": "TweetDeck", "id_str": "717728159672578048", "is_retweet": false}, {"created_at": "Thu Sep 29 00:08:51 +0000 2016", "text": "With a mother in the Oval Office, we may finally catch up to the rest of the world on paid leave. https://t.co/e5UH9t0DvO", "in_reply_to_screen_name": null, "retweet_count": 2785, "favorite_count": 9275, "source": "TweetDeck", "id_str": "781284569614000128", "is_retweet": false}, {"created_at": "Wed Jul 13 17:08:33 +0000 2016", "text": "\u201cIn my first 100 days as president, we will make the biggest investment in new, good-paying jobs since World War II.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 917, "favorite_count": 2873, "source": "TweetDeck", "id_str": "753274931606122496", "is_retweet": false}, {"created_at": "Fri Aug 05 15:25:47 +0000 2016", "text": "Our first-ever gold medal-winning women's gymnastics team: the Magnificent Seven. https://t.co/MVkhHBh7hI", "in_reply_to_screen_name": null, "retweet_count": 2329, "favorite_count": 13795, "source": "TweetDeck", "id_str": "761583989077532674", "is_retweet": false}, {"created_at": "Thu Sep 29 15:40:52 +0000 2016", "text": "Trump's plan wouldn't just cut taxes for rich people\u2014it would raise taxes for millions of middle-class families. https://t.co/K7xJQzIyeY", "in_reply_to_screen_name": null, "retweet_count": 2724, "favorite_count": 4601, "source": "TweetDeck", "id_str": "781519118298189824", "is_retweet": false}, {"created_at": "Sat Feb 20 22:24:48 +0000 2016", "text": "The feeling is mutual, Nevada. https://t.co/Z32JkpNKAp", "in_reply_to_screen_name": null, "retweet_count": 2481, "favorite_count": 5658, "source": "TweetDeck", "id_str": "701170664770772992", "is_retweet": false}, {"created_at": "Fri Jul 29 03:04:07 +0000 2016", "text": "\"I believe that climate change is real and that we can save our planet while creating millions of good-paying clean energy jobs.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 3179, "favorite_count": 9008, "source": "TweetDeck", "id_str": "758860629306290176", "is_retweet": false}, {"created_at": "Mon Mar 07 02:52:53 +0000 2016", "text": "To help Flint right now, we've set up a new program with Mayor Weaver to create jobs and expand water deliveries. https://t.co/w7ZRjknFvf", "in_reply_to_screen_name": null, "retweet_count": 931, "favorite_count": 1402, "source": "TweetDeck", "id_str": "706673949233569792", "is_retweet": false}, {"created_at": "Tue Feb 09 19:14:06 +0000 2016", "text": "Granite Staters: Show off your voting pride with an #IVoted selfie, &amp; tag it with #ImWithHer! (\ud83d\udcf7: @laughtercrystal) https://t.co/QMHJlkY92v", "in_reply_to_screen_name": null, "retweet_count": 360, "favorite_count": 936, "source": "TweetDeck", "id_str": "697136406443896832", "is_retweet": false}, {"created_at": "Fri Jul 29 03:10:07 +0000 2016", "text": "\"If fighting for affordable child care and paid family leave is playing the woman card, then deal me in!\u201d \u2014Hillary https://t.co/xdbNvUvcVC", "in_reply_to_screen_name": null, "retweet_count": 3986, "favorite_count": 12925, "source": "TweetDeck", "id_str": "758862140694331393", "is_retweet": false}, {"created_at": "Thu Nov 03 20:11:20 +0000 2016", "text": "Across America, people are rejecting Trump\u2019s dark vision for one that is hopeful and inclusive and unifying. https://t.co/GFY6lceUFV", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1319, "favorite_count": 2904, "source": "TweetDeck", "id_str": "794270760500133888", "is_retweet": false}, {"created_at": "Mon Feb 22 21:19:07 +0000 2016", "text": "How one law gives gun makers immunity from accountability and could derail justice for Sandy Hook families. https://t.co/qNgOGW2q41", "in_reply_to_screen_name": null, "retweet_count": 872, "favorite_count": 1318, "source": "TweetDeck", "id_str": "701878913375608832", "is_retweet": false}, {"created_at": "Fri May 27 01:07:26 +0000 2016", "text": "\"I don't think a nation can be great that turns its back on the poor and the unfortunate.\" \u2014Hillary in 1994 #TBT\nhttps://t.co/uPmFv2osrB", "in_reply_to_screen_name": null, "retweet_count": 2238, "favorite_count": 4650, "source": "Twitter Web Client", "id_str": "736000828159315969", "is_retweet": false}, {"created_at": "Sun Jul 03 21:55:20 +0000 2016", "text": "Looking forward to hitting the campaign trail together, @POTUS. https://t.co/DzKgMFgdmP", "in_reply_to_screen_name": null, "retweet_count": 2265, "favorite_count": 6172, "source": "TweetDeck", "id_str": "749723223089090560", "is_retweet": false}, {"created_at": "Thu Apr 14 20:16:09 +0000 2016", "text": "You don't make America great by getting rid of everything that made America great.\n\nWatch CNN at 9pm ET. #DemDebate\nhttps://t.co/nGdWUenZhh", "in_reply_to_screen_name": null, "retweet_count": 1800, "favorite_count": 3870, "source": "Twitter Web Client", "id_str": "720707236159299584", "is_retweet": false}, {"created_at": "Sat Jul 30 22:31:28 +0000 2016", "text": "Captain Khan and his family represent the best of America, and we salute them. https://t.co/MGeJXPF2DE", "in_reply_to_screen_name": null, "retweet_count": 8019, "favorite_count": 26194, "source": "TweetDeck", "id_str": "759516788073885701", "is_retweet": false}, {"created_at": "Thu Oct 20 20:23:49 +0000 2016", "text": "\"Even in the middle of crisis, she is calm and cool and collected.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 520, "favorite_count": 1432, "source": "TweetDeck", "id_str": "789200472716390400", "is_retweet": false}, {"created_at": "Fri Oct 28 17:49:18 +0000 2016", "text": "Newspapers and magazines across the country are breaking with tradition to endorse Hillary. https://t.co/iQicjDZaWk", "in_reply_to_screen_name": null, "retweet_count": 1788, "favorite_count": 4663, "source": "TweetDeck", "id_str": "792060690173423616", "is_retweet": false}, {"created_at": "Thu Nov 03 04:05:54 +0000 2016", "text": "RT @HillaryforAZ: What a night. #VotaArizona https://t.co/1e2JHvHOnU", "in_reply_to_screen_name": null, "retweet_count": 1850, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794027800336486400", "is_retweet": true}, {"created_at": "Sun May 08 15:11:24 +0000 2016", "text": "\"She was determined to give me and my brothers opportunities far beyond anything she'd known.\" \u2014Hillary on her mom\nhttps://t.co/RdzGIqlhfE", "in_reply_to_screen_name": null, "retweet_count": 2367, "favorite_count": 5727, "source": "Twitter Web Client", "id_str": "729327848675102720", "is_retweet": false}, {"created_at": "Tue Feb 23 19:08:29 +0000 2016", "text": "It\u2019s time to close this dangerous loophole in our gun laws. https://t.co/re1U5IXQ0J", "in_reply_to_screen_name": null, "retweet_count": 519, "favorite_count": 1093, "source": "TweetDeck", "id_str": "702208425753759744", "is_retweet": false}, {"created_at": "Wed Feb 17 15:52:34 +0000 2016", "text": "Anyone asking for your vote has to grapple with the reality of inequality in America\u2014and offer real plans to fix it. https://t.co/pplUKyUnrY", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 2199, "source": "Twitter Web Client", "id_str": "699984795053514756", "is_retweet": false}, {"created_at": "Fri Oct 14 22:59:52 +0000 2016", "text": "We couldn't be more lucky to have someone with Anne's talent and experience out on the campaign trail. https://t.co/hux2fvnPCF", "in_reply_to_screen_name": null, "retweet_count": 3855, "favorite_count": 13596, "source": "Media Studio", "id_str": "787065414446571521", "is_retweet": false}, {"created_at": "Mon Mar 28 21:14:23 +0000 2016", "text": "\"As one of the more than 65 million Americans who voted to re-elect Barack Obama, I\u2019d say my voice is being ignored.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1082, "favorite_count": 2335, "source": "TweetDeck", "id_str": "714561295362629633", "is_retweet": false}, {"created_at": "Wed Apr 20 03:36:54 +0000 2016", "text": "\"New York is a place for dreaming big. But New Yorkers also like to get things done.\" \u2014Hillary https://t.co/K5uWCl3PKI", "in_reply_to_screen_name": null, "retweet_count": 2459, "favorite_count": 6439, "source": "TweetDeck", "id_str": "722630094188097536", "is_retweet": false}, {"created_at": "Fri Aug 12 15:33:46 +0000 2016", "text": "Here's why Donald Trump might be refusing to release his tax returns: https://t.co/M4MSBonNyo", "in_reply_to_screen_name": null, "retweet_count": 4261, "favorite_count": 7845, "source": "TweetDeck", "id_str": "764122715812945920", "is_retweet": false}, {"created_at": "Fri Feb 26 20:35:54 +0000 2016", "text": "What\u2019s at stake in this election is whether or not we\u2019re going to help every kid reach their potential.\nhttps://t.co/EDwrkmqZlm", "in_reply_to_screen_name": null, "retweet_count": 553, "favorite_count": 1227, "source": "Twitter Web Client", "id_str": "703317587313057792", "is_retweet": false}, {"created_at": "Mon May 30 18:12:18 +0000 2016", "text": "Gold Star families like Betsy\u2019s have paid the ultimate price for our freedom. They deserve our eternal thanks.\nhttps://t.co/tvrREJWXYX", "in_reply_to_screen_name": null, "retweet_count": 1470, "favorite_count": 3522, "source": "Twitter Web Client", "id_str": "737345906807214080", "is_retweet": false}, {"created_at": "Tue Oct 04 02:36:09 +0000 2016", "text": "A person who implies that veterans suffering from PTS are not \"strong\" is unfit to be Commander-in-Chief. Period. https://t.co/Z0WFGWLwqe", "in_reply_to_screen_name": null, "retweet_count": 4117, "favorite_count": 9113, "source": "TweetDeck", "id_str": "783133579719106561", "is_retweet": false}, {"created_at": "Thu Jul 28 03:08:10 +0000 2016", "text": "\u201cA leader with real plans to break down barriers,...the next president of the United States Hillary Clinton.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1173, "favorite_count": 3656, "source": "TweetDeck", "id_str": "758499261365575681", "is_retweet": false}, {"created_at": "Sun Jun 26 21:09:02 +0000 2016", "text": "\"We need leaders...who put the interests of the American people ahead of their personal business interests.\" \u2014Hillary at #USMC2016", "in_reply_to_screen_name": null, "retweet_count": 1080, "favorite_count": 3608, "source": "TweetDeck", "id_str": "747174858996482048", "is_retweet": false}, {"created_at": "Sat Aug 27 16:38:24 +0000 2016", "text": "You can learn a lot about a person by the company they keep.\n\nHere's some of the company Trump keeps: https://t.co/1CjVayZG54", "in_reply_to_screen_name": null, "retweet_count": 2419, "favorite_count": 4496, "source": "TweetDeck", "id_str": "769574799966367744", "is_retweet": false}, {"created_at": "Mon Mar 28 21:37:15 +0000 2016", "text": "In 1973, #SCOTUS ruled that women have the right to make intimate health decisions for ourselves. https://t.co/CqdsiJKvwn", "in_reply_to_screen_name": null, "retweet_count": 1255, "favorite_count": 2970, "source": "Twitter Web Client", "id_str": "714567049863778304", "is_retweet": false}, {"created_at": "Wed Nov 09 16:52:19 +0000 2016", "text": "\u201cI am grateful to our country for all it has given me. I count my blessings every day that I am an American.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 19947, "favorite_count": 90988, "source": "TweetDeck", "id_str": "796395004331786246", "is_retweet": false}, {"created_at": "Tue Nov 08 02:00:15 +0000 2016", "text": "\"If his closest advisors don\u2019t trust him to tweet, why would any of us trust him with the nuclear codes?\u201d \u2014@POTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1821, "favorite_count": 3640, "source": "TweetDeck", "id_str": "795808117925810176", "is_retweet": false}, {"created_at": "Sat Jul 09 15:46:26 +0000 2016", "text": "\"@LorellaPraeli's story, like so many other American stories, reminds us of who we are as a people.\" \u2014Hillary\nhttps://t.co/fVvp7c8m2A", "in_reply_to_screen_name": null, "retweet_count": 1699, "favorite_count": 4182, "source": "Twitter Web Client", "id_str": "751804715487227905", "is_retweet": false}, {"created_at": "Tue Nov 08 13:00:42 +0000 2016", "text": "Let\u2019s go make some history today. https://t.co/jfd3CXLD1s https://t.co/IbRcWWun7J", "in_reply_to_screen_name": null, "retweet_count": 13751, "favorite_count": 28598, "source": "Media Studio", "id_str": "795974327611129856", "is_retweet": false}, {"created_at": "Sun Oct 16 21:57:27 +0000 2016", "text": "RT @HFA: Hillary knows it and @PPFA knows it. That's why we're proud to stand with them. #100YearsStrong https://t.co/p5TV0Zab59", "in_reply_to_screen_name": null, "retweet_count": 2368, "favorite_count": 0, "source": "TweetDeck", "id_str": "787774482035474432", "is_retweet": true}, {"created_at": "Wed Jul 13 17:11:12 +0000 2016", "text": "\"Even this\u2014the killing of black people by police\u2014is somehow all about him.\" \u2014Hillary on Trump https://t.co/Uwk2oFmIwZ", "in_reply_to_screen_name": null, "retweet_count": 1349, "favorite_count": 2522, "source": "TweetDeck", "id_str": "753275598894751744", "is_retweet": false}, {"created_at": "Sat Oct 08 01:24:04 +0000 2016", "text": "It should concern every American that Russia is willing to engage in such hostile acts in order to help Donald Trum\u2026 https://t.co/YxKatJYkqT", "in_reply_to_screen_name": null, "retweet_count": 10130, "favorite_count": 21673, "source": "TweetDeck", "id_str": "784564986953728000", "is_retweet": false}, {"created_at": "Fri Sep 30 16:11:10 +0000 2016", "text": "Hillary\u2019s speaking in Florida on her plan to expand opportunities for national service. Watch here: https://t.co/DBL4KkG5am", "in_reply_to_screen_name": null, "retweet_count": 1208, "favorite_count": 3825, "source": "TweetDeck", "id_str": "781889132113068032", "is_retweet": false}, {"created_at": "Wed Nov 09 16:34:22 +0000 2016", "text": "Watch Hillary deliver remarks on the election from New York City: https://t.co/MTRLzjN42x", "in_reply_to_screen_name": null, "retweet_count": 3142, "favorite_count": 13045, "source": "TweetDeck", "id_str": "796390484084215808", "is_retweet": false}, {"created_at": "Thu Aug 25 19:31:25 +0000 2016", "text": "Trump likes to say he only hires the \"best people,\" but he\u2019s had to fire so many campaign managers it\u2019s like an episode of the Apprentice.", "in_reply_to_screen_name": null, "retweet_count": 5905, "favorite_count": 16901, "source": "TweetDeck", "id_str": "768893565095280641", "is_retweet": false}, {"created_at": "Mon Nov 07 01:55:49 +0000 2016", "text": "\u201cThis election is a reckoning. It is a choice between division and unity.\u201d \u2014Hillary https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 980, "favorite_count": 2524, "source": "TweetDeck", "id_str": "795444614421512194", "is_retweet": false}, {"created_at": "Mon Jul 04 01:00:49 +0000 2016", "text": "\"You have made me a better person and helped me believe I can do anything.\" https://t.co/Iuk9Tx2hQm", "in_reply_to_screen_name": null, "retweet_count": 1101, "favorite_count": 3798, "source": "Twitter for iPhone", "id_str": "749769902563725312", "is_retweet": false}, {"created_at": "Thu Aug 11 20:41:05 +0000 2016", "text": "RT @HFA: The choice on climate change couldn't be more stark: https://t.co/K745PdjVmW. https://t.co/us7OyJcdx4", "in_reply_to_screen_name": null, "retweet_count": 1513, "favorite_count": 0, "source": "TweetDeck", "id_str": "763837665246576640", "is_retweet": true}, {"created_at": "Fri Sep 02 22:12:24 +0000 2016", "text": "America needs leadership in the White House, not a liability. https://t.co/dnhGjfKMRx https://t.co/JnwS6k6SSC", "in_reply_to_screen_name": null, "retweet_count": 2724, "favorite_count": 6812, "source": "TweetDeck", "id_str": "771833178092933120", "is_retweet": false}, {"created_at": "Fri Sep 09 14:38:20 +0000 2016", "text": "If you've ever wondered what Hillary's like as a friend, you could ask Janelle. https://t.co/t6egqFasOK", "in_reply_to_screen_name": null, "retweet_count": 3198, "favorite_count": 7961, "source": "Twitter Web Client", "id_str": "774255625673072640", "is_retweet": false}, {"created_at": "Fri Jun 10 17:17:48 +0000 2016", "text": "We\u2019re not just going to break the glass ceiling. We\u2019re going to break down all the barriers that hold back women and their families.", "in_reply_to_screen_name": null, "retweet_count": 2194, "favorite_count": 7177, "source": "TweetDeck", "id_str": "741318459930349568", "is_retweet": false}, {"created_at": "Thu May 12 17:21:39 +0000 2016", "text": "Sybrina, you and all mothers of gun violence victims have taught us hate will never win. Thinking of you today. https://t.co/FnsaKtq1hd -H", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 2476, "source": "TweetDeck", "id_str": "730810180410167297", "is_retweet": false}, {"created_at": "Thu Apr 07 16:53:53 +0000 2016", "text": "\"Knowledgeable\"\n\"Prepared\"\n\"Qualified\"\n\nWhat newspapers around the country are saying about Hillary. https://t.co/t1Bejz4O3F", "in_reply_to_screen_name": null, "retweet_count": 2418, "favorite_count": 5676, "source": "TweetDeck", "id_str": "718119617160417280", "is_retweet": false}, {"created_at": "Wed Oct 12 16:10:20 +0000 2016", "text": "If Trump wants to compare what he and Hillary have done for the last 30 years, by all means: https://t.co/5A6FafMVW0 https://t.co/4KsiPOBibW", "in_reply_to_screen_name": null, "retweet_count": 3789, "favorite_count": 8099, "source": "TweetDeck", "id_str": "786237576466268160", "is_retweet": false}, {"created_at": "Thu Aug 11 18:12:28 +0000 2016", "text": "Multi-millionaires should not be able to pay a lower tax rate than their secretaries: https://t.co/XFX93S1Vgh", "in_reply_to_screen_name": null, "retweet_count": 908, "favorite_count": 2547, "source": "TweetDeck", "id_str": "763800264939888640", "is_retweet": false}, {"created_at": "Fri Feb 19 03:35:26 +0000 2016", "text": "\"You are more likely to get a mortgage application if you're white than if you're black or Latino. That has to end.\" #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 1701, "source": "TweetDeck", "id_str": "700524062288846848", "is_retweet": false}, {"created_at": "Mon Sep 26 22:53:41 +0000 2016", "text": "\u201cYou didn\u2019t blame Little John or Meat Loaf. You fired Gary Busey.\n\nThese are the kinds of decisions that would keep\u2026 https://t.co/RT0cARwsu7", "in_reply_to_screen_name": null, "retweet_count": 5584, "favorite_count": 12839, "source": "Media Studio", "id_str": "780540877047341057", "is_retweet": false}, {"created_at": "Thu Jan 21 01:57:37 +0000 2016", "text": "The progress we\u2019ve made under @POTUS is remarkable. Hillary on how we can keep it going: https://t.co/qwcukLY2tT", "in_reply_to_screen_name": null, "retweet_count": 594, "favorite_count": 1373, "source": "TweetDeck", "id_str": "689990199573639169", "is_retweet": false}, {"created_at": "Tue Oct 11 19:56:32 +0000 2016", "text": "\"Hillary Clinton will make solving the climate crisis a top national priority.\u201d \u2014@AlGore", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1015, "favorite_count": 3175, "source": "TweetDeck", "id_str": "785932111727525889", "is_retweet": false}, {"created_at": "Thu Sep 08 00:44:05 +0000 2016", "text": "RT @Hillary_esp: No todas las heridas son visibles. Los veteranos merecen el mejor cuidado de salud mental disponible. #NBCNewsForum https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 489, "favorite_count": 0, "source": "TweetDeck", "id_str": "773683291899719681", "is_retweet": true}, {"created_at": "Mon Jan 18 04:09:52 +0000 2016", "text": "There\u2019s only one candidate who will defend and build on the progress we've made. https://t.co/fi49Siw9x4 https://t.co/7Kn1Jds5h4", "in_reply_to_screen_name": null, "retweet_count": 5371, "favorite_count": 3662, "source": "TweetDeck", "id_str": "688936318420807681", "is_retweet": false}, {"created_at": "Sat Nov 05 02:28:10 +0000 2016", "text": "RT @CNN: Beyonce at Clinton rally: \"We have to think about the future of our daughters, our sons\" https://t.co/xoSXY9JPYK https://t.co/CdEQ\u2026", "in_reply_to_screen_name": null, "retweet_count": 10193, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794727979796537344", "is_retweet": true}, {"created_at": "Tue Feb 09 02:06:47 +0000 2016", "text": "\"I will get up every day and do everything I can to make a real difference for you, your families, and our country.\" \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 778, "favorite_count": 2086, "source": "TweetDeck", "id_str": "696877876260532225", "is_retweet": false}, {"created_at": "Wed Sep 28 00:22:34 +0000 2016", "text": "The question in this election: Who can put the plans into action that will make your life better? https://t.co/XreEY9OicG", "in_reply_to_screen_name": null, "retweet_count": 3497, "favorite_count": 9735, "source": "Media Studio", "id_str": "780925634159796224", "is_retweet": false}, {"created_at": "Thu Nov 03 04:01:40 +0000 2016", "text": "RT @JohnDingell: Well, now that we all have a free moment... go ahead and sign up to volunteer for @HillaryClinton this weekend: https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1225, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794026732739297280", "is_retweet": true}, {"created_at": "Tue Oct 11 18:44:48 +0000 2016", "text": "RT @POTUS: On International #DayoftheGirl, we remain committed to providing what we all want for our daughters: a future of limitless possi\u2026", "in_reply_to_screen_name": null, "retweet_count": 25340, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785914062315991040", "is_retweet": true}, {"created_at": "Wed Mar 23 14:45:48 +0000 2016", "text": "The ACA is on the line in this election. We won\u2019t let it be repealed or start from scratch. We\u2019ll expand until we hit universal coverage. -H", "in_reply_to_screen_name": null, "retweet_count": 866, "favorite_count": 2192, "source": "TweetDeck", "id_str": "712651566222876673", "is_retweet": false}, {"created_at": "Sat Jun 18 17:33:50 +0000 2016", "text": "\u201cI\u2019m supporting Hillary Clinton because she\u2019s a fighter, a fighter with guts.\u201d \u2014@SenWarren to the @BostonGlobe https://t.co/6MANlMY3oV", "in_reply_to_screen_name": null, "retweet_count": 1659, "favorite_count": 4753, "source": "Twitter for iPhone", "id_str": "744221595783303172", "is_retweet": false}, {"created_at": "Tue Feb 23 20:53:36 +0000 2016", "text": "Just a reminder.  https://t.co/w7GAQmz1vv", "in_reply_to_screen_name": null, "retweet_count": 486, "favorite_count": 1197, "source": "TweetDeck", "id_str": "702234878931292160", "is_retweet": false}, {"created_at": "Fri Mar 04 03:17:09 +0000 2016", "text": "Mientras los candidatos republicanos se insultan entre ellos, Hillary lucha para que todos puedan salir adelante. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 732, "favorite_count": 1728, "source": "TweetDeck", "id_str": "705592890794352642", "is_retweet": false}, {"created_at": "Fri Nov 04 17:53:52 +0000 2016", "text": "\u201cI will do everything I can to get incomes rising again for hardworking people\u2026you deserve to be part of a growing, thriving middle class.\u201d", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 742, "favorite_count": 1637, "source": "TweetDeck", "id_str": "794598551246569472", "is_retweet": false}, {"created_at": "Thu Jun 02 17:00:24 +0000 2016", "text": "\"I think Hillary will go down as one of the finest secretaries of state we've had.\" \u2013@POTUS https://t.co/louCjPXhaZ", "in_reply_to_screen_name": null, "retweet_count": 1669, "favorite_count": 3714, "source": "TweetDeck", "id_str": "738414977489481728", "is_retweet": false}, {"created_at": "Fri Jul 29 23:07:13 +0000 2016", "text": "Headlines for the history books. https://t.co/K7GWRf2KM4", "in_reply_to_screen_name": null, "retweet_count": 739, "favorite_count": 2934, "source": "TweetDeck", "id_str": "759163397552431104", "is_retweet": false}, {"created_at": "Sun Mar 27 02:02:16 +0000 2016", "text": "We can win this nomination, but Hillary needs everyone on this team to do it. Chip in to say you\u2019ve got her back: https://t.co/02MmCUMF41", "in_reply_to_screen_name": null, "retweet_count": 1346, "favorite_count": 3440, "source": "TweetDeck", "id_str": "713908966858878976", "is_retweet": false}, {"created_at": "Fri Oct 21 20:59:01 +0000 2016", "text": "Hillary's live in Cleveland talking about what we need to do to move our country forward. Watch here: https://t.co/dkg7pwiNMt", "in_reply_to_screen_name": null, "retweet_count": 777, "favorite_count": 3304, "source": "TweetDeck", "id_str": "789571718847291393", "is_retweet": false}, {"created_at": "Wed Mar 02 03:31:01 +0000 2016", "text": "Text ImWithHer to 47246 to tell Hillary you're by her side all the way to the White House.", "in_reply_to_screen_name": null, "retweet_count": 507, "favorite_count": 1405, "source": "TweetDeck", "id_str": "704871605265047552", "is_retweet": false}, {"created_at": "Fri Apr 29 02:38:58 +0000 2016", "text": "Conoce alguno de los logros de Hillary Clinton a trav\u00e9s de los a\u00f1os. https://t.co/5paO4acL4C", "in_reply_to_screen_name": null, "retweet_count": 344, "favorite_count": 722, "source": "Twitter for iPhone", "id_str": "725877002411081728", "is_retweet": false}, {"created_at": "Fri Apr 08 13:10:23 +0000 2016", "text": ".@Carole_King stopped by the office. We interviewed her: https://t.co/aFkVLJZgn1 https://t.co/1fclUJGoEx", "in_reply_to_screen_name": null, "retweet_count": 755, "favorite_count": 2332, "source": "TweetDeck", "id_str": "718425760952905728", "is_retweet": false}, {"created_at": "Sun Jun 05 18:27:36 +0000 2016", "text": "Urnas en Puerto Rico cierran a las 3pm. Si llegas a la fila en o antes de las 3pm tienes el derecho a votar. No te salgas.", "in_reply_to_screen_name": null, "retweet_count": 438, "favorite_count": 1044, "source": "TweetDeck", "id_str": "739524085730975748", "is_retweet": false}, {"created_at": "Tue Oct 11 20:49:44 +0000 2016", "text": "The violence transgender Americans face\u2014particularly transgender women of color\u2014is a rebuke to all of us. We have t\u2026 https://t.co/gJWOOuP0xl", "in_reply_to_screen_name": null, "retweet_count": 4763, "favorite_count": 12295, "source": "TweetDeck", "id_str": "785945501703241728", "is_retweet": false}, {"created_at": "Mon Oct 24 02:44:31 +0000 2016", "text": "\"No matter what issue you care about, it is on the ballot.\" \u2014Hillary last night in Pennsylvania\u2026 https://t.co/8o52fmdG2P", "in_reply_to_screen_name": null, "retweet_count": 3056, "favorite_count": 9512, "source": "TweetDeck", "id_str": "790383440478765056", "is_retweet": false}, {"created_at": "Thu Nov 03 14:04:25 +0000 2016", "text": "\"The reporter and I have the same condition. When Mr. Trump made fun of him, that hurt my feelings.\" https://t.co/pyRWafS9Bz", "in_reply_to_screen_name": null, "retweet_count": 7026, "favorite_count": 11433, "source": "Media Studio", "id_str": "794178422390030336", "is_retweet": false}, {"created_at": "Mon Sep 19 13:15:19 +0000 2016", "text": "RT @mic: .@HillaryClinton wrote for us about what millennials have taught her during this election: https://t.co/SlMZZ1C19f https://t.co/qN\u2026", "in_reply_to_screen_name": null, "retweet_count": 1395, "favorite_count": 0, "source": "TweetDeck", "id_str": "777858612727250948", "is_retweet": true}, {"created_at": "Wed Jan 13 02:04:47 +0000 2016", "text": "America is better because of @POTUS' leadership. Proud to call him my friend. Let\u2019s build on his progress. #SOTU -H https://t.co/c8pn7VktTh", "in_reply_to_screen_name": null, "retweet_count": 2950, "favorite_count": 7392, "source": "TweetDeck", "id_str": "687092897997524992", "is_retweet": false}, {"created_at": "Wed Mar 16 04:28:33 +0000 2016", "text": "Text ImWithHer to 47246 to tell Hillary you're by her side all the way to the White House.", "in_reply_to_screen_name": null, "retweet_count": 966, "favorite_count": 2721, "source": "TweetDeck", "id_str": "709959516520095744", "is_retweet": false}, {"created_at": "Tue Sep 20 17:57:46 +0000 2016", "text": "RT @Fahrenthold: NEW: @realdonaldtrump used more $250K+ from his charity to pay off legal settlements of his for-profit businesses.   https\u2026", "in_reply_to_screen_name": null, "retweet_count": 10422, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778292079231377408", "is_retweet": true}, {"created_at": "Fri Sep 09 01:49:45 +0000 2016", "text": "The most important quality in a president and Commander-in-Chief is steadiness\u2014an absolute, rock solid steadiness. https://t.co/QwQBzZc0xb", "in_reply_to_screen_name": null, "retweet_count": 4105, "favorite_count": 9866, "source": "TweetDeck", "id_str": "774062203213385728", "is_retweet": false}, {"created_at": "Fri Jul 29 03:26:59 +0000 2016", "text": "\"We lost our mother a few years ago but I miss her every day. And I still hear her voice urging me to keep working, keep fighting for right\"", "in_reply_to_screen_name": null, "retweet_count": 1884, "favorite_count": 9199, "source": "TweetDeck", "id_str": "758866385225207808", "is_retweet": false}, {"created_at": "Mon Apr 11 01:33:35 +0000 2016", "text": "Scary. https://t.co/W3lbknT4z1 https://t.co/WwQiiNeSfy", "in_reply_to_screen_name": null, "retweet_count": 1534, "favorite_count": 2603, "source": "TweetDeck", "id_str": "719337567137751040", "is_retweet": false}, {"created_at": "Sun Sep 18 20:27:47 +0000 2016", "text": "RT @TheBriefing2016: So, what do the candidates\u2019 foundations do again? https://t.co/PVrx1SeUxs", "in_reply_to_screen_name": null, "retweet_count": 2638, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "777605055834890242", "is_retweet": true}, {"created_at": "Mon Oct 31 17:00:57 +0000 2016", "text": "RT @TheRoot: Exclusive: @HillaryClinton writes about plans for a $25 billion HBCU investment &amp; tuition free public universities https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 1820, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793135682764111873", "is_retweet": true}, {"created_at": "Thu Jul 28 02:58:13 +0000 2016", "text": "\"I was so young that first time in Boston...maybe a little nervous addressing such a big crowd, but I was filled with faith.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 800, "favorite_count": 3283, "source": "TweetDeck", "id_str": "758496755000414208", "is_retweet": false}, {"created_at": "Sat Mar 05 00:06:37 +0000 2016", "text": "Let's put the dream of starting and running a thriving small business within reach of every American.", "in_reply_to_screen_name": null, "retweet_count": 915, "favorite_count": 2459, "source": "TweetDeck", "id_str": "705907332446818305", "is_retweet": false}, {"created_at": "Mon May 02 00:37:54 +0000 2016", "text": "\"Something\u2019s wrong when the median wealth for black families is just a tiny fraction of that for white families.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 823, "favorite_count": 2237, "source": "TweetDeck", "id_str": "726933701540610048", "is_retweet": false}, {"created_at": "Thu Jul 14 15:46:14 +0000 2016", "text": "No one who works full-time in America should ever live in poverty.\n\nWe need to raise the minimum wage.", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 3310, "source": "TweetDeck", "id_str": "753616603410010112", "is_retweet": false}, {"created_at": "Thu Jun 30 02:29:21 +0000 2016", "text": "Luchar\u00e9 junto al pueblo de PR para poner la econom\u00eda de la Isla de vuelta en un camino de estabilidad y prosperidad.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 436, "favorite_count": 1181, "source": "TweetDeck", "id_str": "748342631361560577", "is_retweet": false}, {"created_at": "Thu Jul 21 03:18:32 +0000 2016", "text": "Don\u2019t boo\u2014buck Trump \ud83d\udc49 https://t.co/factruSMZC #RNCinCLE https://t.co/wc79MBcevV", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 3345, "source": "TweetDeck", "id_str": "755965152785211392", "is_retweet": false}, {"created_at": "Tue Oct 04 23:14:20 +0000 2016", "text": ".@TimKaine's spent his whole life fighting for working families, so I have no doubt he'll do the same tonight. Go get 'em, Tim. -H", "in_reply_to_screen_name": null, "retweet_count": 3219, "favorite_count": 11825, "source": "Twitter Web Client", "id_str": "783445177427955713", "is_retweet": false}, {"created_at": "Tue Apr 19 11:58:33 +0000 2016", "text": "\u00a1Alza tu voz! Encuentre d\u00f3nde votar en Nueva York aqu\u00ed \u2192 https://t.co/XFC2bmOTde #EstoyConElla https://t.co/BWBoK3Ex6S", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 611, "source": "TweetDeck", "id_str": "722393950565363712", "is_retweet": false}, {"created_at": "Sun Jul 31 14:17:24 +0000 2016", "text": "Their paths may vary, but their call is the same. Meet the women of the U.S. Senate:\nhttps://t.co/tHAcE6LziY", "in_reply_to_screen_name": null, "retweet_count": 3903, "favorite_count": 10898, "source": "Twitter Web Client", "id_str": "759754839836327936", "is_retweet": false}, {"created_at": "Mon Oct 10 02:20:35 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump is already having an effect on our kids -- and he's only a candidate.\n\nImagine him as President. \n\n#debat\u2026", "in_reply_to_screen_name": null, "retweet_count": 2388, "favorite_count": 0, "source": "TweetDeck", "id_str": "785303986513580032", "is_retweet": true}, {"created_at": "Thu May 05 00:23:11 +0000 2016", "text": "Love this, Ellen. Where can I get one? -H https://t.co/JnErtSVkjS", "in_reply_to_screen_name": null, "retweet_count": 1091, "favorite_count": 3269, "source": "TweetDeck", "id_str": "728017160719699969", "is_retweet": false}, {"created_at": "Fri Sep 09 15:42:30 +0000 2016", "text": "We can only confront a challenge like Zika when we come together. It's time for Republicans to fund this fight: https://t.co/9jNGrpj5Nt -H", "in_reply_to_screen_name": null, "retweet_count": 1295, "favorite_count": 3229, "source": "TweetDeck", "id_str": "774271773340729344", "is_retweet": false}, {"created_at": "Fri Oct 28 19:45:41 +0000 2016", "text": "RT @brianefallon: Statement from @johnpodesta in response to Comey letter to GOP chairmen https://t.co/egyUMl68ZC", "in_reply_to_screen_name": null, "retweet_count": 3756, "favorite_count": 0, "source": "TweetDeck", "id_str": "792089975936385024", "is_retweet": true}, {"created_at": "Mon Feb 29 19:33:36 +0000 2016", "text": "Hillary shared a few words to live by after winning the South Carolina primary. https://t.co/ozrZhKphgy", "in_reply_to_screen_name": null, "retweet_count": 1491, "favorite_count": 3462, "source": "TweetDeck", "id_str": "704389072454815744", "is_retweet": false}, {"created_at": "Fri Jan 15 03:41:28 +0000 2016", "text": "Had enough? Do something about it: https://t.co/Rqiu5a82Wl #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 340, "favorite_count": 856, "source": "TweetDeck", "id_str": "687842007474171905", "is_retweet": false}, {"created_at": "Wed Jun 08 20:03:31 +0000 2016", "text": "A headline 227 years in the making. https://t.co/7RDeQ3bQ3z https://t.co/IuHMa3tUTr", "in_reply_to_screen_name": null, "retweet_count": 2373, "favorite_count": 6004, "source": "TweetDeck", "id_str": "740635388834893824", "is_retweet": false}, {"created_at": "Mon Jul 11 00:34:39 +0000 2016", "text": "For Donald Trump, it's not about what he can build\u200a\u2014it's about how much he can take. https://t.co/WYJGCCVBzu", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 2910, "source": "TweetDeck", "id_str": "752300032645292032", "is_retweet": false}, {"created_at": "Sat May 14 23:48:33 +0000 2016", "text": "Hillary was @Wellesley's first student commencement speaker in 1969. Read the speech: https://t.co/fMeBLt3yh1 https://t.co/Nl1rebbrwn", "in_reply_to_screen_name": null, "retweet_count": 1597, "favorite_count": 3375, "source": "TweetDeck", "id_str": "731632320961216513", "is_retweet": false}, {"created_at": "Tue Sep 06 19:12:10 +0000 2016", "text": "\"I call on all Republicans to put people before politics and finally vote on a clean funding bill to fight Zika right here in Florida.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1029, "favorite_count": 2553, "source": "TweetDeck", "id_str": "773237371995316224", "is_retweet": false}, {"created_at": "Wed Jul 06 16:34:24 +0000 2016", "text": "Donald Trump called the Trump Plaza Casino and Hotel \"the biggest hit yet.\"\n\nNow, it's abandoned. https://t.co/qjhy8Xj2U8", "in_reply_to_screen_name": null, "retweet_count": 2558, "favorite_count": 5708, "source": "TweetDeck", "id_str": "750729621251981312", "is_retweet": false}, {"created_at": "Mon May 02 12:51:43 +0000 2016", "text": "Hillary ha demostrado que ella es la \u00fanica candidata preparada para enfrentarse a desaf\u00edos y lograr resultados. https://t.co/Qz1SBHe2fg", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 1041, "source": "TweetDeck", "id_str": "727118369317605376", "is_retweet": false}, {"created_at": "Wed Nov 02 21:31:21 +0000 2016", "text": "Trump \"doesn\u2019t look at us as full human beings, with our dreams and our purposes, our own capabilities.\u201d https://t.co/WFljZW0lHv", "in_reply_to_screen_name": null, "retweet_count": 2708, "favorite_count": 6591, "source": "TweetDeck", "id_str": "793928508644925440", "is_retweet": false}, {"created_at": "Sun Oct 23 00:10:23 +0000 2016", "text": "Hillary's been called a lot of things over the years. \"Quitter\" isn't one of them. https://t.co/tTgeqxNqYm https://t.co/gDQ7waMjyY", "in_reply_to_screen_name": null, "retweet_count": 2654, "favorite_count": 9138, "source": "TweetDeck", "id_str": "789982262481780736", "is_retweet": false}, {"created_at": "Mon Feb 15 23:39:13 +0000 2016", "text": "Striking a pose with students from the Expertise Cosmetology Institute in Las Vegas, Nevada. https://t.co/csfz9DmiIX", "in_reply_to_screen_name": null, "retweet_count": 660, "favorite_count": 2422, "source": "TweetDeck", "id_str": "699377453651910658", "is_retweet": false}, {"created_at": "Thu Jul 07 19:19:58 +0000 2016", "text": "Alton Sterling Matters.\nPhilando Castile Matters.\nBlack Lives Matter. https://t.co/GmUFN9sDH6", "in_reply_to_screen_name": null, "retweet_count": 13548, "favorite_count": 27986, "source": "TweetDeck", "id_str": "751133678269587456", "is_retweet": false}, {"created_at": "Thu Aug 11 18:14:48 +0000 2016", "text": "Trump wants to eliminate the estate tax. What that would mean: his family gets a $4 billion tax cut. 99.8% of Americans get nothing.", "in_reply_to_screen_name": null, "retweet_count": 3594, "favorite_count": 7056, "source": "TweetDeck", "id_str": "763800851693568001", "is_retweet": false}, {"created_at": "Tue Aug 16 01:56:34 +0000 2016", "text": "Both candidates have laid out economic plans. See how each would impact your state: https://t.co/BM2Fpk8lwA", "in_reply_to_screen_name": null, "retweet_count": 890, "favorite_count": 2418, "source": "TweetDeck", "id_str": "765366612786577408", "is_retweet": false}, {"created_at": "Thu Apr 14 18:40:04 +0000 2016", "text": "La situaci\u00f3n del virus del Zika es urgente. Tenemos que invertir ahora para desarrollar una vacuna y tratamiento. https://t.co/iZ9RgOvzEn", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 571, "source": "TweetDeck", "id_str": "720683056571527169", "is_retweet": false}, {"created_at": "Sun Oct 02 01:21:58 +0000 2016", "text": "RT @ZekeJMiller: Trump Tax Records Obtained by The Times Reveal He Could Have Avoided Paying Taxes for Nearly Two Decades https://t.co/2Pt8\u2026", "in_reply_to_screen_name": null, "retweet_count": 2051, "favorite_count": 0, "source": "TweetDeck", "id_str": "782390134759157760", "is_retweet": true}, {"created_at": "Mon Aug 08 16:22:24 +0000 2016", "text": "\"Clinton\u2019s economic policies...will result in a stronger U.S. economy.\u201d \u2014Mark Zandi, John McCain's economic advisor https://t.co/eLL6iQNEWY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1158, "favorite_count": 2195, "source": "TweetDeck", "id_str": "762685400070709249", "is_retweet": false}, {"created_at": "Sun Aug 21 18:11:05 +0000 2016", "text": "Donald Trump\u2019s new message to African American voters isn\u2019t just inaccurate. It\u2019s outrageous. https://t.co/gozfbXa6Uw", "in_reply_to_screen_name": null, "retweet_count": 2141, "favorite_count": 4505, "source": "TweetDeck", "id_str": "767423795854471168", "is_retweet": false}, {"created_at": "Wed Jul 27 20:32:24 +0000 2016", "text": "\"I trust Hillary because...I've seen her lifelong devotion to our nation's children.\" \u2014@FLOTUS https://t.co/A0S2FJlsbJ", "in_reply_to_screen_name": null, "retweet_count": 1352, "favorite_count": 4100, "source": "TweetDeck", "id_str": "758399662302892032", "is_retweet": false}, {"created_at": "Thu Jul 28 01:26:45 +0000 2016", "text": "\"We do not scare easily. We never bow. We never bend. We never break when confronted with crisis.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 1828, "favorite_count": 4851, "source": "TweetDeck", "id_str": "758473736857251844", "is_retweet": false}, {"created_at": "Wed Oct 26 19:36:57 +0000 2016", "text": "We\u2019re going to make America the clean energy superpower of the 21st Century. https://t.co/GJxIrBLAwy", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 733, "favorite_count": 1850, "source": "TweetDeck", "id_str": "791363001819471872", "is_retweet": false}, {"created_at": "Tue May 10 18:56:25 +0000 2016", "text": "A woman told Hillary she was fired after losing her baby: \"What happened to you was not only wrong\u2014it's illegal.\"\nhttps://t.co/DekJBHSA44", "in_reply_to_screen_name": null, "retweet_count": 1731, "favorite_count": 3311, "source": "Twitter Web Client", "id_str": "730109255081070592", "is_retweet": false}, {"created_at": "Thu Jan 14 14:04:32 +0000 2016", "text": "Health care should be a right for every American. We should build on the progress we've made with the ACA\u2014not go back to square one.", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 1748, "source": "Twitter for iPhone", "id_str": "687636418705911810", "is_retweet": false}, {"created_at": "Fri Jul 29 03:06:32 +0000 2016", "text": "\"If you believe we should expand Social Security and protect a woman's right to make her own heath care decisions, join us!\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2696, "favorite_count": 8358, "source": "TweetDeck", "id_str": "758861238243762180", "is_retweet": false}, {"created_at": "Wed Sep 14 17:57:31 +0000 2016", "text": "20 questions Trump needs to answer on his dangerous foreign business ties\u2014and the national security risks they pose. https://t.co/JOOLN2SfL4", "in_reply_to_screen_name": null, "retweet_count": 3739, "favorite_count": 6023, "source": "TweetDeck", "id_str": "776117687936282624", "is_retweet": false}, {"created_at": "Mon Oct 24 17:26:11 +0000 2016", "text": "\"Hillary Clinton fights for us. It is now time for us to fight for Hillary.\u201d \u2014@ElizabethForMA https://t.co/iWKBOE1i18", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 398, "favorite_count": 1063, "source": "TweetDeck", "id_str": "790605317625225216", "is_retweet": false}, {"created_at": "Thu Sep 01 12:58:51 +0000 2016", "text": "Trump's extreme immigration speech got rave reviews\u2014from white supremacists, the alt-right, and Ann Coulter. https://t.co/TeYcDQeYCg", "in_reply_to_screen_name": null, "retweet_count": 3564, "favorite_count": 6133, "source": "TweetDeck", "id_str": "771331483772579840", "is_retweet": false}, {"created_at": "Sun Jun 19 20:20:27 +0000 2016", "text": "Imagine if this was our president. https://t.co/DCZLKQAfqx", "in_reply_to_screen_name": null, "retweet_count": 1140, "favorite_count": 2664, "source": "TweetDeck", "id_str": "744625915792064512", "is_retweet": false}, {"created_at": "Fri May 20 17:24:12 +0000 2016", "text": "Congratulations on becoming a U.S. citizen, Alicia. Enjoy casting that vote. \nhttps://t.co/jewmwZrrOA", "in_reply_to_screen_name": null, "retweet_count": 1672, "favorite_count": 4183, "source": "TweetDeck", "id_str": "733709925688475648", "is_retweet": false}, {"created_at": "Tue Oct 04 14:30:27 +0000 2016", "text": "Almost every newspaper that has endorsed a presidential candidate in the general election has endorsed Hillary. https://t.co/Q3k7JqmBsE", "in_reply_to_screen_name": null, "retweet_count": 1499, "favorite_count": 4241, "source": "TweetDeck", "id_str": "783313338520526848", "is_retweet": false}, {"created_at": "Wed Oct 12 20:47:53 +0000 2016", "text": "\u201cWe need to show each other more kindness and support. The last thing we need in our country is more bullies.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2291, "favorite_count": 6488, "source": "TweetDeck", "id_str": "786307423371927552", "is_retweet": false}, {"created_at": "Thu Oct 13 16:48:49 +0000 2016", "text": "RT @JoyAnnReid: Michelle Obama is speaking so much truth right now, and so eloquently. This is not normal. It's not politics. It's indecent\u2026", "in_reply_to_screen_name": null, "retweet_count": 3067, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786609647285264384", "is_retweet": true}, {"created_at": "Tue Aug 30 01:20:46 +0000 2016", "text": "RT @JamilSmith: Clinton today released a \u201csweeping agenda\u201d to address America\u2019s mental health problem, per @NickGass. https://t.co/t2ypVgey\u2026", "in_reply_to_screen_name": null, "retweet_count": 1125, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770431031732240384", "is_retweet": true}, {"created_at": "Wed Feb 03 17:57:51 +0000 2016", "text": "\"Some days\" we're pretty proud of. https://t.co/LVwHJx1wGL", "in_reply_to_screen_name": null, "retweet_count": 1029, "favorite_count": 1790, "source": "TweetDeck", "id_str": "694942889898590212", "is_retweet": false}, {"created_at": "Thu Sep 01 00:30:59 +0000 2016", "text": "RT @HillaryforAZ: There\u2019s an old Mexican proverb that says, \u201cTell me with whom you walk, and I will tell you who you are.\u201d https://t.co/7Rg\u2026", "in_reply_to_screen_name": null, "retweet_count": 2925, "favorite_count": 0, "source": "TweetDeck", "id_str": "771143277122875392", "is_retweet": true}, {"created_at": "Tue Nov 08 18:25:56 +0000 2016", "text": "If you\u2019ve already voted, jump on the phone and remind voters in key battleground states to go vote:\u2026 https://t.co/KZhrr7FCuD", "in_reply_to_screen_name": null, "retweet_count": 2434, "favorite_count": 6526, "source": "TweetDeck", "id_str": "796056175179599872", "is_retweet": false}, {"created_at": "Fri Nov 04 00:58:03 +0000 2016", "text": "\"Everything I\u2019ve done started by listening to people\u2026working to bring people together, to find common ground.\u201d \u2014Hillary in North Carolina", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1095, "favorite_count": 3314, "source": "TweetDeck", "id_str": "794342914247770112", "is_retweet": false}, {"created_at": "Sun Apr 17 18:39:22 +0000 2016", "text": "Our hearts go out to the people of Ecuador and the families who lost loved ones from yesterday's earthquake. -H", "in_reply_to_screen_name": null, "retweet_count": 3098, "favorite_count": 6142, "source": "Twitter Web Client", "id_str": "721770041709051904", "is_retweet": false}, {"created_at": "Fri Oct 21 17:51:34 +0000 2016", "text": "Where was this kind of comedy last night? https://t.co/71JhLG55G5", "in_reply_to_screen_name": null, "retweet_count": 49988, "favorite_count": 133690, "source": "TweetDeck", "id_str": "789524541789859840", "is_retweet": false}, {"created_at": "Wed Aug 31 15:07:23 +0000 2016", "text": "We're still 2.5 million away from reaching our August fundraising goal. Chip in by midnight and get a free sticker: https://t.co/wa1BxN66Ol", "in_reply_to_screen_name": null, "retweet_count": 578, "favorite_count": 1478, "source": "TweetDeck", "id_str": "771001443939647488", "is_retweet": false}, {"created_at": "Thu Jul 28 03:06:25 +0000 2016", "text": "\"What I see is Americans of every party, every background, every faith who believe that we are stronger together.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1378, "favorite_count": 3869, "source": "TweetDeck", "id_str": "758498819759804416", "is_retweet": false}, {"created_at": "Fri Nov 04 16:03:37 +0000 2016", "text": "The decision we make in four days will affect our country for decades. https://t.co/3TKJ4H68Kz\n\nRT this if you agre\u2026 https://t.co/7BR0ntjHGt", "in_reply_to_screen_name": null, "retweet_count": 4527, "favorite_count": 6771, "source": "TweetDeck", "id_str": "794570805262815232", "is_retweet": false}, {"created_at": "Thu Sep 15 01:56:28 +0000 2016", "text": "Trump's always put his own profits above all\u2014no matter who else gets hurt. Why would that change if he's president? https://t.co/Lo4boVfJCz", "in_reply_to_screen_name": null, "retweet_count": 2314, "favorite_count": 4283, "source": "TweetDeck", "id_str": "776238223131631616", "is_retweet": false}, {"created_at": "Mon Mar 14 01:06:25 +0000 2016", "text": "Trump is running a cynical campaign\u2014trafficking in hate and fear, and playing to our worst instincts. We're better than this. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1204, "favorite_count": 2792, "source": "TweetDeck", "id_str": "709183868914503682", "is_retweet": false}, {"created_at": "Sun Aug 07 00:02:56 +0000 2016", "text": "45 reasons why Trump should never be president\u2014just from this week alone. https://t.co/0cJ6fQeepR", "in_reply_to_screen_name": null, "retweet_count": 3865, "favorite_count": 7949, "source": "TweetDeck", "id_str": "762076523432116224", "is_retweet": false}, {"created_at": "Sat Apr 16 15:02:41 +0000 2016", "text": "Latino households are more than twice as likely as white households to face severe housing cost burdens. https://t.co/dgAkEHG4mc", "in_reply_to_screen_name": null, "retweet_count": 677, "favorite_count": 1224, "source": "TweetDeck", "id_str": "721353122770247680", "is_retweet": false}, {"created_at": "Sun Oct 09 23:51:24 +0000 2016", "text": "Get all the latest updates from tonight's debate straight to your phone. #Debate https://t.co/R4HPhwxx2O", "in_reply_to_screen_name": null, "retweet_count": 806, "favorite_count": 2579, "source": "TweetDeck", "id_str": "785266443898220544", "is_retweet": false}, {"created_at": "Tue Sep 27 01:16:15 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump seems to think $15 million is a \"small loan.\" #debate https://t.co/Bo3HOhdR92 https://t.co/K5bCPX3ujx", "in_reply_to_screen_name": null, "retweet_count": 1729, "favorite_count": 0, "source": "TweetDeck", "id_str": "780576756713549824", "is_retweet": true}, {"created_at": "Tue Jul 26 03:42:19 +0000 2016", "text": "\u201cBecause of Hillary Clinton, my daughters...can take it for granted that a woman can be president.\u201d \u2014@FLOTUS https://t.co/bCezjrX9W5", "in_reply_to_screen_name": null, "retweet_count": 12650, "favorite_count": 38368, "source": "TweetDeck", "id_str": "757783077217193985", "is_retweet": false}, {"created_at": "Fri Feb 26 18:00:14 +0000 2016", "text": "Let's not divide ourselves between \u201cus\u201d and \u201cthem.\u201d America works better when we all do our part. We\u2019re in this together.", "in_reply_to_screen_name": null, "retweet_count": 838, "favorite_count": 2168, "source": "TweetDeck", "id_str": "703278414497763329", "is_retweet": false}, {"created_at": "Tue Aug 02 15:56:41 +0000 2016", "text": "The #DemConvention painted a bright picture of America\u2014filled with diversity, love &amp; hope.\n\nThe RNC was...different. https://t.co/Vo71rzElsE", "in_reply_to_screen_name": null, "retweet_count": 1209, "favorite_count": 3992, "source": "TweetDeck", "id_str": "760504604027215872", "is_retweet": false}, {"created_at": "Fri Sep 16 19:12:00 +0000 2016", "text": "\"When it comes to the qualifications we should demand in a president...we need someone who\u2019s going to take this job seriously.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 1325, "favorite_count": 4610, "source": "Twitter Web Client", "id_str": "776861209396178944", "is_retweet": false}, {"created_at": "Sat Oct 08 17:59:39 +0000 2016", "text": "\"Sometimes the man in the arena, it ain't a man. It is a woman.\" \u2014@CoryBooker https://t.co/OasacjNNAe", "in_reply_to_screen_name": null, "retweet_count": 5911, "favorite_count": 14389, "source": "Media Studio", "id_str": "784815535972315136", "is_retweet": false}, {"created_at": "Fri Sep 16 14:05:45 +0000 2016", "text": "Let\u2019s build a future where love trumps hate. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 968, "favorite_count": 2276, "source": "TweetDeck", "id_str": "776784140435857409", "is_retweet": false}, {"created_at": "Tue May 24 18:55:27 +0000 2016", "text": "This wasn't an anomaly for Trump. His economic plan helps millionaires and hurts middle-class families. He'd let Wall Street run wild again.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 673, "favorite_count": 1140, "source": "TweetDeck", "id_str": "735182439463723008", "is_retweet": false}, {"created_at": "Fri Oct 28 01:26:20 +0000 2016", "text": "Glad to hear @mike_pence, his staff, Secret Service, and the crew are all safe. -H", "in_reply_to_screen_name": null, "retweet_count": 4162, "favorite_count": 22315, "source": "TweetDeck", "id_str": "791813318168211456", "is_retweet": false}, {"created_at": "Mon May 30 22:26:44 +0000 2016", "text": "Not only does Trump deny climate change, he's now denying that the drought in California is even happening. What? https://t.co/ebnTlWZqLD", "in_reply_to_screen_name": null, "retweet_count": 5458, "favorite_count": 10030, "source": "TweetDeck", "id_str": "737409940571181056", "is_retweet": false}, {"created_at": "Fri Feb 19 16:49:19 +0000 2016", "text": "Last summer, Sandra Bland lost her life in police custody. Now, her mother is channeling her grief into action. https://t.co/pSRTymahhQ", "in_reply_to_screen_name": null, "retweet_count": 589, "favorite_count": 1101, "source": "TweetDeck", "id_str": "700723852201086976", "is_retweet": false}, {"created_at": "Sat Sep 03 17:06:35 +0000 2016", "text": "Our planet's future depends on the decisions we make now.\n\nRT if you agree it's time to combat climate change. https://t.co/cSUPgkMIqj", "in_reply_to_screen_name": null, "retweet_count": 7788, "favorite_count": 11907, "source": "TweetDeck", "id_str": "772118606582775808", "is_retweet": false}, {"created_at": "Mon Oct 10 19:21:55 +0000 2016", "text": "Just 29 days left until Election Day. Join Hillary for her first stop since last night's debate \u2192 https://t.co/Tixbe3rsFN", "in_reply_to_screen_name": null, "retweet_count": 968, "favorite_count": 4638, "source": "TweetDeck", "id_str": "785561013944918024", "is_retweet": false}, {"created_at": "Fri Sep 09 20:19:32 +0000 2016", "text": "Women like Elaine served our country and blazed a trail for others to follow. They've earned our highest honors. https://t.co/ysKrzLrdYc", "in_reply_to_screen_name": null, "retweet_count": 1422, "favorite_count": 3951, "source": "TweetDeck", "id_str": "774341492118810625", "is_retweet": false}, {"created_at": "Fri Apr 22 13:40:40 +0000 2016", "text": "To make a better future for our kids, we've got to protect the future of our planet. Happy Earth Day. https://t.co/jRPtmo4Qzi", "in_reply_to_screen_name": null, "retweet_count": 2104, "favorite_count": 5261, "source": "Twitter for iPhone", "id_str": "723506812998307840", "is_retweet": false}, {"created_at": "Mon Jan 18 03:39:26 +0000 2016", "text": "We have a choice: elect a president with years of experience working with other leaders to keep the world safe, or not. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1114, "favorite_count": 2340, "source": "TweetDeck", "id_str": "688928659751759874", "is_retweet": false}, {"created_at": "Fri Sep 30 00:06:25 +0000 2016", "text": "Only one candidate in this election has actual plans to help middle-class families: https://t.co/nxHZj6xuAy https://t.co/0HHteIVtQK", "in_reply_to_screen_name": null, "retweet_count": 2148, "favorite_count": 6963, "source": "TweetDeck", "id_str": "781646346382143488", "is_retweet": false}, {"created_at": "Wed Sep 21 19:09:07 +0000 2016", "text": "The ultimate test of our society is how we treat our fellow human beings, especially those who we have previously left behind.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 886, "favorite_count": 1869, "source": "TweetDeck", "id_str": "778672424128811009", "is_retweet": false}, {"created_at": "Tue Jul 19 23:30:29 +0000 2016", "text": "Let's do this. https://t.co/DtYYBDTWE6", "in_reply_to_screen_name": null, "retweet_count": 7635, "favorite_count": 18027, "source": "TweetDeck", "id_str": "755545375361134597", "is_retweet": false}, {"created_at": "Mon Jul 18 22:07:00 +0000 2016", "text": "Lincoln called it \"terrible.\" FDR said he hated it.\n\n@realDonaldTrump? \"I love war.\"\nhttps://t.co/oHhEojIC1z", "in_reply_to_screen_name": null, "retweet_count": 3103, "favorite_count": 5243, "source": "Twitter Web Client", "id_str": "755161979866652672", "is_retweet": false}, {"created_at": "Wed Sep 21 19:01:05 +0000 2016", "text": "RT @HFA: The ADA and the notion that workplaces and public spaces belong to everyone was one that Democrats and Republicans could both get\u2026", "in_reply_to_screen_name": null, "retweet_count": 470, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "778670400830070784", "is_retweet": true}, {"created_at": "Tue Jan 26 03:39:27 +0000 2016", "text": "\"Military action should be the last resort\u2014not the first choice.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 646, "favorite_count": 1514, "source": "Twitter Web Client", "id_str": "691827765637726210", "is_retweet": false}, {"created_at": "Thu Jul 28 02:40:38 +0000 2016", "text": "\"Hillary is ready.\nReady to fight.\nReady to win.\nReady to lead.\"\n\u2014@TimKaine https://t.co/OGjaZdOKnk", "in_reply_to_screen_name": null, "retweet_count": 1784, "favorite_count": 5427, "source": "TweetDeck", "id_str": "758492329888014337", "is_retweet": false}, {"created_at": "Sun Jul 31 23:10:32 +0000 2016", "text": "The @HoustonChron endorsed @MittRomney in 2012. Here's why they're endorsing Hillary in 2016: https://t.co/UtZQtQ34fi", "in_reply_to_screen_name": null, "retweet_count": 3080, "favorite_count": 7954, "source": "TweetDeck", "id_str": "759889007455207424", "is_retweet": false}, {"created_at": "Sun Sep 18 22:33:52 +0000 2016", "text": "RT @ClintonFdn: FACT: The @ClintonFdn spends 87% on its life changing work: https://t.co/z0zW4Axdbc https://t.co/GtI94aBp4m", "in_reply_to_screen_name": null, "retweet_count": 1398, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "777636788814880770", "is_retweet": true}, {"created_at": "Wed Apr 06 16:03:30 +0000 2016", "text": "Unions helped build the greatest middle class in history. They continue to do that today by leading the fight to #RaiseTheWage.", "in_reply_to_screen_name": null, "retweet_count": 762, "favorite_count": 1769, "source": "TweetDeck", "id_str": "717744548785422336", "is_retweet": false}, {"created_at": "Mon Sep 19 16:53:35 +0000 2016", "text": "We have to stand up to this hate.\n\nWe have to send a clear message: \nAmerica is better than this.\nAmerica is better than Donald Trump.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2340, "favorite_count": 5378, "source": "TweetDeck", "id_str": "777913541445771264", "is_retweet": false}, {"created_at": "Wed Sep 07 23:35:52 +0000 2016", "text": "RT @HFA: \"We must be a force for unity in America, for a vision that includes all of us.\" \u2014Gen. John Allen at the DNC https://t.co/AyI3H0mr\u2026", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 0, "source": "TweetDeck", "id_str": "773666123896225792", "is_retweet": true}, {"created_at": "Thu Sep 29 20:17:26 +0000 2016", "text": "Born before women could vote, Ruline just cast her ballot for Hillary in Iowa today. Join her:\u2026 https://t.co/rnzbouZG0T", "in_reply_to_screen_name": null, "retweet_count": 5101, "favorite_count": 13727, "source": "Media Studio", "id_str": "781588721116340224", "is_retweet": false}, {"created_at": "Sat Oct 15 15:50:00 +0000 2016", "text": "\"It\u2019s time to fight back against Donald Trump &amp; deport his presidential dreams to the dustbin of history.\" \u2014@Latina https://t.co/PvF1nPgK9q", "in_reply_to_screen_name": null, "retweet_count": 2951, "favorite_count": 8052, "source": "TweetDeck", "id_str": "787319623108755456", "is_retweet": false}, {"created_at": "Mon May 30 23:59:09 +0000 2016", "text": "10 never-before-seen photos of Hillary from the trail in 1992. https://t.co/tUjR0vzXOq", "in_reply_to_screen_name": null, "retweet_count": 758, "favorite_count": 2156, "source": "Twitter Web Client", "id_str": "737433194690138112", "is_retweet": false}, {"created_at": "Wed Sep 21 14:41:06 +0000 2016", "text": "Keith Lamont Scott. Terence Crutcher. Too many others. This has got to end. -H", "in_reply_to_screen_name": null, "retweet_count": 5985, "favorite_count": 12809, "source": "Twitter Web Client", "id_str": "778604976516001796", "is_retweet": false}, {"created_at": "Tue Aug 09 23:20:49 +0000 2016", "text": "RT @GabbyGiffords: .@realDonaldTrump might astound Americans on a routine basis, but we must draw a line between political speech &amp; suggest\u2026", "in_reply_to_screen_name": null, "retweet_count": 8943, "favorite_count": 0, "source": "TweetDeck", "id_str": "763153087733301248", "is_retweet": true}, {"created_at": "Thu Nov 03 03:40:03 +0000 2016", "text": "\"Even if you\u2019re not for me, I promise, I will be for you as your president.\u201d \u2014Hillary in Arizona", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1457, "favorite_count": 4195, "source": "TweetDeck", "id_str": "794021296363421697", "is_retweet": false}, {"created_at": "Mon Oct 24 18:15:52 +0000 2016", "text": "If Donald Trump condones discrimination against his own employees, how would he lead our country? https://t.co/3VdXH9tykx", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1327, "favorite_count": 3117, "source": "TweetDeck", "id_str": "790617821185187840", "is_retweet": false}, {"created_at": "Fri Sep 23 01:55:41 +0000 2016", "text": "\"Vote.\" \u2014@Lin_Manuel https://t.co/tTgeqxNqYm https://t.co/m9H9b9X7Ar", "in_reply_to_screen_name": null, "retweet_count": 2617, "favorite_count": 5034, "source": "TweetDeck", "id_str": "779137127787429888", "is_retweet": false}, {"created_at": "Thu Mar 24 18:18:25 +0000 2016", "text": "TB still ravages communities around the world\u2014and here. Let's invest in treatment and prevention of this disease. #WorldTBDay -H", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 1447, "source": "TweetDeck", "id_str": "713067461730394114", "is_retweet": false}, {"created_at": "Mon Jul 25 15:35:05 +0000 2016", "text": "Hillary's speaking at the @VFWHQ. Tune in now: https://t.co/q9VBtnCSTJ", "in_reply_to_screen_name": null, "retweet_count": 342, "favorite_count": 1056, "source": "TweetDeck", "id_str": "757600063338213376", "is_retweet": false}, {"created_at": "Thu Sep 29 21:05:46 +0000 2016", "text": "Trump \"can run his campaign however he chooses...I\u2019m going to keep talking about the stakes in this election.\u201d https://t.co/m0Z0xmCKEm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 956, "favorite_count": 3073, "source": "TweetDeck", "id_str": "781600880915255297", "is_retweet": false}, {"created_at": "Sat Sep 24 23:49:22 +0000 2016", "text": "The new @NMAAHC is an overdue tribute to African American history. Let's build a more open, inclusive future by reflecting on our past. -H", "in_reply_to_screen_name": null, "retweet_count": 3425, "favorite_count": 10998, "source": "TweetDeck", "id_str": "779830115643617280", "is_retweet": false}, {"created_at": "Tue Aug 30 20:17:43 +0000 2016", "text": "Eight reasons why you shouldn't need a four-year degree to have a successful career: https://t.co/QhJE8VdLWT", "in_reply_to_screen_name": null, "retweet_count": 1040, "favorite_count": 2803, "source": "TweetDeck", "id_str": "770717154496901120", "is_retweet": false}, {"created_at": "Fri Oct 14 15:47:40 +0000 2016", "text": "\"You have a chance to reject the politics of fear. You can lift up again the politics of hope.\u201d \u2014@POTUS https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 574, "favorite_count": 1260, "source": "TweetDeck", "id_str": "786956647306522624", "is_retweet": false}, {"created_at": "Thu Sep 15 17:46:12 +0000 2016", "text": "Trump gets criticized by a Latino judge: calls him a \"disgrace.\"\nA Muslim family: he lashes out.\nA black pastor: https://t.co/3JbmFsM6RH", "in_reply_to_screen_name": null, "retweet_count": 3029, "favorite_count": 4867, "source": "TweetDeck", "id_str": "776477231581425664", "is_retweet": false}, {"created_at": "Wed Jan 27 18:13:32 +0000 2016", "text": "The Iowa caucus is coming up fast! Say #ImWithHer and commit to vote or caucus in your state: https://t.co/YkTJTsjuDK", "in_reply_to_screen_name": null, "retweet_count": 5276, "favorite_count": 1128, "source": "TweetDeck", "id_str": "692410121918504960", "is_retweet": false}, {"created_at": "Tue Nov 08 16:39:30 +0000 2016", "text": "How do we go high? \n\nWe vote: https://t.co/jfd3CXu1CS https://t.co/rx5OWheuBd", "in_reply_to_screen_name": null, "retweet_count": 4577, "favorite_count": 12444, "source": "Media Studio", "id_str": "796029388043141120", "is_retweet": false}, {"created_at": "Tue Jan 19 16:20:25 +0000 2016", "text": ".@POTUS' action should be upheld so families can stay together and live without fear of deportation. -H https://t.co/qkj7UiZUyR", "in_reply_to_screen_name": null, "retweet_count": 564, "favorite_count": 1111, "source": "TweetDeck", "id_str": "689482555024809984", "is_retweet": false}, {"created_at": "Fri Jul 22 21:58:16 +0000 2016", "text": "\"As I recall, we had a revolution to make sure we didn't have someone who said, 'I can fix it alone.'\" \u2014Hillary https://t.co/ScJqBfzx0Z", "in_reply_to_screen_name": null, "retweet_count": 2453, "favorite_count": 5615, "source": "TweetDeck", "id_str": "756609331840315392", "is_retweet": false}, {"created_at": "Wed Apr 27 13:03:43 +0000 2016", "text": "\"That is how progress gets made: We have to be both dreamers and doers.\" \u2014Hillary last night in PA https://t.co/F03zCH304S", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 4007, "source": "TweetDeck", "id_str": "725309452837130240", "is_retweet": false}, {"created_at": "Tue Feb 23 00:25:51 +0000 2016", "text": "\u201cShe is the 'what can I do?' candidate.\u201d @BillClinton on Hillary\u2019s commitment to helping communities left behind.\nhttps://t.co/IHIQ35vpy5", "in_reply_to_screen_name": null, "retweet_count": 1025, "favorite_count": 1816, "source": "Twitter Web Client", "id_str": "701925905879293952", "is_retweet": false}, {"created_at": "Fri Jan 08 19:57:36 +0000 2016", "text": ".@lenadunham is taking over Hillary's Instagram today! Follow for updates from the trail: https://t.co/1Uih94gHPi https://t.co/n2DRvz6zyN", "in_reply_to_screen_name": null, "retweet_count": 719, "favorite_count": 1530, "source": "TweetDeck", "id_str": "685550944306753536", "is_retweet": false}, {"created_at": "Fri Nov 04 17:56:51 +0000 2016", "text": "\"Don\u2019t you think it\u2019s finally time to guarantee equal pay for women?\u201d \u2014Hillary in Pittsburgh https://t.co/4ZlhKombnl", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 727, "favorite_count": 1426, "source": "TweetDeck", "id_str": "794599302953832448", "is_retweet": false}, {"created_at": "Tue Oct 18 17:55:56 +0000 2016", "text": "\u201cTwo words give us hope: Madam President.\" \u2014@VogueMagazine in its first presidential endorsement https://t.co/2xBHFpChFu", "in_reply_to_screen_name": null, "retweet_count": 4397, "favorite_count": 13916, "source": "TweetDeck", "id_str": "788438478937808897", "is_retweet": false}, {"created_at": "Wed Oct 12 20:24:49 +0000 2016", "text": "\u201cI want to be the president, yes, for Democrats, but also for Republicans and Independents.\u201d \u2014Hillary in Colorado #StrongerTogether", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 892, "favorite_count": 2400, "source": "TweetDeck", "id_str": "786301618690134018", "is_retweet": false}, {"created_at": "Wed Oct 05 20:46:48 +0000 2016", "text": "If by \"nonsense\" you mean \"a cruel and absurd plan that will never happen,\" we agree. #VPDebate https://t.co/KBU6xJVqh0", "in_reply_to_screen_name": null, "retweet_count": 1650, "favorite_count": 4512, "source": "TweetDeck", "id_str": "783770437985693697", "is_retweet": false}, {"created_at": "Fri May 20 20:31:26 +0000 2016", "text": "You're wrong, @realDonaldTrump. We can uphold Second Amendment rights while preventing senseless gun violence. https://t.co/G7g1AdZWCA", "in_reply_to_screen_name": null, "retweet_count": 5447, "favorite_count": 11079, "source": "TweetDeck", "id_str": "733757045808234500", "is_retweet": false}, {"created_at": "Sat Sep 10 01:58:26 +0000 2016", "text": "Thank you for being so brave, Astrid. I\u2019m going to do everything I can to keep families like yours together. -H https://t.co/ZmFdi427vX", "in_reply_to_screen_name": null, "retweet_count": 2924, "favorite_count": 9621, "source": "Twitter for iPhone", "id_str": "774426775581495297", "is_retweet": false}, {"created_at": "Sat Jul 23 00:33:59 +0000 2016", "text": "RT @HillaryforVA: Virginia's own @timkaine has joined Team Hillary\u2014now it's your turn: https://t.co/GLyVJrWn2Q #VirWINia https://t.co/Nmivj\u2026", "in_reply_to_screen_name": null, "retweet_count": 1431, "favorite_count": 0, "source": "TweetDeck", "id_str": "756648517532286976", "is_retweet": true}, {"created_at": "Thu Sep 15 03:25:32 +0000 2016", "text": "Proud of you, @Simone_Biles. We can all learn from your courage in standing up to stigma. https://t.co/S9rndkm0ZL", "in_reply_to_screen_name": null, "retweet_count": 2833, "favorite_count": 10886, "source": "TweetDeck", "id_str": "776260637156446210", "is_retweet": false}, {"created_at": "Mon Oct 03 11:51:41 +0000 2016", "text": "Can a man who lost $1 billion in one year, stiffed small businesses, and may have paid no taxes really claim he's \"\u2026 https://t.co/4CdMilhPvP", "in_reply_to_screen_name": null, "retweet_count": 11533, "favorite_count": 22529, "source": "Media Studio", "id_str": "782910994263584768", "is_retweet": false}, {"created_at": "Mon Sep 19 16:37:16 +0000 2016", "text": "College should be tuition-free for working families and debt-free for everyone: https://t.co/lkOFcHI4Py", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 517, "favorite_count": 1124, "source": "Twitter Web Client", "id_str": "777909432403496960", "is_retweet": false}, {"created_at": "Mon Mar 07 23:39:49 +0000 2016", "text": "\"It's not much of a right if it is totally limited and constrained.\" \u2014Hillary on women's right to safe and legal abortion #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1077, "favorite_count": 2266, "source": "TweetDeck", "id_str": "706987751376347137", "is_retweet": false}, {"created_at": "Fri May 27 20:50:44 +0000 2016", "text": "Donald Trump thinks climate change is a \u201choax.\u201d\n\nPresident Trump would destroy our ability to combat it.\nhttps://t.co/8TeARR4FUL", "in_reply_to_screen_name": null, "retweet_count": 2458, "favorite_count": 4020, "source": "Twitter Web Client", "id_str": "736298618152312833", "is_retweet": false}, {"created_at": "Fri Oct 21 22:33:36 +0000 2016", "text": "RT @barb_kinney: Hear about my career and why @HillaryClinton means so much to me on @TheRivetersPod https://t.co/XqB0KDZPV0", "in_reply_to_screen_name": null, "retweet_count": 311, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789595519534391296", "is_retweet": true}, {"created_at": "Wed Jul 06 16:42:10 +0000 2016", "text": "\u201cAtlantic City was a very good cash cow for me for a long time...The money I took out of there was incredible.\u201d \u2014Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 1356, "favorite_count": 2484, "source": "TweetDeck", "id_str": "750731576040951810", "is_retweet": false}, {"created_at": "Wed Oct 05 17:02:05 +0000 2016", "text": "\"We trust American women.\" \u2014@TimKaine on a woman's right to abortion https://t.co/8HBMXqa225", "in_reply_to_screen_name": null, "retweet_count": 1323, "favorite_count": 3865, "source": "TweetDeck", "id_str": "783713886830813184", "is_retweet": false}, {"created_at": "Tue Jan 26 21:39:13 +0000 2016", "text": "No one should have to work around the clock just to get by.\nhttps://t.co/XyGKcXUJdv", "in_reply_to_screen_name": null, "retweet_count": 559, "favorite_count": 1312, "source": "Twitter Web Client", "id_str": "692099496734433280", "is_retweet": false}, {"created_at": "Fri May 13 13:05:02 +0000 2016", "text": "\u201cYou\u2019re gonna make the same if you do as good a job.\u201d \u2014Donald Trump on women and equal pay https://t.co/lHF3KRLqvs", "in_reply_to_screen_name": null, "retweet_count": 907, "favorite_count": 1512, "source": "TweetDeck", "id_str": "731107990514880512", "is_retweet": false}, {"created_at": "Mon Oct 10 02:01:18 +0000 2016", "text": "Trump would give millionaires (like him) and billionaires the biggest tax cuts they\u2019ve ever had. #Debate https://t.co/0HKJYTAdhz", "in_reply_to_screen_name": null, "retweet_count": 2132, "favorite_count": 5564, "source": "TweetDeck", "id_str": "785299134127468544", "is_retweet": false}, {"created_at": "Thu Aug 11 00:01:32 +0000 2016", "text": "Who benefits from Donald Trump's \"new\" economic plan? Rich people like Donald Trump. https://t.co/fDTcHhgCbz", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 2988, "source": "TweetDeck", "id_str": "763525720408727552", "is_retweet": false}, {"created_at": "Sat Apr 16 23:27:53 +0000 2016", "text": "A new friend in Brooklyn.\nhttps://t.co/5v8Ka03njc", "in_reply_to_screen_name": null, "retweet_count": 2043, "favorite_count": 5900, "source": "Twitter Web Client", "id_str": "721480261737680897", "is_retweet": false}, {"created_at": "Thu Jan 07 00:27:00 +0000 2016", "text": "We have to defend our progress on access to health care. Add your name if you agree: https://t.co/bhNS52o1hk", "in_reply_to_screen_name": null, "retweet_count": 308, "favorite_count": 862, "source": "TweetDeck", "id_str": "684893965846491137", "is_retweet": false}, {"created_at": "Fri Jan 15 19:13:36 +0000 2016", "text": "No podemos permitir que este tipo de tragedias sigan sucediendo. Nelba perdi\u00f3 a su hija en la masacre de Sandy Hook. https://t.co/0eJSiINI5t", "in_reply_to_screen_name": null, "retweet_count": 202, "favorite_count": 392, "source": "TweetDeck", "id_str": "688076583882637312", "is_retweet": false}, {"created_at": "Mon Jul 25 16:38:16 +0000 2016", "text": "No matter where you are, you can help Hillary win in November. All you need is a smartphone. https://t.co/K1Aw88vS9H\nhttps://t.co/IiQGwaarv3", "in_reply_to_screen_name": null, "retweet_count": 620, "favorite_count": 1458, "source": "Twitter Web Client", "id_str": "757615965043462144", "is_retweet": false}, {"created_at": "Fri Jan 29 20:23:12 +0000 2016", "text": "Don't miss your chance to stand with Hillary before the #IAcaucus! Say #ImWithHer with your custom commit card: https://t.co/Itonplc7uK", "in_reply_to_screen_name": null, "retweet_count": 280, "favorite_count": 606, "source": "Twitter Web Client", "id_str": "693167531754942464", "is_retweet": false}, {"created_at": "Tue Sep 27 02:27:23 +0000 2016", "text": ".@realDonaldTrump: Barack Obama is your president too. #debatenight", "in_reply_to_screen_name": null, "retweet_count": 16872, "favorite_count": 38835, "source": "TweetDeck", "id_str": "780594655318638592", "is_retweet": false}, {"created_at": "Sat Feb 06 18:30:18 +0000 2016", "text": "This young man\u2019s story about depression is exactly why we can\u2019t repeal or replace the Affordable Care Act. https://t.co/FM0PTuXpiK", "in_reply_to_screen_name": null, "retweet_count": 483, "favorite_count": 1007, "source": "TweetDeck", "id_str": "696038221340348416", "is_retweet": false}, {"created_at": "Thu Oct 13 16:47:35 +0000 2016", "text": "\u201cTo dismiss this as everyday \u2018locker room talk\u2019 is an insult to decent men everywhere.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1120, "favorite_count": 2236, "source": "TweetDeck", "id_str": "786609337141751808", "is_retweet": false}, {"created_at": "Tue Sep 27 01:27:13 +0000 2016", "text": "Donald Trump may live in his own reality\u2014but we've got his own words right here. Check them out: https://t.co/NLPH8sbAGn #debatenight", "in_reply_to_screen_name": null, "retweet_count": 5798, "favorite_count": 8364, "source": "TweetDeck", "id_str": "780579514938261504", "is_retweet": false}, {"created_at": "Sat Jul 23 14:00:19 +0000 2016", "text": "Trump, translated:\n\n\u2713Build the wall\n\u2713Add $34 trillion to the national debt\n\u2713Revoke 20 million Americans' insurance https://t.co/as0FqFGoXS", "in_reply_to_screen_name": null, "retweet_count": 1727, "favorite_count": 3123, "source": "TweetDeck", "id_str": "756851437603287041", "is_retweet": false}, {"created_at": "Fri Sep 23 11:57:49 +0000 2016", "text": "Is this the president we want for our daughters? https://t.co/GP4rfhPDGm", "in_reply_to_screen_name": null, "retweet_count": 25049, "favorite_count": 36609, "source": "Media Studio", "id_str": "779288660067823616", "is_retweet": false}, {"created_at": "Mon Aug 29 23:59:50 +0000 2016", "text": "RT @YahooNews: Hillary Clinton proposes plan to address mental health treatment https://t.co/C7BLynIroF https://t.co/CWhvxE6Cxm", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770410663994875904", "is_retweet": true}, {"created_at": "Mon Feb 15 18:43:15 +0000 2016", "text": "Today, Planned Parenthood re-opens in Colorado Springs\u2014a testament to hope in the face of hostility and violence. https://t.co/PxSadnIlGT -H", "in_reply_to_screen_name": null, "retweet_count": 1157, "favorite_count": 2769, "source": "TweetDeck", "id_str": "699302969842495488", "is_retweet": false}, {"created_at": "Sat Oct 08 14:59:16 +0000 2016", "text": "\"President Hillary Clinton on her worst day would be so superior to a President Donald Trump on any day.\" https://t.co/LCnEDJbELT", "in_reply_to_screen_name": null, "retweet_count": 6172, "favorite_count": 19697, "source": "TweetDeck", "id_str": "784770142454579200", "is_retweet": false}, {"created_at": "Wed Jul 27 20:04:47 +0000 2016", "text": "Last night, we put the biggest crack yet in that highest, hardest glass ceiling. Here are the highlights: https://t.co/YcfLdrnu56", "in_reply_to_screen_name": null, "retweet_count": 704, "favorite_count": 2713, "source": "TweetDeck", "id_str": "758392712907350016", "is_retweet": false}, {"created_at": "Sat Aug 06 00:05:12 +0000 2016", "text": "At the Paris 1900 games, golfer Margaret Abbott became the first American woman to win an Olympic gold medal. https://t.co/kT9jIHvVu8", "in_reply_to_screen_name": null, "retweet_count": 5139, "favorite_count": 19805, "source": "Twitter for iPhone", "id_str": "761714706532995072", "is_retweet": false}, {"created_at": "Fri Jul 29 03:13:37 +0000 2016", "text": "\"Donald Trump says he wants to make America great again\u2014well, he could start by actually making things in America again.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 6139, "favorite_count": 14678, "source": "TweetDeck", "id_str": "758863021305278464", "is_retweet": false}, {"created_at": "Tue Jul 05 20:28:33 +0000 2016", "text": "\"The fact is, Hillary is steady. Hillary is true. \u2026 That\u2019s how real change and real progress happen.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1441, "favorite_count": 3871, "source": "TweetDeck", "id_str": "750426161126240257", "is_retweet": false}, {"created_at": "Wed Feb 10 03:01:09 +0000 2016", "text": "If you're with Hillary, now is the time to stand up and say so. If you can, pitch in to show her you\u2019re with her: https://t.co/8HBEVaoset", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 1410, "source": "TweetDeck", "id_str": "697253944725258240", "is_retweet": false}, {"created_at": "Thu Jun 23 20:11:09 +0000 2016", "text": "Thank you, #DemocraticSitIn. Your determination has exposed Republican inaction on gun violence and demanded better. We can't give up. -H", "in_reply_to_screen_name": null, "retweet_count": 2944, "favorite_count": 9311, "source": "TweetDeck", "id_str": "746073128644784128", "is_retweet": false}, {"created_at": "Thu Sep 01 14:11:29 +0000 2016", "text": "RT @ClintonFdn: Proud to be rated four stars by @charitynav for our impact, transparency, and the quality of our work: https://t.co/lgUoey3\u2026", "in_reply_to_screen_name": null, "retweet_count": 1893, "favorite_count": 0, "source": "TweetDeck", "id_str": "771349766437470208", "is_retweet": true}, {"created_at": "Tue Sep 27 23:45:00 +0000 2016", "text": "RT @timkaine: Last night, Donald Trump said not paying taxes was \"smart.\" You know what I call it? Unpatriotic. https://t.co/t0xmBfj7zF", "in_reply_to_screen_name": null, "retweet_count": 8920, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780916180899037184", "is_retweet": true}, {"created_at": "Sun Feb 07 01:47:00 +0000 2016", "text": "Confirmed. #GOPdebate https://t.co/z7dcm8n5cX", "in_reply_to_screen_name": null, "retweet_count": 1590, "favorite_count": 3750, "source": "TweetDeck", "id_str": "696148121903108096", "is_retweet": false}, {"created_at": "Thu Aug 11 17:54:46 +0000 2016", "text": "\"Some country is going to be the clean energy superpower of the 21st century and create millions of jobs...I want it to be us.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1382, "favorite_count": 4091, "source": "TweetDeck", "id_str": "763795811771777024", "is_retweet": false}, {"created_at": "Fri Jul 29 03:15:29 +0000 2016", "text": "\"I'm proud that we shaped a global climate agreement. Now we have to hold every country accountable to their commitments\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1452, "favorite_count": 5493, "source": "TweetDeck", "id_str": "758863489448366080", "is_retweet": false}, {"created_at": "Sat Apr 16 13:50:46 +0000 2016", "text": "Kareem Abdul-Jabbar on Hillary: She can envision a better world and take the steps to make that vision a reality. https://t.co/yLIavueoBq", "in_reply_to_screen_name": null, "retweet_count": 2185, "favorite_count": 4230, "source": "TweetDeck", "id_str": "721335026772783104", "is_retweet": false}, {"created_at": "Sun Jun 05 21:35:58 +0000 2016", "text": "As we begin Ramadan, I wish all Muslims a blessed time of reflection, family, and good health. Ramadan Mubarak. -H", "in_reply_to_screen_name": null, "retweet_count": 7889, "favorite_count": 14334, "source": "TweetDeck", "id_str": "739571492028092416", "is_retweet": false}, {"created_at": "Fri Sep 16 19:13:51 +0000 2016", "text": "\"The presidency doesn\u2019t change who you are. It reveals who you are. And the same thing is true of a presidential campaign.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 1888, "favorite_count": 5256, "source": "TweetDeck", "id_str": "776861674989117441", "is_retweet": false}, {"created_at": "Thu May 12 22:12:47 +0000 2016", "text": "Who benefits from Donald Trump's tax plan? Billionaires like Donald Trump. https://t.co/mslA0AkgwY https://t.co/PJUzwELXGK", "in_reply_to_screen_name": null, "retweet_count": 1256, "favorite_count": 2048, "source": "TweetDeck", "id_str": "730883447145807872", "is_retweet": false}, {"created_at": "Wed Aug 17 18:15:19 +0000 2016", "text": "RT @TheBriefing2016: Trump\u2019s new campaign chief is also the guy responsible for running this fringe \"news\" site: https://t.co/dH5lUyybYf", "in_reply_to_screen_name": null, "retweet_count": 1455, "favorite_count": 0, "source": "TweetDeck", "id_str": "765975309493669888", "is_retweet": true}, {"created_at": "Tue Mar 08 19:55:01 +0000 2016", "text": "Live in MI or MS? Call the hotline with any questions about voting today! 844-IM4-HILL (844-464-4455) https://t.co/uSYu4XSkBk", "in_reply_to_screen_name": null, "retweet_count": 533, "favorite_count": 935, "source": "TweetDeck", "id_str": "707293566863810560", "is_retweet": false}, {"created_at": "Wed Mar 09 02:46:20 +0000 2016", "text": "\"If we lift each other up, instead of tearing each other down, there\u2019s nothing we can\u2019t do together.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1641, "favorite_count": 3410, "source": "TweetDeck", "id_str": "707397078331293699", "is_retweet": false}, {"created_at": "Wed Jul 20 02:04:24 +0000 2016", "text": "This small business owner sold Donald Trump pianos for his Atlantic City casino.\n\nTrump stiffed him for the payment. https://t.co/i51CBQ9lKM", "in_reply_to_screen_name": null, "retweet_count": 4600, "favorite_count": 5877, "source": "TweetDeck", "id_str": "755584109439754241", "is_retweet": false}, {"created_at": "Thu Feb 18 23:25:48 +0000 2016", "text": "This week, Hillary spoke about breaking down barriers for African Americans. Here's how she did it in New York: https://t.co/DeFMKdCe5N", "in_reply_to_screen_name": null, "retweet_count": 511, "favorite_count": 992, "source": "TweetDeck", "id_str": "700461239437279232", "is_retweet": false}, {"created_at": "Tue Sep 27 17:07:22 +0000 2016", "text": "\u201cDonald just criticized me for preparing for this debate. And you know what else I prepared for?\n\nI prepared to be\u2026 https://t.co/QjB01msPaT", "in_reply_to_screen_name": null, "retweet_count": 8844, "favorite_count": 25877, "source": "Media Studio", "id_str": "780816109700124672", "is_retweet": false}, {"created_at": "Wed Jan 06 17:38:50 +0000 2016", "text": "It's a disgrace that the government is making money off of lending to college students. We need to end that.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 922, "favorite_count": 2163, "source": "TweetDeck", "id_str": "684791245235994625", "is_retweet": false}, {"created_at": "Fri May 27 11:54:49 +0000 2016", "text": "The first in a new series: a message from your potential next president\u2014on pregnancy.\nhttps://t.co/LmUZI20JCo", "in_reply_to_screen_name": null, "retweet_count": 2214, "favorite_count": 3227, "source": "Twitter Web Client", "id_str": "736163748977598464", "is_retweet": false}, {"created_at": "Sun May 29 20:00:20 +0000 2016", "text": "El mantra de Trump: Beneficiarse sin importar a los dem\u00e1s. https://t.co/eeg6hnAJzz", "in_reply_to_screen_name": null, "retweet_count": 479, "favorite_count": 860, "source": "TweetDeck", "id_str": "737010709414940673", "is_retweet": false}, {"created_at": "Wed Aug 31 17:32:37 +0000 2016", "text": "\"They have to go.\"\n\nTrump has been perfectly clear about his intentions for millions of immigrants. https://t.co/kZ6hdDWrFt", "in_reply_to_screen_name": null, "retweet_count": 5982, "favorite_count": 9319, "source": "Twitter Web Client", "id_str": "771037992811163648", "is_retweet": false}, {"created_at": "Tue Jul 26 00:29:41 +0000 2016", "text": "\"I know she will fight to keep our families together, nuestras familias\u201d \u2014DREAMer @Astrid_NV on Hillary https://t.co/iisvLbWPQT", "in_reply_to_screen_name": null, "retweet_count": 792, "favorite_count": 2517, "source": "TweetDeck", "id_str": "757734600684765184", "is_retweet": false}, {"created_at": "Tue Aug 30 18:54:04 +0000 2016", "text": "RT @sarasolow: Universal broadband, 5G wireless, CS Ed for all, open internet-- all in @HillaryClinton's \"wonkiest ever\" tech plan. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 604, "favorite_count": 0, "source": "TweetDeck", "id_str": "770696105122209792", "is_retweet": true}, {"created_at": "Thu Apr 21 16:43:02 +0000 2016", "text": "If anything else killed 33,000 people per year, Congress would take action. It's time to #StopGunViolence. https://t.co/PoTp8Mirei", "in_reply_to_screen_name": null, "retweet_count": 2027, "favorite_count": 4081, "source": "TweetDeck", "id_str": "723190318351441920", "is_retweet": false}, {"created_at": "Tue Sep 27 02:26:01 +0000 2016", "text": "This should go without saying: Taking nuclear war lightly is disqualifying for anyone seeking to be President of th\u2026 https://t.co/OXigxJhmqJ", "in_reply_to_screen_name": null, "retweet_count": 5816, "favorite_count": 13634, "source": "TweetDeck", "id_str": "780594312182657024", "is_retweet": false}, {"created_at": "Mon Oct 10 13:30:32 +0000 2016", "text": "\"Only one candidate on the ballot Nov. 8 belongs anywhere near the White House, and it\u2019s Hillary.\" \u2014@BostonGlobe https://t.co/oQs70AlmQq", "in_reply_to_screen_name": null, "retweet_count": 3259, "favorite_count": 10578, "source": "TweetDeck", "id_str": "785472584393555968", "is_retweet": false}, {"created_at": "Mon Jun 13 17:18:56 +0000 2016", "text": "The murder of innocent people always breaks our hearts, scares us, and makes us furious. Now we have to steel our resolve and respond.", "in_reply_to_screen_name": null, "retweet_count": 1373, "favorite_count": 4287, "source": "TweetDeck", "id_str": "742405910073647104", "is_retweet": false}, {"created_at": "Wed Sep 28 23:52:03 +0000 2016", "text": "RT @Sia: #ImWithHer #Stamina #TheGreatest https://t.co/8b1LHc0dN8", "in_reply_to_screen_name": null, "retweet_count": 11112, "favorite_count": 0, "source": "TweetDeck", "id_str": "781280343051608064", "is_retweet": true}, {"created_at": "Thu Feb 04 03:59:23 +0000 2016", "text": "\"We have a chance to build on the progress we've made and to get results for people...that's my goal.\" \u2014Hillary #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 470, "favorite_count": 1038, "source": "TweetDeck", "id_str": "695094273121873920", "is_retweet": false}, {"created_at": "Mon Oct 10 03:03:53 +0000 2016", "text": "RT @mic: Hillary Clinton won the second #debate, mostly because Donald Trump totally imploded\nhttps://t.co/Vq6JLlRbGs https://t.co/rmEtk2tj\u2026", "in_reply_to_screen_name": null, "retweet_count": 3630, "favorite_count": 0, "source": "TweetDeck", "id_str": "785314883793477633", "is_retweet": true}, {"created_at": "Sun Jul 24 16:32:43 +0000 2016", "text": "RT @HillaryforVA: Virginians have known and loved @timkaine for decades\u2014and we're proud to have him on Team Hillary: https://t.co/JkfxE6jfUX", "in_reply_to_screen_name": null, "retweet_count": 743, "favorite_count": 0, "source": "TweetDeck", "id_str": "757252179317104640", "is_retweet": true}, {"created_at": "Sun Oct 16 00:06:43 +0000 2016", "text": "When we all show up on November 8, we'll secure @POTUS's legacy and build on our progress: https://t.co/tTgeqy51PU https://t.co/SSqkG4SxLh", "in_reply_to_screen_name": null, "retweet_count": 3165, "favorite_count": 9728, "source": "Media Studio", "id_str": "787444625585745920", "is_retweet": false}, {"created_at": "Tue Oct 11 23:18:08 +0000 2016", "text": "RT @DavidNakamura: Obama on Trump video: \"You don\u2019t have to be a husband or father to say, 'That\u2019s not right.' You just have to be a decent\u2026", "in_reply_to_screen_name": null, "retweet_count": 7323, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785982847492337664", "is_retweet": true}, {"created_at": "Sun Feb 14 02:51:52 +0000 2016", "text": "\"It's outrageous that Republicans...have already pledged to block any [Supreme Court] replacement that President Obama nominates.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2595, "favorite_count": 4816, "source": "TweetDeck", "id_str": "698701161088577540", "is_retweet": false}, {"created_at": "Tue Mar 15 22:55:57 +0000 2016", "text": "Honored by Lezley's support. She is turning her grief into resolve after suffering as no mother ever should. -H https://t.co/SA9e8TLqgm", "in_reply_to_screen_name": null, "retweet_count": 615, "favorite_count": 1613, "source": "TweetDeck", "id_str": "709875812347092993", "is_retweet": false}, {"created_at": "Fri Aug 26 17:30:40 +0000 2016", "text": "RT @tyleroakley: \"human rights are women\u2019s rights &amp; women\u2019s rights are human rights.\" - @HillaryClinton #WomensEqualityDay \ud83d\udc78\ud83c\udffd\ud83d\udc78\ud83c\udfff\ud83d\udc78\ud83c\udffb\ud83d\udc78\ud83c\udffe\ud83d\udc78\ud83c\udffc https\u2026", "in_reply_to_screen_name": null, "retweet_count": 6509, "favorite_count": 0, "source": "TweetDeck", "id_str": "769225563969957888", "is_retweet": true}, {"created_at": "Tue Jul 26 03:10:01 +0000 2016", "text": "\u201cHillary Clinton will nominate justices to the Supreme Court who are prepared to overturn Citizens United.\u201d \u2014@BernieSanders #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2711, "favorite_count": 8186, "source": "TweetDeck", "id_str": "757774948928720896", "is_retweet": false}, {"created_at": "Fri Mar 11 03:48:14 +0000 2016", "text": "Fomentar la violencia contra manifestantes y miembros de la prensa en tus eventos es una desgracia. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 583, "favorite_count": 1153, "source": "TweetDeck", "id_str": "708137431074213889", "is_retweet": false}, {"created_at": "Tue Feb 02 04:39:48 +0000 2016", "text": "RT if you're on her side all the way to the White House. #ImWithHer https://t.co/999MCSDGsF", "in_reply_to_screen_name": null, "retweet_count": 7859, "favorite_count": 7790, "source": "TweetDeck", "id_str": "694379667730649088", "is_retweet": false}, {"created_at": "Wed Sep 07 22:57:46 +0000 2016", "text": "Tonight, Americans will hear what Trump would do as Commander-in-Chief.\n\nHere are 5 reasons he's unfit for the job: https://t.co/1SfNIW8Y3Q", "in_reply_to_screen_name": null, "retweet_count": 1096, "favorite_count": 2260, "source": "TweetDeck", "id_str": "773656536723980288", "is_retweet": false}, {"created_at": "Fri Jul 15 15:15:13 +0000 2016", "text": "If you had any doubts about Trump sticking with his dangerous plan for America, say hello to his VP pick. https://t.co/xuFClfZeLi", "in_reply_to_screen_name": null, "retweet_count": 10431, "favorite_count": 13879, "source": "TweetDeck", "id_str": "753971186820870144", "is_retweet": false}, {"created_at": "Wed Jun 01 14:15:10 +0000 2016", "text": "Trump University's own employees described it as a \"scam.\u201d https://t.co/xDeDI1sPpR https://t.co/qA2MtslUVs", "in_reply_to_screen_name": null, "retweet_count": 1194, "favorite_count": 2146, "source": "TweetDeck", "id_str": "738011007256137729", "is_retweet": false}, {"created_at": "Thu Jul 28 23:23:39 +0000 2016", "text": "RT @HFA: \"I'm living through history, and my mom and my grandma are finally getting to see it as well.\" \u2014Ebony, 21, NC https://t.co/BKe7Ytw\u2026", "in_reply_to_screen_name": null, "retweet_count": 1022, "favorite_count": 0, "source": "TweetDeck", "id_str": "758805145190707200", "is_retweet": true}, {"created_at": "Mon Feb 01 18:18:26 +0000 2016", "text": "Hillary is \"one of the finest Secretary of States we've had.\" \u2014@POTUS\nhttps://t.co/hl6fBFBBRb", "in_reply_to_screen_name": null, "retweet_count": 815, "favorite_count": 1491, "source": "Twitter Web Client", "id_str": "694223294401114112", "is_retweet": false}, {"created_at": "Thu Mar 10 22:58:48 +0000 2016", "text": "A look at the backward views on LGBT rights, women, and health care held by all of the remaining GOP candidates: https://t.co/fhLh5jOcGB", "in_reply_to_screen_name": null, "retweet_count": 875, "favorite_count": 1420, "source": "TweetDeck", "id_str": "708064592648409088", "is_retweet": false}, {"created_at": "Tue Nov 08 13:23:33 +0000 2016", "text": "RT @timkaine: I wanted to be first at my polling place, but 99-year-old Minerva Turpin beat me to it. Looks like I need to get used to bein\u2026", "in_reply_to_screen_name": null, "retweet_count": 26191, "favorite_count": 0, "source": "TweetDeck", "id_str": "795980075917344769", "is_retweet": true}, {"created_at": "Fri Sep 16 19:05:35 +0000 2016", "text": ".@FLOTUS is on the trail for Hillary. Tune in to watch her live from Virginia: https://t.co/PhnJJoDmPD", "in_reply_to_screen_name": null, "retweet_count": 576, "favorite_count": 1947, "source": "TweetDeck", "id_str": "776859596824711168", "is_retweet": false}, {"created_at": "Fri Oct 14 02:01:53 +0000 2016", "text": "\"We can save our planet while creating millions of clean energy jobs.\" \u2014Hillary\n\nHere's how: https://t.co/NynHbi0UsK https://t.co/xyhWMFRN6c", "in_reply_to_screen_name": null, "retweet_count": 3234, "favorite_count": 8367, "source": "Media Studio", "id_str": "786748833443090433", "is_retweet": false}, {"created_at": "Mon Sep 05 23:41:10 +0000 2016", "text": "RT @TheBriefing2016: While the Clinton Foundation receives high marks, Trump's is fined for a pay-to-play scheme https://t.co/RBfz9qQ1Vp ht\u2026", "in_reply_to_screen_name": null, "retweet_count": 2448, "favorite_count": 0, "source": "TweetDeck", "id_str": "772942682570317828", "is_retweet": true}, {"created_at": "Thu Jul 28 03:12:40 +0000 2016", "text": "\u201cThere has never been a man or a woman more qualified than Hillary Clinton to serve as president of the United States of America.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 3411, "favorite_count": 8114, "source": "TweetDeck", "id_str": "758500391730483204", "is_retweet": false}, {"created_at": "Thu Oct 20 20:48:13 +0000 2016", "text": "\"Don\u2019t fall for the easy cynicism that your vote doesn\u2019t matter\u2026that\u2019s what Hillary's opponent wants you to think.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 593, "favorite_count": 1527, "source": "TweetDeck", "id_str": "789206611764060160", "is_retweet": false}, {"created_at": "Sun Feb 21 21:29:01 +0000 2016", "text": "What did Hillary do right after winning Nevada? Headed to Texas to defend voting rights. https://t.co/x7MvEQxuZ5 https://t.co/wbygxjARxm", "in_reply_to_screen_name": null, "retweet_count": 702, "favorite_count": 1482, "source": "TweetDeck", "id_str": "701519014007275521", "is_retweet": false}, {"created_at": "Thu Mar 31 18:10:29 +0000 2016", "text": "Wouldn\u2019t want to face these women on the field or in the courtroom. Every woman deserves equal pay. https://t.co/RBuAFtgpDS", "in_reply_to_screen_name": null, "retweet_count": 3416, "favorite_count": 7731, "source": "TweetDeck", "id_str": "715602178619080708", "is_retweet": false}, {"created_at": "Tue Sep 27 00:51:15 +0000 2016", "text": "Let's do this. #DebateNight https://t.co/NkPEGHzucT", "in_reply_to_screen_name": null, "retweet_count": 23499, "favorite_count": 78998, "source": "TweetDeck", "id_str": "780570465681235968", "is_retweet": false}, {"created_at": "Sun Jul 24 13:52:56 +0000 2016", "text": "Trump, translated:\n\n\u2713Build the wall\n\u2713Add $34 trillion to the national debt\n\u2713Revoke 20 million Americans' insurance https://t.co/kg4Asx4SCx", "in_reply_to_screen_name": null, "retweet_count": 1779, "favorite_count": 3427, "source": "TweetDeck", "id_str": "757211968541450240", "is_retweet": false}, {"created_at": "Thu Oct 20 21:21:39 +0000 2016", "text": "\"In this race, we have a candidate whose vision for our country is completely and utterly lacking in hope.\" \u2014@FLOTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 554, "favorite_count": 1540, "source": "TweetDeck", "id_str": "789215024015343617", "is_retweet": false}, {"created_at": "Wed Oct 12 18:32:11 +0000 2016", "text": "RT @Peter_J_K: It's official: If Trump releases his tax returns veterans will get $6M+. Has he even paid taxes in the last 18 years? We des\u2026", "in_reply_to_screen_name": null, "retweet_count": 3518, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786273275168948225", "is_retweet": true}, {"created_at": "Mon Jun 27 17:18:25 +0000 2016", "text": "A great day to hit the campaign trail in Ohio with @ElizabethForMA. https://t.co/VizBSUNMxg", "in_reply_to_screen_name": null, "retweet_count": 1926, "favorite_count": 6507, "source": "TweetDeck", "id_str": "747479209371701248", "is_retweet": false}, {"created_at": "Tue Jul 26 21:55:43 +0000 2016", "text": "\u201cThis one\u2019s for you, Hill.\u201d #WeMadeHistory https://t.co/Iq24zuhybS", "in_reply_to_screen_name": null, "retweet_count": 2106, "favorite_count": 6069, "source": "TweetDeck", "id_str": "758058242790555648", "is_retweet": false}, {"created_at": "Fri Apr 15 02:37:29 +0000 2016", "text": "At the #DemDebate, we agree we need universal health care. That\u2019s why Hillary\u2019s been fighting for it for 20+ years. https://t.co/2MkXwHW2jF", "in_reply_to_screen_name": null, "retweet_count": 1651, "favorite_count": 4785, "source": "TweetDeck", "id_str": "720803199909801985", "is_retweet": false}, {"created_at": "Fri Jun 10 22:28:38 +0000 2016", "text": "\"She\u2019s a fighter. She\u2019s out there. She\u2019s tough.\" \u2014@elizabethforma on Hillary: https://t.co/ikejtwl4LW https://t.co/4xMRsOsnSh", "in_reply_to_screen_name": null, "retweet_count": 1569, "favorite_count": 4747, "source": "TweetDeck", "id_str": "741396683360239616", "is_retweet": false}, {"created_at": "Fri Mar 18 22:56:26 +0000 2016", "text": "Hillary Clinton ha luchado por la reforma migratoria por a\u00f1os\u2014y no va a parar ahora. Ve el video:\nhttps://t.co/elnZgUjt69", "in_reply_to_screen_name": null, "retweet_count": 916, "favorite_count": 1711, "source": "Twitter Web Client", "id_str": "710963099793100800", "is_retweet": false}, {"created_at": "Tue Nov 08 02:11:52 +0000 2016", "text": "\"I am betting that tomorrow, you will reject fear, and you'll choose hope.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1935, "favorite_count": 4472, "source": "TweetDeck", "id_str": "795811042819473408", "is_retweet": false}, {"created_at": "Thu Jul 28 22:20:04 +0000 2016", "text": "RT @timkaine: It was the honor of my life to accept the Democratic nomination for vice president. I won't let you down. https://t.co/91PGJK\u2026", "in_reply_to_screen_name": null, "retweet_count": 3071, "favorite_count": 0, "source": "TweetDeck", "id_str": "758789145615478784", "is_retweet": true}, {"created_at": "Mon Oct 10 19:46:35 +0000 2016", "text": "\"We\u2019re going to make public colleges like Wayne State tuition-free for working families.\u201d \u2014Hillary in Detroit https://t.co/P5fIYT0kHQ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 972, "favorite_count": 3350, "source": "TweetDeck", "id_str": "785567223729557504", "is_retweet": false}, {"created_at": "Sun Sep 11 01:07:43 +0000 2016", "text": "Remember: If he becomes president, Donald Trump would have the U.S. economy in his hands. https://t.co/y0bY1efHwL https://t.co/l93i7QWXPo", "in_reply_to_screen_name": null, "retweet_count": 6176, "favorite_count": 9961, "source": "TweetDeck", "id_str": "774776399899070464", "is_retweet": false}, {"created_at": "Thu Jul 21 15:28:35 +0000 2016", "text": "\"If I were in charge, they would know...waterboarding is how we'd baptize terrorists.\" \u2014Sarah Palin, Trump supporter https://t.co/IZamSzbE7q", "in_reply_to_screen_name": null, "retweet_count": 1246, "favorite_count": 2117, "source": "TweetDeck", "id_str": "756148877888217088", "is_retweet": false}, {"created_at": "Sun Oct 09 22:53:19 +0000 2016", "text": "\"We urge voters to dump Trump and choose the clearly qualified candidate in this race: Hillary Clinton\u201d \u2014@DenverPost https://t.co/bpbgC5VhYV", "in_reply_to_screen_name": null, "retweet_count": 2368, "favorite_count": 6515, "source": "TweetDeck", "id_str": "785251827117940736", "is_retweet": false}, {"created_at": "Thu Oct 13 01:13:46 +0000 2016", "text": "We have to win this election.", "in_reply_to_screen_name": null, "retweet_count": 15644, "favorite_count": 55698, "source": "TweetDeck", "id_str": "786374334705233925", "is_retweet": false}, {"created_at": "Sun May 15 19:13:08 +0000 2016", "text": "\"What can we do for women that doesn't make them a liability because they're pregnant?\"\nhttps://t.co/efpa6w3KOG", "in_reply_to_screen_name": null, "retweet_count": 1631, "favorite_count": 3712, "source": "Twitter Web Client", "id_str": "731925398364151808", "is_retweet": false}, {"created_at": "Sat May 07 00:50:09 +0000 2016", "text": "@JLo thanks for this. Women are so much more than the roles they've been assigned. -H", "in_reply_to_screen_name": "JLo", "retweet_count": 1774, "favorite_count": 3585, "source": "Twitter Web Client", "id_str": "728748722138533888", "is_retweet": false}, {"created_at": "Tue Apr 19 23:52:16 +0000 2016", "text": "A couple of New Yorkers heading to the polls. #PrimaryDay\nhttps://t.co/NWLHCzykyU", "in_reply_to_screen_name": null, "retweet_count": 669, "favorite_count": 1955, "source": "Twitter Web Client", "id_str": "722573561265659906", "is_retweet": false}, {"created_at": "Mon Sep 19 00:24:51 +0000 2016", "text": "\"Progress is on the ballot.\nTolerance is on the ballot.\nDemocracy is on the ballot.\nJustice is on the ballot.\" https://t.co/Mmyqestken", "in_reply_to_screen_name": null, "retweet_count": 13024, "favorite_count": 24903, "source": "Twitter Web Client", "id_str": "777664718848745473", "is_retweet": false}, {"created_at": "Thu Jul 28 02:56:26 +0000 2016", "text": "\"Twelve years ago tonight, I addressed this convention for the very first time.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 828, "favorite_count": 3281, "source": "TweetDeck", "id_str": "758496306784563200", "is_retweet": false}, {"created_at": "Wed Sep 28 21:13:54 +0000 2016", "text": "\"The president commands our nuclear arsenal. Trump can\u2019t command his own rhetoric.\" \u2014@azcentral https://t.co/n3GOmEin4N", "in_reply_to_screen_name": null, "retweet_count": 2926, "favorite_count": 6528, "source": "TweetDeck", "id_str": "781240540952162304", "is_retweet": false}, {"created_at": "Thu Oct 13 16:52:17 +0000 2016", "text": "\u201cHillary Clinton has never quit on anything in her life.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 705, "favorite_count": 1720, "source": "TweetDeck", "id_str": "786610521239855104", "is_retweet": false}, {"created_at": "Mon Nov 07 02:29:09 +0000 2016", "text": "RT @AdamSmith_usa: Hillary passed Obama in total black voters who participated in Early Voting in Florida. \n\n2012: 539,000\n2016: 564,000 (n\u2026", "in_reply_to_screen_name": null, "retweet_count": 6379, "favorite_count": 0, "source": "TweetDeck", "id_str": "795453002140229633", "is_retweet": true}, {"created_at": "Wed Sep 14 16:28:23 +0000 2016", "text": "2. How will you handle non-cancelable contractual obligations with parties whose interests conflict with those of the United States?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3038, "favorite_count": 5166, "source": "TweetDeck", "id_str": "776095260153872385", "is_retweet": false}, {"created_at": "Sun Feb 28 21:46:16 +0000 2016", "text": "America never stopped being great. When we're all in this together, there\u2019s no barrier that can hold us back.\nhttps://t.co/uq6gIxbVu5", "in_reply_to_screen_name": null, "retweet_count": 1484, "favorite_count": 3115, "source": "Twitter Web Client", "id_str": "704060072230412288", "is_retweet": false}, {"created_at": "Wed Nov 09 16:45:42 +0000 2016", "text": "\"Our responsibility as citizens is to keep doing our part to build that better, stronger, fairer America we seek. And I know you will.\u201d", "in_reply_to_screen_name": null, "retweet_count": 21393, "favorite_count": 71406, "source": "TweetDeck", "id_str": "796393337712443392", "is_retweet": false}, {"created_at": "Wed Jun 29 18:32:49 +0000 2016", "text": "From Iowa to California, the primary's taken us to nearly every state in the country. https://t.co/NjgDvedzYm", "in_reply_to_screen_name": null, "retweet_count": 619, "favorite_count": 2000, "source": "TweetDeck", "id_str": "748222709029543936", "is_retweet": false}, {"created_at": "Thu Jul 28 03:03:33 +0000 2016", "text": "\u201cThis is not your typical election\u2026this is a more fundamental choice about...whether we stay true to this great American experiment\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1620, "favorite_count": 5312, "source": "TweetDeck", "id_str": "758498099581054976", "is_retweet": false}, {"created_at": "Tue Oct 25 19:00:58 +0000 2016", "text": "We believe that no matter what you look like or where your parents were born or who you love, you have the right to be treated equally.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1044, "favorite_count": 2279, "source": "TweetDeck", "id_str": "790991558225104897", "is_retweet": false}, {"created_at": "Tue Jul 19 02:19:33 +0000 2016", "text": "Trump took over $100,000 from emergency 9/11 funds for small businesses\u2014for his swanky Wall Street property. https://t.co/fToO6xAchz", "in_reply_to_screen_name": null, "retweet_count": 2960, "favorite_count": 3747, "source": "TweetDeck", "id_str": "755225535073124352", "is_retweet": false}, {"created_at": "Thu Jul 28 01:20:47 +0000 2016", "text": "\u201cHe says he cares about the middle class?\nGive me a break. \n\nThat\u2019s a bunch of malarkey.\" \u2014@JoeBiden on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 2620, "favorite_count": 6672, "source": "TweetDeck", "id_str": "758472237326434305", "is_retweet": false}, {"created_at": "Tue Sep 27 17:35:08 +0000 2016", "text": "Join Hillary live in NC for her first rally since winning last night's debate \u2192 https://t.co/DzEpIDf7HY #NationalVoterRegistrationDay", "in_reply_to_screen_name": null, "retweet_count": 1252, "favorite_count": 4577, "source": "TweetDeck", "id_str": "780823097498796034", "is_retweet": false}, {"created_at": "Fri Oct 21 01:44:08 +0000 2016", "text": "\"I believe that for each of us, our greatest monument on this earth won\u2019t be what we build, but the lives we touch.\" \u2014Hillary #AlSmithDinner", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3337, "favorite_count": 9360, "source": "TweetDeck", "id_str": "789281081124061184", "is_retweet": false}, {"created_at": "Thu Jul 21 16:27:06 +0000 2016", "text": "Now we know what Trump really thinks about us. Sad! https://t.co/o3ohaHfR77 #TrumpYourself https://t.co/rYYXMCLjyr", "in_reply_to_screen_name": null, "retweet_count": 779, "favorite_count": 1930, "source": "TweetDeck", "id_str": "756163604379013120", "is_retweet": false}, {"created_at": "Fri Jul 29 02:47:37 +0000 2016", "text": "\"It is with humility, determination, and boundless confidence in America\u2019s promise that I accept your nomination for president!\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 7686, "favorite_count": 18502, "source": "TweetDeck", "id_str": "758856475011715072", "is_retweet": false}, {"created_at": "Wed Nov 09 16:42:21 +0000 2016", "text": "\"This is not the outcome we wanted. I\u2019m sorry we did not win this election for the values we share and the vision we hold for our country.\"", "in_reply_to_screen_name": null, "retweet_count": 26880, "favorite_count": 79169, "source": "TweetDeck", "id_str": "796392494435102722", "is_retweet": false}, {"created_at": "Tue Jan 05 17:19:11 +0000 2016", "text": ".@POTUS is right: We can protect the Second Amendment while protecting our families and communities from gun violence. And we have to.", "in_reply_to_screen_name": null, "retweet_count": 2290, "favorite_count": 4647, "source": "TweetDeck", "id_str": "684423913863000065", "is_retweet": false}, {"created_at": "Wed Oct 05 19:35:01 +0000 2016", "text": "RT @TheAtlantic: The Atlantic endorses Hillary Clinton for president https://t.co/Vo9WPam4d8 https://t.co/WEuHNoaDCs", "in_reply_to_screen_name": null, "retweet_count": 2339, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783752373734899713", "is_retweet": true}, {"created_at": "Fri May 20 00:04:29 +0000 2016", "text": "If you cite supporting torture and hosting pageants as foreign policy \"qualifications,\" your definition needs work. https://t.co/3JbmzuxEK5", "in_reply_to_screen_name": null, "retweet_count": 2412, "favorite_count": 4536, "source": "TweetDeck", "id_str": "733448272359129088", "is_retweet": false}, {"created_at": "Fri Jan 29 03:05:27 +0000 2016", "text": "Trump isn\u2019t the only candidate missing from the #GOPdebate stage tonight. So is anyone who would protect DACA and DAPA.", "in_reply_to_screen_name": null, "retweet_count": 287, "favorite_count": 674, "source": "TweetDeck", "id_str": "692906373366030337", "is_retweet": false}, {"created_at": "Sat Jul 16 23:10:11 +0000 2016", "text": "La pr\u00f3xima semana, los republicanos nominar\u00e1n a alguien que piensa que una campa\u00f1a para la comunidad latina es tuitear un 'taco bowl'.", "in_reply_to_screen_name": null, "retweet_count": 1249, "favorite_count": 2490, "source": "Twitter Web Client", "id_str": "754453102837764096", "is_retweet": false}, {"created_at": "Mon Jan 18 03:21:46 +0000 2016", "text": "We need a president with the experience and expertise to lead in the world and keep America safe. That's Hillary. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 752, "favorite_count": 1653, "source": "TweetDeck", "id_str": "688924213256810500", "is_retweet": false}, {"created_at": "Sat May 21 12:37:24 +0000 2016", "text": "Too many moms have to go back to work too soon after giving birth.\nhttps://t.co/aYxAdmuSAJ", "in_reply_to_screen_name": null, "retweet_count": 1283, "favorite_count": 3035, "source": "Twitter Web Client", "id_str": "734000138549481475", "is_retweet": false}, {"created_at": "Sun Jun 05 17:04:43 +0000 2016", "text": "\u00a1Puerto Rico! Hoy es tu d\u00eda de ir a votar por Hillary. Comparte esto y d\u00e9jale saber a tus amigos: #EstoyConElla. https://t.co/0hjWISk8uR", "in_reply_to_screen_name": null, "retweet_count": 827, "favorite_count": 2075, "source": "TweetDeck", "id_str": "739503226987372544", "is_retweet": false}, {"created_at": "Tue Sep 13 00:59:58 +0000 2016", "text": "Young people say two things:\n\u2713 College is too expensive\n\u2713 Student debt is crushing them\n\nWe\u2019re going to help them: https://t.co/WFCeDBZNxS", "in_reply_to_screen_name": null, "retweet_count": 2510, "favorite_count": 7725, "source": "TweetDeck", "id_str": "775499225413148672", "is_retweet": false}, {"created_at": "Sun Jun 19 20:36:37 +0000 2016", "text": "What a joy being with our new grandson, Aidan. So grateful. -H https://t.co/0687tOERez", "in_reply_to_screen_name": null, "retweet_count": 5309, "favorite_count": 33469, "source": "TweetDeck", "id_str": "744629982757064705", "is_retweet": false}, {"created_at": "Thu Nov 17 00:15:53 +0000 2016", "text": "Looking forward to honoring some brave young people tonight at @ChildDefender where I started my career. Tune in: https://t.co/4gmaM2A9Dx -H", "in_reply_to_screen_name": null, "retweet_count": 8111, "favorite_count": 58771, "source": "Twitter for iPhone", "id_str": "799043343275753472", "is_retweet": false}, {"created_at": "Tue Aug 30 13:53:14 +0000 2016", "text": "Big victory from the @NLRB for workers' right to organize for fair wages and benefits. https://t.co/GKkVTWm6S6 https://t.co/VfXv3kTGBC", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 2216, "source": "TweetDeck", "id_str": "770620397276524544", "is_retweet": false}, {"created_at": "Tue Nov 08 22:54:21 +0000 2016", "text": "Election Day is almost over. Don\u2019t wait\u2014go vote now! \nConfirm where you vote at https://t.co/jfd3CXLD1s https://t.co/IvyE2hJFEU", "in_reply_to_screen_name": null, "retweet_count": 4334, "favorite_count": 12203, "source": "TweetDeck", "id_str": "796123724479164416", "is_retweet": false}, {"created_at": "Fri Sep 16 00:57:55 +0000 2016", "text": "Supporting families with paid family leave, earned sick days, and affordable child care isn\u2019t a luxury\u2014it\u2019s a necessity.", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 3993, "source": "TweetDeck", "id_str": "776585875207643136", "is_retweet": false}, {"created_at": "Wed Nov 09 16:47:31 +0000 2016", "text": "\"To Bill, Chelsea, Marc, Charlotte, Aidan, our brothers, and our entire family\u2014my love for you means more than I can ever express.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 9147, "favorite_count": 58994, "source": "TweetDeck", "id_str": "796393795965304833", "is_retweet": false}, {"created_at": "Tue Jan 05 17:13:19 +0000 2016", "text": "Thank you, @POTUS, for taking a crucial step forward on gun violence. Our next president has to build on that progress\u2014not rip it away. -H", "in_reply_to_screen_name": null, "retweet_count": 3640, "favorite_count": 7945, "source": "TweetDeck", "id_str": "684422434859184128", "is_retweet": false}, {"created_at": "Wed Aug 17 17:34:40 +0000 2016", "text": "Watch live: Hillary\u2019s speaking in Cleveland about building an economy that works for everyone \u2192 https://t.co/EsqAmcnrnC", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 2169, "source": "TweetDeck", "id_str": "765965080974487552", "is_retweet": false}, {"created_at": "Fri Feb 19 22:17:12 +0000 2016", "text": "Do all the good you can, for all the people you can, for as long as you can.\nhttps://t.co/D8hhVm8KFY", "in_reply_to_screen_name": null, "retweet_count": 1508, "favorite_count": 2485, "source": "Twitter Web Client", "id_str": "700806367267848193", "is_retweet": false}, {"created_at": "Wed Aug 17 17:36:19 +0000 2016", "text": "We\u2019ve got to get the economy working for everybody, not just those at the top. Too many families are feeling financial stress.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 490, "favorite_count": 1324, "source": "TweetDeck", "id_str": "765965494998462464", "is_retweet": false}, {"created_at": "Mon Jun 13 17:34:01 +0000 2016", "text": "The terrorist in Orlando targeted LGBT Americans out of hatred and bigotry. \n\nAn attack on any American is an attack on all Americans.", "in_reply_to_screen_name": null, "retweet_count": 2965, "favorite_count": 8177, "source": "TweetDeck", "id_str": "742409706359119872", "is_retweet": false}, {"created_at": "Mon Oct 10 01:34:06 +0000 2016", "text": "RT @TheBriefing2016: FACT: Trump's health care plans would take health insurance away from 21 million Americans. #debate https://t.co/XzpoV\u2026", "in_reply_to_screen_name": null, "retweet_count": 2627, "favorite_count": 0, "source": "TweetDeck", "id_str": "785292291300810754", "is_retweet": true}, {"created_at": "Tue Apr 05 14:38:29 +0000 2016", "text": "\u201cI miss my son more than I can convey...I will never stop fighting for justice. Neither will Hillary Clinton.\u201d https://t.co/J2Nhp1n5dc", "in_reply_to_screen_name": null, "retweet_count": 683, "favorite_count": 1450, "source": "TweetDeck", "id_str": "717360768551895042", "is_retweet": false}, {"created_at": "Thu Jun 09 15:45:10 +0000 2016", "text": "This Oakland entrepreneur is doing more than running a small business\u2014he's changing lives.\nhttps://t.co/2g47l5hjDX", "in_reply_to_screen_name": null, "retweet_count": 1353, "favorite_count": 3687, "source": "Twitter Web Client", "id_str": "740932760550903808", "is_retweet": false}, {"created_at": "Sun Apr 17 16:15:32 +0000 2016", "text": "\u201cMuchos neoyorquinos luchan por pagar la renta ... y las familias latinas y afroamericanas son las m\u00e1s afectadas\u201d. https://t.co/iUuLn5I5Un", "in_reply_to_screen_name": null, "retweet_count": 419, "favorite_count": 838, "source": "TweetDeck", "id_str": "721733846920740864", "is_retweet": false}, {"created_at": "Fri Jun 03 20:53:07 +0000 2016", "text": "It\u2019s not hard to imagine @realDonaldTrump leading us into a war just because somebody got under his very thin skin. https://t.co/2NLg1HtvVD", "in_reply_to_screen_name": null, "retweet_count": 2300, "favorite_count": 4727, "source": "TweetDeck", "id_str": "738835931898257408", "is_retweet": false}, {"created_at": "Mon Oct 10 01:24:02 +0000 2016", "text": "RT @timkaine: Trust me; what we\u2019re hearing from Donald isn\u2019t just \u201clocker room\u201d talk\u2014it\u2019s demeaning, and it\u2019s wrong. #Debate", "in_reply_to_screen_name": null, "retweet_count": 3449, "favorite_count": 0, "source": "TweetDeck", "id_str": "785289756078903296", "is_retweet": true}, {"created_at": "Wed Feb 03 02:41:25 +0000 2016", "text": "With her historic win at the Iowa caucuses, Hillary just accomplished what no woman ever has before. https://t.co/GvAXGlUXVM", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 2718, "source": "TweetDeck", "id_str": "694712263735910400", "is_retweet": false}, {"created_at": "Sat Jul 23 17:16:10 +0000 2016", "text": "\u201cIn Philadelphia, we\u2019ll offer a very different vision for our country. One that is about building bridges, not walls.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1540, "favorite_count": 4318, "source": "TweetDeck", "id_str": "756900726115299328", "is_retweet": false}, {"created_at": "Wed Mar 30 22:49:13 +0000 2016", "text": "Women, especially low-income women and women of color, are already being punished by GOP-led efforts to stigmatize and restrict health care.", "in_reply_to_screen_name": null, "retweet_count": 1945, "favorite_count": 4338, "source": "TweetDeck", "id_str": "715309937958719489", "is_retweet": false}, {"created_at": "Wed Mar 30 18:01:52 +0000 2016", "text": "Let\u2019s have each other\u2019s backs, lift each other up, and break down all the barriers holding us back.\nhttps://t.co/kOfYYL0DTs", "in_reply_to_screen_name": null, "retweet_count": 1525, "favorite_count": 3381, "source": "Twitter Web Client", "id_str": "715237624290488320", "is_retweet": false}, {"created_at": "Tue Oct 25 03:45:42 +0000 2016", "text": "RT @smrtgrls: \"Her life proves that she has always believed that public service is 1st &amp; foremost about service.\" -@ChelseaClinton https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 974, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "790761224715862016", "is_retweet": true}, {"created_at": "Mon Feb 01 15:01:16 +0000 2016", "text": "Today is the #IAcaucus! RT to say #ImWithHer, and make sure your friends and family know where to caucus at 6:30 pm: https://t.co/IgZs5Csol3", "in_reply_to_screen_name": null, "retweet_count": 3073, "favorite_count": 5987, "source": "Thunderclap", "id_str": "694173676535693312", "is_retweet": false}, {"created_at": "Mon Feb 29 16:19:23 +0000 2016", "text": "Why has Hillary received the endorsements of so many papers that backed @POTUS? She gets things done. https://t.co/nlIgA3FqnI", "in_reply_to_screen_name": null, "retweet_count": 595, "favorite_count": 1266, "source": "TweetDeck", "id_str": "704340195047575552", "is_retweet": false}, {"created_at": "Thu Oct 06 19:05:14 +0000 2016", "text": "Every child, no matter their background or what zip code they live in, has the right to a high-quality education. https://t.co/bmPfuo7CY5", "in_reply_to_screen_name": null, "retweet_count": 1756, "favorite_count": 5080, "source": "TweetDeck", "id_str": "784107265758486528", "is_retweet": false}, {"created_at": "Tue Sep 27 02:13:57 +0000 2016", "text": "What is the deal with Donald Trump and Russia? https://t.co/xUYxOdoYo3 #debatenight", "in_reply_to_screen_name": null, "retweet_count": 2514, "favorite_count": 4872, "source": "TweetDeck", "id_str": "780591277620551680", "is_retweet": false}, {"created_at": "Sun Apr 24 19:05:04 +0000 2016", "text": "Not interested in endorsements from people who deny climate science and try to make it harder for people to vote. https://t.co/TWN4zYhMBh", "in_reply_to_screen_name": null, "retweet_count": 4447, "favorite_count": 8566, "source": "TweetDeck", "id_str": "724313224305360896", "is_retweet": false}, {"created_at": "Tue Jun 28 20:45:21 +0000 2016", "text": "Pat Summitt's record is legendary. Her work ethic\u2014second to none. We need exactly that kind of commitment to end Alzheimer's. -H", "in_reply_to_screen_name": null, "retweet_count": 2194, "favorite_count": 7548, "source": "TweetDeck", "id_str": "747893672885248009", "is_retweet": false}, {"created_at": "Tue Nov 08 01:41:50 +0000 2016", "text": "\u201cNo matter what came along, no matter what they hit her with \u2026 no matter what happened, she said, \u2018We\u2019re stronger together.\u2019\u201d \u2014@BillClinton", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 957, "favorite_count": 2337, "source": "TweetDeck", "id_str": "795803485174427650", "is_retweet": false}, {"created_at": "Sun Oct 30 18:02:08 +0000 2016", "text": "With just 9 days until Election Day, Hillary is campaigning in Florida. Tune in to watch her live: https://t.co/dkg7pwiNMt", "in_reply_to_screen_name": null, "retweet_count": 1406, "favorite_count": 5366, "source": "TweetDeck", "id_str": "792788692876296192", "is_retweet": false}, {"created_at": "Wed May 11 19:40:30 +0000 2016", "text": "Donald Trump's tax plan:\n1. Cut taxes for the wealthiest Americans\n2. Saddle the rest of the country with the debt\nhttps://t.co/xL95NA3Ofn", "in_reply_to_screen_name": null, "retweet_count": 1040, "favorite_count": 1534, "source": "TweetDeck", "id_str": "730482734666256385", "is_retweet": false}, {"created_at": "Wed Apr 20 02:21:28 +0000 2016", "text": "We did it, New York! Watch Hillary live: https://t.co/7zMQ8wFXD4", "in_reply_to_screen_name": null, "retweet_count": 689, "favorite_count": 2154, "source": "TweetDeck", "id_str": "722611110311014404", "is_retweet": false}, {"created_at": "Tue Nov 08 16:59:17 +0000 2016", "text": "RT @aliciakeys: This morning, I woke up feeling hopeful for the power of our voice, for unity, for our continued progress. #VoteLove #ImWit\u2026", "in_reply_to_screen_name": null, "retweet_count": 10782, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796034365696446464", "is_retweet": true}, {"created_at": "Fri Jul 29 02:33:10 +0000 2016", "text": "\u201cWe heard the man from Hope, Bill Clinton.\n\nAnd the man of hope, Barack Obama.\u201d \u2014Hillary https://t.co/vH9fNuJQFP", "in_reply_to_screen_name": null, "retweet_count": 3976, "favorite_count": 13882, "source": "TweetDeck", "id_str": "758852840580276225", "is_retweet": false}, {"created_at": "Sat Sep 03 14:06:22 +0000 2016", "text": "Donald Trump's pattern of prejudice and discrimination started long before he was a presidential candidate. https://t.co/fTUwCuRkVv", "in_reply_to_screen_name": null, "retweet_count": 3541, "favorite_count": 6038, "source": "TweetDeck", "id_str": "772073250561986560", "is_retweet": false}, {"created_at": "Mon Jan 18 14:04:02 +0000 2016", "text": "We can\u2019t afford to undo @POTUS\u2019 progress. Health care for millions of Americans is too important. https://t.co/mdt5rTDsNN", "in_reply_to_screen_name": null, "retweet_count": 578, "favorite_count": 1543, "source": "Twitter for iPhone", "id_str": "689085842346917889", "is_retweet": false}, {"created_at": "Thu Jul 28 00:36:45 +0000 2016", "text": "RT @timkaine: What matters in politics is if you can deliver results\u2014and Hillary gets results. Grateful for the chance to serve.\nhttps://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1165, "favorite_count": 0, "source": "TweetDeck", "id_str": "758461156805582848", "is_retweet": true}, {"created_at": "Tue Oct 11 19:38:17 +0000 2016", "text": "Our next president will either step up our efforts to address climate change or drag us backward and put our whole future at risk.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 687, "favorite_count": 1667, "source": "TweetDeck", "id_str": "785927521414021120", "is_retweet": false}, {"created_at": "Mon Feb 22 00:37:48 +0000 2016", "text": "Behind the scenes *right* after our win in Nevada.\nhttps://t.co/pIOCKkXxg8", "in_reply_to_screen_name": null, "retweet_count": 746, "favorite_count": 1928, "source": "Twitter Web Client", "id_str": "701566522259419136", "is_retweet": false}, {"created_at": "Sat Feb 20 22:34:29 +0000 2016", "text": "Together, we can win the nomination and keep working to break every barrier holding Americans back. Chip in now: https://t.co/KGCGiAS19S", "in_reply_to_screen_name": null, "retweet_count": 761, "favorite_count": 1876, "source": "TweetDeck", "id_str": "701173100596092928", "is_retweet": false}, {"created_at": "Tue May 03 02:06:11 +0000 2016", "text": "When it comes to love and kindness, @AndraDayMusic puts it best.\nhttps://t.co/tN1crd3QbP", "in_reply_to_screen_name": null, "retweet_count": 845, "favorite_count": 1865, "source": "Twitter Web Client", "id_str": "727318303065034753", "is_retweet": false}, {"created_at": "Wed Mar 02 18:35:26 +0000 2016", "text": "We need to make it easier for parents to balance work and family. https://t.co/WItFP5AcRx", "in_reply_to_screen_name": null, "retweet_count": 448, "favorite_count": 1212, "source": "TweetDeck", "id_str": "705099211285667840", "is_retweet": false}, {"created_at": "Thu Sep 08 01:19:37 +0000 2016", "text": "RT @morningmoneyben: I really can't believe I just saw a Republican nominee for president heap praise on a thuggish Russian leader while de\u2026", "in_reply_to_screen_name": null, "retweet_count": 6460, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773692233744785409", "is_retweet": true}, {"created_at": "Wed Apr 13 21:29:10 +0000 2016", "text": "\u201cSpeaking is hard for me. But come January, I want to say these two words: Madam President.\u201d \u2014@gabbygiffords\nhttps://t.co/3jsCThHOY6", "in_reply_to_screen_name": null, "retweet_count": 2562, "favorite_count": 6080, "source": "Twitter Web Client", "id_str": "720363220985229312", "is_retweet": false}, {"created_at": "Thu Aug 04 18:47:24 +0000 2016", "text": "Every week, @realDonaldTrump hits a new low. https://t.co/LBrTdE2n7v", "in_reply_to_screen_name": null, "retweet_count": 1644, "favorite_count": 4146, "source": "TweetDeck", "id_str": "761272340747550721", "is_retweet": false}, {"created_at": "Thu Feb 04 21:33:44 +0000 2016", "text": "This is what was waiting for Hillary when she arrived in NH after winning the Iowa caucus. https://t.co/bgdCqvNnFS https://t.co/wmKufGFqUn", "in_reply_to_screen_name": null, "retweet_count": 607, "favorite_count": 1773, "source": "TweetDeck", "id_str": "695359608970301442", "is_retweet": false}, {"created_at": "Tue Feb 09 15:01:05 +0000 2016", "text": "Granite Staters, today's your day. RT this to remind everyone voting today why we need Hillary in the White House. https://t.co/O7ian6LdnR", "in_reply_to_screen_name": null, "retweet_count": 1031, "favorite_count": 1227, "source": "TweetDeck", "id_str": "697072732547076096", "is_retweet": false}, {"created_at": "Sat Jul 09 18:55:50 +0000 2016", "text": "Congrats, @serenawilliams on your record-tying 22nd Grand Slam title! #Wimbledon https://t.co/MAqtFwyM0R", "in_reply_to_screen_name": null, "retweet_count": 3609, "favorite_count": 11410, "source": "Twitter for iPhone", "id_str": "751852380120027136", "is_retweet": false}, {"created_at": "Thu Jul 28 03:16:38 +0000 2016", "text": "\"She is fit and she is ready to be the next Commander-in-Chief.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 4366, "source": "TweetDeck", "id_str": "758501389425344513", "is_retweet": false}, {"created_at": "Mon Oct 10 01:16:33 +0000 2016", "text": "Trump has said that the video doesn't represent who he is. Anyone who heard it knows it's exactly who he is.\n\nBut that's not who we are.", "in_reply_to_screen_name": null, "retweet_count": 4300, "favorite_count": 12487, "source": "TweetDeck", "id_str": "785287872924573696", "is_retweet": false}, {"created_at": "Tue Jul 26 22:43:47 +0000 2016", "text": "History. https://t.co/1ayWTx8SPH", "in_reply_to_screen_name": null, "retweet_count": 30143, "favorite_count": 67906, "source": "TweetDeck", "id_str": "758070337703510018", "is_retweet": false}, {"created_at": "Sat Feb 20 23:17:34 +0000 2016", "text": "\u201cTo all my supporters out there\u2014some may have doubted us, but we never doubted each other. This one\u2019s for you.\u201d \u2014Hillary in NV", "in_reply_to_screen_name": null, "retweet_count": 900, "favorite_count": 2267, "source": "TweetDeck", "id_str": "701183946428702726", "is_retweet": false}, {"created_at": "Tue Jul 26 03:22:49 +0000 2016", "text": "\"Hillary Clinton will make an outstanding president and I am proud to stand with her tonight.\u201d \u2014@BernieSanders #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 5101, "favorite_count": 14134, "source": "TweetDeck", "id_str": "757778172205203456", "is_retweet": false}, {"created_at": "Fri Nov 04 17:51:17 +0000 2016", "text": "Trump wants to give the biggest tax breaks in history to the super-wealthy and raise taxes on the middle class.\n\nWe can't afford that.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 942, "favorite_count": 1839, "source": "TweetDeck", "id_str": "794597904409366528", "is_retweet": false}, {"created_at": "Mon Jul 18 20:46:21 +0000 2016", "text": "\"I think Hillary will go down as one of the finest secretaries of state we've had.\" \u2013@POTUS https://t.co/louCjPXhaZ", "in_reply_to_screen_name": null, "retweet_count": 1836, "favorite_count": 5039, "source": "TweetDeck", "id_str": "755141681570312192", "is_retweet": false}, {"created_at": "Sun Aug 14 20:26:30 +0000 2016", "text": "Well said, Coach Auriemma. Keep winning, @USABasketball. https://t.co/1paG3IC51b", "in_reply_to_screen_name": null, "retweet_count": 1060, "favorite_count": 3696, "source": "Twitter for iPhone", "id_str": "764921157103517700", "is_retweet": false}, {"created_at": "Wed Sep 07 23:44:02 +0000 2016", "text": "RT @timkaine: A person who trash talks our own military should never set foot in the Oval Office. https://t.co/h04p4QF1xz", "in_reply_to_screen_name": null, "retweet_count": 2820, "favorite_count": 0, "source": "TweetDeck", "id_str": "773668180355055616", "is_retweet": true}, {"created_at": "Tue Sep 27 16:54:22 +0000 2016", "text": "Hillary was the winner of the first presidential debate\u2014and newspapers across America agree. #SheWon\u2026 https://t.co/oDiUHd0eXO", "in_reply_to_screen_name": null, "retweet_count": 2892, "favorite_count": 7164, "source": "TweetDeck", "id_str": "780812840529723392", "is_retweet": false}, {"created_at": "Thu Oct 13 22:18:39 +0000 2016", "text": ".@FLOTUS just gave one of the most powerful and emotional speeches of this election. Read it here: https://t.co/UOGn3MlxVv", "in_reply_to_screen_name": null, "retweet_count": 5320, "favorite_count": 15095, "source": "TweetDeck", "id_str": "786692653970751488", "is_retweet": false}, {"created_at": "Wed Apr 13 19:00:49 +0000 2016", "text": "American women are 11 times more likely to be murdered by a gun than in any other developed nation: https://t.co/krPBaz9NsC #StopGunViolence", "in_reply_to_screen_name": null, "retweet_count": 888, "favorite_count": 1375, "source": "TweetDeck", "id_str": "720325889947475968", "is_retweet": false}, {"created_at": "Fri Jun 17 20:06:25 +0000 2016", "text": "We can't stop fighting until every LGBT American can live life freely, openly, and without fear. https://t.co/9XaF4l4n21", "in_reply_to_screen_name": null, "retweet_count": 2096, "favorite_count": 5630, "source": "TweetDeck", "id_str": "743897609186742272", "is_retweet": false}, {"created_at": "Mon Jun 27 15:08:05 +0000 2016", "text": "We'll reward companies that share profits with employees and pay a good wage. If they can do it for executives, they can do it for workers.", "in_reply_to_screen_name": null, "retweet_count": 1295, "favorite_count": 3945, "source": "TweetDeck", "id_str": "747446409796915202", "is_retweet": false}, {"created_at": "Fri Sep 30 15:05:28 +0000 2016", "text": "Trump obsessively bullies Rosie O'Donnell\u2014an accomplished actor. He insulted Kim Kardashian for her weight\u2014when she was pregnant. Pathetic.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3981, "favorite_count": 11275, "source": "TweetDeck", "id_str": "781872597969534976", "is_retweet": false}, {"created_at": "Thu Sep 08 00:49:45 +0000 2016", "text": "RT @HillaryClinton: A man who talks about our veterans and military families like this doesn't deserve to be Commander-in-Chief. https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 4060, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773684718202187776", "is_retweet": true}, {"created_at": "Sun Sep 18 22:57:36 +0000 2016", "text": "RT @timkaine: We've got 51 days left to win this thing. Make sure you're ready: https://t.co/B21QKpeiSj https://t.co/nZTkkuxtDP", "in_reply_to_screen_name": null, "retweet_count": 2552, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "777642761579270144", "is_retweet": true}, {"created_at": "Thu Sep 15 22:47:16 +0000 2016", "text": "Want to compare Hillary and Trump on transparency?\n\nWe stacked up everything they have (or haven't) released. https://t.co/rtgKLd1o5g", "in_reply_to_screen_name": null, "retweet_count": 2417, "favorite_count": 4219, "source": "TweetDeck", "id_str": "776552996947763200", "is_retweet": false}, {"created_at": "Wed Jun 22 12:03:45 +0000 2016", "text": "FACT: No major company has filed for Chapter 11 more often in the last 30 years than @realDonaldTrump's casinos. https://t.co/t4n55HQuII", "in_reply_to_screen_name": null, "retweet_count": 6709, "favorite_count": 14510, "source": "TweetDeck", "id_str": "745588079600218112", "is_retweet": false}, {"created_at": "Wed Oct 12 20:13:39 +0000 2016", "text": "27 days to go &amp; Hillary\u2019s hitting the trail in Colorado. Watch live: https://t.co/SS7vzl6huI\n\nAnd register to vote: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1071, "favorite_count": 3972, "source": "TweetDeck", "id_str": "786298809496248320", "is_retweet": false}, {"created_at": "Fri Nov 04 01:38:58 +0000 2016", "text": "The Central Park Five were exonerated. What does it say about Trump that he thinks they should still be in prison? https://t.co/Karh69ueM8", "in_reply_to_screen_name": null, "retweet_count": 7194, "favorite_count": 14982, "source": "Media Studio", "id_str": "794353211918327808", "is_retweet": false}, {"created_at": "Sun Jan 24 01:38:57 +0000 2016", "text": "51% of public school students qualify for free or reduced-cost lunch. During #PovertyAwareness Month, let's commit to raising wages.", "in_reply_to_screen_name": null, "retweet_count": 945, "favorite_count": 2138, "source": "TweetDeck", "id_str": "691072666787299328", "is_retweet": false}, {"created_at": "Wed Sep 07 19:16:09 +0000 2016", "text": "Did Trump use his charitable foundation to prevent a state attorney general from investigating his fraud? https://t.co/MZdZDzimY4", "in_reply_to_screen_name": null, "retweet_count": 2037, "favorite_count": 3506, "source": "TweetDeck", "id_str": "773600761775267840", "is_retweet": false}, {"created_at": "Wed Oct 05 01:20:43 +0000 2016", "text": "RT @TheBriefing2016: .@MoodysInvSvc:\n\nClinton's economic plans will create 10.4 million jobs. \n\nTrump's will cost almost 3.5 million. \n\nhtt\u2026", "in_reply_to_screen_name": null, "retweet_count": 811, "favorite_count": 0, "source": "TweetDeck", "id_str": "783476980264083458", "is_retweet": true}, {"created_at": "Wed Oct 26 02:10:37 +0000 2016", "text": "If a candidate begins his career running a company that discriminates against people of color, what kind of preside\u2026 https://t.co/ZeK00pl6xc", "in_reply_to_screen_name": null, "retweet_count": 4302, "favorite_count": 9741, "source": "TweetDeck", "id_str": "791099684156743680", "is_retweet": false}, {"created_at": "Mon Jun 20 15:07:38 +0000 2016", "text": "A behind-the-scenes look at a historic night. https://t.co/LXO5OmgkyL https://t.co/w06yCUfbpz", "in_reply_to_screen_name": null, "retweet_count": 821, "favorite_count": 3556, "source": "TweetDeck", "id_str": "744909578907885568", "is_retweet": false}, {"created_at": "Sun Mar 13 22:04:31 +0000 2016", "text": "Nearly a million people have chipped in to power this campaign. Here's why: https://t.co/ncSCryuaYg https://t.co/TgbnxLaMis", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 1655, "source": "TweetDeck", "id_str": "709138093920616448", "is_retweet": false}, {"created_at": "Thu Sep 29 18:30:42 +0000 2016", "text": "Let\u2019s make college tuition-free for any family whose income is $125,000 or less and debt-free for everyone. https://t.co/BnULejv7dG", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 698, "favorite_count": 1681, "source": "TweetDeck", "id_str": "781561859228958721", "is_retweet": false}, {"created_at": "Tue Aug 09 14:23:38 +0000 2016", "text": "Trump's trickle-down economic plan: big giveaways for those at the top at the expense of everyone else.\nhttps://t.co/rXg4m7ulg4", "in_reply_to_screen_name": null, "retweet_count": 2229, "favorite_count": 5727, "source": "Twitter Web Client", "id_str": "763017900449947649", "is_retweet": false}, {"created_at": "Thu Aug 25 19:20:05 +0000 2016", "text": "State regulators fined one of Trump\u2019s casinos for repeatedly removing black dealers from the floor.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1086, "favorite_count": 1876, "source": "TweetDeck", "id_str": "768890710120656896", "is_retweet": false}, {"created_at": "Tue Oct 04 15:00:10 +0000 2016", "text": "8 things you should know about @TimKaine before tonight's debate. https://t.co/bVPD6d4AD9 #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 891, "favorite_count": 2248, "source": "TweetDeck", "id_str": "783320814477279234", "is_retweet": false}, {"created_at": "Fri Sep 16 00:57:08 +0000 2016", "text": "It's wrong when Latinos are 17% of our population and hold only 2% of its wealth.\n\nWe've got to connect more Latinos with good jobs.", "in_reply_to_screen_name": null, "retweet_count": 1032, "favorite_count": 3330, "source": "TweetDeck", "id_str": "776585678356410368", "is_retweet": false}, {"created_at": "Tue Sep 13 16:59:38 +0000 2016", "text": "RT @JoeBiden: Every woman in this country deserves to be free from harm and from fear. Proud to celebrate 22 years of the Violence Against\u2026", "in_reply_to_screen_name": null, "retweet_count": 3546, "favorite_count": 0, "source": "TweetDeck", "id_str": "775740736868323328", "is_retweet": true}, {"created_at": "Thu Jul 07 01:48:10 +0000 2016", "text": "Do you want to build a strawman? https://t.co/AoeNTJOGpo", "in_reply_to_screen_name": null, "retweet_count": 20462, "favorite_count": 45434, "source": "TweetDeck", "id_str": "750868980299104256", "is_retweet": false}, {"created_at": "Sat Oct 01 20:54:56 +0000 2016", "text": "This Republican dad is struggling with the idea of his daughter growing up in a country led by Donald Trump. https://t.co/Tn3rQqJJKp", "in_reply_to_screen_name": null, "retweet_count": 2493, "favorite_count": 5981, "source": "TweetDeck", "id_str": "782322931363971072", "is_retweet": false}, {"created_at": "Tue Mar 01 18:56:35 +0000 2016", "text": "\u201cI want more Americans to believe again we are all in this together. That we are united, not divided.\u201d\nhttps://t.co/XRyeLsk53C", "in_reply_to_screen_name": null, "retweet_count": 1226, "favorite_count": 2196, "source": "Twitter Web Client", "id_str": "704742145840668672", "is_retweet": false}, {"created_at": "Wed Oct 05 01:12:38 +0000 2016", "text": "\"I can't imagine how Governor Pence can defend the insult-driven, selfish, me-first style of Donald Trump.\" \u2014@TimKaine #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 1609, "favorite_count": 4799, "source": "TweetDeck", "id_str": "783474948845305856", "is_retweet": false}, {"created_at": "Sat Oct 15 19:45:50 +0000 2016", "text": "RT @rosenbergerlm: .@HillaryClinton on disrupted terror plot in Kansas aimed at Somali community.  \"This plot is an affront to all American\u2026", "in_reply_to_screen_name": null, "retweet_count": 1930, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787378970799079424", "is_retweet": true}, {"created_at": "Mon Nov 07 01:51:07 +0000 2016", "text": "\u201cHe and his family exemplify the values that make America great.\u201d \u2014Hillary on Khizr Khan https://t.co/L6axuHYv1n", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1262, "favorite_count": 2903, "source": "TweetDeck", "id_str": "795443433582264321", "is_retweet": false}, {"created_at": "Tue Nov 08 06:08:06 +0000 2016", "text": "\"If you believe in science and that we have to act on climate change, then you have to vote!\" \u2014Hillary https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1364, "favorite_count": 3406, "source": "TweetDeck", "id_str": "795870493240913924", "is_retweet": false}, {"created_at": "Tue May 17 15:25:43 +0000 2016", "text": "Does Trump pay his fair share in taxes? As long as he keeps refusing to release his tax returns, voters won't know. https://t.co/ZbMZy6KtX2", "in_reply_to_screen_name": null, "retweet_count": 1502, "favorite_count": 2301, "source": "TweetDeck", "id_str": "732592944662892545", "is_retweet": false}, {"created_at": "Thu Sep 08 16:05:51 +0000 2016", "text": "Before Hillary, the last Democrat the @DallasNews endorsed was FDR: https://t.co/4Phexk1OOG", "in_reply_to_screen_name": null, "retweet_count": 1439, "favorite_count": 3379, "source": "TweetDeck", "id_str": "773915260625510400", "is_retweet": false}, {"created_at": "Sat Sep 24 16:09:47 +0000 2016", "text": "RT @nytimes: The NYT Editorial Board endorses Hillary Clinton for president https://t.co/aSQ7lkaR6w via @nytopinion https://t.co/Zm4O1AcVS2", "in_reply_to_screen_name": null, "retweet_count": 4434, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "779714455525556224", "is_retweet": true}, {"created_at": "Mon Jul 25 23:28:33 +0000 2016", "text": "We don't just believe in a country where no one is left out or left behind\u2014we're making it a reality.\nhttps://t.co/oWVzyqrzyY", "in_reply_to_screen_name": null, "retweet_count": 918, "favorite_count": 2578, "source": "Twitter Web Client", "id_str": "757719216665440256", "is_retweet": false}, {"created_at": "Mon Oct 31 18:58:20 +0000 2016", "text": "Why would Putin want Trump to win?\nThe nice things he\u2019s said about him?\nHis promise to adopt pro-Kremlin policies?\nOr his business dealings?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1496, "favorite_count": 2579, "source": "TweetDeck", "id_str": "793165226069860352", "is_retweet": false}, {"created_at": "Sat Feb 13 14:54:21 +0000 2016", "text": "This is a fight for everyone who's ever been knocked down\u2014but refused to be knocked out. https://t.co/aDu3WymTib", "in_reply_to_screen_name": null, "retweet_count": 1208, "favorite_count": 3054, "source": "TweetDeck", "id_str": "698520592912424960", "is_retweet": false}, {"created_at": "Thu Feb 04 15:34:24 +0000 2016", "text": "\u201cAs president, she won\u2019t just say she\u2019s going to do something. She will follow through and actually do it.\u201d https://t.co/YEgvAjrKso", "in_reply_to_screen_name": null, "retweet_count": 415, "favorite_count": 977, "source": "TweetDeck", "id_str": "695269179935584259", "is_retweet": false}, {"created_at": "Thu Jul 28 01:08:43 +0000 2016", "text": "Watch night three of #DemsInPhilly live on Facebook as @JoeBiden, @TimKaine, and @POTUS take the stage \u2192 https://t.co/Od0bd2L9Pn", "in_reply_to_screen_name": null, "retweet_count": 443, "favorite_count": 1543, "source": "TweetDeck", "id_str": "758469198771318784", "is_retweet": false}, {"created_at": "Sun Mar 06 20:08:41 +0000 2016", "text": "Nancy's strength of character was legendary, and her advocacy\u2014especially for Alzheimer's research\u2014was tireless. Praying for her family. -H", "in_reply_to_screen_name": null, "retweet_count": 1895, "favorite_count": 6277, "source": "TweetDeck", "id_str": "706572229014904832", "is_retweet": false}, {"created_at": "Fri Sep 16 01:03:09 +0000 2016", "text": "No child should have to say goodbye to their parents every morning not knowing if mom or dad will be there when they get home.", "in_reply_to_screen_name": null, "retweet_count": 1460, "favorite_count": 4977, "source": "TweetDeck", "id_str": "776587190436519936", "is_retweet": false}, {"created_at": "Thu Jan 21 15:23:14 +0000 2016", "text": "This election is about who can get things done and build on the progress we\u2019ve made.", "in_reply_to_screen_name": null, "retweet_count": 622, "favorite_count": 1503, "source": "TweetDeck", "id_str": "690192938123534336", "is_retweet": false}, {"created_at": "Thu Sep 15 12:58:23 +0000 2016", "text": "Trump's global web of financial and business ties would compromise our national security if he\u2019s elected president. https://t.co/R8LgAQTLX3", "in_reply_to_screen_name": null, "retweet_count": 2791, "favorite_count": 4674, "source": "TweetDeck", "id_str": "776404797960388608", "is_retweet": false}, {"created_at": "Fri Sep 23 18:42:49 +0000 2016", "text": "Charlotte should release police video of the Keith Lamont Scott shooting without delay. We must ensure justice &amp; work to bridge divides. -H", "in_reply_to_screen_name": null, "retweet_count": 8941, "favorite_count": 20132, "source": "Twitter Web Client", "id_str": "779390581369864192", "is_retweet": false}, {"created_at": "Mon Mar 07 03:01:41 +0000 2016", "text": "We've got to keep talking about Flint, and talking about real plans to make sure this never happens again. Our kids deserve nothing less.", "in_reply_to_screen_name": null, "retweet_count": 1062, "favorite_count": 2658, "source": "TweetDeck", "id_str": "706676163310186496", "is_retweet": false}, {"created_at": "Tue Oct 11 16:31:41 +0000 2016", "text": "RT @PostOpinions: POST EDITORIAL- Donald Trump, Putin\u2019s puppet https://t.co/sELaX1x0sD", "in_reply_to_screen_name": null, "retweet_count": 1493, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785880562493853697", "is_retweet": true}, {"created_at": "Thu Jul 28 01:37:51 +0000 2016", "text": "\"I built a business, and I didn\u2019t start it with a $1 million check from my father.\u201d \u2014@MikeBloomberg on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 2296, "favorite_count": 5973, "source": "TweetDeck", "id_str": "758476529462546432", "is_retweet": false}, {"created_at": "Fri May 20 14:02:33 +0000 2016", "text": "Is Hillary qualified to be president?\n\nTake this helpful quiz to find out: https://t.co/8ynWmTYI8j", "in_reply_to_screen_name": null, "retweet_count": 551, "favorite_count": 1422, "source": "TweetDeck", "id_str": "733659177101496320", "is_retweet": false}, {"created_at": "Fri Feb 19 20:41:20 +0000 2016", "text": "Kids being sent into the criminal justice system instead of school is a civil rights issue, and it needs to end.\nhttps://t.co/zsvZP1fpH2", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 1546, "source": "Twitter Web Client", "id_str": "700782237646606336", "is_retweet": false}, {"created_at": "Wed Apr 20 02:14:59 +0000 2016", "text": "Start spreading the news. https://t.co/sOc1WIwYgo", "in_reply_to_screen_name": null, "retweet_count": 1971, "favorite_count": 3959, "source": "Twitter Web Client", "id_str": "722609479028748288", "is_retweet": false}, {"created_at": "Wed Feb 24 19:25:43 +0000 2016", "text": "Proud to have Senator Reid on this team. https://t.co/ZWh9sGcM2T https://t.co/Q3thyUCRFn", "in_reply_to_screen_name": null, "retweet_count": 939, "favorite_count": 2087, "source": "TweetDeck", "id_str": "702575151053987840", "is_retweet": false}, {"created_at": "Mon Oct 24 22:40:45 +0000 2016", "text": "Your friends, your family, stars on Broadway\u2014everyone's voting this year. Don't throw away your shot:\u2026 https://t.co/Tcd6x8oZDx", "in_reply_to_screen_name": null, "retweet_count": 3468, "favorite_count": 8577, "source": "Media Studio", "id_str": "790684481384513536", "is_retweet": false}, {"created_at": "Fri Nov 04 23:55:45 +0000 2016", "text": "\u201c27 million are ready to put up a fight and not be intimidated by hatred and spite.\u201d https://t.co/3TKJ4H68Kz https://t.co/Say5UiNWNL", "in_reply_to_screen_name": null, "retweet_count": 4562, "favorite_count": 9207, "source": "Media Studio", "id_str": "794689621594619904", "is_retweet": false}, {"created_at": "Thu Jun 09 23:53:31 +0000 2016", "text": "\"I know how hard this job can be. That\u2019s why I know Hillary will be so good at it.\" \u2014@POTUS\nhttps://t.co/GDhRYAVn0P", "in_reply_to_screen_name": null, "retweet_count": 4131, "favorite_count": 11029, "source": "Twitter Web Client", "id_str": "741055655734353920", "is_retweet": false}, {"created_at": "Mon Aug 01 15:13:50 +0000 2016", "text": "RT @TheBriefing2016: Kind of assumed Trump's approach would be more RT if by land, like if by sea. https://t.co/ddEI0z9LR9", "in_reply_to_screen_name": null, "retweet_count": 863, "favorite_count": 0, "source": "TweetDeck", "id_str": "760131431108579328", "is_retweet": true}, {"created_at": "Tue Mar 01 15:56:20 +0000 2016", "text": "Is your state voting on #SuperTuesday? Text WHERE to 47246 to find your polling place. https://t.co/i9rzcoETVw", "in_reply_to_screen_name": null, "retweet_count": 600, "favorite_count": 867, "source": "TweetDeck", "id_str": "704696785089011713", "is_retweet": false}, {"created_at": "Tue Sep 27 16:12:28 +0000 2016", "text": "\"She gained a massive amount of weight...it was a real problem.\" \u2014Trump this morning on Alicia Machado https://t.co/LJPlFegSTs", "in_reply_to_screen_name": null, "retweet_count": 6389, "favorite_count": 10569, "source": "TweetDeck", "id_str": "780802294002647040", "is_retweet": false}, {"created_at": "Sat Jul 23 00:40:05 +0000 2016", "text": "RT @BarbaraBoxer: .@TimKaine has a big heart and showed it as a civil rights lawyer, a teacher, a mayor, a governor, and a senator. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 2574, "favorite_count": 0, "source": "TweetDeck", "id_str": "756650053046075403", "is_retweet": true}, {"created_at": "Thu Oct 13 16:44:48 +0000 2016", "text": "\u201cI can\u2019t believe I\u2019m saying a candidate for president of the United States has bragged about sexually assaulting women.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1383, "favorite_count": 2815, "source": "TweetDeck", "id_str": "786608636428779520", "is_retweet": false}, {"created_at": "Fri Mar 11 00:58:26 +0000 2016", "text": "Over four decades, Hillary has taken on her share of tough fights. Here are a few of her biggest accomplishments: https://t.co/YPqJSETA6F", "in_reply_to_screen_name": null, "retweet_count": 824, "favorite_count": 1597, "source": "TweetDeck", "id_str": "708094697592508417", "is_retweet": false}, {"created_at": "Fri Sep 30 15:01:31 +0000 2016", "text": "To Donald, women like Alicia are only as valuable as his personal opinion about their looks. https://t.co/OZv8yg8vjZ https://t.co/PZWmPcORBR", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2129, "favorite_count": 4381, "source": "TweetDeck", "id_str": "781871605198774272", "is_retweet": false}, {"created_at": "Mon Oct 31 22:28:10 +0000 2016", "text": "Hillary\u2019s in Ohio with just 8 days left in the campaign. Watch live: https://t.co/oa4NZ1hEHU", "in_reply_to_screen_name": null, "retweet_count": 944, "favorite_count": 3687, "source": "TweetDeck", "id_str": "793218031430279172", "is_retweet": false}, {"created_at": "Thu Jul 28 03:21:20 +0000 2016", "text": "\"That\u2019s who we are.\nThat\u2019s our birthright.\nThe capacity to shape our own destiny.\"\n\u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1519, "favorite_count": 4639, "source": "TweetDeck", "id_str": "758502572961521665", "is_retweet": false}, {"created_at": "Thu Jul 28 01:22:33 +0000 2016", "text": "Trump \"doesn\u2019t have a clue about the middle class\u2026\n\u201cHe has no clue about what makes America great. \nActually, he has no clue\u2014period.\" \u2014Biden", "in_reply_to_screen_name": null, "retweet_count": 4548, "favorite_count": 10770, "source": "TweetDeck", "id_str": "758472682853830656", "is_retweet": false}, {"created_at": "Mon Jan 11 15:50:48 +0000 2016", "text": "We're not going to raise incomes for middle-class families by raising their taxes.", "in_reply_to_screen_name": null, "retweet_count": 528, "favorite_count": 1304, "source": "TweetDeck", "id_str": "686575998666719232", "is_retweet": false}, {"created_at": "Thu Aug 25 19:52:41 +0000 2016", "text": "RT @TheBriefing2016: Let this sink in. To hate groups, Trump's language doesn't come across as coded. https://t.co/oHFFVRgGG5", "in_reply_to_screen_name": null, "retweet_count": 1363, "favorite_count": 0, "source": "TweetDeck", "id_str": "768898916473503744", "is_retweet": true}, {"created_at": "Sat Apr 02 19:02:45 +0000 2016", "text": "\"Es una amiga nuestra de mucho antes y de siempre\". \u2014Congresista Luis Guti\u00e9rrez sobre Hillary Clinton\nhttps://t.co/1VywWXG4oM", "in_reply_to_screen_name": null, "retweet_count": 675, "favorite_count": 1420, "source": "Twitter Web Client", "id_str": "716340107402280960", "is_retweet": false}, {"created_at": "Thu Sep 01 01:58:36 +0000 2016", "text": "We are not going to criminalize, profile, round up, and deport 16 million people. https://t.co/oCAAusi5dx", "in_reply_to_screen_name": null, "retweet_count": 4130, "favorite_count": 7759, "source": "TweetDeck", "id_str": "771165328311250945", "is_retweet": false}, {"created_at": "Mon Oct 03 01:36:18 +0000 2016", "text": "Three pages of Trump's tax returns confirm he's a business failure who's gotten rich at your expense. Imagine what\u2026 https://t.co/w0O6ozZIF6", "in_reply_to_screen_name": null, "retweet_count": 15629, "favorite_count": 28792, "source": "Media Studio", "id_str": "782756130158108672", "is_retweet": false}, {"created_at": "Mon Sep 19 17:11:05 +0000 2016", "text": "\"The lesson she passed on to me was simple but powerful: No one gets through life alone.\" \u2014Hillary on her mom https://t.co/gzNvfNPeNu", "in_reply_to_screen_name": null, "retweet_count": 1609, "favorite_count": 4511, "source": "TweetDeck", "id_str": "777917942180773888", "is_retweet": false}, {"created_at": "Tue Sep 06 16:58:12 +0000 2016", "text": "Only one candidate in this race is standing up for working families. Take a look: https://t.co/24KUrmW0zH", "in_reply_to_screen_name": null, "retweet_count": 1034, "favorite_count": 2483, "source": "TweetDeck", "id_str": "773203658355924993", "is_retweet": false}, {"created_at": "Mon Jul 25 22:02:40 +0000 2016", "text": "It's not just history that's watching us\u2014it's the future, too. #DemsInPhilly https://t.co/rAkdHzTMzG", "in_reply_to_screen_name": null, "retweet_count": 4346, "favorite_count": 11250, "source": "TweetDeck", "id_str": "757697604310433792", "is_retweet": false}, {"created_at": "Wed Aug 10 19:37:25 +0000 2016", "text": "We can be the clean energy superpower of the 21st Century. https://t.co/Zb8w0tLYkS", "in_reply_to_screen_name": null, "retweet_count": 709, "favorite_count": 2076, "source": "TweetDeck", "id_str": "763459256054145024", "is_retweet": false}, {"created_at": "Wed Oct 12 16:44:29 +0000 2016", "text": "RT @brosandprose: It's time for a history lesson: https://t.co/NhIHHtk05Q https://t.co/WPIIL1ZLGx", "in_reply_to_screen_name": null, "retweet_count": 1298, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786246169210986496", "is_retweet": true}, {"created_at": "Mon May 02 03:00:33 +0000 2016", "text": "Puerto Rico faces an economic crisis. Continued inaction from Congress is irresponsible. We should act now: https://t.co/Jfb1VABBly -H", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 1726, "source": "TweetDeck", "id_str": "726969600622120960", "is_retweet": false}, {"created_at": "Thu Sep 15 19:51:16 +0000 2016", "text": "The stakes in this election are as high as any in our lifetimes. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 521, "favorite_count": 957, "source": "TweetDeck", "id_str": "776508704145440769", "is_retweet": false}, {"created_at": "Sun Oct 02 01:04:31 +0000 2016", "text": "\u201cShe\u2019s just out there every day doing God\u2019s work in her own way. You know? Making her parents proud.\u201d \u2014Betsy, Hilla\u2026 https://t.co/ZB3Vxskqoh", "in_reply_to_screen_name": null, "retweet_count": 2726, "favorite_count": 8981, "source": "Media Studio", "id_str": "782385740353183745", "is_retweet": false}, {"created_at": "Thu Aug 04 12:55:51 +0000 2016", "text": "The @HoustonChron almost always backs the GOP nominee for president. Here\u2019s why they endorsed Hillary in 2016: https://t.co/l2AYf74YS4", "in_reply_to_screen_name": null, "retweet_count": 2691, "favorite_count": 6815, "source": "TweetDeck", "id_str": "761183870196867072", "is_retweet": false}, {"created_at": "Wed Feb 03 21:45:15 +0000 2016", "text": "1) This shouldn't be a debate about who gets to define \"progressive\"\u2014it should be about who will get real results for American families.", "in_reply_to_screen_name": null, "retweet_count": 2341, "favorite_count": 4373, "source": "TweetDeck", "id_str": "695000118655844352", "is_retweet": false}, {"created_at": "Sun Oct 09 22:20:31 +0000 2016", "text": "Saddened by the passing of Choco Meza, a historic figure in Texas politics &amp; beloved friend on our team. My prayers\u2026 https://t.co/2PSAuar9Qk", "in_reply_to_screen_name": null, "retweet_count": 1761, "favorite_count": 7372, "source": "TweetDeck", "id_str": "785243572748578816", "is_retweet": false}, {"created_at": "Mon Aug 29 19:52:45 +0000 2016", "text": "RT @JoeBiden: Joe and Hillary went home to Scranton. Take a behind-the-scenes look at their visit: https://t.co/xdiqa0dbdP", "in_reply_to_screen_name": null, "retweet_count": 1719, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770348483664568320", "is_retweet": true}, {"created_at": "Wed Oct 12 20:21:06 +0000 2016", "text": "\u201cWe expect record numbers of people to vote in this presidential election.\u201d \u2014Hillary\n\nMake sure you're one of them: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 691, "favorite_count": 1672, "source": "TweetDeck", "id_str": "786300685885243392", "is_retweet": false}, {"created_at": "Mon Sep 19 14:15:15 +0000 2016", "text": "\"Let us be vigilant, but not afraid\u2026we choose resolve, not fear. We will not turn on each other or undermine each other.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1205, "favorite_count": 2618, "source": "TweetDeck", "id_str": "777873693745811456", "is_retweet": false}, {"created_at": "Mon Jul 18 17:01:30 +0000 2016", "text": "People who care about protecting the lives of police officers should be committed to getting assault weapons off our streets.", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 5215, "source": "TweetDeck", "id_str": "755085094843478016", "is_retweet": false}, {"created_at": "Sun Jun 05 23:03:36 +0000 2016", "text": "\"We must stand against hate wherever it rears its ugly head.\" \u2014Hillary in 2000\nhttps://t.co/qyhdZysMmH", "in_reply_to_screen_name": null, "retweet_count": 1748, "favorite_count": 4133, "source": "Twitter Web Client", "id_str": "739593541874159620", "is_retweet": false}, {"created_at": "Sun Nov 06 16:18:12 +0000 2016", "text": "RT @HillaryforPA: UPDATED: Our #StrongerTogether Rally on Monday, Nov 7 will be held at Independence Hall. Doors open at 4pm. RSVP: https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 1704, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795299254155825154", "is_retweet": true}, {"created_at": "Thu Oct 20 20:19:42 +0000 2016", "text": "\"All that progress is at stake if we don't do the right thing over these last 19 days.\" \u2014@POTUS https://t.co/a5j8nqYXia", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 492, "favorite_count": 1206, "source": "TweetDeck", "id_str": "789199436148674560", "is_retweet": false}, {"created_at": "Wed Nov 09 16:43:34 +0000 2016", "text": "\u201cDonald Trump is going to be our president. We owe him an open mind and the chance to lead.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 54488, "favorite_count": 125657, "source": "TweetDeck", "id_str": "796392800350863360", "is_retweet": false}, {"created_at": "Mon Jun 27 14:55:38 +0000 2016", "text": "\"She exposes [Trump] for what he is: temperamentally unfit and totally unqualified to be president.\" \u2014Hillary on @elizabethforma", "in_reply_to_screen_name": null, "retweet_count": 1029, "favorite_count": 3311, "source": "TweetDeck", "id_str": "747443276278566912", "is_retweet": false}, {"created_at": "Mon Oct 10 03:22:13 +0000 2016", "text": "RT @latimes: Who won the debate? Judges say: Clinton was the overall winner\nMore: https://t.co/Pti60VDate https://t.co/BhuZRF8out", "in_reply_to_screen_name": null, "retweet_count": 3977, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785319496651272192", "is_retweet": true}, {"created_at": "Sun Feb 14 03:09:28 +0000 2016", "text": "Necesitamos una presidenta que pueda defendernos de las propuestas de los republicanos. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 797, "favorite_count": 1594, "source": "TweetDeck", "id_str": "698705589673791488", "is_retweet": false}, {"created_at": "Thu Jun 16 20:00:52 +0000 2016", "text": "Hillary helped get health care for 8 million kids. One of the first ads of the general election:\nhttps://t.co/bkKDfo2gsA", "in_reply_to_screen_name": null, "retweet_count": 2430, "favorite_count": 6296, "source": "Twitter Web Client", "id_str": "743533823648894976", "is_retweet": false}, {"created_at": "Mon Apr 18 00:46:41 +0000 2016", "text": "If we stand up for our values instead of turning to division and hate, there's nothing we can't do.\nhttps://t.co/qGQhd9sOmy", "in_reply_to_screen_name": null, "retweet_count": 2495, "favorite_count": 5007, "source": "Twitter Web Client", "id_str": "721862481451200512", "is_retweet": false}, {"created_at": "Wed Sep 14 18:36:51 +0000 2016", "text": "RT @TwitterMoments: Hillary Clinton has some questions for Donald Trump after reading that @Newsweek article. https://t.co/jfyKQFBpFL", "in_reply_to_screen_name": null, "retweet_count": 2296, "favorite_count": 0, "source": "TweetDeck", "id_str": "776127586564968448", "is_retweet": true}, {"created_at": "Thu Sep 01 16:09:35 +0000 2016", "text": "RT @JoeBiden: \"The neighborhood you come from is where your character is etched. Where your values are set.\" -VP Biden https://t.co/DQ99r0O\u2026", "in_reply_to_screen_name": null, "retweet_count": 1000, "favorite_count": 0, "source": "TweetDeck", "id_str": "771379484721311744", "is_retweet": true}, {"created_at": "Fri Jul 22 02:56:21 +0000 2016", "text": "Here's how the Republican ticket would \"protect\" LGBT Americans. #RNCinCLE https://t.co/bcHNM1EMxL", "in_reply_to_screen_name": null, "retweet_count": 9696, "favorite_count": 13165, "source": "Twitter Web Client", "id_str": "756321959391162368", "is_retweet": false}, {"created_at": "Thu Jun 23 19:32:52 +0000 2016", "text": "44 years since #TitleIX passed, truer than ever: All students deserve equal opportunity, no matter their gender. https://t.co/4X7N9bxWWB", "in_reply_to_screen_name": null, "retweet_count": 2433, "favorite_count": 8451, "source": "TweetDeck", "id_str": "746063493573509120", "is_retweet": false}, {"created_at": "Mon Aug 15 23:13:58 +0000 2016", "text": "RT @TheBriefing2016: \u201cHe is a stunning ignoramus on foreign policy and national security.\u201d https://t.co/h6NmEK07yB", "in_reply_to_screen_name": null, "retweet_count": 2258, "favorite_count": 0, "source": "TweetDeck", "id_str": "765325690338217984", "is_retweet": true}, {"created_at": "Sat Oct 15 00:09:13 +0000 2016", "text": "It's incomprehensible that our laws would protect gun makers over Sandy Hook families. We need to fix this. https://t.co/96uBe92wPi", "in_reply_to_screen_name": null, "retweet_count": 4146, "favorite_count": 10722, "source": "Twitter for iPhone", "id_str": "787082868522618880", "is_retweet": false}, {"created_at": "Sat Jun 04 21:29:33 +0000 2016", "text": "In America, it doesn\u2019t matter where your parents were born or what color your skin is. We should be judged by words and deeds\u2014not our race.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1766, "favorite_count": 4000, "source": "TweetDeck", "id_str": "739207489632243712", "is_retweet": false}, {"created_at": "Wed Sep 14 16:54:19 +0000 2016", "text": "17. Will your children disclose all of the foreign trips and business deals they've undertaken during the campaign, and with whom they met?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2672, "favorite_count": 4470, "source": "TweetDeck", "id_str": "776101786843246592", "is_retweet": false}, {"created_at": "Tue Jul 26 22:55:17 +0000 2016", "text": "Stronger together. https://t.co/9x1zuMqFfs", "in_reply_to_screen_name": null, "retweet_count": 10104, "favorite_count": 23156, "source": "TweetDeck", "id_str": "758073231748259840", "is_retweet": false}, {"created_at": "Mon Feb 15 16:47:26 +0000 2016", "text": "We need action now in Flint. Please give if you are able: https://t.co/XKJUx420d8\nhttps://t.co/qn7Pbx0xD7", "in_reply_to_screen_name": null, "retweet_count": 780, "favorite_count": 1143, "source": "Twitter Web Client", "id_str": "699273823590297600", "is_retweet": false}, {"created_at": "Fri Jul 29 02:14:44 +0000 2016", "text": "\u201cThis November, I\u2019m voting for a woman\u2026who knows women\u2019s rights are human rights\u2026here at home and around the world.\u201d \u2014@ChelseaClinton", "in_reply_to_screen_name": null, "retweet_count": 1984, "favorite_count": 6057, "source": "TweetDeck", "id_str": "758848201948442625", "is_retweet": false}, {"created_at": "Tue Jan 05 01:31:09 +0000 2016", "text": "If Republicans win the White House &amp; fulfill their promise to tear up the ACA, we\u2019ll have to go back to square one.\nhttps://t.co/Ahcn2CNKIz", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 1206, "source": "Twitter Web Client", "id_str": "684185333232082944", "is_retweet": false}, {"created_at": "Sun Mar 27 16:54:59 +0000 2016", "text": "\"All of us have a responsibility to ourselves, to our children, to each other.\"\nhttps://t.co/PMWT8gBSwR", "in_reply_to_screen_name": null, "retweet_count": 2672, "favorite_count": 6046, "source": "Twitter Web Client", "id_str": "714133628066762752", "is_retweet": false}, {"created_at": "Sat Oct 15 22:31:13 +0000 2016", "text": "RT @TheBriefing2016: The connections between Trump and Russia are real...and they're cause for concern. https://t.co/ZaP9KdFFyC", "in_reply_to_screen_name": null, "retweet_count": 6281, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787420594161717249", "is_retweet": true}, {"created_at": "Thu Feb 18 20:54:54 +0000 2016", "text": "\"She has been truly loyal to President Obama and is the best person to protect &amp; build on his legacy.\" \u2014Bill Murphy https://t.co/HzOIcY6Goi", "in_reply_to_screen_name": null, "retweet_count": 749, "favorite_count": 1638, "source": "TweetDeck", "id_str": "700423266410893312", "is_retweet": false}, {"created_at": "Thu Aug 25 19:26:50 +0000 2016", "text": "Trump suggested that Ted Cruz\u2019s father was involved in the Kennedy assassination.\n\nOf course there\u2019s absolutely no evidence of that.", "in_reply_to_screen_name": null, "retweet_count": 1111, "favorite_count": 3849, "source": "TweetDeck", "id_str": "768892408167821317", "is_retweet": false}, {"created_at": "Thu Feb 25 01:52:03 +0000 2016", "text": "Follow @HFA to hear from the millions of volunteers, supporters, organizers, and donors who power this campaign. https://t.co/Sr6KBZLYqR", "in_reply_to_screen_name": null, "retweet_count": 885, "favorite_count": 2206, "source": "TweetDeck", "id_str": "702672371711242240", "is_retweet": false}, {"created_at": "Mon Mar 28 21:54:47 +0000 2016", "text": "Last June, #SCOTUS ruled that marriage equality was the law of the land. https://t.co/ndiDvuVj4S", "in_reply_to_screen_name": null, "retweet_count": 683, "favorite_count": 1910, "source": "Twitter Web Client", "id_str": "714571460912615424", "is_retweet": false}, {"created_at": "Tue Sep 13 17:45:17 +0000 2016", "text": "\"I could not be prouder of the leader we have nominated to take my place.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1275, "favorite_count": 3951, "source": "TweetDeck", "id_str": "775752223867437056", "is_retweet": false}, {"created_at": "Tue Jul 12 19:56:48 +0000 2016", "text": "Taking on systemic racism\u2014and rebuilding trust between police and citizens\u2014will require contributions from us all. https://t.co/dXhKHEvZ2r", "in_reply_to_screen_name": null, "retweet_count": 2186, "favorite_count": 6620, "source": "TweetDeck", "id_str": "752954885646278656", "is_retweet": false}, {"created_at": "Mon Oct 10 01:54:37 +0000 2016", "text": "The same guy who probably didn't pay federal taxes for 18 years is OK raising taxes on millions in the middle-class. Sound right to you?", "in_reply_to_screen_name": null, "retweet_count": 7220, "favorite_count": 18073, "source": "TweetDeck", "id_str": "785297454233186304", "is_retweet": false}, {"created_at": "Sat Sep 17 17:21:13 +0000 2016", "text": "RT @BernieSanders: When your friends say they won't vote, ask how much student debt they have. There's only one candidate who will make col\u2026", "in_reply_to_screen_name": null, "retweet_count": 5905, "favorite_count": 0, "source": "TweetDeck", "id_str": "777195717978910720", "is_retweet": true}, {"created_at": "Thu Mar 10 02:37:28 +0000 2016", "text": "Stop the raids. Stop the round ups. Stop the deporting. #DemDebate https://t.co/CkqBq0vU5b", "in_reply_to_screen_name": null, "retweet_count": 1161, "favorite_count": 2441, "source": "TweetDeck", "id_str": "707757234109988864", "is_retweet": false}, {"created_at": "Sat Jun 25 14:04:21 +0000 2016", "text": ".@BarneyFrank on the time he marched in NYC's gay pride parade with the First Lady of the United States in 2000.\nhttps://t.co/G1b5cUV0pJ", "in_reply_to_screen_name": null, "retweet_count": 3081, "favorite_count": 5725, "source": "Twitter Web Client", "id_str": "746705594887737344", "is_retweet": false}, {"created_at": "Fri Jul 08 22:15:18 +0000 2016", "text": "Alton and Philando's deaths are the latest in a long, painful litany of African Americans killed in police incidents\u2014123 so far this year.", "in_reply_to_screen_name": null, "retweet_count": 1729, "favorite_count": 3756, "source": "TweetDeck", "id_str": "751540188799766528", "is_retweet": false}, {"created_at": "Tue Aug 02 12:21:18 +0000 2016", "text": "A former McCain advisor says Hillary's policies \"will result in a stronger U.S. economy under almost any scenario.\" https://t.co/TGh3Zy5ndP", "in_reply_to_screen_name": null, "retweet_count": 3495, "favorite_count": 7775, "source": "Twitter Web Client", "id_str": "760450399870578688", "is_retweet": false}, {"created_at": "Thu Sep 29 18:22:48 +0000 2016", "text": "We need to bring technical education back to our schools: https://t.co/6t1rONo6DW", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 516, "favorite_count": 1358, "source": "TweetDeck", "id_str": "781559872018087937", "is_retweet": false}, {"created_at": "Mon Apr 18 19:26:43 +0000 2016", "text": "Encuentre d\u00f3nde votar en Nueva York aqu\u00ed \u2192  https://t.co/S0VaGHnceD #EstoyConElla https://t.co/f9bPIpE2uo", "in_reply_to_screen_name": null, "retweet_count": 332, "favorite_count": 546, "source": "TweetDeck", "id_str": "722144346837876736", "is_retweet": false}, {"created_at": "Wed Feb 24 13:59:33 +0000 2016", "text": "It isn\u2019t right that we have kids trying to learn in crumbling classrooms. We need to invest in neglected communities.", "in_reply_to_screen_name": null, "retweet_count": 1111, "favorite_count": 2680, "source": "TweetDeck", "id_str": "702493065420914689", "is_retweet": false}, {"created_at": "Mon Aug 01 22:25:45 +0000 2016", "text": "RT @CNBCnow: JUST IN: World's 4th richest person, Warren Buffett, challenges Trump to release his taxes. \"I'm under audit too.\" https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 10478, "favorite_count": 0, "source": "TweetDeck", "id_str": "760240126140280833", "is_retweet": true}, {"created_at": "Wed Feb 24 02:49:11 +0000 2016", "text": "\"I'm most concerned about the kids who are left out and left behind.\" #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 802, "favorite_count": 2616, "source": "TweetDeck", "id_str": "702324364386107392", "is_retweet": false}, {"created_at": "Fri Feb 05 03:10:17 +0000 2016", "text": "The president doesn't get to choose what issues come to her desk. Navigating foreign policy challenges is part of the job. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 947, "favorite_count": 2009, "source": "TweetDeck", "id_str": "695444302869057537", "is_retweet": false}, {"created_at": "Tue Feb 16 21:09:39 +0000 2016", "text": "\"I want to talk about how we break down barriers that disproportionately affect African Americans, &amp; build ladders of opportunity.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 905, "source": "TweetDeck", "id_str": "699702203964121088", "is_retweet": false}, {"created_at": "Mon Aug 08 22:43:21 +0000 2016", "text": "RT @nytimes: 50 GOP officials sign a letter declaring that Trump \u201cwould be the most reckless president in American history\u201d https://t.co/Qg\u2026", "in_reply_to_screen_name": null, "retweet_count": 4209, "favorite_count": 0, "source": "TweetDeck", "id_str": "762781269860188161", "is_retweet": true}, {"created_at": "Tue Jan 26 01:57:40 +0000 2016", "text": "Heartbreaking. Families who need clean, safe drinking water shouldn't have to be afraid to ask for help. https://t.co/GbwVeRP4hf -H", "in_reply_to_screen_name": null, "retweet_count": 949, "favorite_count": 1622, "source": "TweetDeck", "id_str": "691802150645690371", "is_retweet": false}, {"created_at": "Thu Aug 25 19:25:59 +0000 2016", "text": "Trump claimed that thousands of American Muslims in New Jersey cheered the 9/11 attacks.\n\nThey didn\u2019t. https://t.co/mrFBlDza6y", "in_reply_to_screen_name": null, "retweet_count": 948, "favorite_count": 2083, "source": "TweetDeck", "id_str": "768892197899014144", "is_retweet": false}, {"created_at": "Tue Jul 05 19:45:39 +0000 2016", "text": "\"He\u2019s a statesman\u2014leading not just our country but the entire world. This is a president who knows how to keep us safe and strong.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1217, "favorite_count": 5684, "source": "TweetDeck", "id_str": "750415365759504385", "is_retweet": false}, {"created_at": "Tue Jul 26 02:10:21 +0000 2016", "text": "\"There is only one person...truly qualified to be president of the United States, and that is our friend Hillary Clinton.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2482, "favorite_count": 7367, "source": "TweetDeck", "id_str": "757759935136600064", "is_retweet": false}, {"created_at": "Sun Mar 20 23:34:38 +0000 2016", "text": "\"The question is, can we make it so that America works for everybody who's willing to work?\" \u2014@WarrenBuffett\nhttps://t.co/j3DzYbQwd9", "in_reply_to_screen_name": null, "retweet_count": 2883, "favorite_count": 5705, "source": "Twitter Web Client", "id_str": "711697489993150465", "is_retweet": false}, {"created_at": "Thu Nov 03 15:02:12 +0000 2016", "text": "RT this if you think kids and families deserve a champion in the White House. https://t.co/3TKJ4H68Kz https://t.co/Y3JMRytqJk", "in_reply_to_screen_name": null, "retweet_count": 4166, "favorite_count": 6192, "source": "TweetDeck", "id_str": "794192962293006336", "is_retweet": false}, {"created_at": "Mon Aug 15 18:04:27 +0000 2016", "text": "RT @JoeBiden: \"It is never, never, never ever been a good bet to bet against the United States of America.\" -VP Biden", "in_reply_to_screen_name": null, "retweet_count": 1371, "favorite_count": 0, "source": "TweetDeck", "id_str": "765247799697039360", "is_retweet": true}, {"created_at": "Tue Oct 11 18:18:35 +0000 2016", "text": "Many states have voter registration deadlines today. Don't sit out\u2014make sure you're registered to vote: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1700, "favorite_count": 3456, "source": "TweetDeck", "id_str": "785907463065329664", "is_retweet": false}, {"created_at": "Mon Aug 29 22:04:38 +0000 2016", "text": "Donald Trump: Make ________\nBangladesh\nChina\nIndia\nIndonesia\nVietnam\nMexico\nSlovenia\nGreat Again? https://t.co/5MZTsOgYR9", "in_reply_to_screen_name": null, "retweet_count": 4359, "favorite_count": 8595, "source": "TweetDeck", "id_str": "770381671996719104", "is_retweet": false}, {"created_at": "Wed May 04 17:28:34 +0000 2016", "text": "\"Unity versus division, compassion versus selfishness, and love versus hate. The stakes don\u2019t get much higher.\" https://t.co/nwy7MfMutc", "in_reply_to_screen_name": null, "retweet_count": 3439, "favorite_count": 7907, "source": "TweetDeck", "id_str": "727912818343825408", "is_retweet": false}, {"created_at": "Wed Nov 02 19:20:53 +0000 2016", "text": "Lawrence Ramos is a first generation American, a World War II and Korean War veteran, and a proud Hillary supporter. https://t.co/AYBkJsTvo4", "in_reply_to_screen_name": null, "retweet_count": 3898, "favorite_count": 9036, "source": "Media Studio", "id_str": "793895673263382528", "is_retweet": false}, {"created_at": "Fri Nov 04 21:32:03 +0000 2016", "text": "We\u2019ve got to take on discrimination &amp; bigotry.\n\nWe can\u2019t accept as normal what we\u2019re seeing across this country because of Trump\u2019s campaign.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1794, "favorite_count": 4121, "source": "TweetDeck", "id_str": "794653459861667840", "is_retweet": false}, {"created_at": "Thu Jun 02 19:06:41 +0000 2016", "text": "Trump isn\u2019t just incoherent; he\u2019s dangerous. He\u2019s not just unprepared; he\u2019s temperamentally unfit to be Commander-in-Chief.", "in_reply_to_screen_name": null, "retweet_count": 3733, "favorite_count": 7849, "source": "TweetDeck", "id_str": "738446756980068352", "is_retweet": false}, {"created_at": "Sun Sep 04 18:06:16 +0000 2016", "text": "We have a new @Tumblr! Check out letters to Hillary from Americans around the country at https://t.co/gmfVm5q0si https://t.co/0LOja02ENX", "in_reply_to_screen_name": null, "retweet_count": 1944, "favorite_count": 5560, "source": "TweetDeck", "id_str": "772496012611088384", "is_retweet": false}, {"created_at": "Wed Oct 05 00:48:40 +0000 2016", "text": "RT to let @TimKaine know you've got his back tonight. #VPDebate https://t.co/XzjUE0cfnp", "in_reply_to_screen_name": null, "retweet_count": 8670, "favorite_count": 10326, "source": "TweetDeck", "id_str": "783468914487492609", "is_retweet": false}, {"created_at": "Thu Feb 18 22:22:17 +0000 2016", "text": "Unfathomable that Flint residents were forced to pay almost $1,000/year for poisoned water. https://t.co/66GdQUwVKR -H", "in_reply_to_screen_name": null, "retweet_count": 806, "favorite_count": 1113, "source": "TweetDeck", "id_str": "700445257381576704", "is_retweet": false}, {"created_at": "Fri Jan 29 21:57:33 +0000 2016", "text": "Three days to #iacaucus. Say #ImWithHer: https://t.co/Itonplc7uK https://t.co/L7LsWd47yK", "in_reply_to_screen_name": null, "retweet_count": 228, "favorite_count": 530, "source": "Twitter Web Client", "id_str": "693191273780486144", "is_retweet": false}, {"created_at": "Wed Mar 23 19:07:48 +0000 2016", "text": "\"If I\u2019m president, the United States will not condone or practice torture anywhere in the world.\" \u2014Hillary in CA", "in_reply_to_screen_name": null, "retweet_count": 1255, "favorite_count": 3215, "source": "TweetDeck", "id_str": "712717499016617985", "is_retweet": false}, {"created_at": "Wed Sep 21 18:45:20 +0000 2016", "text": "We need to come together to turn the tide, stop violence, build trust, and give all our kids the chance to grow up safe and healthy.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 689, "favorite_count": 1404, "source": "TweetDeck", "id_str": "778666439540633600", "is_retweet": false}, {"created_at": "Wed Oct 05 01:49:19 +0000 2016", "text": "RT @timkaine: \"Donald Trump can\u2019t start a Twitter war with Miss Universe without shooting himself in the foot.\u201d \u2014Tim #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 2071, "favorite_count": 0, "source": "TweetDeck", "id_str": "783484177987633152", "is_retweet": true}, {"created_at": "Sun Feb 07 17:10:43 +0000 2016", "text": "Here's an easy way to help Hillary win in New Hampshire\u2014it only takes 5 minutes! https://t.co/thca9RD2CN", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 634, "source": "TweetDeck", "id_str": "696380580162859008", "is_retweet": false}, {"created_at": "Tue Mar 22 14:08:53 +0000 2016", "text": "My thoughts and prayers are with the families of those killed and wounded, and all the people of Belgium. -H", "in_reply_to_screen_name": null, "retweet_count": 3480, "favorite_count": 9004, "source": "TweetDeck", "id_str": "712279889353768961", "is_retweet": false}, {"created_at": "Sun Mar 13 21:03:29 +0000 2016", "text": "Los colegios comunitarios p\u00fablicos deber\u00edan de ser gratis en todo el pa\u00eds.", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 1011, "source": "TweetDeck", "id_str": "709122735918727168", "is_retweet": false}, {"created_at": "Sun Oct 16 20:12:37 +0000 2016", "text": "Where does Trump get his talking points from? Often this alt-right conspiracy theorist, Alex Jones. (Watch all the\u2026 https://t.co/YoP8rvXX9d", "in_reply_to_screen_name": null, "retweet_count": 13098, "favorite_count": 20366, "source": "Media Studio", "id_str": "787748100324503552", "is_retweet": false}, {"created_at": "Thu Aug 25 19:15:55 +0000 2016", "text": "Donald Trump has built his campaign on prejudice and paranoia. He\u2019s taking hate groups mainstream.", "in_reply_to_screen_name": null, "retweet_count": 1384, "favorite_count": 3285, "source": "TweetDeck", "id_str": "768889661397864449", "is_retweet": false}, {"created_at": "Tue Jul 26 02:41:43 +0000 2016", "text": "\"When we turn on each other, we can\u2019t unite to fight back against a rigged system.\u201d \u2014@ElizabethforMA #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 4026, "source": "TweetDeck", "id_str": "757767826648231936", "is_retweet": false}, {"created_at": "Thu Feb 04 03:46:43 +0000 2016", "text": "Yes, we need to crack down on Wall Street\u2014but that's not enough. We need to go after corporations that hurt families. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 514, "favorite_count": 1183, "source": "TweetDeck", "id_str": "695091084272259072", "is_retweet": false}, {"created_at": "Mon Oct 24 13:57:19 +0000 2016", "text": "No family should spend more than 10% of its income on child care.\n\nHere's how we can achieve that goal: https://t.co/lQzCN6czhh", "in_reply_to_screen_name": null, "retweet_count": 1511, "favorite_count": 4696, "source": "TweetDeck", "id_str": "790552754800451584", "is_retweet": false}, {"created_at": "Mon Sep 19 02:05:26 +0000 2016", "text": "Grateful for our brave men and women serving in the @USAirForce and their families. Happy birthday, USAF! https://t.co/xYebpm9NaN", "in_reply_to_screen_name": null, "retweet_count": 1522, "favorite_count": 4669, "source": "Twitter Web Client", "id_str": "777690030882127872", "is_retweet": false}, {"created_at": "Wed Aug 31 17:00:29 +0000 2016", "text": "\"I completely reject anyone, including my opponent, who calls the American military a 'disaster.'\" \u2014Hillary to the @AmericanLegion", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 749, "favorite_count": 1524, "source": "TweetDeck", "id_str": "771029907338067971", "is_retweet": false}, {"created_at": "Wed Mar 02 21:32:30 +0000 2016", "text": "America has never stopped being great. Our task is to make America whole.\nhttps://t.co/R5m8qP5rff", "in_reply_to_screen_name": null, "retweet_count": 1291, "favorite_count": 2829, "source": "Twitter Web Client", "id_str": "705143770640044032", "is_retweet": false}, {"created_at": "Wed Oct 05 02:05:55 +0000 2016", "text": "RT @literally_trump: Donald Trump said Putin is a better leader than President Obama. And his running mate agrees. https://t.co/kRD9vG1Wq0", "in_reply_to_screen_name": null, "retweet_count": 1085, "favorite_count": 0, "source": "TweetDeck", "id_str": "783488358022520834", "is_retweet": true}, {"created_at": "Fri Sep 30 23:26:42 +0000 2016", "text": "When Ruline was born, women couldn't vote. Yesterday, at 103, she voted for Hillary. Make sure you're registered:\u2026 https://t.co/g0kaoMPwNr", "in_reply_to_screen_name": null, "retweet_count": 5658, "favorite_count": 17549, "source": "TweetDeck", "id_str": "781998738290212864", "is_retweet": false}, {"created_at": "Mon Nov 07 17:34:01 +0000 2016", "text": "Tomorrow\u2019s the day! Join Hillary as she campaigns in Pittsburgh on the eve of Election Day. https://t.co/jJKydSK4DR", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 6544, "source": "TweetDeck", "id_str": "795680720001921025", "is_retweet": false}, {"created_at": "Mon Jan 11 18:40:19 +0000 2016", "text": "\"Young people need a president who will stand up to inaction [on guns]...that person is Hillary.\" -@SybrinaFulton https://t.co/MNPZP8w6yb", "in_reply_to_screen_name": null, "retweet_count": 498, "favorite_count": 955, "source": "TweetDeck", "id_str": "686618659301765120", "is_retweet": false}, {"created_at": "Fri Jul 22 14:23:08 +0000 2016", "text": "Donald Trump doesn't represent us.\nHis ideas don't represent us.\nAnd his values don't represent us.\nAdd your name: https://t.co/2Lc6JkOXmV", "in_reply_to_screen_name": null, "retweet_count": 1433, "favorite_count": 3553, "source": "TweetDeck", "id_str": "756494792222179328", "is_retweet": false}, {"created_at": "Sat Feb 27 14:48:27 +0000 2016", "text": ".@BillClinton's closing argument for Hillary: \"We need a changemaker, not a change talker.\"\nhttps://t.co/EJSXly9Rv7", "in_reply_to_screen_name": null, "retweet_count": 1147, "favorite_count": 2128, "source": "Twitter Web Client", "id_str": "703592536221220864", "is_retweet": false}, {"created_at": "Sat Jul 23 02:46:19 +0000 2016", "text": "Welcome to the team, @TimKaine. https://t.co/nEIqHCOGWx", "in_reply_to_screen_name": null, "retweet_count": 5280, "favorite_count": 16029, "source": "TweetDeck", "id_str": "756681823556628480", "is_retweet": false}, {"created_at": "Thu Sep 01 02:40:15 +0000 2016", "text": "Donald Trump could actually be our next president. Chip in before midnight to make sure that never happens: https://t.co/whE5Bls0pq", "in_reply_to_screen_name": null, "retweet_count": 1911, "favorite_count": 4758, "source": "TweetDeck", "id_str": "771175811416068096", "is_retweet": false}, {"created_at": "Tue Sep 27 01:52:02 +0000 2016", "text": "RT @BuzzFeedBen: How Hillary Clinton Took Charge In The First Presidential Debate https://t.co/4gwtCnACV0", "in_reply_to_screen_name": null, "retweet_count": 1252, "favorite_count": 0, "source": "TweetDeck", "id_str": "780585761309659136", "is_retweet": true}, {"created_at": "Wed Jul 27 03:21:28 +0000 2016", "text": "We just put the biggest crack in that glass ceiling yet.\u201d \u2014Hillary https://t.co/mYkaLIv861", "in_reply_to_screen_name": null, "retweet_count": 8894, "favorite_count": 20443, "source": "TweetDeck", "id_str": "758140220340572160", "is_retweet": false}, {"created_at": "Thu Aug 04 20:22:15 +0000 2016", "text": "Donald Trump is not qualified to be president, and he is temperamentally unfit to be Commander-in-Chief.", "in_reply_to_screen_name": null, "retweet_count": 6111, "favorite_count": 20940, "source": "TweetDeck", "id_str": "761296210418397184", "is_retweet": false}, {"created_at": "Sat Jan 30 18:21:52 +0000 2016", "text": ".@ChelseaClinton is taking over our Instagram account from Iowa today! Follow along: https://t.co/2yRcyqtNQp https://t.co/geLJIi0Zc5", "in_reply_to_screen_name": null, "retweet_count": 2982, "favorite_count": 3709, "source": "TweetDeck", "id_str": "693499385305550850", "is_retweet": false}, {"created_at": "Wed Jun 08 03:07:12 +0000 2016", "text": "Thank you. https://t.co/JeMUyYFlzJ", "in_reply_to_screen_name": null, "retweet_count": 5152, "favorite_count": 15784, "source": "TweetDeck", "id_str": "740379623968608257", "is_retweet": false}, {"created_at": "Sat Jan 23 21:28:32 +0000 2016", "text": "To all the #Hillary2016 volunteers canvassing in the cold today: you are champions! \n\n(\ud83d\udcf7: @adinofacollege) https://t.co/pdoB3dFvts", "in_reply_to_screen_name": null, "retweet_count": 442, "favorite_count": 1465, "source": "TweetDeck", "id_str": "691009645368975360", "is_retweet": false}, {"created_at": "Tue Jul 26 02:45:12 +0000 2016", "text": "\u201cIf you believe we are stronger together, then let\u2019s work our hearts out to make Hillary Clinton the next president.\u201d \u2014@ElizabethForMA", "in_reply_to_screen_name": null, "retweet_count": 1661, "favorite_count": 6386, "source": "TweetDeck", "id_str": "757768703521988610", "is_retweet": false}, {"created_at": "Wed Mar 23 15:14:06 +0000 2016", "text": "This isn't just a contest between candidates\u2014it's between fundamentally different views of our values.\nhttps://t.co/yjjMso93e0", "in_reply_to_screen_name": null, "retweet_count": 1160, "favorite_count": 2620, "source": "Twitter Web Client", "id_str": "712658687752450049", "is_retweet": false}, {"created_at": "Mon Jan 18 19:06:34 +0000 2016", "text": "The children of Flint have been drinking lead-poisoned water for more than a year. That\u2019s absolutely unacceptable.\nhttps://t.co/nmw6E0dmU8", "in_reply_to_screen_name": null, "retweet_count": 1035, "favorite_count": 1847, "source": "Twitter Web Client", "id_str": "689161981064957955", "is_retweet": false}, {"created_at": "Fri Jan 29 03:59:51 +0000 2016", "text": "We can\u2019t let Republicans take us back to policies that failed us in the past. Add your name if you agree: https://t.co/rrZ34GVgkK #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 426, "favorite_count": 1172, "source": "TweetDeck", "id_str": "692920064480264192", "is_retweet": false}, {"created_at": "Fri Jun 10 17:10:11 +0000 2016", "text": "Laws that restrict access to abortion don\u2019t make women less likely to seek it\u2014they just make women less safe. https://t.co/vj4ZOeHq4V", "in_reply_to_screen_name": null, "retweet_count": 3032, "favorite_count": 8528, "source": "TweetDeck", "id_str": "741316543800352768", "is_retweet": false}, {"created_at": "Wed Mar 30 16:27:16 +0000 2016", "text": "So far we\u2019ve received nearly 9 million votes\u2014more than a million more than Donald Trump and 2.5 million more than Senator Sanders.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 904, "favorite_count": 1848, "source": "TweetDeck", "id_str": "715213817647489025", "is_retweet": false}, {"created_at": "Mon Jan 18 03:59:02 +0000 2016", "text": "No questions at #DemDebate, but we'll say it now: The women of America deserve a champion in the White House. https://t.co/HnEOtjn8jd", "in_reply_to_screen_name": null, "retweet_count": 1174, "favorite_count": 3054, "source": "TweetDeck", "id_str": "688933589212344324", "is_retweet": false}, {"created_at": "Fri Oct 21 21:20:10 +0000 2016", "text": "\u201cWe\u2019ve got to make sure that women and girls are treated with the dignity and respect in our country that we deserve.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1155, "favorite_count": 2992, "source": "TweetDeck", "id_str": "789577038369845248", "is_retweet": false}, {"created_at": "Mon Nov 07 04:23:45 +0000 2016", "text": "\"Women's rights are human rights\"\u2014and 132 more reasons Hillary should be our next president. https://t.co/HdDk0FhUBF", "in_reply_to_screen_name": null, "retweet_count": 4620, "favorite_count": 10997, "source": "TweetDeck", "id_str": "795481845244821504", "is_retweet": false}, {"created_at": "Tue May 03 16:57:56 +0000 2016", "text": "Live in Indiana? Go vote: Hillary needs you. Text WHERE to 47246 to find your polling place. https://t.co/sZqWV6DCfn", "in_reply_to_screen_name": null, "retweet_count": 965, "favorite_count": 1937, "source": "TweetDeck", "id_str": "727542721196515328", "is_retweet": false}, {"created_at": "Tue Mar 22 18:44:21 +0000 2016", "text": "Go vote today, Arizona\u2014Hillary's counting on you! Text WHERE to 47246 to find your polling place. https://t.co/GQeLeY06VD", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 1965, "source": "TweetDeck", "id_str": "712349210184708096", "is_retweet": false}, {"created_at": "Sat Jul 16 15:34:04 +0000 2016", "text": "\"I long for the day that Roe v. Wade is sent to the ash heap of history.\" \u2014Trump's VP pick, Mike Pence https://t.co/Vpmlob42qk", "in_reply_to_screen_name": null, "retweet_count": 3249, "favorite_count": 4170, "source": "TweetDeck", "id_str": "754338319522201600", "is_retweet": false}, {"created_at": "Wed May 18 03:51:31 +0000 2016", "text": "Thanks for having our back, Kentucky. https://t.co/JW6ecXFOL2", "in_reply_to_screen_name": null, "retweet_count": 1300, "favorite_count": 5139, "source": "Twitter for iPhone", "id_str": "732780632720445440", "is_retweet": false}, {"created_at": "Thu Jul 28 19:06:50 +0000 2016", "text": "\"No matter how daunting the odds; no matter how much people try to knock her down, she never, ever quits.\" \u2014@POTUS https://t.co/oJ2rKzubWY", "in_reply_to_screen_name": null, "retweet_count": 4736, "favorite_count": 17095, "source": "TweetDeck", "id_str": "758740516154421248", "is_retweet": false}, {"created_at": "Wed Jun 01 16:06:44 +0000 2016", "text": "Some of Trump University's tactics: push people to take on debt, cash out retirement, max out credit cards\u2014whatever it took to buy classes.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 938, "favorite_count": 1396, "source": "TweetDeck", "id_str": "738039083566501888", "is_retweet": false}, {"created_at": "Sat Feb 27 16:59:03 +0000 2016", "text": "Know someone in South Carolina who\u2019s not sure who to vote for today? Share this. https://t.co/KeNnWVqNhM", "in_reply_to_screen_name": null, "retweet_count": 863, "favorite_count": 1870, "source": "Twitter Web Client", "id_str": "703625402380591105", "is_retweet": false}, {"created_at": "Wed Oct 12 19:37:19 +0000 2016", "text": "Florida, good news! Your voter registration deadline is extended to Tuesday, October 18 at 5pm ET. Forms must be po\u2026 https://t.co/F94apvDU2N", "in_reply_to_screen_name": null, "retweet_count": 4133, "favorite_count": 9407, "source": "TweetDeck", "id_str": "786289663636074496", "is_retweet": false}, {"created_at": "Wed Jul 13 17:03:53 +0000 2016", "text": "The vast majority of gun owners agree: we have to prevent gun violence.\n\nIf we\u2019re looking for common ground, this is common ground.", "in_reply_to_screen_name": null, "retweet_count": 1030, "favorite_count": 4400, "source": "TweetDeck", "id_str": "753273756798386176", "is_retweet": false}, {"created_at": "Tue Feb 09 18:31:04 +0000 2016", "text": "Checking in to say hi to Hillary on primary day in New Hampshire. https://t.co/S88NBvunf4", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 1437, "source": "TweetDeck", "id_str": "697125577438855169", "is_retweet": false}, {"created_at": "Tue Sep 13 01:40:08 +0000 2016", "text": "Student debt is a major drag on our economy, and it's holding people back from moving forward with life. https://t.co/XdjEjJ2CaM", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 684, "favorite_count": 1813, "source": "TweetDeck", "id_str": "775509335921291264", "is_retweet": false}, {"created_at": "Wed Feb 10 02:20:37 +0000 2016", "text": "\"When people anywhere in America are held back by injustice, that demands action.\" \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 487, "favorite_count": 1108, "source": "TweetDeck", "id_str": "697243744605708288", "is_retweet": false}, {"created_at": "Thu Oct 13 16:52:32 +0000 2016", "text": "RT @ladygaga: .@FLOTUS watching you speak on @CNN in New Hampshire in tears. You are a true role model and leader.", "in_reply_to_screen_name": null, "retweet_count": 4395, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786610585148334080", "is_retweet": true}, {"created_at": "Mon Oct 10 01:58:10 +0000 2016", "text": "RT @TheBriefing2016: Think the Bush tax cuts didn't give enough money away to the super wealthy? \n\nYou'll love the Trump tax cut. #debate h\u2026", "in_reply_to_screen_name": null, "retweet_count": 1107, "favorite_count": 0, "source": "TweetDeck", "id_str": "785298347804520448", "is_retweet": true}, {"created_at": "Sun Jan 31 20:29:34 +0000 2016", "text": "Pausing backstage in Cedar Rapids, Iowa to capture the moment.\nhttps://t.co/PkJ5dQpSR8", "in_reply_to_screen_name": null, "retweet_count": 1178, "favorite_count": 3621, "source": "Twitter Web Client", "id_str": "693893908976144384", "is_retweet": false}, {"created_at": "Thu Mar 10 02:34:54 +0000 2016", "text": "\"Do you regret voting against [immigration reform] now in hindsight?\"\n@BernieSanders: \"No.\" https://t.co/3b7YGOEQ8N #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 602, "source": "TweetDeck", "id_str": "707756585402159109", "is_retweet": false}, {"created_at": "Fri Jul 29 03:00:50 +0000 2016", "text": "\u201cDemocrats, we are the party of working people.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1603, "favorite_count": 4922, "source": "TweetDeck", "id_str": "758859802181181441", "is_retweet": false}, {"created_at": "Tue Jan 26 03:33:22 +0000 2016", "text": "Hillary tiene d\u00e9cadas de experiencia y est\u00e1 preparada para continuar el progreso alcanzado por el Presidente Obama. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 306, "favorite_count": 644, "source": "TweetDeck", "id_str": "691826232539922432", "is_retweet": false}, {"created_at": "Thu Oct 13 16:48:03 +0000 2016", "text": "\"The men in my life do not talk about women like this, and I know that my family is not unusual.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 933, "favorite_count": 2290, "source": "TweetDeck", "id_str": "786609457740546048", "is_retweet": false}, {"created_at": "Fri Jul 29 03:03:41 +0000 2016", "text": "\"It\u2019s wrong to take tax breaks with one hand and give out pink slips with the other.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1755, "favorite_count": 5144, "source": "TweetDeck", "id_str": "758860520229261313", "is_retweet": false}, {"created_at": "Thu Feb 04 04:03:51 +0000 2016", "text": "The ACA has brought health coverage to millions of Americans. We are going to build on that progress, not start over. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 1210, "source": "TweetDeck", "id_str": "695095396603944960", "is_retweet": false}, {"created_at": "Mon Jun 20 21:19:05 +0000 2016", "text": "Our prayers are not enough to prevent gun violence.\n\nTell your senators to vote to expand background checks tonight: https://t.co/NLNnxCplEf", "in_reply_to_screen_name": null, "retweet_count": 1525, "favorite_count": 3911, "source": "TweetDeck", "id_str": "745003058053058561", "is_retweet": false}, {"created_at": "Tue Nov 01 00:36:26 +0000 2016", "text": "Computer scientists have apparently uncovered a covert server linking the Trump Organization to a Russian-based ban\u2026 https://t.co/zJJqqr6Chk", "in_reply_to_screen_name": null, "retweet_count": 12640, "favorite_count": 16142, "source": "TweetDeck", "id_str": "793250312119263233", "is_retweet": false}, {"created_at": "Fri Nov 04 22:04:34 +0000 2016", "text": "RT @HillaryforAZ: Glad to hear it will be easier to vote in AZ before Tuesday. As in years before, neighbors can take neighbors' ballots to\u2026", "in_reply_to_screen_name": null, "retweet_count": 1022, "favorite_count": 0, "source": "TweetDeck", "id_str": "794661644903337989", "is_retweet": true}, {"created_at": "Fri Jul 29 03:16:14 +0000 2016", "text": "\"Donald Trump says, and this is a quote, 'I know more about ISIS than the generals do.'  \n\nNo, Donald, you don't.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 7408, "favorite_count": 18787, "source": "TweetDeck", "id_str": "758863680037466116", "is_retweet": false}, {"created_at": "Wed Aug 17 17:40:03 +0000 2016", "text": "If you do your job, you\u2019re supposed to be rewarded for your work, not stiffed. https://t.co/un2YiRLEYF", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1336, "favorite_count": 2085, "source": "TweetDeck", "id_str": "765966433692123136", "is_retweet": false}, {"created_at": "Thu Jul 21 12:13:35 +0000 2016", "text": "Donald Trump is...occasionally right. #RNCinCLE\nhttps://t.co/K0V5FdfeQq", "in_reply_to_screen_name": null, "retweet_count": 4221, "favorite_count": 8118, "source": "Twitter Web Client", "id_str": "756099802752880642", "is_retweet": false}, {"created_at": "Wed Jan 20 22:00:05 +0000 2016", "text": "A reminder of what we're all fighting for.\nhttps://t.co/at0R6wBsuf", "in_reply_to_screen_name": null, "retweet_count": 667, "favorite_count": 1347, "source": "Twitter Web Client", "id_str": "689930421988028416", "is_retweet": false}, {"created_at": "Wed Nov 02 22:54:24 +0000 2016", "text": "\"Everyone is safer when the police respect the people they protect and when the people respect the police who serve them.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 797, "favorite_count": 1902, "source": "TweetDeck", "id_str": "793949406634582016", "is_retweet": false}, {"created_at": "Thu Mar 31 23:53:10 +0000 2016", "text": "Still nothing from Congress to help the people of Puerto Rico. Time for action on the debt crisis that preserves PR's self-government.", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 2420, "source": "TweetDeck", "id_str": "715688416525070340", "is_retweet": false}, {"created_at": "Sat Apr 30 14:19:32 +0000 2016", "text": "If you see a bully, stand up to him. https://t.co/qLDbRhK1W2", "in_reply_to_screen_name": null, "retweet_count": 2208, "favorite_count": 4339, "source": "Twitter Web Client", "id_str": "726415696209530881", "is_retweet": false}, {"created_at": "Sun Oct 23 18:04:15 +0000 2016", "text": "The @NewYorker endorses Hillary: https://t.co/LLClRNgfDw https://t.co/0guNUsOuAL", "in_reply_to_screen_name": null, "retweet_count": 3379, "favorite_count": 9782, "source": "TweetDeck", "id_str": "790252511928156162", "is_retweet": false}, {"created_at": "Tue Oct 25 02:54:32 +0000 2016", "text": "A man who disrespects our service members cannot be our Commander-in-Chief. https://t.co/eerqQrjRbz", "in_reply_to_screen_name": null, "retweet_count": 5886, "favorite_count": 12570, "source": "Media Studio", "id_str": "790748347615371264", "is_retweet": false}, {"created_at": "Tue Sep 27 15:32:57 +0000 2016", "text": "\"I'm glad Trump found out that Crimea was part of Ukraine. By the way, I heard he was on the verge of acknowledging gravity.\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 6601, "favorite_count": 19168, "source": "TweetDeck", "id_str": "780792352214573057", "is_retweet": false}, {"created_at": "Tue Oct 04 13:11:00 +0000 2016", "text": "\"I've known Hillary since September of 1958...we were just thinking of the next Nancy Drew book.\" \u2014Hillary's lifelo\u2026 https://t.co/WpWfIPje59", "in_reply_to_screen_name": null, "retweet_count": 1643, "favorite_count": 5812, "source": "Media Studio", "id_str": "783293344810139648", "is_retweet": false}, {"created_at": "Thu Mar 10 03:27:39 +0000 2016", "text": "It\u2019s a lot easier to get from 90% coverage to 100% than to start over. We need to build on and protect the Affordable Care Act. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1402, "favorite_count": 2926, "source": "TweetDeck", "id_str": "707769860948934657", "is_retweet": false}, {"created_at": "Mon Jan 18 03:53:20 +0000 2016", "text": "\"If the kids in a rich suburb of Detroit had been drinking contaminated water, we would have done something about it.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 2221, "favorite_count": 3864, "source": "Twitter Web Client", "id_str": "688932156572327936", "is_retweet": false}, {"created_at": "Tue Sep 06 19:15:37 +0000 2016", "text": "Vote this year like your future depends on it\u2014because it does: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1203, "favorite_count": 2420, "source": "TweetDeck", "id_str": "773238242741219333", "is_retweet": false}, {"created_at": "Fri Feb 26 22:26:00 +0000 2016", "text": "Obamacare saved this woman when she needed emergency surgery. Let's build on its progress, not start over.\nhttps://t.co/TPMaxuk6lN", "in_reply_to_screen_name": null, "retweet_count": 1176, "favorite_count": 2197, "source": "Twitter Web Client", "id_str": "703345295904501760", "is_retweet": false}, {"created_at": "Fri Jul 22 17:25:07 +0000 2016", "text": "What Trump really means when he says \"Make America Great Again\u201d: https://t.co/Kd42NekJ0c", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 2478, "source": "TweetDeck", "id_str": "756540592201629696", "is_retweet": false}, {"created_at": "Tue Nov 08 15:19:57 +0000 2016", "text": "RT @EricaSmegs: Don't worry, Mom, I'll remember to vote today even though ur not here to remind me. Love you. This one is for you. https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 2929, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796009368097554432", "is_retweet": true}, {"created_at": "Wed Jan 13 01:32:19 +0000 2016", "text": "\u201cAn open seat at the State of the Union will honor gun violence victims\u2014including my 6-year-old.\u201d https://t.co/nUPelGbEhW #SOTU", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 844, "source": "TweetDeck", "id_str": "687084729615646720", "is_retweet": false}, {"created_at": "Sat Apr 02 15:33:16 +0000 2016", "text": "Picked up this necklace at a great women-owned shop in Madison, WI. Looks like they've got fans in New York, too. -H https://t.co/nsYBTtSwRc", "in_reply_to_screen_name": null, "retweet_count": 2242, "favorite_count": 10618, "source": "TweetDeck", "id_str": "716287389472305152", "is_retweet": false}, {"created_at": "Tue Oct 18 22:22:14 +0000 2016", "text": "Automatically donate every time Trump tweets something offensive with our new tool: https://t.co/XcTt51uKsd https://t.co/WPM1I9yeVv", "in_reply_to_screen_name": null, "retweet_count": 2616, "favorite_count": 6112, "source": "Twitter Web Client", "id_str": "788505495724236800", "is_retweet": false}, {"created_at": "Sat Jul 23 17:49:36 +0000 2016", "text": "\"I\u2019m a Catholic, and Hillary is a Methodist, but I tell you, her creed is the same as mine: \nDo all the good you can.\u201d \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 1703, "favorite_count": 4947, "source": "TweetDeck", "id_str": "756909139306110976", "is_retweet": false}, {"created_at": "Tue Nov 01 20:12:40 +0000 2016", "text": "Trump's \"also been accused of doing this at the Miss Teen USA pageant...some of them were just 15 years old.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 821, "favorite_count": 1463, "source": "TweetDeck", "id_str": "793546319268839424", "is_retweet": false}, {"created_at": "Fri Apr 15 18:45:19 +0000 2016", "text": "\"We have a presidential candidate by the name of Donald Trump saying that women should be punished.\" https://t.co/kN7zI8YWby", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1557, "source": "TweetDeck", "id_str": "721046762304237569", "is_retweet": false}, {"created_at": "Wed Sep 21 19:04:30 +0000 2016", "text": "We\u2019ve got to build an economy that welcomes people with disabilities, values their work, rewards them fairly, and treats them with respect.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 665, "favorite_count": 1448, "source": "TweetDeck", "id_str": "778671261819994113", "is_retweet": false}, {"created_at": "Sun Jun 26 21:27:40 +0000 2016", "text": "When you're in office Americans count on you for real solutions. You can\u2019t respond with a snarky tweet\u2014you have to actually deliver results.", "in_reply_to_screen_name": null, "retweet_count": 2129, "favorite_count": 7185, "source": "TweetDeck", "id_str": "747179548010254336", "is_retweet": false}, {"created_at": "Fri Mar 04 02:51:03 +0000 2016", "text": "True on foreign policy\u2014and literally everything else. #GOPdebate https://t.co/kP4j13iwQV", "in_reply_to_screen_name": null, "retweet_count": 2487, "favorite_count": 6159, "source": "TweetDeck", "id_str": "705586323571261440", "is_retweet": false}, {"created_at": "Sun Feb 28 00:02:20 +0000 2016", "text": "To South Carolina, to the volunteers at the heart of our campaign, to the supporters who power it: thank you. -H https://t.co/JFTUZ2yBxf", "in_reply_to_screen_name": null, "retweet_count": 2246, "favorite_count": 5561, "source": "TweetDeck", "id_str": "703731925433896960", "is_retweet": false}, {"created_at": "Thu Nov 03 14:37:29 +0000 2016", "text": "Donald Trump just got one of his only newspaper endorsements of this election...from the Ku Klux Klan. https://t.co/kT4BZFuSPJ", "in_reply_to_screen_name": null, "retweet_count": 6981, "favorite_count": 11098, "source": "TweetDeck", "id_str": "794186742916153345", "is_retweet": false}, {"created_at": "Wed Jul 27 19:12:47 +0000 2016", "text": "RT @BuzzFeed: People are sharing photos of their grandmas celebrating Hillary Clinton\u2019s nomination https://t.co/qmIeGOtfPb https://t.co/qdb\u2026", "in_reply_to_screen_name": null, "retweet_count": 1985, "favorite_count": 0, "source": "TweetDeck", "id_str": "758379625709961216", "is_retweet": true}, {"created_at": "Tue Apr 05 21:00:55 +0000 2016", "text": "Proud NY is leading on paid leave\u2014but your ability to make ends meet shouldn't depend on what state you live in. https://t.co/mnbI7JXqew", "in_reply_to_screen_name": null, "retweet_count": 1256, "favorite_count": 2905, "source": "TweetDeck", "id_str": "717457009931599873", "is_retweet": false}, {"created_at": "Sat Oct 22 16:10:45 +0000 2016", "text": "\"My son was Captain Humayun Khan. He was 27 years old. And he was a Muslim American.\" https://t.co/as9k2RMdV5", "in_reply_to_screen_name": null, "retweet_count": 8691, "favorite_count": 18527, "source": "Media Studio", "id_str": "789861560755683328", "is_retweet": false}, {"created_at": "Fri Sep 16 01:08:07 +0000 2016", "text": "America is one nation under God, indivisible, with liberty and justice for all. Not just for people who look or worship a certain way.", "in_reply_to_screen_name": null, "retweet_count": 2698, "favorite_count": 7584, "source": "TweetDeck", "id_str": "776588443489013760", "is_retweet": false}, {"created_at": "Thu Jul 28 03:15:29 +0000 2016", "text": "\u201cThen there\u2019s Donald Trump. He\u2019s not really a plans guy, not really a facts guy either.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 2261, "favorite_count": 5986, "source": "TweetDeck", "id_str": "758501102304264192", "is_retweet": false}, {"created_at": "Thu Nov 03 21:46:43 +0000 2016", "text": "RT @Hillary_esp: \"\u00c9l no entiende que las familias biling\u00fces y multiling\u00fces contribuyen a nuestra diversidad y a nuestra econom\u00eda\"\u2014@TimKaine\u2026", "in_reply_to_screen_name": null, "retweet_count": 585, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794294763335929856", "is_retweet": true}, {"created_at": "Thu Sep 29 18:19:18 +0000 2016", "text": "As president Hillary will stand up for kids and families. She\u2019s done it her whole life: https://t.co/vjdX8qeO6F", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 522, "favorite_count": 1326, "source": "TweetDeck", "id_str": "781558989687558146", "is_retweet": false}, {"created_at": "Fri Feb 12 18:01:41 +0000 2016", "text": "We need to do more to support small businesses\u2014particularly minority- and women-owned businesses\u2014so they can get financing and grow.", "in_reply_to_screen_name": null, "retweet_count": 776, "favorite_count": 2146, "source": "TweetDeck", "id_str": "698205347450847233", "is_retweet": false}, {"created_at": "Wed Sep 07 21:00:45 +0000 2016", "text": "A man who talks about our veterans and military families like this doesn't deserve to be Commander-in-Chief. https://t.co/4s6SvAAyNA", "in_reply_to_screen_name": null, "retweet_count": 4060, "favorite_count": 8795, "source": "Twitter Web Client", "id_str": "773627088683339776", "is_retweet": false}, {"created_at": "Wed Aug 17 13:09:10 +0000 2016", "text": "One candidate would help millions of hardworking Americans. The other would only help those at the top. https://t.co/qlnXNZiZmh", "in_reply_to_screen_name": null, "retweet_count": 2356, "favorite_count": 5887, "source": "TweetDeck", "id_str": "765898264709304320", "is_retweet": false}, {"created_at": "Fri Apr 29 13:07:11 +0000 2016", "text": "If you see bigotry, oppose it. If you see violence, condemn it. If you see a bully, stand up to him.\nhttps://t.co/DGRScBIDnX", "in_reply_to_screen_name": null, "retweet_count": 2950, "favorite_count": 5611, "source": "Twitter Web Client", "id_str": "726035099125346305", "is_retweet": false}, {"created_at": "Thu Aug 25 01:49:04 +0000 2016", "text": "\"He is taking a hate movement mainstream. He has brought it into his campaign.\" \u2014Hillary to @andersoncooper on Trump", "in_reply_to_screen_name": null, "retweet_count": 3178, "favorite_count": 7497, "source": "TweetDeck", "id_str": "768626213015478277", "is_retweet": false}, {"created_at": "Mon Sep 12 20:46:58 +0000 2016", "text": "Thanks to everyone who\u2019s reached out with well wishes! I\u2019m feeling fine and getting better. -H", "in_reply_to_screen_name": null, "retweet_count": 9629, "favorite_count": 48478, "source": "Twitter Web Client", "id_str": "775435555601543168", "is_retweet": false}, {"created_at": "Thu Aug 25 15:19:57 +0000 2016", "text": "Thank you to the Orlando Health and Florida Hospital for showing empathy and kindness in the face of hate. -H https://t.co/2RODu7Y5bn", "in_reply_to_screen_name": null, "retweet_count": 2744, "favorite_count": 8063, "source": "TweetDeck", "id_str": "768830280585052160", "is_retweet": false}, {"created_at": "Sun Oct 02 14:47:28 +0000 2016", "text": ".@TimKaine's favorite records\u2014and 13 other things you should know about America's next vice president: https://t.co/re60pwBfxc", "in_reply_to_screen_name": null, "retweet_count": 2612, "favorite_count": 6224, "source": "TweetDeck", "id_str": "782592842921287681", "is_retweet": false}, {"created_at": "Fri Jun 10 16:56:14 +0000 2016", "text": "\"Today, I want to start by saying something you don\u2019t hear often enough: Thank you.\u201d \u2014Hillary to Planned Parenthood", "in_reply_to_screen_name": null, "retweet_count": 1550, "favorite_count": 5754, "source": "TweetDeck", "id_str": "741313032043782144", "is_retweet": false}, {"created_at": "Wed Sep 21 19:10:48 +0000 2016", "text": "We'll make our economy and country more welcoming to people with disabilities. We all win when everyone gets to share in America's promise.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 731, "favorite_count": 1999, "source": "TweetDeck", "id_str": "778672847610839040", "is_retweet": false}, {"created_at": "Wed Apr 20 23:22:12 +0000 2016", "text": "\"Victory\" never tasted so good. Thanks, @MikeyLikesItNY.\nhttps://t.co/1jxm6JscOf", "in_reply_to_screen_name": null, "retweet_count": 842, "favorite_count": 2366, "source": "Twitter Web Client", "id_str": "722928381600206848", "is_retweet": false}, {"created_at": "Thu Jun 30 15:53:48 +0000 2016", "text": "If Republicans actually wanted to protect women's health, they'd support Planned Parenthood\u2014not attack it.\nhttps://t.co/Av0vFKpHH7", "in_reply_to_screen_name": null, "retweet_count": 2270, "favorite_count": 5351, "source": "Twitter Web Client", "id_str": "748545076553347073", "is_retweet": false}, {"created_at": "Sat Jan 23 00:27:59 +0000 2016", "text": "43 years later, #RoevWade is facing threats in states and the courts. And laws like Hyde keep abortion access out of reach for many. -H", "in_reply_to_screen_name": null, "retweet_count": 709, "favorite_count": 1775, "source": "TweetDeck", "id_str": "690692418740453376", "is_retweet": false}, {"created_at": "Fri Jan 29 03:35:23 +0000 2016", "text": "Reproductive rights are human rights. Women\u2014not any of the politicians on stage\u2014should make decisions about their own health. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1568, "favorite_count": 3173, "source": "TweetDeck", "id_str": "692913905337815044", "is_retweet": false}, {"created_at": "Tue Sep 27 18:02:54 +0000 2016", "text": "\"What kind of a person would want to root for 9 million families losing their homes?\n\nOne who should never be president.\" \u2014Hillary on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1410, "favorite_count": 3881, "source": "TweetDeck", "id_str": "780830087457406980", "is_retweet": false}, {"created_at": "Thu Jan 21 19:16:34 +0000 2016", "text": "You shouldn\u2019t have to be rich to make your voice heard. Hillary on why it\u2019s time to reverse Citizens United: https://t.co/0JXLzK1MMD", "in_reply_to_screen_name": null, "retweet_count": 491, "favorite_count": 943, "source": "TweetDeck", "id_str": "690251657343533056", "is_retweet": false}, {"created_at": "Fri Sep 16 02:36:38 +0000 2016", "text": "The polls are closer than ever, and the stakes couldn't be higher. Chip in today. https://t.co/Ea6PC9Wuxq  https://t.co/ChwQM3NqJe", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 2190, "source": "TweetDeck", "id_str": "776610719441780736", "is_retweet": false}, {"created_at": "Tue Jan 12 18:58:22 +0000 2016", "text": ".@BradyBuzz: Hillary consistently put the safety of Americans ahead of the interests of the corporate gun lobby. https://t.co/rcF1nJ2aQF", "in_reply_to_screen_name": null, "retweet_count": 302, "favorite_count": 770, "source": "TweetDeck", "id_str": "686985590223552512", "is_retweet": false}, {"created_at": "Thu Mar 10 02:44:00 +0000 2016", "text": "\"The money that rescued the auto industry was in that bill. Senator Sanders voted against it.\u201d \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 695, "favorite_count": 1279, "source": "TweetDeck", "id_str": "707758877253767168", "is_retweet": false}, {"created_at": "Wed Jun 08 03:18:26 +0000 2016", "text": "Text CONGRATS to 47246 to tell Hillary you're proud to be by her side all the way to the White House. https://t.co/bBCd6SF3Vf", "in_reply_to_screen_name": null, "retweet_count": 1547, "favorite_count": 5528, "source": "TweetDeck", "id_str": "740382449566375936", "is_retweet": false}, {"created_at": "Tue Nov 08 03:48:40 +0000 2016", "text": "RT @RobbyMook: We've broken early vote records across the country. Tomorrow, history is up to you, @HFA volunteers! #GOTVforHRC https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 2934, "favorite_count": 0, "source": "TweetDeck", "id_str": "795835404121440256", "is_retweet": true}, {"created_at": "Wed Oct 05 02:24:09 +0000 2016", "text": "The Trump Foundation has spent \"virtually every cent on charitable causes.\" \u2014@mike_pence https://t.co/0upgTLQbA0\u2026 https://t.co/2muTJcHzE9", "in_reply_to_screen_name": null, "retweet_count": 3573, "favorite_count": 6566, "source": "TweetDeck", "id_str": "783492945714507776", "is_retweet": false}, {"created_at": "Thu Jul 28 00:00:08 +0000 2016", "text": "RT @ChrisMurphyCT: We have had #enough of the unrelenting gun violence in America. It's time for us to fight back, together. #ImWithHer htt\u2026", "in_reply_to_screen_name": null, "retweet_count": 1845, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758451939386527744", "is_retweet": true}, {"created_at": "Mon May 23 17:54:43 +0000 2016", "text": "\"You are often unsung heroes. And I want you to know this: Your fights are my fights.\" \u2014Hillary to @SEIU members in Detroit", "in_reply_to_screen_name": null, "retweet_count": 506, "favorite_count": 1268, "source": "TweetDeck", "id_str": "734804767076167681", "is_retweet": false}, {"created_at": "Thu May 19 19:39:09 +0000 2016", "text": "El voto del Senado hoy sobre Zika es un paso importante para combatirlo\u2014pero no es suficiente. Los republicanos deber\u00edan aprobar presupuesto", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 304, "favorite_count": 581, "source": "TweetDeck", "id_str": "733381497303015426", "is_retweet": false}, {"created_at": "Thu Mar 10 03:03:26 +0000 2016", "text": "When someone says you're beholden to banks\u2014but @nytimes says your Wall St. plan is tougher. https://t.co/wSZCMOardW https://t.co/fPMCZdjoIP", "in_reply_to_screen_name": null, "retweet_count": 1431, "favorite_count": 2611, "source": "TweetDeck", "id_str": "707763767032020993", "is_retweet": false}, {"created_at": "Mon Oct 17 15:45:15 +0000 2016", "text": "We can't let Donald Trump bully his way to the presidency. https://t.co/WPLMpkLFYS", "in_reply_to_screen_name": null, "retweet_count": 6481, "favorite_count": 15777, "source": "Media Studio", "id_str": "788043203920494593", "is_retweet": false}, {"created_at": "Fri Jul 01 01:51:13 +0000 2016", "text": "Show Hillary she can count on you to stand up to Donald Trump. Chip in now: https://t.co/8ddWLJF5Cm https://t.co/R7lKLDLKI3", "in_reply_to_screen_name": null, "retweet_count": 736, "favorite_count": 2516, "source": "TweetDeck", "id_str": "748695422089228292", "is_retweet": false}, {"created_at": "Wed Feb 03 21:48:28 +0000 2016", "text": "3) An important part of being a progressive is making progress. From health care to fighting inequality, Hillary's record speaks for itself.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1260, "favorite_count": 2079, "source": "TweetDeck", "id_str": "695000926390738948", "is_retweet": false}, {"created_at": "Fri Sep 16 13:55:35 +0000 2016", "text": "\u201cThe American people deserve something to vote for, not just against.\u201d \u2014Hillary https://t.co/jd5Lwh595S", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 581, "favorite_count": 1120, "source": "TweetDeck", "id_str": "776781581025501184", "is_retweet": false}, {"created_at": "Thu Jul 14 15:47:27 +0000 2016", "text": "Hillary's new college plan will help more students, especially students of color, afford college: https://t.co/A4pWb3fOf4", "in_reply_to_screen_name": null, "retweet_count": 550, "favorite_count": 1671, "source": "TweetDeck", "id_str": "753616910907011072", "is_retweet": false}, {"created_at": "Mon Jul 25 02:38:24 +0000 2016", "text": ".@TimKaine is everything Donald Trump and Mike Pence are not: progressive and qualified to lead on day one. https://t.co/DBosbCSLcM", "in_reply_to_screen_name": null, "retweet_count": 3250, "favorite_count": 12190, "source": "TweetDeck", "id_str": "757404605496061952", "is_retweet": false}, {"created_at": "Tue Jul 19 03:20:30 +0000 2016", "text": "A good reminder. #RNCinCLE https://t.co/h64AePQG0x", "in_reply_to_screen_name": null, "retweet_count": 5498, "favorite_count": 11525, "source": "TweetDeck", "id_str": "755240874771116032", "is_retweet": false}, {"created_at": "Sat Nov 05 17:44:06 +0000 2016", "text": "We are seeing large numbers of people turning out, breaking records.\n\nMake sure you\u2019re ready to vote, too: https://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1258, "favorite_count": 4056, "source": "TweetDeck", "id_str": "794958484571885568", "is_retweet": false}, {"created_at": "Sun Jan 24 20:23:31 +0000 2016", "text": "Our favorite Snapchatting senator, @CoryBooker, is taking over Hillary\u2019s account. Follow along at \ud83d\udc7bhillaryclinton! https://t.co/yY1hBHJqfP", "in_reply_to_screen_name": null, "retweet_count": 641, "favorite_count": 2518, "source": "TweetDeck", "id_str": "691355670289977344", "is_retweet": false}, {"created_at": "Fri May 13 00:59:00 +0000 2016", "text": "Hillary's advice to @Wellesley graduates in 1992: \"Throw yourself into the world, and make your voice count.\" #TBT\nhttps://t.co/7DjeqWCHDW", "in_reply_to_screen_name": null, "retweet_count": 1404, "favorite_count": 2976, "source": "Twitter Web Client", "id_str": "730925276167692288", "is_retweet": false}, {"created_at": "Wed Mar 23 18:48:21 +0000 2016", "text": "Hillary has a three-part plan to defeat ISIS in the Middle East, around the world, and here at home. https://t.co/Nh1JrS2lmD", "in_reply_to_screen_name": null, "retweet_count": 1082, "favorite_count": 2271, "source": "Twitter Web Client", "id_str": "712712604276428800", "is_retweet": false}, {"created_at": "Thu Jul 28 02:37:10 +0000 2016", "text": "\"Folks, you cannot believe one word that comes out of Donald Trump's mouth.\u201d \u2014@TimKaine https://t.co/CKNVPbm999", "in_reply_to_screen_name": null, "retweet_count": 1910, "favorite_count": 5080, "source": "TweetDeck", "id_str": "758491460685615104", "is_retweet": false}, {"created_at": "Sat Mar 12 17:44:03 +0000 2016", "text": "\"If you play with matches, you can start a fire you can\u2019t control. That's not leadership\u2014it's political arson.\" \u2014Hillary on Trump's rhetoric", "in_reply_to_screen_name": null, "retweet_count": 2931, "favorite_count": 5581, "source": "TweetDeck", "id_str": "708710158222954497", "is_retweet": false}, {"created_at": "Wed Mar 16 01:06:47 +0000 2016", "text": "Hard-working Americans deserve a president with both the ideas and the know-how to create good jobs with rising incomes here in the U.S.", "in_reply_to_screen_name": null, "retweet_count": 1000, "favorite_count": 2803, "source": "TweetDeck", "id_str": "709908737650204677", "is_retweet": false}, {"created_at": "Thu Jul 28 02:12:20 +0000 2016", "text": "RT @timkaine: \"I took a year off law school to volunteer with Jesuit missionaries in Honduras. I taught kids welding &amp; carpentry.\" https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 2131, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "758485209771864064", "is_retweet": true}, {"created_at": "Thu Feb 04 17:23:11 +0000 2016", "text": "When drug companies like Valeant hike prices for profit, lives hang in the balance. One family\u2019s story: https://t.co/SkrIY89aUE", "in_reply_to_screen_name": null, "retweet_count": 319, "favorite_count": 615, "source": "TweetDeck", "id_str": "695296553968394241", "is_retweet": false}, {"created_at": "Wed Aug 03 20:58:58 +0000 2016", "text": "RT @washingtonpost: \"I was Capt. Khan\u2019s commander in Iraq. The Khan family is our family.\" https://t.co/Y1myW1WGjN via @PostOpinions", "in_reply_to_screen_name": null, "retweet_count": 1878, "favorite_count": 0, "source": "TweetDeck", "id_str": "760943061539098624", "is_retweet": true}, {"created_at": "Sat Feb 06 01:00:40 +0000 2016", "text": "Dedication. https://t.co/Gyi5RZdAkk", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 2164, "source": "TweetDeck", "id_str": "695774072098136064", "is_retweet": false}, {"created_at": "Tue Jul 26 03:18:21 +0000 2016", "text": "\"While...Trump is busy insulting one group after another, Hillary...understands that our diversity is one of our greatest strengths\" \u2014Bernie", "in_reply_to_screen_name": null, "retweet_count": 5070, "favorite_count": 14196, "source": "TweetDeck", "id_str": "757777047523557376", "is_retweet": false}, {"created_at": "Thu Mar 24 13:05:54 +0000 2016", "text": "We face serious challenges in the world\u2014but we won't turn on each other, our allies, or our principles. https://t.co/483XiaQRIy", "in_reply_to_screen_name": null, "retweet_count": 1654, "favorite_count": 4083, "source": "TweetDeck", "id_str": "712988811681206272", "is_retweet": false}, {"created_at": "Wed Jul 27 17:25:22 +0000 2016", "text": "RT @rosenbergerlm: \"The first time that a major presidential candidate has actively encouraged a foreign power to conduct espionage.\" https\u2026", "in_reply_to_screen_name": null, "retweet_count": 3782, "favorite_count": 0, "source": "TweetDeck", "id_str": "758352595396268032", "is_retweet": true}, {"created_at": "Thu Sep 08 23:14:07 +0000 2016", "text": "Let's beat back the assault on voting rights\u2014a blast from the Jim Crow past that must be stopped.\n\nWe should expand voting rights instead.", "in_reply_to_screen_name": null, "retweet_count": 1477, "favorite_count": 4757, "source": "TweetDeck", "id_str": "774023039608434688", "is_retweet": false}, {"created_at": "Sat Jul 23 17:18:01 +0000 2016", "text": "During law school, when his classmates were taking internships at prestigious firms, @TimKaine served as a missionary in Honduras.", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 3297, "source": "TweetDeck", "id_str": "756901194019266560", "is_retweet": false}, {"created_at": "Fri Jul 29 03:24:59 +0000 2016", "text": "Every generation of Americans has come together to make our country freer, fairer, and stronger. None of us\u2026can do it alone.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2645, "favorite_count": 8835, "source": "TweetDeck", "id_str": "758865879266242570", "is_retweet": false}, {"created_at": "Fri Feb 05 19:22:55 +0000 2016", "text": "My heart is with @SybrinaFulton on Trayvon's birthday. Today I'm carrying the memories of his life she shared with me. -H", "in_reply_to_screen_name": null, "retweet_count": 920, "favorite_count": 2070, "source": "TweetDeck", "id_str": "695689074921885696", "is_retweet": false}, {"created_at": "Fri Sep 23 19:58:45 +0000 2016", "text": "RT @tedcruz: I\u2019ve released 9 years of tax returns. RT if you agree it\u2019s time for Donald Trump to release his! https://t.co/08whtFVC0r", "in_reply_to_screen_name": null, "retweet_count": 8414, "favorite_count": 0, "source": "TweetDeck", "id_str": "779409689876566016", "is_retweet": true}, {"created_at": "Mon Nov 07 01:46:22 +0000 2016", "text": "\"Would my son Capt. Humayun Khan have a place in your America?\u2026Would anyone who isn\u2019t like you? \u2014Khizr Khan to Donald Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 957, "favorite_count": 2251, "source": "TweetDeck", "id_str": "795442237664612352", "is_retweet": false}, {"created_at": "Thu Nov 03 16:45:06 +0000 2016", "text": "RT @timkaine: \u00a1Hola! Les habla Tim Kaine. Hoy estar\u00e9 en Arizona donde dar\u00e9 mi discurso en espa\u00f1ol. \u00a1S\u00edganme en @Hillary_esp para m\u00e1s detall\u2026", "in_reply_to_screen_name": null, "retweet_count": 1619, "favorite_count": 0, "source": "TweetDeck", "id_str": "794218860597678080", "is_retweet": true}, {"created_at": "Tue Mar 08 20:29:04 +0000 2016", "text": "Today, Michigan and Mississippi head to the polls. Here\u2019s how we can bring home two more wins. https://t.co/OVS7U6DMKg", "in_reply_to_screen_name": null, "retweet_count": 557, "favorite_count": 1243, "source": "TweetDeck", "id_str": "707302133167755264", "is_retweet": false}, {"created_at": "Sun Jan 17 17:19:44 +0000 2016", "text": "No American working full-time should have to struggle to get by. Raising wages will help lift millions out of poverty.", "in_reply_to_screen_name": null, "retweet_count": 879, "favorite_count": 2206, "source": "TweetDeck", "id_str": "688772707270393857", "is_retweet": false}, {"created_at": "Sun Jun 26 20:48:57 +0000 2016", "text": "Las personas LGBT merecen vivir, trabajar y amar libres de discriminaci\u00f3n y violencia.\nhttps://t.co/PufUgICykr", "in_reply_to_screen_name": null, "retweet_count": 941, "favorite_count": 1937, "source": "Twitter Web Client", "id_str": "747169804205711360", "is_retweet": false}, {"created_at": "Sat Feb 20 22:16:16 +0000 2016", "text": "To everyone who turned out in every corner of Nevada with determination and heart: This is your win. Thank you. -H", "in_reply_to_screen_name": null, "retweet_count": 4364, "favorite_count": 9504, "source": "TweetDeck", "id_str": "701168517345841153", "is_retweet": false}, {"created_at": "Tue Jul 19 12:11:26 +0000 2016", "text": "A small business owner sold Donald Trump pianos for his Atlantic City casino.\n\nTrump stiffed him for the payment.\nhttps://t.co/9LMPenOZue", "in_reply_to_screen_name": null, "retweet_count": 5948, "favorite_count": 8141, "source": "Twitter Web Client", "id_str": "755374488213086209", "is_retweet": false}, {"created_at": "Tue Nov 08 06:08:56 +0000 2016", "text": "\"If you believe we should never write discrimination into our laws...you\u2019ve got to vote!\u201d \u2014Hillary https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1623, "favorite_count": 4493, "source": "TweetDeck", "id_str": "795870702834515968", "is_retweet": false}, {"created_at": "Thu May 19 17:40:19 +0000 2016", "text": "We can't sit by while extreme politicians attack women's basic rights. Not only is this unconstitutional\u2014it's wrong. https://t.co/nhCWgRIWKX", "in_reply_to_screen_name": null, "retweet_count": 2102, "favorite_count": 3444, "source": "TweetDeck", "id_str": "733351592477532160", "is_retweet": false}, {"created_at": "Wed Oct 05 02:41:31 +0000 2016", "text": "RT @Millennials4Her: Tonight Pence could not defend any of Donald Trump's awful statements. This is not a team we want in the White House.\u2026", "in_reply_to_screen_name": null, "retweet_count": 1692, "favorite_count": 0, "source": "TweetDeck", "id_str": "783497314816196608", "is_retweet": true}, {"created_at": "Fri May 13 16:06:20 +0000 2016", "text": "\"The annual cost of child care is higher than a year\u2019s tuition at the average 4 year public college.\" \u2014@glamourmag https://t.co/h7RlI9EVVg", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 1358, "source": "TweetDeck", "id_str": "731153615377829892", "is_retweet": false}, {"created_at": "Thu May 05 02:44:05 +0000 2016", "text": "Trump es el presunto nominado del Partido Republicano. No podemos dejar que su ret\u00f3rica odiosa y peligrosa se acerque a la Casa Blanca.", "in_reply_to_screen_name": null, "retweet_count": 1544, "favorite_count": 2268, "source": "TweetDeck", "id_str": "728052618380120064", "is_retweet": false}, {"created_at": "Fri Feb 12 02:50:38 +0000 2016", "text": "\"We are not going to deport 11 or 12 million people in this country.\" #DemDebate https://t.co/D44ehaBEmM", "in_reply_to_screen_name": null, "retweet_count": 1665, "favorite_count": 2132, "source": "TweetDeck", "id_str": "697976074358145025", "is_retweet": false}, {"created_at": "Mon Aug 08 21:31:54 +0000 2016", "text": "RT @elizabethforma: .@realDonaldTrump's econ plan was written by rich corporate insider advisors to make the economy even greater for rich\u2026", "in_reply_to_screen_name": null, "retweet_count": 5298, "favorite_count": 0, "source": "TweetDeck", "id_str": "762763288564367360", "is_retweet": true}, {"created_at": "Wed Mar 09 02:33:24 +0000 2016", "text": "We need to build on what makes America great\u2013our energy and optimism, our openness and creativity.", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 1573, "source": "TweetDeck", "id_str": "707393820498006018", "is_retweet": false}, {"created_at": "Mon Oct 10 14:32:12 +0000 2016", "text": "Trump lost last night's debate before he even took the stage, and it only got worse from there. https://t.co/GTZvkLzQRb", "in_reply_to_screen_name": null, "retweet_count": 2518, "favorite_count": 8678, "source": "TweetDeck", "id_str": "785488106141126656", "is_retweet": false}, {"created_at": "Thu Jul 28 01:38:56 +0000 2016", "text": "\"I believe we need a president who is a problem solver, not a bomb thrower.\" \u2014@MikeBloomberg", "in_reply_to_screen_name": null, "retweet_count": 1477, "favorite_count": 4601, "source": "TweetDeck", "id_str": "758476802943627264", "is_retweet": false}, {"created_at": "Fri Oct 07 02:01:48 +0000 2016", "text": "A lot has changed in the past two and a half decades. But the things we\u2019re fighting for remain the same. https://t.co/k0HVUYEhCI", "in_reply_to_screen_name": null, "retweet_count": 1599, "favorite_count": 5116, "source": "Twitter for iPhone", "id_str": "784212096808579073", "is_retweet": false}, {"created_at": "Sun Jun 05 16:02:11 +0000 2016", "text": "These California ESL students are using Hillary's 1995 speech in Beijing to learn English.\nhttps://t.co/5n6aJT9myq", "in_reply_to_screen_name": null, "retweet_count": 1710, "favorite_count": 3766, "source": "Twitter Web Client", "id_str": "739487489635667968", "is_retweet": false}, {"created_at": "Thu Mar 10 19:02:53 +0000 2016", "text": "Harriet Tubman devoted her life to freeing slaves and led the first-ever US military operation designed by a woman. https://t.co/DmWhaHI4jQ", "in_reply_to_screen_name": null, "retweet_count": 1818, "favorite_count": 3653, "source": "TweetDeck", "id_str": "708005221667086337", "is_retweet": false}, {"created_at": "Tue Jun 14 18:16:20 +0000 2016", "text": "RT if you're voting for Hillary today, Washington, D.C. Find your polling location here: https://t.co/m8s00nJqNP https://t.co/SlrT9HMDAu", "in_reply_to_screen_name": null, "retweet_count": 1246, "favorite_count": 3650, "source": "TweetDeck", "id_str": "742782742669185024", "is_retweet": false}, {"created_at": "Tue Apr 05 20:47:12 +0000 2016", "text": "It\u2019s 2016. The days of dismissing the pay gap as a \"women's issue\" are over. https://t.co/6RP2PMTzIY", "in_reply_to_screen_name": null, "retweet_count": 1284, "favorite_count": 2942, "source": "TweetDeck", "id_str": "717453556886978561", "is_retweet": false}, {"created_at": "Tue Apr 12 00:04:24 +0000 2016", "text": "A majority of Americans (and gun owners) support steps to reduce gun violence.\n\nRT if you're one of them.\nhttps://t.co/7XKxydUYKH", "in_reply_to_screen_name": null, "retweet_count": 4852, "favorite_count": 5719, "source": "Twitter Web Client", "id_str": "719677513820086272", "is_retweet": false}, {"created_at": "Tue Jul 05 20:44:24 +0000 2016", "text": "Follow along as @POTUS takes over Hillary's Instagram account on the trail in Charlotte: https://t.co/N09gfgmFmN https://t.co/CWgmdbce11", "in_reply_to_screen_name": null, "retweet_count": 1204, "favorite_count": 3970, "source": "TweetDeck", "id_str": "750430147203985408", "is_retweet": false}, {"created_at": "Mon Aug 08 02:31:03 +0000 2016", "text": "\"She doesn't just see one America. She sees all of America &amp; knows that we need all of us.\" \u2014@CoryBooker on Hillary\nhttps://t.co/EgkawPBAta", "in_reply_to_screen_name": null, "retweet_count": 3414, "favorite_count": 9169, "source": "Twitter Web Client", "id_str": "762476184047198208", "is_retweet": false}, {"created_at": "Sat Nov 05 12:56:13 +0000 2016", "text": "Ask yourself: Is this man fit to be the next president of the United States? https://t.co/caW4sPh7id", "in_reply_to_screen_name": null, "retweet_count": 3816, "favorite_count": 6406, "source": "TweetDeck", "id_str": "794886035360665601", "is_retweet": false}, {"created_at": "Sun Jul 17 01:03:45 +0000 2016", "text": "Your potential next president on building a wall...\n \nAnd bathrooms.\nhttps://t.co/SRnJ0if63D", "in_reply_to_screen_name": null, "retweet_count": 1974, "favorite_count": 4141, "source": "Twitter Web Client", "id_str": "754481682930028544", "is_retweet": false}, {"created_at": "Mon Oct 03 02:03:39 +0000 2016", "text": "\"Let's register to vote, show up to the polls, and vote for Hillary Clinton.\" \u2014@KingJames: https://t.co/tTgeqxNqYm https://t.co/PcBChoxpf9", "in_reply_to_screen_name": null, "retweet_count": 5816, "favorite_count": 14719, "source": "TweetDeck", "id_str": "782763010980999168", "is_retweet": false}, {"created_at": "Tue Jul 05 19:52:41 +0000 2016", "text": "\"I'm here today because I believe in Hillary Clinton. I want you to help elect her as the next President of the United States.\" \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1324, "favorite_count": 3422, "source": "TweetDeck", "id_str": "750417133562191872", "is_retweet": false}, {"created_at": "Sat Jan 16 23:58:06 +0000 2016", "text": "A Democratic president is the only thing preventing @PPFA from being defunded. https://t.co/OFhkgWcqKw", "in_reply_to_screen_name": null, "retweet_count": 1054, "favorite_count": 2514, "source": "TweetDeck", "id_str": "688510568412532736", "is_retweet": false}, {"created_at": "Fri Jul 22 03:12:56 +0000 2016", "text": "Every \ud83d\udc48  time \ud83d\udc48 @realDonaldTrump \ud83d\udc48 makes \ud83d\udc48 you \ud83d\udc48 mad \ud83d\udc48 chip \ud83d\udc48 in\ud83d\udc48  $1. https://t.co/dMjk7sxuSh https://t.co/yoDchxFpPZ", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 3615, "source": "TweetDeck", "id_str": "756326134162259969", "is_retweet": false}, {"created_at": "Wed Jun 08 03:48:18 +0000 2016", "text": "Don\u2019t let anyone tell you great things can\u2019t happen in America. Barriers can come down. Justice &amp; equality can win.\nhttps://t.co/5xcwapDvPJ", "in_reply_to_screen_name": null, "retweet_count": 4363, "favorite_count": 10370, "source": "Twitter Web Client", "id_str": "740389964882403328", "is_retweet": false}, {"created_at": "Mon Apr 18 15:20:16 +0000 2016", "text": "\"Anything is possible. Do not let where you come from dictate your life.\"\nHow one New York school is changing lives: https://t.co/QoaXphZmgc", "in_reply_to_screen_name": null, "retweet_count": 1311, "favorite_count": 2406, "source": "TweetDeck", "id_str": "722082326142984192", "is_retweet": false}, {"created_at": "Tue Jul 26 03:04:28 +0000 2016", "text": "\"We have come a long way in the last 7 1/2 years and I thank President Obama and Vice President Biden for their leadership.\" \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 2063, "favorite_count": 7282, "source": "TweetDeck", "id_str": "757773551751598080", "is_retweet": false}, {"created_at": "Tue Jul 26 02:12:21 +0000 2016", "text": "\"When she didn\u2019t win the nomination 8 years ago, she didn\u2019t get...disillusioned...she proudly stepped up to serve our country.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 4038, "favorite_count": 11771, "source": "TweetDeck", "id_str": "757760436842459137", "is_retweet": false}, {"created_at": "Tue May 03 19:10:50 +0000 2016", "text": "We\u2019ll create more good-paying jobs by investing in locally-driven projects and infrastructure improvements. https://t.co/nW2JqXGZT9", "in_reply_to_screen_name": null, "retweet_count": 408, "favorite_count": 839, "source": "TweetDeck", "id_str": "727576165150539776", "is_retweet": false}, {"created_at": "Tue Nov 08 01:59:48 +0000 2016", "text": "\"Tomorrow...the choice you face when you step into that voting booth could not be more clear and could not be more serious.\u201d \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 835, "favorite_count": 1996, "source": "TweetDeck", "id_str": "795808003912044544", "is_retweet": false}, {"created_at": "Wed May 18 20:13:51 +0000 2016", "text": "The first openly gay leader of a U.S. military branch\u2014a milestone we can all be proud of. Congrats, @SECARMY.  https://t.co/nRwZUuRIKv", "in_reply_to_screen_name": null, "retweet_count": 1178, "favorite_count": 3019, "source": "TweetDeck", "id_str": "733027845136646148", "is_retweet": false}, {"created_at": "Tue Sep 20 02:49:28 +0000 2016", "text": "RT @HillaryforOH: \"No one has the right to immigrate to this country.\" \u2014Donald Trump during his rally in Florida today\n\nWe disagree. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 1860, "favorite_count": 0, "source": "TweetDeck", "id_str": "778063499956195329", "is_retweet": true}, {"created_at": "Mon Oct 10 00:41:20 +0000 2016", "text": "Fighting for all the good she can, in all the ways she can, for as long as ever she can. #Debate https://t.co/0I9JI4BYEy", "in_reply_to_screen_name": null, "retweet_count": 3220, "favorite_count": 9036, "source": "Media Studio", "id_str": "785279010041323521", "is_retweet": false}, {"created_at": "Sun Sep 25 16:27:59 +0000 2016", "text": "Gold Star families have made sacrifices most of us can't even fathom. They deserve our respect and our thanks. https://t.co/c9gDHudBjt", "in_reply_to_screen_name": null, "retweet_count": 3237, "favorite_count": 8559, "source": "Media Studio", "id_str": "780081425714335747", "is_retweet": false}, {"created_at": "Sun Mar 06 14:42:57 +0000 2016", "text": "No one should have to fear discrimination because of who they are or who they love.\nhttps://t.co/DNpkE1sAJ1", "in_reply_to_screen_name": null, "retweet_count": 2760, "favorite_count": 5285, "source": "Twitter Web Client", "id_str": "706490256598544385", "is_retweet": false}, {"created_at": "Wed Mar 23 18:57:38 +0000 2016", "text": "\"If Mr. Trump gets his way, it'll be like Christmas in the Kremlin. It will make America less safe and the world more dangerous.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2367, "favorite_count": 4463, "source": "TweetDeck", "id_str": "712714943951474688", "is_retweet": false}, {"created_at": "Mon Jul 25 20:31:30 +0000 2016", "text": "RT @HFA: Hold on to your hats. The #DemConvention is just getting started: https://t.co/5HNjA2kjNP https://t.co/xSDVRj4Q4T", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 0, "source": "TweetDeck", "id_str": "757674658208546816", "is_retweet": true}, {"created_at": "Wed Mar 02 23:41:56 +0000 2016", "text": "We had a big night on Super Tuesday. Now, we have to keep fighting even harder. When we stand together, there's nothing we can't do.", "in_reply_to_screen_name": null, "retweet_count": 1066, "favorite_count": 3057, "source": "TweetDeck", "id_str": "705176341877014528", "is_retweet": false}, {"created_at": "Sun Mar 13 04:12:23 +0000 2016", "text": "Cheers, from Youngstown, Ohio. https://t.co/odKbOlAibQ", "in_reply_to_screen_name": null, "retweet_count": 1641, "favorite_count": 5726, "source": "Twitter Web Client", "id_str": "708868283680878592", "is_retweet": false}, {"created_at": "Thu Jul 28 00:21:53 +0000 2016", "text": "\"In Congress, I learned a powerful lesson: Strong women get things done.\u201d \u2014@GabbyGiffords", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 3609, "source": "TweetDeck", "id_str": "758457413267656704", "is_retweet": false}, {"created_at": "Wed Jul 27 02:51:56 +0000 2016", "text": "\"She is still the best darn changemaker I have ever known.\u201d \u2014@BillClinton on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1936, "favorite_count": 7133, "source": "TweetDeck", "id_str": "758132785123123205", "is_retweet": false}, {"created_at": "Wed Jan 20 05:39:45 +0000 2016", "text": "Really Senator Sanders? How can you say that groups like @PPact and @HRC are part of the \"establishment\" you're taking on? -H", "in_reply_to_screen_name": null, "retweet_count": 2051, "favorite_count": 3133, "source": "TweetDeck", "id_str": "689683714125754368", "is_retweet": false}, {"created_at": "Sun Apr 03 00:25:58 +0000 2016", "text": "Pre-game pep talk in Syracuse.\nhttps://t.co/OxEsgPbn2D", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 2049, "source": "Twitter Web Client", "id_str": "716421450018607104", "is_retweet": false}, {"created_at": "Thu Nov 03 18:59:08 +0000 2016", "text": "RT @HFA: What issues matter the most to you? Create your page and share with your friends to tell them why they need to vote: https://t.co/\u2026", "in_reply_to_screen_name": null, "retweet_count": 726, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794252589294637056", "is_retweet": true}, {"created_at": "Thu Jul 14 15:49:19 +0000 2016", "text": "\"In my first 100 days\u2026I will introduce comprehensive immigration reform with a path to citizenship.\u201d \u2014Hillary: https://t.co/JX8AWq6M7K", "in_reply_to_screen_name": null, "retweet_count": 989, "favorite_count": 2263, "source": "TweetDeck", "id_str": "753617380148932608", "is_retweet": false}, {"created_at": "Mon Apr 25 18:59:52 +0000 2016", "text": "This might sound strange coming from a presidential candidate, but what we really need is more love and kindness.\nhttps://t.co/5JT6avz0Cv", "in_reply_to_screen_name": null, "retweet_count": 1615, "favorite_count": 3702, "source": "Twitter Web Client", "id_str": "724674303661232129", "is_retweet": false}, {"created_at": "Thu May 19 17:53:31 +0000 2016", "text": "\"It sends a message of disrespect and makes the situation inside those countries more difficult.\" \u2014Hillary on Trump's anti-Muslim rhetoric", "in_reply_to_screen_name": null, "retweet_count": 809, "favorite_count": 2080, "source": "TweetDeck", "id_str": "733354913649070080", "is_retweet": false}, {"created_at": "Tue Sep 20 00:09:41 +0000 2016", "text": "Nobody in America should have to forgo a higher education because they can't afford it. https://t.co/DhSlyM6ILQ", "in_reply_to_screen_name": null, "retweet_count": 3178, "favorite_count": 9104, "source": "TweetDeck", "id_str": "778023288761180160", "is_retweet": false}, {"created_at": "Tue May 03 19:02:15 +0000 2016", "text": "\u201cThere\u2019s no question that the workers of Appalachia made America more prosperous and secure, and that legacy should be honored.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 462, "favorite_count": 1157, "source": "TweetDeck", "id_str": "727574005851525121", "is_retweet": false}, {"created_at": "Thu Jan 28 01:34:13 +0000 2016", "text": "Reproductive rights are human rights. Denying them isn\u2019t just a violation\u2014it puts lives at risk. We can\u2019t go back. https://t.co/YYHiDZGXSC", "in_reply_to_screen_name": null, "retweet_count": 627, "favorite_count": 1417, "source": "TweetDeck", "id_str": "692521023653187588", "is_retweet": false}, {"created_at": "Mon Aug 15 17:36:43 +0000 2016", "text": "\u201cNo one is more worthy than you, and everyone is your equal.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 2091, "source": "TweetDeck", "id_str": "765240818848391168", "is_retweet": false}, {"created_at": "Tue Sep 20 22:03:36 +0000 2016", "text": "\"You can leave this ad muted\u2014there's nothing to hear.\" \u2014@NyleDiMarco\n\nhttps://t.co/tTgeqxNqYm https://t.co/QOqcWnw7OJ", "in_reply_to_screen_name": null, "retweet_count": 6614, "favorite_count": 12287, "source": "Twitter Web Client", "id_str": "778353947241218048", "is_retweet": false}, {"created_at": "Wed May 04 01:23:57 +0000 2016", "text": "Donald Trump is the presumptive @GOP nominee.\n\nChip in now if you agree we can't let him become president: https://t.co/BSrJDaGSOe", "in_reply_to_screen_name": null, "retweet_count": 4018, "favorite_count": 9598, "source": "TweetDeck", "id_str": "727670062782545924", "is_retweet": false}, {"created_at": "Fri Jul 29 03:11:47 +0000 2016", "text": "\"In Atlantic City\u2026you will find contractors and small businesses who lost everything because Donald Trump refused to pay his bills\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2433, "favorite_count": 6623, "source": "TweetDeck", "id_str": "758862557633359874", "is_retweet": false}, {"created_at": "Mon Oct 03 15:04:16 +0000 2016", "text": "In one week, Trump has:\n\u2713Lost a debate\n\u2713Attacked a woman at 5 am on Twitter\n\u2713Had his net worth downgraded\nand more: https://t.co/HAA0yI9JLl", "in_reply_to_screen_name": null, "retweet_count": 3578, "favorite_count": 8543, "source": "TweetDeck", "id_str": "782959460797059072", "is_retweet": false}, {"created_at": "Thu Oct 13 11:41:02 +0000 2016", "text": "RT @washingtonpost: The Washington Post's editorial board endorses Hillary Clinton for president https://t.co/mmZohyPrR1 https://t.co/k2fQK\u2026", "in_reply_to_screen_name": null, "retweet_count": 4214, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "786532193464188928", "is_retweet": true}, {"created_at": "Wed Oct 12 14:19:01 +0000 2016", "text": "Here are some things we\u2019ve both done over the last 30 years: https://t.co/TCinWEk4mt https://t.co/aXtUzLRYIn", "in_reply_to_screen_name": null, "retweet_count": 3950, "favorite_count": 7468, "source": "TweetDeck", "id_str": "786209562869325825", "is_retweet": false}, {"created_at": "Sun Aug 07 18:53:34 +0000 2016", "text": "Laurie Hernandez is the first U.S.-born Latina on the Olympic gymnastics team since '84. Good luck! #ImWithHernandez https://t.co/C1S688jCt6", "in_reply_to_screen_name": null, "retweet_count": 5964, "favorite_count": 20379, "source": "TweetDeck", "id_str": "762361057394458624", "is_retweet": false}, {"created_at": "Sat Oct 29 20:37:18 +0000 2016", "text": "Americans are coming together to reject hate and division. Americans are rejecting Donald Trump\u2019s demeaning treatment of women.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1329, "favorite_count": 3130, "source": "TweetDeck", "id_str": "792465354496811009", "is_retweet": false}, {"created_at": "Tue Aug 09 19:13:29 +0000 2016", "text": "Here\u2019s the sad truth: There is no other Donald Trump. This is it. https://t.co/XNDh0d5csA", "in_reply_to_screen_name": null, "retweet_count": 2745, "favorite_count": 8713, "source": "TweetDeck", "id_str": "763090844169764866", "is_retweet": false}, {"created_at": "Mon Nov 07 21:44:16 +0000 2016", "text": "\"Public colleges and universities should be tuition-free for anyone who makes less than $125,000 a year.\u201d \u2014Hillary https://t.co/axHVelhvXh", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1698, "favorite_count": 4841, "source": "TweetDeck", "id_str": "795743697023434755", "is_retweet": false}, {"created_at": "Mon Oct 10 23:50:53 +0000 2016", "text": "RT @HillaryforOH: The South Oval @OhioState is a sea of supporters tonight, because college students are going to help Hillary win Ohio thi\u2026", "in_reply_to_screen_name": null, "retweet_count": 3715, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785628700196737024", "is_retweet": true}, {"created_at": "Fri Oct 28 20:06:45 +0000 2016", "text": "\u201cJust kiss. I don\u2019t even wait. I sort of get away with things like that.\" \u2014Donald Trump https://t.co/eYo0D4tPOG", "in_reply_to_screen_name": null, "retweet_count": 5270, "favorite_count": 8764, "source": "Media Studio", "id_str": "792095280459976704", "is_retweet": false}, {"created_at": "Tue Sep 27 01:11:42 +0000 2016", "text": "There's only one candidate on stage who will support working families. #DebateNight https://t.co/uOV7JC9uQC", "in_reply_to_screen_name": null, "retweet_count": 3716, "favorite_count": 7145, "source": "TweetDeck", "id_str": "780575611085582336", "is_retweet": false}, {"created_at": "Thu May 26 16:59:36 +0000 2016", "text": "\u2192 https://t.co/IQXVlI5Hs7 https://t.co/LSz3Uh3L4S", "in_reply_to_screen_name": null, "retweet_count": 557, "favorite_count": 1093, "source": "TweetDeck", "id_str": "735878060705206272", "is_retweet": false}, {"created_at": "Mon Jan 11 01:57:41 +0000 2016", "text": "Sunday inspiration: A little cold is no match for @HillaryforIA organizers and volunteers! https://t.co/rERJ4uNlYr", "in_reply_to_screen_name": null, "retweet_count": 288, "favorite_count": 737, "source": "Twitter Web Client", "id_str": "686366338437218304", "is_retweet": false}, {"created_at": "Tue Oct 04 16:28:15 +0000 2016", "text": "\"We have got to be as clear as possible: You are more than the way you look.\u201d \u2014Hillary to young girls https://t.co/1SCczNmBNT", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1398, "favorite_count": 2988, "source": "TweetDeck", "id_str": "783342980505690112", "is_retweet": false}, {"created_at": "Thu Oct 20 21:40:19 +0000 2016", "text": "\"You do not try to keep American democracy in 'suspense.\u2019 Too many people have fought and marched and died for this democracy.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 956, "favorite_count": 2321, "source": "TweetDeck", "id_str": "789219721879191552", "is_retweet": false}, {"created_at": "Tue Mar 29 22:30:20 +0000 2016", "text": "Senate Republicans are ignoring the voices of 65 million Americans who voted to re-elect Barack Obama. #DoYourJob   https://t.co/Ma4DHo22Tv", "in_reply_to_screen_name": null, "retweet_count": 2562, "favorite_count": 5730, "source": "TweetDeck", "id_str": "714942796730204160", "is_retweet": false}, {"created_at": "Wed Mar 02 03:58:15 +0000 2016", "text": "\"We're going to break down barriers and build ladders of opportunity and empowerment.\" More from tonight's remarks: https://t.co/NomtcWfDaY", "in_reply_to_screen_name": null, "retweet_count": 755, "favorite_count": 1710, "source": "TweetDeck", "id_str": "704878458619498496", "is_retweet": false}, {"created_at": "Sat Feb 06 15:02:01 +0000 2016", "text": "The New Hampshire primary is almost here! Ready to stand with Hillary? Say #ImWithHer and commit to vote: https://t.co/VTJmT71igK", "in_reply_to_screen_name": null, "retweet_count": 394, "favorite_count": 1081, "source": "TweetDeck", "id_str": "695985807153356801", "is_retweet": false}, {"created_at": "Sat Jul 23 18:20:07 +0000 2016", "text": "Help welcome @TimKaine to the team. Get your sticker today to show your support: https://t.co/BJ0H3RD4d0 #ClintonKaine", "in_reply_to_screen_name": null, "retweet_count": 1714, "favorite_count": 4894, "source": "TweetDeck", "id_str": "756916821962420224", "is_retweet": false}, {"created_at": "Fri Jul 22 16:04:54 +0000 2016", "text": "This is Trump's party. This could be Trump's America.\n\nDon't let it.\nhttps://t.co/SYniM00lPi", "in_reply_to_screen_name": null, "retweet_count": 3860, "favorite_count": 6308, "source": "Twitter Web Client", "id_str": "756520404626214912", "is_retweet": false}, {"created_at": "Tue Aug 23 13:59:31 +0000 2016", "text": "We heard Trump's demonizing comments on immigrants loud and clear the first time. And the second, third, fourth ...\nhttps://t.co/uSSd7X0FzP", "in_reply_to_screen_name": null, "retweet_count": 4206, "favorite_count": 7141, "source": "Twitter Web Client", "id_str": "768085260542152704", "is_retweet": false}, {"created_at": "Tue Feb 02 15:41:31 +0000 2016", "text": "Sums it up. #HillYes https://t.co/9db4yWlje6", "in_reply_to_screen_name": null, "retweet_count": 693, "favorite_count": 1876, "source": "TweetDeck", "id_str": "694546194547261440", "is_retweet": false}, {"created_at": "Tue Nov 08 01:37:49 +0000 2016", "text": "You don\u2019t want to miss this one: Join Hillary, @POTUS, @FLOTUS, @BillClinton, and @ChelseaClinton live in Philly. https://t.co/UUuA1bxeIv", "in_reply_to_screen_name": null, "retweet_count": 2645, "favorite_count": 10686, "source": "TweetDeck", "id_str": "795802471780196352", "is_retweet": false}, {"created_at": "Wed Jun 01 13:58:42 +0000 2016", "text": "Trump University was a fraudulent scheme used to prey upon those who could least afford it. https://t.co/oz5ycvA2J1 https://t.co/9ue4nVEdwt", "in_reply_to_screen_name": null, "retweet_count": 1683, "favorite_count": 2767, "source": "TweetDeck", "id_str": "738006865100087297", "is_retweet": false}, {"created_at": "Thu Jul 28 01:03:46 +0000 2016", "text": "\"He knows at its best, politics is always a matter of the heart.\u201d \u2013@DrBiden on @JoeBiden https://t.co/xo5Azxa1IE", "in_reply_to_screen_name": null, "retweet_count": 603, "favorite_count": 2087, "source": "Twitter Web Client", "id_str": "758467951863468032", "is_retweet": false}, {"created_at": "Thu Oct 20 00:13:29 +0000 2016", "text": "Follow @TheBriefing2016 during tonight's debate so you can help hold Trump accountable to the facts. RT to spread the word. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 2549, "favorite_count": 3828, "source": "TweetDeck", "id_str": "788895879784697857", "is_retweet": false}, {"created_at": "Tue May 03 19:18:14 +0000 2016", "text": "\u201cHaving a good job is about so much more than getting a paycheck. \n\nIt\u2019s about dignity and a sense of purpose.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 847, "favorite_count": 2022, "source": "TweetDeck", "id_str": "727578028935647232", "is_retweet": false}, {"created_at": "Wed Feb 10 02:29:04 +0000 2016", "text": "Add your name if you're with Hillary and ready to fight twice as hard. https://t.co/Yz5i8Ee0la", "in_reply_to_screen_name": null, "retweet_count": 654, "favorite_count": 1792, "source": "TweetDeck", "id_str": "697245869427552256", "is_retweet": false}, {"created_at": "Thu Oct 20 18:32:42 +0000 2016", "text": "This #SpiritDay, let's take a stand for LGBT youth and send a clear message to all our kids: In the end, bullies al\u2026 https://t.co/MKLBt0cOXo", "in_reply_to_screen_name": null, "retweet_count": 8958, "favorite_count": 23168, "source": "TweetDeck", "id_str": "789172507316146177", "is_retweet": false}, {"created_at": "Mon May 02 23:37:00 +0000 2016", "text": "We can't let all the progress we've made under @POTUS be torn away by Donald Trump.\n\nLet's move forward\u2014together.\nhttps://t.co/iROC5OYjN7", "in_reply_to_screen_name": null, "retweet_count": 1547, "favorite_count": 3486, "source": "Twitter Web Client", "id_str": "727280763381522432", "is_retweet": false}, {"created_at": "Sat Jun 04 23:47:50 +0000 2016", "text": "It'd be all too easy for Trump to roll back the progress we've made on LGBT rights. We can't give him the chance. https://t.co/9KytRrhikA", "in_reply_to_screen_name": null, "retweet_count": 1570, "favorite_count": 3493, "source": "TweetDeck", "id_str": "739242286329044992", "is_retweet": false}, {"created_at": "Mon Oct 10 02:32:03 +0000 2016", "text": "Trump talks tough on trade and Chinese steel hurting American workers\u2014but he bought Chinese steel for two of his last three buildings.", "in_reply_to_screen_name": null, "retweet_count": 7372, "favorite_count": 17537, "source": "TweetDeck", "id_str": "785306874891599872", "is_retweet": false}, {"created_at": "Tue Aug 09 15:20:06 +0000 2016", "text": "Donald Trump's economic plan is a bad deal for working families\u2014and a big tax cut for Donald Trump.\nhttps://t.co/D0oOe6bwza", "in_reply_to_screen_name": null, "retweet_count": 3747, "favorite_count": 6914, "source": "Twitter Web Client", "id_str": "763032112689623040", "is_retweet": false}, {"created_at": "Thu Jul 28 02:25:45 +0000 2016", "text": "RT @timkaine: Remember Karla, the little girl we heard from on Monday who feared her parents would be deported? She trusts Hillary to keep\u2026", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 0, "source": "TweetDeck", "id_str": "758488587448963072", "is_retweet": true}, {"created_at": "Fri Jul 29 03:13:16 +0000 2016", "text": "\"Please explain to me what part of America First leads him to make Trump ties in China, not Colorado. Trump suits in Mexico, not Michigan.\"", "in_reply_to_screen_name": null, "retweet_count": 2957, "favorite_count": 7750, "source": "TweetDeck", "id_str": "758862933489127425", "is_retweet": false}, {"created_at": "Wed Oct 05 03:31:32 +0000 2016", "text": "RT @BarbaraBoxer: The trust of women IS the issue. Pence and Trump don't trust women. Hillary Clinton and Tim Kaine do. #VPdebate", "in_reply_to_screen_name": null, "retweet_count": 1915, "favorite_count": 0, "source": "TweetDeck", "id_str": "783509903738544128", "is_retweet": true}, {"created_at": "Thu Feb 25 17:04:59 +0000 2016", "text": "Mean Tweets: campaign edition with Senator @AlFranken.\nhttps://t.co/F57Uv45SBT", "in_reply_to_screen_name": null, "retweet_count": 652, "favorite_count": 1230, "source": "Twitter Web Client", "id_str": "702902122283552768", "is_retweet": false}, {"created_at": "Mon May 02 16:47:18 +0000 2016", "text": "Paid family leave isn't a luxury. Families shouldn't have to choose between eating and caring for loved ones. https://t.co/CL68bNz1Af", "in_reply_to_screen_name": null, "retweet_count": 1186, "favorite_count": 2659, "source": "TweetDeck", "id_str": "727177659185303552", "is_retweet": false}, {"created_at": "Fri Aug 19 23:35:08 +0000 2016", "text": "RT @mayaharris_: There are no words.  https://t.co/xTSh2R1v6M", "in_reply_to_screen_name": null, "retweet_count": 1239, "favorite_count": 0, "source": "TweetDeck", "id_str": "766780569887834113", "is_retweet": true}, {"created_at": "Fri Feb 05 03:16:23 +0000 2016", "text": "There is only one person who is ready to be commander in chief on stage at the #DemDebate.", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1744, "source": "TweetDeck", "id_str": "695445837296480256", "is_retweet": false}, {"created_at": "Wed Jun 08 02:33:46 +0000 2016", "text": "\u201cDonald Trump is temperamentally unfit to be president and Commander-in-Chief.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2327, "favorite_count": 5538, "source": "TweetDeck", "id_str": "740371207686606848", "is_retweet": false}, {"created_at": "Mon Jan 25 23:55:56 +0000 2016", "text": "\"We can raise incomes if we start paying women the equal pay we deserve for our work.\" https://t.co/q0NKuiC1Bo", "in_reply_to_screen_name": null, "retweet_count": 1030, "favorite_count": 2316, "source": "Twitter Web Client", "id_str": "691771514656530432", "is_retweet": false}, {"created_at": "Fri Apr 22 15:12:49 +0000 2016", "text": "Proud the U.S. is signing the Paris climate deal. What better way to celebrate Earth Day than taking action to help save our planet? -H", "in_reply_to_screen_name": null, "retweet_count": 1341, "favorite_count": 3529, "source": "TweetDeck", "id_str": "723530002617229312", "is_retweet": false}, {"created_at": "Mon Mar 07 17:15:04 +0000 2016", "text": "Anyone who wants to be president of this country should have a real plan to raise incomes, create jobs, and improve our economy.", "in_reply_to_screen_name": null, "retweet_count": 1453, "favorite_count": 3802, "source": "TweetDeck", "id_str": "706890925277093889", "is_retweet": false}, {"created_at": "Fri Jul 29 02:38:29 +0000 2016", "text": "\u201c@BernieSanders, you\u2019ve put economic and social justice issues front and center where they belong.\u201d \u2014Hillary https://t.co/KZP2ohDTYD", "in_reply_to_screen_name": null, "retweet_count": 1976, "favorite_count": 5270, "source": "TweetDeck", "id_str": "758854178240274433", "is_retweet": false}, {"created_at": "Mon Sep 26 19:12:51 +0000 2016", "text": "\"Our presidents are role models for generations of our children. Is this the example we want for them?\" \u2014@NYTimes\u2026 https://t.co/lQRruBpQfB", "in_reply_to_screen_name": null, "retweet_count": 1579, "favorite_count": 3600, "source": "TweetDeck", "id_str": "780485304276881412", "is_retweet": false}, {"created_at": "Fri Sep 16 19:07:54 +0000 2016", "text": "\u201cI am thrilled to be here today to support the next president &amp; vice president of the United States, Hillary Clinton &amp; Tim Kaine!\u201d \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 1088, "favorite_count": 3961, "source": "TweetDeck", "id_str": "776860176200663040", "is_retweet": false}, {"created_at": "Fri Jul 29 03:18:23 +0000 2016", "text": "\"A man you can bait with a tweet is not a man we can trust with nuclear weapons.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 30405, "favorite_count": 57811, "source": "TweetDeck", "id_str": "758864218439286784", "is_retweet": false}, {"created_at": "Sat Aug 06 14:37:40 +0000 2016", "text": "Four gold medals and counting: Today, @SerenaWilliams hits the court in Rio to add to her collection. https://t.co/iOMV0FH38S", "in_reply_to_screen_name": null, "retweet_count": 5158, "favorite_count": 18698, "source": "TweetDeck", "id_str": "761934268033540097", "is_retweet": false}, {"created_at": "Wed Jun 15 00:55:35 +0000 2016", "text": "We just won Washington, D.C.! Grateful to everyone who voted. https://t.co/ImPsK42yGd", "in_reply_to_screen_name": null, "retweet_count": 3741, "favorite_count": 15400, "source": "TweetDeck", "id_str": "742883216105803781", "is_retweet": false}, {"created_at": "Thu Jul 28 03:00:52 +0000 2016", "text": "\u201cAmerica learned that love has no limits, and marriage equality is now a reality across the land.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1460, "favorite_count": 4278, "source": "TweetDeck", "id_str": "758497423169843200", "is_retweet": false}, {"created_at": "Mon Apr 25 00:24:08 +0000 2016", "text": "\"Everybody has a story. Everybody has a life worth dignity and protection.\"\nhttps://t.co/wO7qmrAycD", "in_reply_to_screen_name": null, "retweet_count": 1580, "favorite_count": 3465, "source": "Twitter Web Client", "id_str": "724393520950210560", "is_retweet": false}, {"created_at": "Mon Oct 10 02:53:06 +0000 2016", "text": "RT @MartinOMalley: .@HillaryClinton is a fighter. And she just proved, once again, that she's the only candidate who has what it takes to b\u2026", "in_reply_to_screen_name": null, "retweet_count": 4044, "favorite_count": 0, "source": "TweetDeck", "id_str": "785312169944616961", "is_retweet": true}, {"created_at": "Mon Sep 12 16:02:14 +0000 2016", "text": "Whether you have student debt or you're preparing for school, see how much our college plan could save you. https://t.co/gdzzORlqyW", "in_reply_to_screen_name": null, "retweet_count": 1106, "favorite_count": 2734, "source": "TweetDeck", "id_str": "775363901336715265", "is_retweet": false}, {"created_at": "Fri Jul 29 02:45:04 +0000 2016", "text": "\"Americans don\u2019t say, 'I alone can fix it.' They say, \u2018We\u2019ll fix it together!\u2019\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2449, "favorite_count": 6064, "source": "TweetDeck", "id_str": "758855835371966464", "is_retweet": false}, {"created_at": "Wed Oct 26 19:41:32 +0000 2016", "text": "A multimillionaire should never pay a lower tax rate than a teacher or a nurse or a policeman or a firefighter.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2092, "favorite_count": 5370, "source": "TweetDeck", "id_str": "791364157073420288", "is_retweet": false}, {"created_at": "Tue Jun 07 02:50:45 +0000 2016", "text": "Happy birthday to a friend and mentor, Marian Wright Edelman. Your example of service inspires us all. https://t.co/waeHmuLkCi", "in_reply_to_screen_name": null, "retweet_count": 1737, "favorite_count": 7137, "source": "TweetDeck", "id_str": "740013095012212736", "is_retweet": false}, {"created_at": "Tue Jun 21 16:23:39 +0000 2016", "text": "\u201cI\u2019ll admit\u2014it's a little wonky, but...I sweat the specifics because they matter.\u201d https://t.co/JY5wpA23Bv https://t.co/FocZqOVLia", "in_reply_to_screen_name": null, "retweet_count": 731, "favorite_count": 1915, "source": "TweetDeck", "id_str": "745291097488900096", "is_retweet": false}, {"created_at": "Thu Jun 02 20:46:36 +0000 2016", "text": "Donald Trump is not someone who should ever have the nuclear codes.\nhttps://t.co/2NLg1HbUx3", "in_reply_to_screen_name": null, "retweet_count": 2655, "favorite_count": 5145, "source": "Twitter Web Client", "id_str": "738471902235131904", "is_retweet": false}, {"created_at": "Mon Oct 10 02:03:20 +0000 2016", "text": "RT @TheBriefing2016: While Donald Trump was...being Donald Trump, Hillary Clinton was fighting to get kids health care. #debate https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 2679, "favorite_count": 0, "source": "TweetDeck", "id_str": "785299645467660288", "is_retweet": true}, {"created_at": "Sat Sep 17 18:38:45 +0000 2016", "text": "\"We\u2019re siding with students and with every American seeking an affordable college degree.\" \u2014@TimKaine https://t.co/qa9qO4AFxW", "in_reply_to_screen_name": null, "retweet_count": 1368, "favorite_count": 3756, "source": "TweetDeck", "id_str": "777215229973426176", "is_retweet": false}, {"created_at": "Sat Apr 09 19:04:06 +0000 2016", "text": "We\u2019ve earned more votes than any other candidate\u2014Republican or Democrat. https://t.co/tRJNMj86AJ https://t.co/XJIt2bGevs", "in_reply_to_screen_name": null, "retweet_count": 2150, "favorite_count": 4784, "source": "Twitter Web Client", "id_str": "718877165249544193", "is_retweet": false}, {"created_at": "Thu Aug 11 18:07:56 +0000 2016", "text": "Trump may talk a big game on trade, but his approach is based on fear, not strength\u2014fear that we can\u2019t compete with the rest of the world.", "in_reply_to_screen_name": null, "retweet_count": 1084, "favorite_count": 3867, "source": "TweetDeck", "id_str": "763799123116064768", "is_retweet": false}, {"created_at": "Sat Jan 09 18:00:17 +0000 2016", "text": "Republican candidates are putting the NRA\u2019s interests ahead of the safety of our families and communities.\nhttps://t.co/Xu2lHERy69", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 1543, "source": "Twitter Web Client", "id_str": "685883808067932161", "is_retweet": false}, {"created_at": "Fri Oct 28 22:34:45 +0000 2016", "text": "\"We shouldn\u2019t let our kids think that politics is about pitching a new hotel, or a new golf course, or a TV contract.\" \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1388, "favorite_count": 3598, "source": "TweetDeck", "id_str": "792132522910056448", "is_retweet": false}, {"created_at": "Mon Oct 10 01:07:55 +0000 2016", "text": "If we work together\u2014if we overcome the divisiveness that sometimes sets Americans against one another\u2014there's nothing we can't do. #Debate", "in_reply_to_screen_name": null, "retweet_count": 2429, "favorite_count": 7547, "source": "TweetDeck", "id_str": "785285698215698434", "is_retweet": false}, {"created_at": "Sun Jul 31 19:12:01 +0000 2016", "text": "RT @TheDemocrats: She is a Gold Star mother, she is Muslim, and she has some words for Donald Trump. https://t.co/KlbmAQ2V0w https://t.co/h\u2026", "in_reply_to_screen_name": null, "retweet_count": 3347, "favorite_count": 0, "source": "TweetDeck", "id_str": "759828984075026432", "is_retweet": true}, {"created_at": "Fri Feb 26 16:53:27 +0000 2016", "text": "It's been less than a week since a mass shooting tore apart a community, and now another. This has to end. Praying for Hesston, KS. -H", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 2485, "source": "TweetDeck", "id_str": "703261606701109248", "is_retweet": false}, {"created_at": "Mon Jun 13 22:24:14 +0000 2016", "text": "Weapons of war like those used in Orlando and San Bernardino have no place on our streets.\nhttps://t.co/jTFExpjcPd", "in_reply_to_screen_name": null, "retweet_count": 3861, "favorite_count": 9487, "source": "Twitter Web Client", "id_str": "742482739257958400", "is_retweet": false}, {"created_at": "Sun Mar 06 03:44:23 +0000 2016", "text": "Diversity is a strength, not a weakness. If we lift each other up, we can make this country even stronger.\nhttps://t.co/76EVKvQ759", "in_reply_to_screen_name": null, "retweet_count": 3080, "favorite_count": 7051, "source": "Twitter Web Client", "id_str": "706324523541336064", "is_retweet": false}, {"created_at": "Wed Nov 02 18:12:59 +0000 2016", "text": "\"27 million strong all ready to vote for freedom, equality, and reason\u2014traits that seem to have gone out of season.\" https://t.co/0Bq9ilscg1", "in_reply_to_screen_name": null, "retweet_count": 3756, "favorite_count": 9453, "source": "Media Studio", "id_str": "793878585887059968", "is_retweet": false}, {"created_at": "Tue Jul 26 03:07:41 +0000 2016", "text": "\"Hillary...understands that if someone in this country works 40 hours a week, that person should not be living in poverty.\" \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 2765, "favorite_count": 8534, "source": "TweetDeck", "id_str": "757774363458433024", "is_retweet": false}, {"created_at": "Thu Nov 03 19:47:25 +0000 2016", "text": "With just 5 days until Election Day, watch Hillary speak live in North Carolina: https://t.co/SiOyd3Mes5\n\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": null, "retweet_count": 1355, "favorite_count": 4196, "source": "TweetDeck", "id_str": "794264742265290752", "is_retweet": false}, {"created_at": "Tue Jul 26 01:17:31 +0000 2016", "text": "RT @HFA: You still have a chance to be a part of history and join Hillary at the #DemsInPhilly on Thursday. Enter here: https://t.co/vWnnKO\u2026", "in_reply_to_screen_name": null, "retweet_count": 387, "favorite_count": 0, "source": "TweetDeck", "id_str": "757746637133455360", "is_retweet": true}, {"created_at": "Wed Feb 03 18:19:25 +0000 2016", "text": "\u201cAppealing but ultimately empty promises [are] a luxury our loved ones cannot afford.\u201d \u2014@Astrid_NV https://t.co/6Rpd9JZQUK", "in_reply_to_screen_name": null, "retweet_count": 499, "favorite_count": 939, "source": "TweetDeck", "id_str": "694948321379643392", "is_retweet": false}, {"created_at": "Thu Mar 24 15:50:01 +0000 2016", "text": "Our delegate lead is strong, but Hillary\u2019s counting on you to win this nomination. Join the live training \u2192 https://t.co/NxyVXXfkYJ", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 1375, "source": "TweetDeck", "id_str": "713030116104908800", "is_retweet": false}, {"created_at": "Wed Sep 14 00:26:14 +0000 2016", "text": "It\u2019s literally right here: https://t.co/jxNWmHVuES https://t.co/1qlok816tO", "in_reply_to_screen_name": null, "retweet_count": 4987, "favorite_count": 9636, "source": "TweetDeck", "id_str": "775853127748743168", "is_retweet": false}, {"created_at": "Tue Jun 21 16:29:50 +0000 2016", "text": "\"Donald Trump actually stood on a debate stage in November and said that wages are too high in this country.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1479, "favorite_count": 3326, "source": "TweetDeck", "id_str": "745292654695583744", "is_retweet": false}, {"created_at": "Sun Feb 28 17:38:09 +0000 2016", "text": "Thanks to CHIP, eight million kids like Connar are living the future they deserve.\nhttps://t.co/PQSQ4PqHQR", "in_reply_to_screen_name": null, "retweet_count": 515, "favorite_count": 1256, "source": "Twitter Web Client", "id_str": "703997631542890496", "is_retweet": false}, {"created_at": "Sat Sep 10 02:32:58 +0000 2016", "text": "\"Women are seen through a different lens.\" \u2014Hillary to @HumansofNY https://t.co/M9k19V7gd9", "in_reply_to_screen_name": null, "retweet_count": 1954, "favorite_count": 5661, "source": "TweetDeck", "id_str": "774435466863149057", "is_retweet": false}, {"created_at": "Fri Jul 29 20:02:19 +0000 2016", "text": "Big victory for democracy as the 4th Circuit just struck down a NC voter discrimination law. Let\u2019s keep fighting to make voting easier. -H", "in_reply_to_screen_name": null, "retweet_count": 5593, "favorite_count": 21327, "source": "TweetDeck", "id_str": "759116867730571265", "is_retweet": false}, {"created_at": "Mon Aug 15 18:39:11 +0000 2016", "text": "RT @TheBriefing2016: In case you needed a reminder that Donald Trump doesn\u2019t know a thing about national security. https://t.co/1DA0d8j484", "in_reply_to_screen_name": null, "retweet_count": 1746, "favorite_count": 0, "source": "TweetDeck", "id_str": "765256538038599681", "is_retweet": true}, {"created_at": "Wed Sep 14 16:56:40 +0000 2016", "text": "18. We'll let @kurteichenwald ask this one: https://t.co/xnIl6JazS3", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2930, "favorite_count": 4655, "source": "TweetDeck", "id_str": "776102376151416833", "is_retweet": false}, {"created_at": "Mon Aug 01 19:48:56 +0000 2016", "text": "RT @IAFFTreg: .@IAFFLocal5 responds to @realDonaldTrump attack over the weekend. @LauraWalkerKC @JakeSherman @TheFix https://t.co/DIU8kYDItp", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 0, "source": "TweetDeck", "id_str": "760200663506837504", "is_retweet": true}, {"created_at": "Sun Apr 17 19:25:56 +0000 2016", "text": "Nuestros corazones est\u00e1n con los ecuatorianos y las familias que perdieron a seres queridos en el terremoto de ayer.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2277, "favorite_count": 2577, "source": "Twitter for iPhone", "id_str": "721781759311028225", "is_retweet": false}, {"created_at": "Fri Oct 28 18:46:44 +0000 2016", "text": "11 days to go and Hillary\u2019s on the trail in Iowa. Tune in now: https://t.co/mTVrSXP9U9\n\nAnd make a plan to vote: https://t.co/58n4AxM4BK", "in_reply_to_screen_name": null, "retweet_count": 978, "favorite_count": 3573, "source": "TweetDeck", "id_str": "792075140519559168", "is_retweet": false}, {"created_at": "Mon Nov 07 02:05:33 +0000 2016", "text": "\"What\u2019s really on the ballot is what kind of country we want for our children and grandchildren.\u201d \u2014Hillary https://t.co/ihTi53NFJO", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2146, "favorite_count": 5951, "source": "TweetDeck", "id_str": "795447064649957376", "is_retweet": false}, {"created_at": "Sat Jul 02 16:49:41 +0000 2016", "text": "Let's make America a world leader in manufacturing, again. https://t.co/PQzTY6ziRW https://t.co/NimTAUfa1T", "in_reply_to_screen_name": null, "retweet_count": 1236, "favorite_count": 3701, "source": "TweetDeck", "id_str": "749283917795065856", "is_retweet": false}, {"created_at": "Fri Feb 12 03:51:51 +0000 2016", "text": "RT if you agree. #DemDebate https://t.co/3ywlM53h4d", "in_reply_to_screen_name": null, "retweet_count": 1960, "favorite_count": 2575, "source": "TweetDeck", "id_str": "697991481047543808", "is_retweet": false}, {"created_at": "Thu Oct 06 16:04:35 +0000 2016", "text": "\"I want a president who stands up against intolerance.\"\n\nThe cast of @EmpireFOX on why they're with Hillary:\u2026 https://t.co/HAOJRjhDse", "in_reply_to_screen_name": null, "retweet_count": 4677, "favorite_count": 10079, "source": "Media Studio", "id_str": "784061801587552256", "is_retweet": false}, {"created_at": "Fri Sep 30 00:53:04 +0000 2016", "text": "RT @Fahrenthold: NEW: @realdonaldtrump's Fdn, totally reliant on other people's $, lacks state certification to raise $ from others. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 8967, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781658082703241216", "is_retweet": true}, {"created_at": "Wed Apr 27 01:52:14 +0000 2016", "text": "Text IMWITHHER to 47246 to tell Hillary you've got her back. https://t.co/AH3mpkZsSs", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 1871, "source": "TweetDeck", "id_str": "725140469013995520", "is_retweet": false}, {"created_at": "Mon Oct 31 20:19:04 +0000 2016", "text": "RT @TheBriefing2016: \"Government insiders are perplexed.\" \n\nWe would go farther.\n\nhttps://t.co/14uJQv6V6B", "in_reply_to_screen_name": null, "retweet_count": 1117, "favorite_count": 0, "source": "TweetDeck", "id_str": "793185540296302593", "is_retweet": true}, {"created_at": "Tue Jan 26 02:57:12 +0000 2016", "text": "Una tristeza. Las familias que necesitan agua limpia no deber\u00edan tener miedo de pedir ayuda. https://t.co/3h1j04sYxB", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 259, "favorite_count": 495, "source": "TweetDeck", "id_str": "691817131424497664", "is_retweet": false}, {"created_at": "Wed Nov 02 20:16:17 +0000 2016", "text": "\"America depends on you. You! All of you.\u201d \u2014@POTUS\n\nMake your plan to go vote: https://t.co/3TKJ4H68Kz https://t.co/pbjuFyT8LY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1215, "favorite_count": 3308, "source": "TweetDeck", "id_str": "793909617113849856", "is_retweet": false}, {"created_at": "Wed Mar 09 22:12:45 +0000 2016", "text": "It\u2019s a simple idea: If you work hard, you shouldn't have to struggle and stress to make ends meet. https://t.co/CsOY1NXQcS", "in_reply_to_screen_name": null, "retweet_count": 1274, "favorite_count": 3095, "source": "TweetDeck", "id_str": "707690616218636288", "is_retweet": false}, {"created_at": "Sun Jul 31 01:26:46 +0000 2016", "text": "A night to remember.\nhttps://t.co/lJ2M2QtFJD", "in_reply_to_screen_name": null, "retweet_count": 3198, "favorite_count": 8611, "source": "Twitter Web Client", "id_str": "759560905952677888", "is_retweet": false}, {"created_at": "Wed Mar 16 01:21:07 +0000 2016", "text": "Let everyone know that you\u2019re prouder than ever to stand with Hillary. Chip in $10 to get a limited-edition button \u2192 https://t.co/vEVvI04Gao", "in_reply_to_screen_name": null, "retweet_count": 566, "favorite_count": 1495, "source": "TweetDeck", "id_str": "709912347809353728", "is_retweet": false}, {"created_at": "Tue Sep 13 01:34:17 +0000 2016", "text": "We also need to tackle the student debt crisis and help those like @jbrotherston who have already borrowed. https://t.co/JR48LtIno4", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 504, "favorite_count": 1465, "source": "TweetDeck", "id_str": "775507863582179328", "is_retweet": false}, {"created_at": "Wed Jun 01 16:18:41 +0000 2016", "text": "Another Trump University practice, according to its own employees: target struggling families to fleece them. https://t.co/VUH18SpBlD", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1013, "favorite_count": 1451, "source": "TweetDeck", "id_str": "738042092514070529", "is_retweet": false}, {"created_at": "Tue Jul 26 02:39:19 +0000 2016", "text": "\"He even picked a vice president famous for trying to make it legal to openly discriminate against gays and lesbians.\" \u2014Warren on Trump", "in_reply_to_screen_name": null, "retweet_count": 2426, "favorite_count": 6352, "source": "TweetDeck", "id_str": "757767223134093316", "is_retweet": false}, {"created_at": "Tue Feb 02 05:05:45 +0000 2016", "text": "So grateful to everyone who gives your all to support this campaign. You made this possible. https://t.co/gk58CeS3vF", "in_reply_to_screen_name": null, "retweet_count": 1376, "favorite_count": 4332, "source": "TweetDeck", "id_str": "694386200392683520", "is_retweet": false}, {"created_at": "Tue Apr 26 04:14:18 +0000 2016", "text": "America's gun violence epidemic is out of control. No more excuses\u2014we need to act to save lives.\nhttps://t.co/gb6dfWfB34", "in_reply_to_screen_name": null, "retweet_count": 1509, "favorite_count": 3135, "source": "Twitter Web Client", "id_str": "724813832095289344", "is_retweet": false}, {"created_at": "Tue Sep 27 16:29:30 +0000 2016", "text": "RT @JoeBiden: Register and vote for Democrats like @HillaryClinton and @KatieMcGintyPA: https://t.co/tu6W6eS9xR #iRegistered #VoterRegistra\u2026", "in_reply_to_screen_name": null, "retweet_count": 1661, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780806581650878464", "is_retweet": true}, {"created_at": "Sun Jun 26 23:06:00 +0000 2016", "text": "Discrimination against LGBT people is all too common\u2014and goes against everything we stand for as a country. https://t.co/CnOZdKXG0q", "in_reply_to_screen_name": null, "retweet_count": 2220, "favorite_count": 5624, "source": "TweetDeck", "id_str": "747204292742897664", "is_retweet": false}, {"created_at": "Mon Jun 06 01:46:10 +0000 2016", "text": "We just won Puerto Rico! \u00a1Gracias a la Isla del Encanto por esta victoria! https://t.co/D2szaqU3fS", "in_reply_to_screen_name": null, "retweet_count": 2839, "favorite_count": 7616, "source": "TweetDeck", "id_str": "739634455145553924", "is_retweet": false}, {"created_at": "Wed Apr 27 01:26:30 +0000 2016", "text": "\"Imagine a tomorrow where...love trumps hate.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2135, "favorite_count": 3990, "source": "TweetDeck", "id_str": "725133992886951936", "is_retweet": false}, {"created_at": "Thu Nov 03 19:58:51 +0000 2016", "text": "RT @ABCPolitics: Clinton says Cubs winning World Series was special: \"Who knows maybe will see even more history made in a few days.\" https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1795, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794267616114311170", "is_retweet": true}, {"created_at": "Tue Jan 05 02:41:53 +0000 2016", "text": "No one working full-time in America should have to raise their kids in poverty.", "in_reply_to_screen_name": null, "retweet_count": 1336, "favorite_count": 3515, "source": "Twitter for iPhone", "id_str": "684203133434748928", "is_retweet": false}, {"created_at": "Mon Oct 10 02:06:26 +0000 2016", "text": "Four hundred pieces of legislation have Hillary Clinton's name on them.\n\nHow many has Donald Trump passed? #debate", "in_reply_to_screen_name": null, "retweet_count": 5880, "favorite_count": 15370, "source": "TweetDeck", "id_str": "785300425520152576", "is_retweet": false}, {"created_at": "Mon Oct 10 19:30:09 +0000 2016", "text": "Here in America, we are taught to and we should respect each other, lift each other up, and celebrate our diversity.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1092, "favorite_count": 3443, "source": "TweetDeck", "id_str": "785563085578899457", "is_retweet": false}, {"created_at": "Fri Jul 22 02:26:39 +0000 2016", "text": "RT @TheBriefing2016: This itself is a lie. #RNCInCLE https://t.co/jfRtBnTApa https://t.co/9oMrxWPO2n", "in_reply_to_screen_name": null, "retweet_count": 1418, "favorite_count": 0, "source": "TweetDeck", "id_str": "756314485334347776", "is_retweet": true}, {"created_at": "Thu Aug 11 17:48:33 +0000 2016", "text": "Every American willing to work hard should be able to find a job that provides dignity, pride, and decent pay that can support a family.", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 4113, "source": "TweetDeck", "id_str": "763794244964347904", "is_retweet": false}, {"created_at": "Mon Aug 08 19:12:46 +0000 2016", "text": "RT @Quora: Answer by @HillaryClinton on her plans for her first 100 days in office if elected https://t.co/RQ50LwbmMU https://t.co/I8eEK6bk\u2026", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 0, "source": "TweetDeck", "id_str": "762728277412806656", "is_retweet": true}, {"created_at": "Thu Jul 28 03:40:17 +0000 2016", "text": "\u201cYou\u2019re who I was talking about twelve years ago, when I talked about hope.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1763, "favorite_count": 6522, "source": "TweetDeck", "id_str": "758507342547808256", "is_retweet": false}, {"created_at": "Tue Oct 18 14:33:24 +0000 2016", "text": "Our metric for success should be how many kids can go as far as their dreams and hard work will take them. https://t.co/e2VOrqh2gi", "in_reply_to_screen_name": null, "retweet_count": 2840, "favorite_count": 8866, "source": "Media Studio", "id_str": "788387510170812416", "is_retweet": false}, {"created_at": "Thu Apr 21 18:05:54 +0000 2016", "text": "\"We have got to address the unequal effects of the criminal justice system on people of color.\" \u2014Hillary on @GMA\nhttps://t.co/87mBLdLnAr", "in_reply_to_screen_name": null, "retweet_count": 1155, "favorite_count": 2622, "source": "Twitter Web Client", "id_str": "723211170253930496", "is_retweet": false}, {"created_at": "Tue Jun 21 16:50:56 +0000 2016", "text": "\"The same people [Trump's] trying to get to vote for him now are people he\u2019s been exploiting for years\u201d \u2014Hillary: https://t.co/dJYqAjRoC8", "in_reply_to_screen_name": null, "retweet_count": 1035, "favorite_count": 2259, "source": "TweetDeck", "id_str": "745297966412480512", "is_retweet": false}, {"created_at": "Thu Jun 09 01:01:27 +0000 2016", "text": "A note from Hillary. https://t.co/LHSZvl7ODF", "in_reply_to_screen_name": null, "retweet_count": 2752, "favorite_count": 9133, "source": "TweetDeck", "id_str": "740710365735100420", "is_retweet": false}, {"created_at": "Mon Sep 05 20:24:45 +0000 2016", "text": "Sec. of Labor Frances Perkins was our first woman cabinet member and an architect of the Fair Labor Standards Act. https://t.co/T6SXpU9oOm", "in_reply_to_screen_name": null, "retweet_count": 2382, "favorite_count": 6234, "source": "TweetDeck", "id_str": "772893252898983936", "is_retweet": false}, {"created_at": "Thu Jul 28 01:19:18 +0000 2016", "text": "\"There\u2019s only one person in this race who will be there, who\u2019s always been there\u2026that\u2019s Hillary Clinton's life\u2019s story\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 808, "favorite_count": 3142, "source": "TweetDeck", "id_str": "758471864884817920", "is_retweet": false}, {"created_at": "Wed Oct 12 02:55:53 +0000 2016", "text": "At the debate, the impeccably dressed Ken Bone asked a great question about meeting our energy needs. Hillary\u2019s res\u2026 https://t.co/5Qb49Ctrvg", "in_reply_to_screen_name": null, "retweet_count": 4346, "favorite_count": 19654, "source": "Media Studio", "id_str": "786037647575744512", "is_retweet": false}, {"created_at": "Thu Feb 25 22:10:26 +0000 2016", "text": "\"Plugged into the establishment matrix?\"\n \n\"That sounds painful.\"\n\nMean Tweets with @alfranken:\nhttps://t.co/ffOBjWVo4S", "in_reply_to_screen_name": null, "retweet_count": 523, "favorite_count": 1021, "source": "Twitter Web Client", "id_str": "702978989250326530", "is_retweet": false}, {"created_at": "Mon Oct 24 01:59:46 +0000 2016", "text": "16 days. https://t.co/tTgeqxNqYm https://t.co/xj2robvztw", "in_reply_to_screen_name": null, "retweet_count": 4282, "favorite_count": 19120, "source": "TweetDeck", "id_str": "790372179879792641", "is_retweet": false}, {"created_at": "Fri Jan 15 04:08:55 +0000 2016", "text": "We cannot afford a Republican in the White House. Get your *free* sticker. \u2192 https://t.co/j1ZxDsCxZG", "in_reply_to_screen_name": null, "retweet_count": 438, "favorite_count": 1126, "source": "TweetDeck", "id_str": "687848914423312385", "is_retweet": false}, {"created_at": "Tue Apr 26 01:52:44 +0000 2016", "text": "\"I'm a feminist because I believe women deserve the same rights as men.\" \u2014Hillary #MSNBCTownhall", "in_reply_to_screen_name": null, "retweet_count": 2259, "favorite_count": 5458, "source": "TweetDeck", "id_str": "724778204838375424", "is_retweet": false}, {"created_at": "Sat Jul 16 15:44:07 +0000 2016", "text": "Well, \u200b*we\u2019ve*\u200b got plenty to say about Mike Pence. Here you go: https://t.co/LGbVGvN7F7", "in_reply_to_screen_name": null, "retweet_count": 3884, "favorite_count": 5992, "source": "TweetDeck", "id_str": "754340847655813120", "is_retweet": false}, {"created_at": "Thu Sep 15 00:06:20 +0000 2016", "text": "RT @JenniferJJacobs: People are making less real wages than 18 years ago, Trump says in Ohio. \"Me, I\u2019m working harder also so I don\u2019t feel\u2026", "in_reply_to_screen_name": null, "retweet_count": 2756, "favorite_count": 0, "source": "TweetDeck", "id_str": "776210505300054016", "is_retweet": true}, {"created_at": "Wed Aug 10 19:28:56 +0000 2016", "text": "Hillary's talking about the economy in Des Moines. Tune in now to watch: https://t.co/5VPr9qVgkv", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 1258, "source": "TweetDeck", "id_str": "763457118578114561", "is_retweet": false}, {"created_at": "Tue Jul 26 02:55:53 +0000 2016", "text": "Happening now: Watch @BernieSanders address the @DemConvention \u2192 https://t.co/AQaQTNCxdl #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 737, "favorite_count": 2782, "source": "TweetDeck", "id_str": "757771391093600256", "is_retweet": false}, {"created_at": "Wed Jan 20 16:58:35 +0000 2016", "text": "We need a president who will fight for all Americans, not just those at the top.\nhttps://t.co/P2rwjV0EPE", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 1527, "source": "Twitter Web Client", "id_str": "689854544864407553", "is_retweet": false}, {"created_at": "Tue Sep 27 02:43:15 +0000 2016", "text": "Hillary just proved she's the only candidate who's ready to be president. Chip in now and let's go win this thing: https://t.co/ATqqxWU0Hc", "in_reply_to_screen_name": null, "retweet_count": 4974, "favorite_count": 16260, "source": "TweetDeck", "id_str": "780598650628169729", "is_retweet": false}, {"created_at": "Fri Sep 16 02:57:19 +0000 2016", "text": "\"When I\u2019m under the weather, I can afford to take a few days off. Millions of Americans can\u2019t.\" Hillary in NC today: https://t.co/rNM9eJ0fUi", "in_reply_to_screen_name": null, "retweet_count": 2447, "favorite_count": 7347, "source": "TweetDeck", "id_str": "776615921939087360", "is_retweet": false}, {"created_at": "Tue Jul 26 19:31:08 +0000 2016", "text": "On most campaigns, there isn't much ambiguity as to whether the candidate does or doesn't back KKK leaders. https://t.co/3SD0GknJS2", "in_reply_to_screen_name": null, "retweet_count": 2023, "favorite_count": 4294, "source": "TweetDeck", "id_str": "758021854770724864", "is_retweet": false}, {"created_at": "Wed Jan 13 00:15:00 +0000 2016", "text": "You can sue a company for making an unsafe toy\u2014but not for making an assault rifle used to kill children. https://t.co/TvASrWpgim", "in_reply_to_screen_name": null, "retweet_count": 813, "favorite_count": 1226, "source": "TweetDeck", "id_str": "687065270842687488", "is_retweet": false}, {"created_at": "Sat Nov 05 02:09:02 +0000 2016", "text": "\"We have to vote. The world looks to us as a progressive country that leads change.\" \u2014@Beyonce\u2026 https://t.co/THPnCMTSxU", "in_reply_to_screen_name": null, "retweet_count": 6019, "favorite_count": 15320, "source": "TweetDeck", "id_str": "794723165352198144", "is_retweet": false}, {"created_at": "Fri Jan 15 03:56:38 +0000 2016", "text": "What you're really hearing at the #GOPdebate: More tax cuts for corporations and the wealthy, no real plans for the middle class.", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 1749, "source": "TweetDeck", "id_str": "687845824408236033", "is_retweet": false}, {"created_at": "Wed Jan 27 00:59:53 +0000 2016", "text": "Whether you're 9 or 99, you can help elect Hillary. Step one: https://t.co/6k5ZXDb09D https://t.co/z7yjEyjM9U", "in_reply_to_screen_name": null, "retweet_count": 285, "favorite_count": 643, "source": "TweetDeck", "id_str": "692149995835887618", "is_retweet": false}, {"created_at": "Sun Sep 11 02:58:24 +0000 2016", "text": "\"Trump spent $20,000 of money earmarked for charitable purposes to buy a six-foot-tall painting of himself.\u201d https://t.co/y0bY1efHwL", "in_reply_to_screen_name": null, "retweet_count": 6419, "favorite_count": 9158, "source": "TweetDeck", "id_str": "774804256901693440", "is_retweet": false}, {"created_at": "Fri Jul 29 02:15:43 +0000 2016", "text": "\"Mom, Grandma would be so, so proud of you tonight.\u201d \u2014@ChelseaClinton", "in_reply_to_screen_name": null, "retweet_count": 1412, "favorite_count": 6587, "source": "TweetDeck", "id_str": "758848449424920577", "is_retweet": false}, {"created_at": "Sun Jan 10 19:46:26 +0000 2016", "text": "Affordable health care should be a basic human right\u2014no matter what kind of medical history you have. https://t.co/7yEoNhP84I", "in_reply_to_screen_name": null, "retweet_count": 684, "favorite_count": 1466, "source": "TweetDeck", "id_str": "686272910806376450", "is_retweet": false}, {"created_at": "Wed Mar 02 04:11:19 +0000 2016", "text": "Back at you, Massachusetts. #SuperTuesday https://t.co/gs42BigKus", "in_reply_to_screen_name": null, "retweet_count": 1196, "favorite_count": 3542, "source": "TweetDeck", "id_str": "704881748207861760", "is_retweet": false}, {"created_at": "Sat Jan 30 21:20:41 +0000 2016", "text": "\u201cOne of the most broadly and deeply qualified presidential candidates in modern history.\u201d \u2014@nytimes https://t.co/xLQZNS09hr", "in_reply_to_screen_name": null, "retweet_count": 1077, "favorite_count": 1752, "source": "TweetDeck", "id_str": "693544385980583936", "is_retweet": false}, {"created_at": "Wed Oct 05 01:47:27 +0000 2016", "text": "RT @timkaine: \u201cThese guys\u2026want to go to house-to-house, school-to-school and business-to-business and kick out 16 million people.\u201d https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1635, "favorite_count": 0, "source": "TweetDeck", "id_str": "783483708284297217", "is_retweet": true}, {"created_at": "Thu Jul 28 03:25:26 +0000 2016", "text": "\"Democracy works, America, but we gotta want it\u2014not just during an election year, but all the days in between.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 2040, "favorite_count": 5553, "source": "TweetDeck", "id_str": "758503605238427649", "is_retweet": false}, {"created_at": "Tue Oct 11 22:41:32 +0000 2016", "text": "Trump \"doesn't have the temperament or the judgment...or the basic honesty that a president needs to have\" \u2014@POTUS: https://t.co/To8oTTsBcX", "in_reply_to_screen_name": null, "retweet_count": 1779, "favorite_count": 6205, "source": "TweetDeck", "id_str": "785973635571916800", "is_retweet": false}, {"created_at": "Wed Oct 19 18:59:48 +0000 2016", "text": "Do your part to hold Donald Trump to the truth. Follow @TheBriefing2016 during tonight's debate for live fact-checking. #Debates", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 4815, "source": "TweetDeck", "id_str": "788816939858661376", "is_retweet": false}, {"created_at": "Tue Feb 02 18:13:37 +0000 2016", "text": "#IowaCaucus: \u2705 https://t.co/uhXE6NOmJH", "in_reply_to_screen_name": null, "retweet_count": 1141, "favorite_count": 2400, "source": "TweetDeck", "id_str": "694584472323407872", "is_retweet": false}, {"created_at": "Sun Jul 03 00:08:35 +0000 2016", "text": "We're not going to turn back the clock on progress. https://t.co/U3IZJ2lmEW", "in_reply_to_screen_name": null, "retweet_count": 5218, "favorite_count": 12708, "source": "Twitter Web Client", "id_str": "749394367748665344", "is_retweet": false}, {"created_at": "Sun Feb 28 15:28:23 +0000 2016", "text": "It\u2019s not enough to make college more affordable. We need to help people with the student debt they already have.\nhttps://t.co/f9qkmbS2DM", "in_reply_to_screen_name": null, "retweet_count": 1251, "favorite_count": 2710, "source": "Twitter Web Client", "id_str": "703964972812906502", "is_retweet": false}, {"created_at": "Wed Sep 28 17:00:14 +0000 2016", "text": "\"Whew, OK!\u201d https://t.co/385hydBQan", "in_reply_to_screen_name": null, "retweet_count": 2689, "favorite_count": 5545, "source": "TweetDeck", "id_str": "781176706107334656", "is_retweet": false}, {"created_at": "Fri Aug 19 01:31:27 +0000 2016", "text": "Priorities. https://t.co/vcpYClUtxw https://t.co/H9ULZ9f9Hg", "in_reply_to_screen_name": null, "retweet_count": 1480, "favorite_count": 3760, "source": "TweetDeck", "id_str": "766447454057295872", "is_retweet": false}, {"created_at": "Mon Aug 01 14:21:16 +0000 2016", "text": "Watch backstage as Hillary, @TimKaine, and their families listen to the benediction to close out the DNC. https://t.co/L2qe6EWCjf", "in_reply_to_screen_name": null, "retweet_count": 2113, "favorite_count": 6055, "source": "TweetDeck", "id_str": "760118202194071552", "is_retweet": false}, {"created_at": "Wed Jul 27 18:04:01 +0000 2016", "text": "RT @timkaine: Taking it all in. https://t.co/SbCe01DOlD", "in_reply_to_screen_name": null, "retweet_count": 1514, "favorite_count": 0, "source": "TweetDeck", "id_str": "758362318224982017", "is_retweet": true}, {"created_at": "Tue Sep 20 15:18:29 +0000 2016", "text": "RT @WhiteHouse: \"Our identities do not have to be defined by putting someone else down but can be enhanced by lifting someone else up\" \u2014@PO\u2026", "in_reply_to_screen_name": null, "retweet_count": 2402, "favorite_count": 0, "source": "TweetDeck", "id_str": "778251997019537408", "is_retweet": true}, {"created_at": "Sat Jan 16 23:18:18 +0000 2016", "text": "Relieved that American prisoners are coming home from Iran. We must keep working for the return of Robert Levinson. -H", "in_reply_to_screen_name": null, "retweet_count": 558, "favorite_count": 1687, "source": "TweetDeck", "id_str": "688500552150441989", "is_retweet": false}, {"created_at": "Mon Sep 12 23:32:36 +0000 2016", "text": "The Trump Foundation: \"an arrangement worked out for maximum benefit at minimum sacrifice.\u201d https://t.co/y0bY1efHwL", "in_reply_to_screen_name": null, "retweet_count": 2574, "favorite_count": 4323, "source": "TweetDeck", "id_str": "775477239127433216", "is_retweet": false}, {"created_at": "Sun Feb 14 17:07:04 +0000 2016", "text": "National political director @AmandaRenteria went with Hillary to Flint, Michigan. Here's what she saw. https://t.co/tkoxhbFHio", "in_reply_to_screen_name": null, "retweet_count": 428, "favorite_count": 853, "source": "TweetDeck", "id_str": "698916376581431296", "is_retweet": false}, {"created_at": "Sat Apr 16 17:02:01 +0000 2016", "text": "About 90 people are killed by guns every day in America. We can't accept that as normal. #StopGunViolence https://t.co/KQvAe0orw3", "in_reply_to_screen_name": null, "retweet_count": 2225, "favorite_count": 4388, "source": "Twitter Web Client", "id_str": "721383154834141184", "is_retweet": false}, {"created_at": "Sat Jul 16 18:17:10 +0000 2016", "text": "Mike Pence would outlaw abortion.\n\nAnd Donald Trump just made him his running mate. https://t.co/RLOgEFzW7S", "in_reply_to_screen_name": null, "retweet_count": 6746, "favorite_count": 12676, "source": "TweetDeck", "id_str": "754379364301701120", "is_retweet": false}, {"created_at": "Wed Oct 19 22:22:15 +0000 2016", "text": "Maybe there's a reason Donald Trump refuses to release a real plan to combat ISIS. #Debate https://t.co/5cEorgljt3", "in_reply_to_screen_name": null, "retweet_count": 3312, "favorite_count": 7300, "source": "Media Studio", "id_str": "788867888182505476", "is_retweet": false}, {"created_at": "Fri Oct 14 11:54:55 +0000 2016", "text": "\"If we let Hillary's opponent win this election, then we are sending a clear message to our kids.\" \u2014@FLOTUS\u2026 https://t.co/8HafT5zLb4", "in_reply_to_screen_name": null, "retweet_count": 7495, "favorite_count": 16366, "source": "Media Studio", "id_str": "786898075444924420", "is_retweet": false}, {"created_at": "Fri Nov 04 19:46:35 +0000 2016", "text": "\"You are the change makers, the path breakers, and the ground shakers. You are proof that Black Girl Magic is real.\u2026 https://t.co/2KRj6JPnSu", "in_reply_to_screen_name": null, "retweet_count": 5932, "favorite_count": 13311, "source": "Media Studio", "id_str": "794626920273104896", "is_retweet": false}, {"created_at": "Tue Oct 04 20:42:27 +0000 2016", "text": "RT @johnpodesta: Good news out of Brussels\u2014 Paris Climate Agreement now squarely on track to enter into force this year. https://t.co/IkGlQ\u2026", "in_reply_to_screen_name": null, "retweet_count": 533, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783406955498987520", "is_retweet": true}, {"created_at": "Sun Feb 21 01:50:09 +0000 2016", "text": "This is a campaign to break down every barrier that holds us back. If we work together, anything is possible.\nhttps://t.co/eUGMhvt3vS", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 3272, "source": "Twitter Web Client", "id_str": "701222343658467328", "is_retweet": false}, {"created_at": "Fri Oct 21 16:11:59 +0000 2016", "text": "Khizr Khan, father of a fallen Muslim American hero: \"I want to ask Mr. Trump: Would my son have a place in your Am\u2026 https://t.co/7xqG0AttvT", "in_reply_to_screen_name": null, "retweet_count": 7331, "favorite_count": 15641, "source": "Media Studio", "id_str": "789499481758859264", "is_retweet": false}, {"created_at": "Mon Mar 14 01:37:45 +0000 2016", "text": "Let's end the school-to-prison pipeline and build a cradle-to-college pipeline. We've got to stop building prisons and invest in education.", "in_reply_to_screen_name": null, "retweet_count": 1327, "favorite_count": 3334, "source": "TweetDeck", "id_str": "709191756072538112", "is_retweet": false}, {"created_at": "Sat Oct 01 00:31:47 +0000 2016", "text": "RT @mayaharris_: We must ensure access to safe and legal abortion for all women\u2014not just in principle but in practice. #BeBoldEndHyde https\u2026", "in_reply_to_screen_name": null, "retweet_count": 925, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "782015114119680000", "is_retweet": true}, {"created_at": "Tue Feb 02 14:38:56 +0000 2016", "text": "History: made. #IowaCaucus https://t.co/ADAxUi5oU7", "in_reply_to_screen_name": null, "retweet_count": 1859, "favorite_count": 4273, "source": "TweetDeck", "id_str": "694530447020290049", "is_retweet": false}, {"created_at": "Sat Mar 26 21:28:51 +0000 2016", "text": "We need a president who will make comprehensive immigration reform a top priority and keep families together. https://t.co/SvSAabPmLs", "in_reply_to_screen_name": null, "retweet_count": 1054, "favorite_count": 2294, "source": "Twitter for iPhone", "id_str": "713840159138181121", "is_retweet": false}, {"created_at": "Sat Sep 24 22:58:12 +0000 2016", "text": "\"Our choice, Hillary Clinton, has a record of service and a raft of pragmatic ideas.\" \u2014@NYTimes endorsing Hillary\u2026 https://t.co/7Sus2PxlWC", "in_reply_to_screen_name": null, "retweet_count": 2249, "favorite_count": 5827, "source": "TweetDeck", "id_str": "779817238346002432", "is_retweet": false}, {"created_at": "Wed Jul 27 00:41:00 +0000 2016", "text": "No mother should have to feel this loss. https://t.co/VOjnf5woZy", "in_reply_to_screen_name": null, "retweet_count": 3499, "favorite_count": 7723, "source": "TweetDeck", "id_str": "758099837795663872", "is_retweet": false}, {"created_at": "Mon Oct 10 01:21:33 +0000 2016", "text": "\u201cI want to send a message: America is already great, but we are great because we are good.\u201d #Debate https://t.co/Wt3N4eF5gY", "in_reply_to_screen_name": null, "retweet_count": 2732, "favorite_count": 7361, "source": "TweetDeck", "id_str": "785289130372636672", "is_retweet": false}, {"created_at": "Tue Oct 04 20:16:51 +0000 2016", "text": "RT @Hillary_esp: Preocupada por las millones de familias en el trayecto del hurac\u00e1n Matthew. Puedes donar para los afectados aqu\u00ed: https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 330, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783400513626931200", "is_retweet": true}, {"created_at": "Sat Jul 23 00:28:27 +0000 2016", "text": ".@TimKaine's guiding principle: the belief that you can make a difference through public service. https://t.co/YopSUeMqOX", "in_reply_to_screen_name": null, "retweet_count": 8627, "favorite_count": 17518, "source": "TweetDeck", "id_str": "756647127187656705", "is_retweet": false}, {"created_at": "Fri Jul 29 02:40:59 +0000 2016", "text": "\"We will not build a wall\u2014instead, we will build an economy where everyone who wants a good job can get one.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1783, "favorite_count": 5041, "source": "TweetDeck", "id_str": "758854807809470465", "is_retweet": false}, {"created_at": "Wed Mar 02 02:07:54 +0000 2016", "text": "Thank you, Texas! #SuperTuesday https://t.co/jVuJ3IrG1Z", "in_reply_to_screen_name": null, "retweet_count": 1539, "favorite_count": 3528, "source": "Twitter Web Client", "id_str": "704850687641985024", "is_retweet": false}, {"created_at": "Wed Aug 03 18:58:44 +0000 2016", "text": "Trump thinks it's too hard to make his products in America, so we went and found 100 US manufacturers he could use. https://t.co/FCUCLJb1nr", "in_reply_to_screen_name": null, "retweet_count": 4478, "favorite_count": 8259, "source": "TweetDeck", "id_str": "760912806036303872", "is_retweet": false}, {"created_at": "Wed Mar 30 22:20:51 +0000 2016", "text": "Even by his impossibly low standards, @realDonaldTrump's suggestion that women be punished for seeking abortion is abhorrent.", "in_reply_to_screen_name": null, "retweet_count": 3554, "favorite_count": 7283, "source": "TweetDeck", "id_str": "715302800343883781", "is_retweet": false}, {"created_at": "Mon May 16 00:24:15 +0000 2016", "text": "\"Implementar la idea [de Trump] a los Estados Unidos destruir\u00eda la econom\u00eda\" \u2014@VoxDotCom\nhttps://t.co/5ADNub4pnm", "in_reply_to_screen_name": null, "retweet_count": 716, "favorite_count": 1102, "source": "Twitter Web Client", "id_str": "732003694003113984", "is_retweet": false}, {"created_at": "Tue Aug 16 18:00:56 +0000 2016", "text": "It\u2019s not just that Trump doesn\u2019t know what he\u2019s talking about when it comes to national security. His words are dangerous, and they hurt us.", "in_reply_to_screen_name": null, "retweet_count": 4070, "favorite_count": 14877, "source": "TweetDeck", "id_str": "765609303017451520", "is_retweet": false}, {"created_at": "Mon Oct 24 22:34:05 +0000 2016", "text": "Trump loves conspiracy theories almost as much as his hat. But why choose?\n\nMake your own tin foil #MAGA hat:\u2026 https://t.co/7S1Ck6tqhf", "in_reply_to_screen_name": null, "retweet_count": 2197, "favorite_count": 5652, "source": "TweetDeck", "id_str": "790682803289587712", "is_retweet": false}, {"created_at": "Tue Jul 12 16:01:53 +0000 2016", "text": "Taking on systemic racism and rebuilding trust and respect between law enforcement and the communities they serve will require all of us.", "in_reply_to_screen_name": null, "retweet_count": 1031, "favorite_count": 3022, "source": "TweetDeck", "id_str": "752895766927212544", "is_retweet": false}, {"created_at": "Mon Aug 29 16:40:01 +0000 2016", "text": "RT @Jorge_Silva: Mi M\u00e9xico, and the world, lost a great singer, songwriter and human being. #RIP #JuanGabriel. #DivoDeJuarez https://t.co/E\u2026", "in_reply_to_screen_name": null, "retweet_count": 370, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770299979533586432", "is_retweet": true}, {"created_at": "Fri Sep 16 13:58:45 +0000 2016", "text": "Just yesterday, Trump again refused to say with his own words that the president was born in the United States.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 609, "favorite_count": 1836, "source": "TweetDeck", "id_str": "776782378375208960", "is_retweet": false}, {"created_at": "Thu Jan 28 03:04:40 +0000 2016", "text": "The NRA has called the shots long enough. @SenBlumenthal and @RepAdamSchiff on why we need to repeal gun immunity: https://t.co/pnigN5POJa", "in_reply_to_screen_name": null, "retweet_count": 586, "favorite_count": 893, "source": "TweetDeck", "id_str": "692543789416747008", "is_retweet": false}, {"created_at": "Tue May 31 20:04:29 +0000 2016", "text": "Aspiring Commander-in-Chief @realDonaldTrump has some ideas about prisoners of war. (He\u2019s not a big fan).\nhttps://t.co/mlPjVYVXrY", "in_reply_to_screen_name": null, "retweet_count": 1364, "favorite_count": 2223, "source": "Twitter Web Client", "id_str": "737736528642736128", "is_retweet": false}, {"created_at": "Wed May 18 23:22:18 +0000 2016", "text": "(It's only Wednesday.) https://t.co/IPkbU8xdaw", "in_reply_to_screen_name": null, "retweet_count": 2100, "favorite_count": 3509, "source": "TweetDeck", "id_str": "733075267183378432", "is_retweet": false}, {"created_at": "Tue Nov 01 18:38:32 +0000 2016", "text": "RT @TUSK81: Campaigning in Florida today with @HillaryClinton: Alicia Machado. https://t.co/TBOrdoowwz", "in_reply_to_screen_name": null, "retweet_count": 2053, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793522628791271424", "is_retweet": true}, {"created_at": "Sat Oct 22 15:14:10 +0000 2016", "text": "\"We really are just trying to make our mark in life by helping people.\" https://t.co/PKoxy9dZEU", "in_reply_to_screen_name": null, "retweet_count": 4200, "favorite_count": 10074, "source": "Media Studio", "id_str": "789847321097932801", "is_retweet": false}, {"created_at": "Wed Feb 24 02:46:50 +0000 2016", "text": "We will never let Republicans privatize Social Security. We will protect it and expand it. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 794, "favorite_count": 1850, "source": "TweetDeck", "id_str": "702323771076640768", "is_retweet": false}, {"created_at": "Sun Feb 07 02:59:45 +0000 2016", "text": ".@RealDonaldTrump: \u201cI\u2019m the last person she wants to run against.\" #GOPdebate https://t.co/g0RM1pwbKk", "in_reply_to_screen_name": null, "retweet_count": 3387, "favorite_count": 6210, "source": "TweetDeck", "id_str": "696166430245527553", "is_retweet": false}, {"created_at": "Wed Sep 21 19:05:39 +0000 2016", "text": "Americans with disabilities deserve the chance to work alongside those without disabilities\u2014to do the same jobs for the same pay &amp; benefits.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 711, "favorite_count": 1572, "source": "TweetDeck", "id_str": "778671551298297856", "is_retweet": false}, {"created_at": "Tue Jun 28 02:11:04 +0000 2016", "text": "Donald Trump proves every day that he\u2019s not in it for the American people\u2014he\u2019s in it only for himself. https://t.co/XIazcLSRQw", "in_reply_to_screen_name": null, "retweet_count": 2454, "favorite_count": 6369, "source": "TweetDeck", "id_str": "747613254025883648", "is_retweet": false}, {"created_at": "Sat Jul 30 20:20:02 +0000 2016", "text": "\u201cDonald Trump spoke for 75 minutes and offered zero solutions.\u201d \u2014Hillary on Trump\u2019s convention speech: https://t.co/XpTG9bmbEu", "in_reply_to_screen_name": null, "retweet_count": 1445, "favorite_count": 4698, "source": "TweetDeck", "id_str": "759483715143827456", "is_retweet": false}, {"created_at": "Sat Jun 04 19:12:33 +0000 2016", "text": "El emocionante momento cuando @lorellapraeli pudo votar por primera vez. \u00a1Felicitaciones!\nhttps://t.co/w2lQc1tg9o", "in_reply_to_screen_name": null, "retweet_count": 592, "favorite_count": 1467, "source": "Twitter Web Client", "id_str": "739173011379486721", "is_retweet": false}, {"created_at": "Fri Aug 05 20:00:22 +0000 2016", "text": "RT @JoeBiden: America is going to see what VP Biden already knows \u2014 just how much @HillaryClinton cares about our country. https://t.co/Oak\u2026", "in_reply_to_screen_name": null, "retweet_count": 2572, "favorite_count": 0, "source": "TweetDeck", "id_str": "761653090307174401", "is_retweet": true}, {"created_at": "Tue Nov 08 05:31:06 +0000 2016", "text": "RT @rubycramer: Final rally of the Hillary Clinton campaign in Raleigh, N.C., and it's officially Tuesday, Nov. 8. https://t.co/EhOKHvnHtA", "in_reply_to_screen_name": null, "retweet_count": 2062, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795861181428879360", "is_retweet": true}, {"created_at": "Fri Oct 07 23:54:35 +0000 2016", "text": "Women have the power to stop Trump.\n\nhttps://t.co/tTgeqy51PU\nhttps://t.co/VH3woeAf9Q https://t.co/NjvbkPsjPR", "in_reply_to_screen_name": null, "retweet_count": 59788, "favorite_count": 110348, "source": "Media Studio", "id_str": "784542470847631360", "is_retweet": false}, {"created_at": "Mon Nov 07 17:36:57 +0000 2016", "text": "\"We don\u2019t have to accept a dark and divisive vision for America. Tomorrow, you can vote for a hopeful, inclusive, b\u2026 https://t.co/AequOcpVzQ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1330, "favorite_count": 2757, "source": "TweetDeck", "id_str": "795681456886579200", "is_retweet": false}, {"created_at": "Mon Jun 20 20:44:11 +0000 2016", "text": "Tonight, the Senate will vote on commonsense measures to prevent gun violence. Tell your senators you support them: https://t.co/ukrcuor0YJ", "in_reply_to_screen_name": null, "retweet_count": 1354, "favorite_count": 3477, "source": "TweetDeck", "id_str": "744994276413628416", "is_retweet": false}, {"created_at": "Wed Sep 21 21:51:50 +0000 2016", "text": "We need a president who sees the best in all of us. https://t.co/vX0Oycto1Q", "in_reply_to_screen_name": null, "retweet_count": 3439, "favorite_count": 6973, "source": "Twitter Web Client", "id_str": "778713373873700864", "is_retweet": false}, {"created_at": "Mon May 16 21:47:01 +0000 2016", "text": "Every woman, no matter where she works, deserves birth control coverage. This shouldn't be a question. #SCOTUS -H", "in_reply_to_screen_name": null, "retweet_count": 2171, "favorite_count": 5388, "source": "TweetDeck", "id_str": "732326511924105220", "is_retweet": false}, {"created_at": "Fri Sep 02 15:37:42 +0000 2016", "text": "RT @AmericasVoice: .@DavidLeopold: \"Trump laid out the most hardline, mean spirited immigration proposal in U.S. history.\" https://t.co/5We\u2026", "in_reply_to_screen_name": null, "retweet_count": 836, "favorite_count": 0, "source": "TweetDeck", "id_str": "771733851542544384", "is_retweet": true}, {"created_at": "Thu Jun 16 18:14:48 +0000 2016", "text": "\u201cHillary Clinton has proven herself as a champion of the labor movement.\" https://t.co/STSP2CRgbp", "in_reply_to_screen_name": null, "retweet_count": 1036, "favorite_count": 3099, "source": "Twitter Web Client", "id_str": "743507131228368896", "is_retweet": false}, {"created_at": "Mon Aug 08 00:58:24 +0000 2016", "text": "We have some questions about @realDonaldTrump's cozy relationship with Russia. https://t.co/aetHzJyJCo", "in_reply_to_screen_name": null, "retweet_count": 2216, "favorite_count": 4659, "source": "TweetDeck", "id_str": "762452870553702401", "is_retweet": false}, {"created_at": "Thu Sep 01 22:20:35 +0000 2016", "text": "If Trump needs help with diplomacy, he could learn a lot from our last secretary of state. https://t.co/wrAPHGr7oq", "in_reply_to_screen_name": null, "retweet_count": 1453, "favorite_count": 3790, "source": "TweetDeck", "id_str": "771472849831878657", "is_retweet": false}, {"created_at": "Mon Apr 04 22:26:50 +0000 2016", "text": "48 years ago, we lost a giant in the fight for equality. Let\u2019s honor Dr. King and keep bending the arc of the moral universe toward justice.", "in_reply_to_screen_name": null, "retweet_count": 2000, "favorite_count": 5201, "source": "TweetDeck", "id_str": "717116245271789568", "is_retweet": false}, {"created_at": "Sat Jul 30 20:26:57 +0000 2016", "text": "Donald Trump says he wants to \"make America great again.\"\n\nWell, he could start by actually making things in America.", "in_reply_to_screen_name": null, "retweet_count": 4503, "favorite_count": 15856, "source": "TweetDeck", "id_str": "759485454882312192", "is_retweet": false}, {"created_at": "Fri Jul 29 03:18:00 +0000 2016", "text": "\"Donald Trump can't even handle the rough-and-tumble of a presidential campaign...Imagine him in the Oval Office facing a real crisis.\"", "in_reply_to_screen_name": null, "retweet_count": 4136, "favorite_count": 12271, "source": "TweetDeck", "id_str": "758864122205261824", "is_retweet": false}, {"created_at": "Sat Oct 01 02:22:35 +0000 2016", "text": "RT @timkaine: 39 days. https://t.co/B21QKpeiSj https://t.co/8HVscitM0w", "in_reply_to_screen_name": null, "retweet_count": 1575, "favorite_count": 0, "source": "TweetDeck", "id_str": "782042999991705600", "is_retweet": true}, {"created_at": "Thu Oct 20 20:25:07 +0000 2016", "text": "\"She gets the job done, and she never, ever, ever quits. And that's why I know she can be a great president.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 563, "favorite_count": 1496, "source": "TweetDeck", "id_str": "789200799079555072", "is_retweet": false}, {"created_at": "Tue Oct 25 19:11:27 +0000 2016", "text": "We\u2019ve got to raise the minimum wage. No one who works full-time should still be in poverty. https://t.co/4tLYvfZny7", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1252, "favorite_count": 3580, "source": "TweetDeck", "id_str": "790994196291346432", "is_retweet": false}, {"created_at": "Thu Aug 18 18:27:13 +0000 2016", "text": "RT @timkaine: Hillary's first job was fighting for social justice at @ChildDefender\u2014it's one of the things I admire most about her https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 1668, "favorite_count": 0, "source": "TweetDeck", "id_str": "766340692071383040", "is_retweet": true}, {"created_at": "Thu Jun 09 17:50:44 +0000 2016", "text": "President Obama endorses Hillary: \"I don\u2019t think there\u2019s ever been someone so qualified to hold this office.\" https://t.co/KetvKoa853", "in_reply_to_screen_name": null, "retweet_count": 10011, "favorite_count": 18215, "source": "Twitter Web Client", "id_str": "740964361552941056", "is_retweet": false}, {"created_at": "Tue Feb 02 17:26:26 +0000 2016", "text": "No matter who you are, what you look like, what faith you practice, or who you love: She\u2019s fighting for you.\nhttps://t.co/f8EIMVdPVZ", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 2452, "source": "Twitter Web Client", "id_str": "694572597191639041", "is_retweet": false}, {"created_at": "Thu Apr 14 14:27:25 +0000 2016", "text": "\u201cElla puede unir a personas de cada comunidad y pienso que continuar\u00e1 haciendo eso\u201d. https://t.co/HxuaMFz0Fn", "in_reply_to_screen_name": null, "retweet_count": 252, "favorite_count": 522, "source": "TweetDeck", "id_str": "720619471539421184", "is_retweet": false}, {"created_at": "Sun Oct 16 16:19:44 +0000 2016", "text": "RT @CecileRichards: Thank you @HillaryClinton &amp; everyone fighting for autonomy &amp; health for all. 100 years, and we're just getting started.\u2026", "in_reply_to_screen_name": null, "retweet_count": 2646, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787689492010438656", "is_retweet": true}, {"created_at": "Thu Apr 07 23:23:26 +0000 2016", "text": "Fighting for women and girls for 40 years and counting.\nhttps://t.co/8vSXLMokHn", "in_reply_to_screen_name": null, "retweet_count": 1710, "favorite_count": 3532, "source": "Twitter Web Client", "id_str": "718217649100967936", "is_retweet": false}, {"created_at": "Wed Feb 10 02:22:59 +0000 2016", "text": "\u201cMore than 700,000 people have contributed to this campaign, the vast majority giving less than $100.\u201d \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 1160, "source": "TweetDeck", "id_str": "697244341144842240", "is_retweet": false}, {"created_at": "Wed Jul 27 02:45:12 +0000 2016", "text": "\"She flew all night from Cambodia to the Middle East to get a ceasefire to avoid a shooting war between Hamas and Israel.\" \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 5068, "source": "TweetDeck", "id_str": "758131092700422144", "is_retweet": false}, {"created_at": "Thu Aug 11 17:50:06 +0000 2016", "text": "One of the many stark choices we face in this election. https://t.co/sCQJXB7mEV", "in_reply_to_screen_name": null, "retweet_count": 1005, "favorite_count": 2865, "source": "TweetDeck", "id_str": "763794635206582272", "is_retweet": false}, {"created_at": "Fri Sep 16 00:59:29 +0000 2016", "text": "\"We have a chance to show that comprehensive immigration reform isn\u2019t just the smart thing to do\u2014it\u2019s what the American people demand.\"", "in_reply_to_screen_name": null, "retweet_count": 1101, "favorite_count": 3834, "source": "TweetDeck", "id_str": "776586269157621764", "is_retweet": false}, {"created_at": "Fri Jul 22 15:12:47 +0000 2016", "text": "RT @JamilSmith: \"Couldn't have said it better,\" wrote the former Ku Klux Klan Grand Wizard about Trump's convention speech. https://t.co/Y1\u2026", "in_reply_to_screen_name": null, "retweet_count": 2130, "favorite_count": 0, "source": "TweetDeck", "id_str": "756507290614788096", "is_retweet": true}, {"created_at": "Sun Oct 09 21:27:04 +0000 2016", "text": "\u201cThe choice that you make, that we make, will determine the direction of this country for a long time.\" \u2014@POTUS:\u2026 https://t.co/2ebwAu3XJK", "in_reply_to_screen_name": null, "retweet_count": 3934, "favorite_count": 8837, "source": "Media Studio", "id_str": "785230121103785984", "is_retweet": false}, {"created_at": "Fri Jul 22 14:51:10 +0000 2016", "text": "RT @ezraklein: Donald Trump doesn\u2019t want to make America great. He wants to make it afraid, because that's the only way he wins:  https://t\u2026", "in_reply_to_screen_name": null, "retweet_count": 3026, "favorite_count": 0, "source": "TweetDeck", "id_str": "756501849927258112", "is_retweet": true}, {"created_at": "Thu Jul 28 22:59:10 +0000 2016", "text": "RT @MoDemParty: You better listen to @RepCleaver \u2014 @HillaryClinton won't stay throwed. #DemsInPhilly\nhttps://t.co/QUadl02GPz", "in_reply_to_screen_name": null, "retweet_count": 380, "favorite_count": 0, "source": "TweetDeck", "id_str": "758798983628075008", "is_retweet": true}, {"created_at": "Sat Jun 11 21:38:40 +0000 2016", "text": "\"Sec. Clinton will be the strong environmental champion that we need to lead our country.\" https://t.co/P4NqUN1qfw", "in_reply_to_screen_name": null, "retweet_count": 916, "favorite_count": 3377, "source": "Twitter Web Client", "id_str": "741746495683170304", "is_retweet": false}, {"created_at": "Thu Sep 08 17:25:24 +0000 2016", "text": "We can build a future where we\u2019re stronger together. That\u2019s who we are as Americans. Text JOIN to 47246 to get involved.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 486, "favorite_count": 1403, "source": "TweetDeck", "id_str": "773935280499884037", "is_retweet": false}, {"created_at": "Sat Oct 15 02:18:34 +0000 2016", "text": "We need end-to-end reform in our criminal justice system. Not half measures, but full measures:\u2026 https://t.co/eIyDPzohwA", "in_reply_to_screen_name": null, "retweet_count": 3017, "favorite_count": 7935, "source": "Twitter for iPhone", "id_str": "787115420935389184", "is_retweet": false}, {"created_at": "Sat Jul 23 17:34:35 +0000 2016", "text": "\"Hillary Clinton is the exact opposite of Donald Trump.\n\nShe doesn\u2019t insult people. She listens to them.\" \u2014@timkaine", "in_reply_to_screen_name": null, "retweet_count": 2122, "favorite_count": 6360, "source": "TweetDeck", "id_str": "756905359747481600", "is_retweet": false}, {"created_at": "Thu Jun 02 19:37:50 +0000 2016", "text": "Don\u2019t let anyone tell you that America isn\u2019t great. Donald Trump\u2019s got America all wrong.", "in_reply_to_screen_name": null, "retweet_count": 2322, "favorite_count": 5404, "source": "TweetDeck", "id_str": "738454595492577280", "is_retweet": false}, {"created_at": "Sun May 01 00:48:28 +0000 2016", "text": "If standing up for women is playing the #WomanCard... https://t.co/GySsJDludM", "in_reply_to_screen_name": null, "retweet_count": 2072, "favorite_count": 5925, "source": "Twitter for iPhone", "id_str": "726573970594619395", "is_retweet": false}, {"created_at": "Sun Feb 21 20:58:30 +0000 2016", "text": "Our hearts are in Kalamazoo today. We must end this epidemic. Communities across the country are paying the cost for inaction. -H", "in_reply_to_screen_name": null, "retweet_count": 1104, "favorite_count": 2397, "source": "TweetDeck", "id_str": "701511335260069888", "is_retweet": false}, {"created_at": "Wed Jul 27 02:36:31 +0000 2016", "text": "\"She\u2019s insatiably curious, she\u2019s a natural leader, she\u2019s a good organizer, and she\u2019s the best darn changemaker I\u2019ve seen.\u201d \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 1381, "favorite_count": 4724, "source": "TweetDeck", "id_str": "758128907279331328", "is_retweet": false}, {"created_at": "Mon Jul 25 15:55:58 +0000 2016", "text": "\"I believe that he and all American prisoners of war are heroes.\u201d \u2014Hillary on Senator John McCain", "in_reply_to_screen_name": null, "retweet_count": 803, "favorite_count": 3069, "source": "TweetDeck", "id_str": "757605317723193344", "is_retweet": false}, {"created_at": "Thu Oct 20 15:27:42 +0000 2016", "text": "Show Trump his tweets come at a cost\u2014because Hillary supporters are pledging to donate every time he tweets:\u2026 https://t.co/Y2L5IgsR5T", "in_reply_to_screen_name": null, "retweet_count": 1382, "favorite_count": 4385, "source": "TweetDeck", "id_str": "789125952102170624", "is_retweet": false}, {"created_at": "Fri Sep 16 00:52:50 +0000 2016", "text": "\u201cI believe with all my heart that the American Dream is alive, and it\u2019s big enough for everyone to share its promise.\u201d \u2014Hillary to @CHCI", "in_reply_to_screen_name": null, "retweet_count": 1468, "favorite_count": 4441, "source": "TweetDeck", "id_str": "776584595248648192", "is_retweet": false}, {"created_at": "Sun Oct 02 17:54:27 +0000 2016", "text": "Try our new tool! See how much you'd pay in federal income taxes if you paid the same as \"billionaire\" Donald Trump: https://t.co/CD0yzPDqhw", "in_reply_to_screen_name": null, "retweet_count": 4248, "favorite_count": 7574, "source": "TweetDeck", "id_str": "782639898549510144", "is_retweet": false}, {"created_at": "Wed Jun 15 16:48:41 +0000 2016", "text": "Your @GOP presidential nominee responding to a terrorist attack with lies and conspiracy theories.\nhttps://t.co/TZJmXefmx4", "in_reply_to_screen_name": null, "retweet_count": 3944, "favorite_count": 7962, "source": "Twitter Web Client", "id_str": "743123070693449728", "is_retweet": false}, {"created_at": "Tue Mar 01 18:00:19 +0000 2016", "text": "She'll fight for paid family leave and stand up to the NRA. Here are 100+ more reasons to vote for Hillary: https://t.co/kagIEtsYja", "in_reply_to_screen_name": null, "retweet_count": 672, "favorite_count": 1391, "source": "TweetDeck", "id_str": "704727985014837248", "is_retweet": false}, {"created_at": "Fri Sep 16 01:14:14 +0000 2016", "text": "Donald Trump still refuses to say @POTUS was born in America. And this man wants to be our president?\n\nWhen will he stop this ugliness?", "in_reply_to_screen_name": null, "retweet_count": 2747, "favorite_count": 8226, "source": "TweetDeck", "id_str": "776589982953828352", "is_retweet": false}, {"created_at": "Fri Jun 17 18:38:54 +0000 2016", "text": "One year ago we lost 9 lives in Charleston. 49 in Orlando on Sunday. 26 in Newtown. Too many others. This has to stop. We need to change. -H", "in_reply_to_screen_name": null, "retweet_count": 3992, "favorite_count": 11953, "source": "TweetDeck", "id_str": "743875582333751296", "is_retweet": false}, {"created_at": "Fri Aug 19 22:01:52 +0000 2016", "text": "When the IOC introduced women's wrestling in 2004, @Helen_Maroulis dreamed of gold. Yesterday that dream came true. https://t.co/ZvyuQYK36v", "in_reply_to_screen_name": null, "retweet_count": 1794, "favorite_count": 7673, "source": "TweetDeck", "id_str": "766757098592079872", "is_retweet": false}, {"created_at": "Wed Oct 26 14:12:00 +0000 2016", "text": "RT @NickMerrill: Surprise! Happy Birthday HRC!! \ud83c\udf82 https://t.co/U2H7XUUltc", "in_reply_to_screen_name": null, "retweet_count": 6718, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791281226661425152", "is_retweet": true}, {"created_at": "Thu Mar 17 13:03:58 +0000 2016", "text": "Climate change, education, equal pay\u2014a mathematician and a scientist from Florida share what they voted for: https://t.co/5GTrtyQatS", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 2026, "source": "TweetDeck", "id_str": "710451612595200000", "is_retweet": false}, {"created_at": "Fri Oct 14 15:27:13 +0000 2016", "text": "\"You can go vote early right now. Early voting started on Wednesday...go to https://t.co/NMfdtl5Szg.\" \u2014@POTUS in Ohio", "in_reply_to_screen_name": null, "retweet_count": 1650, "favorite_count": 5085, "source": "TweetDeck", "id_str": "786951503064039424", "is_retweet": false}, {"created_at": "Thu Sep 08 14:02:54 +0000 2016", "text": "\u201cI love this country. I will serve it with my entire heart, mind, and soul.\u201d \u2014Hillary on the tarmac to reporters", "in_reply_to_screen_name": null, "retweet_count": 2272, "favorite_count": 7299, "source": "TweetDeck", "id_str": "773884319030976512", "is_retweet": false}, {"created_at": "Tue Mar 29 19:59:02 +0000 2016", "text": "\"Donald Trump is running a cynical campaign of hate and fear... he is pitting Americans against each other.\"\nhttps://t.co/bmFLgdCTJO", "in_reply_to_screen_name": null, "retweet_count": 3299, "favorite_count": 5951, "source": "Twitter Web Client", "id_str": "714904719819341824", "is_retweet": false}, {"created_at": "Fri Aug 05 16:39:16 +0000 2016", "text": "The Great Recession hit our whole country hard, but the toll was especially hard on black and Latino families.", "in_reply_to_screen_name": null, "retweet_count": 795, "favorite_count": 3130, "source": "TweetDeck", "id_str": "761602482774675457", "is_retweet": false}, {"created_at": "Fri Jul 29 02:57:31 +0000 2016", "text": "\"I will be a president for Democrats, Republicans, and Independents. For the struggling, the striving and the successful\u2026for all Americans.\"", "in_reply_to_screen_name": null, "retweet_count": 3811, "favorite_count": 9560, "source": "TweetDeck", "id_str": "758858968718385152", "is_retweet": false}, {"created_at": "Wed Jun 29 21:23:46 +0000 2016", "text": "We should deploy 5G internet to make sure we have the fastest online connections possible. https://t.co/6CJVBl9j7e", "in_reply_to_screen_name": null, "retweet_count": 682, "favorite_count": 1979, "source": "TweetDeck", "id_str": "748265729116475392", "is_retweet": false}, {"created_at": "Fri Mar 11 01:43:11 +0000 2016", "text": ".@shondarhimes @tonygoldwyn @kerrywashington @violadavis @ellenpompeo: Talk about a power lineup. Thank you for being on this team! -H", "in_reply_to_screen_name": "shondarhimes", "retweet_count": 1415, "favorite_count": 3887, "source": "Twitter Web Client", "id_str": "708105958363422721", "is_retweet": false}, {"created_at": "Thu Sep 29 13:02:28 +0000 2016", "text": "RT @ninhaitseng: Hillary Clinton: What I learned from being a mom who works via @FortuneMagazine https://t.co/d0Ioij0kpm", "in_reply_to_screen_name": null, "retweet_count": 786, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781479256949977088", "is_retweet": true}, {"created_at": "Tue May 24 22:35:10 +0000 2016", "text": "Hillary's live on @TheEllenShow's Facebook page! Watch now: https://t.co/iWfEEYZVy6 https://t.co/1ZlriB1IrI", "in_reply_to_screen_name": null, "retweet_count": 715, "favorite_count": 2100, "source": "TweetDeck", "id_str": "735237733317283840", "is_retweet": false}, {"created_at": "Sat Oct 08 14:13:26 +0000 2016", "text": "Chip in to help make sure Donald Trump never becomes president: https://t.co/2FSRCLQhiS https://t.co/0HAfzKmCVd", "in_reply_to_screen_name": null, "retweet_count": 3946, "favorite_count": 9529, "source": "Media Studio", "id_str": "784758605937455104", "is_retweet": false}, {"created_at": "Sat Oct 29 21:16:11 +0000 2016", "text": "\"Justice Dept. strongly discouraged Comey on move in Clinton email case\" \u2014@NYTimes https://t.co/W5u8MUak9f", "in_reply_to_screen_name": null, "retweet_count": 2976, "favorite_count": 5924, "source": "TweetDeck", "id_str": "792475141821390848", "is_retweet": false}, {"created_at": "Sun Aug 21 14:21:58 +0000 2016", "text": "There is so much more that unites us than divides us. That's why we're the greatest country on Earth. https://t.co/6uZVP0tjK9", "in_reply_to_screen_name": null, "retweet_count": 5019, "favorite_count": 17606, "source": "TweetDeck", "id_str": "767366136824467456", "is_retweet": false}, {"created_at": "Mon Oct 10 01:09:27 +0000 2016", "text": "We are going to respect each other, lift each other up, and celebrate our diversity. #Debate #StrongerTogether https://t.co/M6vKxhwPWZ", "in_reply_to_screen_name": null, "retweet_count": 1651, "favorite_count": 5271, "source": "TweetDeck", "id_str": "785286087476449280", "is_retweet": false}, {"created_at": "Tue Sep 13 18:16:01 +0000 2016", "text": "\"You don't grade the presidency on a curve. This is serious business.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1354, "favorite_count": 3879, "source": "TweetDeck", "id_str": "775759959791403009", "is_retweet": false}, {"created_at": "Thu Oct 20 21:28:53 +0000 2016", "text": "\"He demeans and humiliates women as if we're objects...rather than human beings worthy of love and respect.\" \u2014@FLOTUS on Trump", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 714, "favorite_count": 1740, "source": "TweetDeck", "id_str": "789216844922183684", "is_retweet": false}, {"created_at": "Tue Sep 27 02:26:33 +0000 2016", "text": "A man who can be provoked by a tweet should not have his hands anywhere near the nuclear codes. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 46761, "favorite_count": 90440, "source": "TweetDeck", "id_str": "780594447427960833", "is_retweet": false}, {"created_at": "Tue Oct 11 19:51:54 +0000 2016", "text": "The Paris Climate Agreement is our last, best chance to solve the climate crisis.\n\nDonald Trump wants to cancel it. https://t.co/Z6Gt7D2YuP", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 659, "favorite_count": 1504, "source": "TweetDeck", "id_str": "785930946067431424", "is_retweet": false}, {"created_at": "Thu Jul 28 03:04:47 +0000 2016", "text": "\"The America I know is full of courage, and optimism, and ingenuity. The America I know is decent and generous.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1691, "favorite_count": 4350, "source": "TweetDeck", "id_str": "758498410018312192", "is_retweet": false}, {"created_at": "Wed Sep 21 19:49:48 +0000 2016", "text": "A disability shouldn't define your future.\n\nAt @ChildDefender, Hillary helped give kids the chance to succeed. https://t.co/jaMcdARYn1", "in_reply_to_screen_name": null, "retweet_count": 1778, "favorite_count": 4220, "source": "TweetDeck", "id_str": "778682662781227008", "is_retweet": false}, {"created_at": "Sun Jan 31 14:55:26 +0000 2016", "text": "True in Beijing in 1995, true today: Women's rights are human rights. This center should remain\u2014I stand with Guo. https://t.co/WbqDsdPr5q -H", "in_reply_to_screen_name": null, "retweet_count": 487, "favorite_count": 788, "source": "TweetDeck", "id_str": "693809820026167296", "is_retweet": false}, {"created_at": "Wed Oct 05 01:30:36 +0000 2016", "text": "\"The policies of this administration have driven this economy into a ditch.\u201d \u2014Pence\n\nNope. #VPDebate https://t.co/nuvHJ8FSoc", "in_reply_to_screen_name": null, "retweet_count": 4684, "favorite_count": 7155, "source": "TweetDeck", "id_str": "783479468170043392", "is_retweet": false}, {"created_at": "Wed Jul 06 16:49:07 +0000 2016", "text": "Donald Trump's business strategy:\n\nIt's not about what you can build. It's about how much you can take.", "in_reply_to_screen_name": null, "retweet_count": 1113, "favorite_count": 2764, "source": "TweetDeck", "id_str": "750733325845794816", "is_retweet": false}, {"created_at": "Mon Aug 22 14:32:03 +0000 2016", "text": "The best way to help Louisianans affected by terrible flooding is to make sure they have the resources they need: https://t.co/lVjQXLZnV8", "in_reply_to_screen_name": null, "retweet_count": 1467, "favorite_count": 4037, "source": "TweetDeck", "id_str": "767731061103157248", "is_retweet": false}, {"created_at": "Fri Mar 04 19:56:48 +0000 2016", "text": "Watch live \u2192 Hillary speaks about creating jobs, strengthening the economy, and revitalizing cities in Detroit: https://t.co/duJfG7fOve", "in_reply_to_screen_name": null, "retweet_count": 328, "favorite_count": 731, "source": "TweetDeck", "id_str": "705844461461438464", "is_retweet": false}, {"created_at": "Tue May 31 13:12:27 +0000 2016", "text": "Millions around the world are forced into human trafficking. We can't rest until they're free. https://t.co/tOAvVYe46t #UnderstandSlavery", "in_reply_to_screen_name": null, "retweet_count": 846, "favorite_count": 1875, "source": "Twitter for iPhone", "id_str": "737632834765082624", "is_retweet": false}, {"created_at": "Wed Jul 27 02:47:57 +0000 2016", "text": "\"How do you square the things I told you with the picture the Republicans painted of their opponent in Cleveland? You can\u2019t.\" \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 1643, "favorite_count": 5489, "source": "TweetDeck", "id_str": "758131784857088001", "is_retweet": false}, {"created_at": "Fri Feb 26 18:45:00 +0000 2016", "text": "Talking sexism in the workplace, racial justice, and...perspiration with @Buzzfeed\u2019s @AnotherRound. https://t.co/ByNDVR4JNl", "in_reply_to_screen_name": null, "retweet_count": 342, "favorite_count": 727, "source": "TweetDeck", "id_str": "703289680100507648", "is_retweet": false}, {"created_at": "Sun Feb 21 00:57:54 +0000 2016", "text": "Some may have doubted us, but we never doubted each other. https://t.co/JvToYvW3jQ", "in_reply_to_screen_name": null, "retweet_count": 911, "favorite_count": 2475, "source": "TweetDeck", "id_str": "701209194112937985", "is_retweet": false}, {"created_at": "Tue Mar 22 19:55:20 +0000 2016", "text": "If we want our kids to succeed at school, let\u2019s make sure their families can at home. That means tackling education and economic reform.", "in_reply_to_screen_name": null, "retweet_count": 1100, "favorite_count": 3230, "source": "TweetDeck", "id_str": "712367073117261826", "is_retweet": false}, {"created_at": "Fri Jul 22 00:00:57 +0000 2016", "text": "\"I already have a concentration camp...it's called Tent City.\" \u2014Joe Arpaio, Trump endorser and #RNCinCLE speaker https://t.co/KH0K2q50em", "in_reply_to_screen_name": null, "retweet_count": 1536, "favorite_count": 2179, "source": "TweetDeck", "id_str": "756277818993025025", "is_retweet": false}, {"created_at": "Wed Oct 05 02:14:17 +0000 2016", "text": "Tim Kaine is right: We should stop praising Putin. #VPDebate https://t.co/OVMdxGT736", "in_reply_to_screen_name": null, "retweet_count": 3458, "favorite_count": 7073, "source": "TweetDeck", "id_str": "783490460580999168", "is_retweet": false}, {"created_at": "Sat May 28 16:24:30 +0000 2016", "text": "\"Pregnancy is...certainly an inconvenience for a business.\" \u2014Donald Trump\n\nHere's Hillary's take \u2192\nhttps://t.co/eu2I0JrxSV", "in_reply_to_screen_name": null, "retweet_count": 2317, "favorite_count": 4492, "source": "Twitter Web Client", "id_str": "736594003118817280", "is_retweet": false}, {"created_at": "Thu May 05 00:44:47 +0000 2016", "text": "The Republican Party is now the party of Trump. Here's what it stands for.\nhttps://t.co/kCWJ9m2zNE", "in_reply_to_screen_name": null, "retweet_count": 5472, "favorite_count": 6042, "source": "Twitter Web Client", "id_str": "728022596042694656", "is_retweet": false}, {"created_at": "Wed Oct 05 02:45:59 +0000 2016", "text": "Couldn't be prouder of @TimKaine. Pitch in $5 now to make sure he becomes our next vice president: https://t.co/VAeZibDu26 #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 1420, "favorite_count": 5907, "source": "TweetDeck", "id_str": "783498441058054144", "is_retweet": false}, {"created_at": "Sat May 14 21:51:50 +0000 2016", "text": "Made a new friend in Ohio.\nhttps://t.co/a5eq9TuHn1", "in_reply_to_screen_name": null, "retweet_count": 1412, "favorite_count": 3460, "source": "Twitter Web Client", "id_str": "731602950523518976", "is_retweet": false}, {"created_at": "Wed Jul 06 22:59:45 +0000 2016", "text": "The Trump Atlantic City business method: Drive a business into the ground, stiff workers, and take home millions. https://t.co/VveL3MKwjU", "in_reply_to_screen_name": null, "retweet_count": 1333, "favorite_count": 2733, "source": "TweetDeck", "id_str": "750826600162291712", "is_retweet": false}, {"created_at": "Wed Jun 08 18:41:33 +0000 2016", "text": "History. https://t.co/CkDyWA2Bfv https://t.co/hI52yd3ATf", "in_reply_to_screen_name": null, "retweet_count": 1831, "favorite_count": 5181, "source": "TweetDeck", "id_str": "740614762267090944", "is_retweet": false}, {"created_at": "Thu Aug 25 19:30:37 +0000 2016", "text": "Trump would ban every Muslim around the world\u20141.5 billion men, women, and children\u2014from entering the U.S. just because of their religion.", "in_reply_to_screen_name": null, "retweet_count": 1888, "favorite_count": 4953, "source": "TweetDeck", "id_str": "768893360702648321", "is_retweet": false}, {"created_at": "Thu Jul 07 02:36:07 +0000 2016", "text": "While Trump's Atlantic City casinos posted $66 million in losses, he paid himself a $5 million bonus. https://t.co/wS2RDRJSzY", "in_reply_to_screen_name": null, "retweet_count": 2059, "favorite_count": 3736, "source": "TweetDeck", "id_str": "750881048276439040", "is_retweet": false}, {"created_at": "Fri Feb 26 02:14:06 +0000 2016", "text": "We need comprehensive immigration reform to keep families like Karla's together. #GOPdebate\nhttps://t.co/hd6FCPv7mW", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1411, "source": "Twitter Web Client", "id_str": "703040311820308480", "is_retweet": false}, {"created_at": "Sun Oct 09 20:33:59 +0000 2016", "text": "\"This is a woman who really does care.\" https://t.co/FFv9AuXX5b", "in_reply_to_screen_name": null, "retweet_count": 2017, "favorite_count": 5816, "source": "Media Studio", "id_str": "785216762853883904", "is_retweet": false}, {"created_at": "Fri Jul 22 02:46:58 +0000 2016", "text": "You are not our voice, @realDonaldTrump.", "in_reply_to_screen_name": null, "retweet_count": 12897, "favorite_count": 24884, "source": "Twitter Web Client", "id_str": "756319596366495750", "is_retweet": false}, {"created_at": "Tue May 17 16:59:37 +0000 2016", "text": "62 years after Brown v. Board, we still have too many segregated schools. We have to ensure equal opportunity for all of our kids.", "in_reply_to_screen_name": null, "retweet_count": 1290, "favorite_count": 3399, "source": "TweetDeck", "id_str": "732616576546004992", "is_retweet": false}, {"created_at": "Sat Jun 25 22:00:46 +0000 2016", "text": "To the LGBT community: We're with you.\n\nLove, @HFA.\nhttps://t.co/4SP1d3s8nz", "in_reply_to_screen_name": null, "retweet_count": 2319, "favorite_count": 6590, "source": "Twitter Web Client", "id_str": "746825486676877312", "is_retweet": false}, {"created_at": "Mon Apr 11 23:02:51 +0000 2016", "text": "We can't accept this as \"normal.\" It's time to help stop gun violence: https://t.co/TVwy0XqOKH https://t.co/jklX5MlCbg", "in_reply_to_screen_name": null, "retweet_count": 1010, "favorite_count": 1935, "source": "TweetDeck", "id_str": "719662021143359489", "is_retweet": false}, {"created_at": "Mon May 23 18:13:29 +0000 2016", "text": "Donald Trump thinks Americans are being paid too much and has hired union-busting firms to break up organizing campaigns on his properties.", "in_reply_to_screen_name": null, "retweet_count": 1248, "favorite_count": 2089, "source": "TweetDeck", "id_str": "734809490378350593", "is_retweet": false}, {"created_at": "Wed Sep 28 13:46:22 +0000 2016", "text": "\"Hillary and I have lost a true and treasured friend.\" \u2014@BillClinton and Hillary on the passing of Shimon Peres https://t.co/nyCE88Kvxb", "in_reply_to_screen_name": null, "retweet_count": 1726, "favorite_count": 6011, "source": "TweetDeck", "id_str": "781127915295674369", "is_retweet": false}, {"created_at": "Sat Oct 15 01:02:36 +0000 2016", "text": "We've come too far to turn back now. Make sure you're registered to vote: https://t.co/tTgeqxNqYm https://t.co/MVqZYXuA5c", "in_reply_to_screen_name": null, "retweet_count": 3897, "favorite_count": 9630, "source": "Twitter for iPhone", "id_str": "787096300789571584", "is_retweet": false}, {"created_at": "Fri Aug 05 16:47:54 +0000 2016", "text": "Trump retweets white nationalists. \nHe talks about banning Muslims. \nAnd yes, he talks about curtailing press freedom as well.", "in_reply_to_screen_name": null, "retweet_count": 2601, "favorite_count": 7514, "source": "TweetDeck", "id_str": "761604657521238016", "is_retweet": false}, {"created_at": "Wed Jul 27 02:33:59 +0000 2016", "text": "\u201cHillary opened my eyes to a whole new world of public service.\u201d \u2014@BillClinton https://t.co/wa9TvdvKIy", "in_reply_to_screen_name": null, "retweet_count": 1227, "favorite_count": 3905, "source": "TweetDeck", "id_str": "758128271607332864", "is_retweet": false}, {"created_at": "Wed Jun 15 23:53:38 +0000 2016", "text": "Thank you, @SenWarren. Proud to be in this fight with you. https://t.co/2bbZ70Pidx", "in_reply_to_screen_name": null, "retweet_count": 2844, "favorite_count": 9662, "source": "TweetDeck", "id_str": "743230014833954816", "is_retweet": false}, {"created_at": "Tue Sep 13 22:33:17 +0000 2016", "text": "How pay-to-play works:\n\n1. Trump faces possible investigation\n2. Trump gives $$ to AG\n3. Investigation never happens https://t.co/jbavsfconU", "in_reply_to_screen_name": null, "retweet_count": 9665, "favorite_count": 14370, "source": "Twitter Web Client", "id_str": "775824701801234433", "is_retweet": false}, {"created_at": "Sat Jan 30 22:59:47 +0000 2016", "text": "\"What I heard in those early days has stuck with me.\" Hillary on the first 10 months of the campaign: https://t.co/5UNybG9y8f", "in_reply_to_screen_name": null, "retweet_count": 298, "favorite_count": 742, "source": "Twitter Web Client", "id_str": "693569324964036609", "is_retweet": false}, {"created_at": "Wed Mar 23 22:25:57 +0000 2016", "text": "America needs strong, smart, steady leadership. The last thing we need are leaders who incite more fear. https://t.co/3H5F6wisv9", "in_reply_to_screen_name": null, "retweet_count": 2465, "favorite_count": 6808, "source": "TweetDeck", "id_str": "712767366086664193", "is_retweet": false}, {"created_at": "Tue Mar 08 17:16:38 +0000 2016", "text": "On repeat at @HFA HQ during #WomensHistoryMonth: https://t.co/UvomRXMfSc https://t.co/z1nZMAradZ", "in_reply_to_screen_name": null, "retweet_count": 462, "favorite_count": 1341, "source": "TweetDeck", "id_str": "707253708468387841", "is_retweet": false}, {"created_at": "Thu Feb 11 01:52:29 +0000 2016", "text": "We're going to fight for real solutions that make a real difference in people's lives. https://t.co/oLddR41epl", "in_reply_to_screen_name": null, "retweet_count": 1068, "favorite_count": 2751, "source": "TweetDeck", "id_str": "697599052188426240", "is_retweet": false}, {"created_at": "Tue Sep 27 02:50:50 +0000 2016", "text": "Text IMWITHHER to 47246 to tell Hillary you're on her team all the way to Election Day. #debatenight https://t.co/YzlkvzVTGY", "in_reply_to_screen_name": null, "retweet_count": 3104, "favorite_count": 12108, "source": "TweetDeck", "id_str": "780600557325156353", "is_retweet": false}, {"created_at": "Wed Sep 14 01:57:58 +0000 2016", "text": "Danny Williams and his wife Leah lost their home after Trump University took advantage of them. https://t.co/FEaQAToJuC", "in_reply_to_screen_name": null, "retweet_count": 7586, "favorite_count": 9935, "source": "Twitter Web Client", "id_str": "775876212648534016", "is_retweet": false}, {"created_at": "Sat Aug 06 20:09:34 +0000 2016", "text": "Why do Trump\u2019s foreign policy ideas read like a Putin wish list? https://t.co/IrJqXq0Kfg", "in_reply_to_screen_name": null, "retweet_count": 2390, "favorite_count": 4583, "source": "TweetDeck", "id_str": "762017792921051136", "is_retweet": false}, {"created_at": "Mon Oct 10 01:24:20 +0000 2016", "text": "Trump owes President Obama an apology for his years-long racist conspiracy. \n\nAnd by the way: \"Sorry if you were offended\" doesn't count.", "in_reply_to_screen_name": null, "retweet_count": 7044, "favorite_count": 22035, "source": "TweetDeck", "id_str": "785289830733324288", "is_retweet": false}, {"created_at": "Tue Mar 29 02:44:36 +0000 2016", "text": "65 million Americans voted to re-elect @POTUS. He\u2019s nominated a SCOTUS Justice as the Constitution requires. @ChuckGrassley: #DoYourJob.", "in_reply_to_screen_name": null, "retweet_count": 2039, "favorite_count": 4432, "source": "TweetDeck", "id_str": "714644397497925634", "is_retweet": false}, {"created_at": "Wed Sep 07 00:02:25 +0000 2016", "text": "RT @sarajacobs89: GOP cares more about defunding @PPFA and protecting the Confederate flag than protecting millions from Zika: https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 833, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "773310415824617472", "is_retweet": true}, {"created_at": "Wed Jul 06 23:40:04 +0000 2016", "text": "Newly discovered footage that could destroy Donald Trump\u2019s campaign if everyone saw it: https://t.co/X9rJ0SCUXr", "in_reply_to_screen_name": null, "retweet_count": 1151, "favorite_count": 2513, "source": "TweetDeck", "id_str": "750836746733154305", "is_retweet": false}, {"created_at": "Fri Mar 04 20:16:33 +0000 2016", "text": "Companies have to start treating workers like assets to be invested in, not costs to be cut.", "in_reply_to_screen_name": null, "retweet_count": 842, "favorite_count": 1829, "source": "Twitter Web Client", "id_str": "705849432558936064", "is_retweet": false}, {"created_at": "Sun Feb 28 00:06:25 +0000 2016", "text": "If you\u2019re with Hillary, chip in $1 right now, and let\u2019s go win this nomination. https://t.co/GoyF7nhTCs", "in_reply_to_screen_name": null, "retweet_count": 391, "favorite_count": 988, "source": "TweetDeck", "id_str": "703732953000632321", "is_retweet": false}, {"created_at": "Sat Oct 01 07:20:29 +0000 2016", "text": "It's 3:20am. As good a time as any to tweet about national service. https://t.co/6hRCC16UiV", "in_reply_to_screen_name": null, "retweet_count": 10672, "favorite_count": 31104, "source": "TweetDeck", "id_str": "782117968117428224", "is_retweet": false}, {"created_at": "Fri Jan 08 03:38:44 +0000 2016", "text": "The safety of our families is more important than the interests of the NRA. Full stop. #GunsInAmerica", "in_reply_to_screen_name": null, "retweet_count": 1839, "favorite_count": 4120, "source": "Twitter for iPhone", "id_str": "685304604989480961", "is_retweet": false}, {"created_at": "Sat Jun 25 15:20:27 +0000 2016", "text": "In some states, LGBT Americans can get married on Saturday and fired on Monday. That's not who we are. https://t.co/5TjQnBbM3s", "in_reply_to_screen_name": null, "retweet_count": 4387, "favorite_count": 9413, "source": "Twitter Web Client", "id_str": "746724745996021760", "is_retweet": false}, {"created_at": "Wed Feb 10 02:23:24 +0000 2016", "text": "\u201cI know that doesn\u2019t fit with the narrative\u2014there are those who want to deny the passion and purpose you show every day for this campaign.\u201d", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 1098, "source": "TweetDeck", "id_str": "697244446157598720", "is_retweet": false}, {"created_at": "Fri Jan 08 06:53:08 +0000 2016", "text": "As @POTUS spoke powerfully on protecting kids from gun violence, @realDonaldTrump said end gun free school zones. We deserve better. -H", "in_reply_to_screen_name": null, "retweet_count": 1506, "favorite_count": 3661, "source": "Twitter for iPhone", "id_str": "685353527774822400", "is_retweet": false}, {"created_at": "Thu Jun 09 21:49:50 +0000 2016", "text": "\"Our elections should be shaped by voters' voices\u2014not bought and sold by corporations &amp; special interests\" \u2014Hillary: https://t.co/QUJomlql0N", "in_reply_to_screen_name": null, "retweet_count": 1331, "favorite_count": 4445, "source": "TweetDeck", "id_str": "741024533059141632", "is_retweet": false}, {"created_at": "Wed Oct 05 02:40:30 +0000 2016", "text": "RT this if you're proud to be on this team\u2014all the way to the White House. https://t.co/e2JhKeJ3MC #VPDebate https://t.co/7GonEc0R2B", "in_reply_to_screen_name": null, "retweet_count": 13592, "favorite_count": 17897, "source": "TweetDeck", "id_str": "783497062247718912", "is_retweet": false}, {"created_at": "Sat Feb 20 20:54:15 +0000 2016", "text": "Nevada: If you're in line, stay there\u2014and talk to your neighbors about Hillary! https://t.co/EUXz3Dwpoh", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 1578, "source": "Twitter Web Client", "id_str": "701147880019644417", "is_retweet": false}, {"created_at": "Sun Feb 28 00:53:07 +0000 2016", "text": "\"We don\u2019t need to make America great again. America never stopped being great. But we do need to make America whole again.\" \u2014Hillary in SC", "in_reply_to_screen_name": null, "retweet_count": 2624, "favorite_count": 4655, "source": "Twitter Web Client", "id_str": "703744706719703041", "is_retweet": false}, {"created_at": "Tue Jul 26 02:15:11 +0000 2016", "text": "\"We don\u2019t turn against each other\u2014no, we listen to each other. We lean on each other because we are always stronger together.\" \u2014@FLOTUS", "in_reply_to_screen_name": null, "retweet_count": 2258, "favorite_count": 6289, "source": "TweetDeck", "id_str": "757761152231346176", "is_retweet": false}, {"created_at": "Mon Sep 19 20:22:12 +0000 2016", "text": "Be a voter. Check your registration and help your friends do the same \u2192 https://t.co/tTgeqxNqYm https://t.co/yTAG2iT8WL", "in_reply_to_screen_name": null, "retweet_count": 2599, "favorite_count": 5056, "source": "TweetDeck", "id_str": "777966037908221952", "is_retweet": false}, {"created_at": "Wed Mar 09 00:19:07 +0000 2016", "text": "At the @UN conference in Beijing, Hillary issued a call to action heard around the world. #InternationalWomensDay https://t.co/TeLB4t70n8", "in_reply_to_screen_name": null, "retweet_count": 690, "favorite_count": 1659, "source": "TweetDeck", "id_str": "707360029616246784", "is_retweet": false}, {"created_at": "Fri Feb 19 20:09:28 +0000 2016", "text": "Too many kids are being criminalized instead of educated. Here's how we will end the school-to-prison pipeline: https://t.co/hHezXRyj4C", "in_reply_to_screen_name": null, "retweet_count": 900, "favorite_count": 1758, "source": "TweetDeck", "id_str": "700774221883039746", "is_retweet": false}, {"created_at": "Tue Oct 04 16:08:50 +0000 2016", "text": "With 35 days left, Hillary's in PA talking about how she'll help kids and families. Join the conversation live \u2192 https://t.co/mxU5zwHHmu", "in_reply_to_screen_name": null, "retweet_count": 934, "favorite_count": 3414, "source": "Twitter Web Client", "id_str": "783338095349563392", "is_retweet": false}, {"created_at": "Tue May 03 21:46:39 +0000 2016", "text": "\"We're not going to be counted out anymore.\" \u2014Hillary on @realDonaldTrump's disparaging comments toward women\nhttps://t.co/GTP7YmV9Tc", "in_reply_to_screen_name": null, "retweet_count": 1653, "favorite_count": 3231, "source": "Twitter Web Client", "id_str": "727615378352836608", "is_retweet": false}, {"created_at": "Mon Aug 08 19:56:04 +0000 2016", "text": "Just imagine Donald Trump in the Oval Office facing a real crisis. We can\u2019t afford that kind of risk.", "in_reply_to_screen_name": null, "retweet_count": 3070, "favorite_count": 9352, "source": "TweetDeck", "id_str": "762739172054601728", "is_retweet": false}, {"created_at": "Wed Oct 05 01:21:04 +0000 2016", "text": "RT @timkaine: If Donald Trump was looking for a VP with the experience to implement his failed economic policies, it looks like he found hi\u2026", "in_reply_to_screen_name": null, "retweet_count": 3224, "favorite_count": 0, "source": "TweetDeck", "id_str": "783477072270336005", "is_retweet": true}, {"created_at": "Tue Oct 18 00:11:02 +0000 2016", "text": "When Hillary learned that the families of the fallen were only promised $12,000 in benefits, she took action. https://t.co/z9YFcTwYEv", "in_reply_to_screen_name": null, "retweet_count": 2577, "favorite_count": 6281, "source": "TweetDeck", "id_str": "788170489948667908", "is_retweet": false}, {"created_at": "Fri Oct 21 23:50:28 +0000 2016", "text": "\"What I want to say to Hillary is, 'Thank you. You made a difference in my child's life.'\" https://t.co/hougWv15gK", "in_reply_to_screen_name": null, "retweet_count": 4334, "favorite_count": 12595, "source": "Media Studio", "id_str": "789614862552932352", "is_retweet": false}, {"created_at": "Wed Apr 13 22:14:24 +0000 2016", "text": "Durante d\u00e9cadas de servicio al pa\u00eds Hillary logr\u00f3 resultados, especialmente para las familias. Conoce 7 de ellos. https://t.co/5iqUfIPylS", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 634, "source": "TweetDeck", "id_str": "720374603936206852", "is_retweet": false}, {"created_at": "Thu Jul 28 02:17:06 +0000 2016", "text": "RT @timkaine: \u201cI had to steer my state through the deepest recession since the 1930s, but hey, tough times don't last\u2014tough people do.\u201d \u2014Tim", "in_reply_to_screen_name": null, "retweet_count": 793, "favorite_count": 0, "source": "TweetDeck", "id_str": "758486408914804736", "is_retweet": true}, {"created_at": "Thu Sep 08 00:03:45 +0000 2016", "text": "It takes experience, toughness, and a steady temperament to be our Commander-in-Chief. #NBCNewsForum https://t.co/d5m0pXRMQG", "in_reply_to_screen_name": null, "retweet_count": 2138, "favorite_count": 6533, "source": "TweetDeck", "id_str": "773673141323399168", "is_retweet": false}, {"created_at": "Thu Jul 28 03:12:08 +0000 2016", "text": "\"No matter how daunting the odds.\nNo matter how much people try to knock her down.\nShe never, ever quits.\"\n\u2014@POTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1466, "favorite_count": 4776, "source": "TweetDeck", "id_str": "758500258079006720", "is_retweet": false}, {"created_at": "Wed Jun 01 21:07:54 +0000 2016", "text": "Trump himself is a fraud.\n\nHe's trying to scam America the way he scammed all those people at Trump University.\nhttps://t.co/yMt4mGLwYO", "in_reply_to_screen_name": null, "retweet_count": 3147, "favorite_count": 6271, "source": "Twitter Web Client", "id_str": "738114877026226178", "is_retweet": false}, {"created_at": "Wed Sep 28 02:10:42 +0000 2016", "text": "No matter where you live, you can make sure you're registered to vote at https://t.co/tTgeqxNqYm.\u2026 https://t.co/tWlu8DiGIg", "in_reply_to_screen_name": null, "retweet_count": 5238, "favorite_count": 10068, "source": "Media Studio", "id_str": "780952846682427393", "is_retweet": false}, {"created_at": "Sat Jul 16 01:12:31 +0000 2016", "text": "Hillary on the situation in #Turkey. https://t.co/WwpeKFXwX1", "in_reply_to_screen_name": null, "retweet_count": 2517, "favorite_count": 5322, "source": "TweetDeck", "id_str": "754121501729849344", "is_retweet": false}, {"created_at": "Wed Jul 06 20:54:34 +0000 2016", "text": "Let's make it so that no student has to take on debt to go to a public college or university in their state. https://t.co/FW6JDIMxqu", "in_reply_to_screen_name": null, "retweet_count": 1861, "favorite_count": 4302, "source": "TweetDeck", "id_str": "750795094849093632", "is_retweet": false}, {"created_at": "Fri Mar 25 14:29:10 +0000 2016", "text": "There's one candidate who's ready to be Commander-in-Chief on Day One. https://t.co/UDEFtdxbNG", "in_reply_to_screen_name": null, "retweet_count": 910, "favorite_count": 2608, "source": "TweetDeck", "id_str": "713372155665186816", "is_retweet": false}, {"created_at": "Sat Sep 03 21:50:08 +0000 2016", "text": "Even before his hateful speech this week, Trump has never been vague about his feelings toward immigrants. https://t.co/5VqZYpmmy3", "in_reply_to_screen_name": null, "retweet_count": 2182, "favorite_count": 4700, "source": "TweetDeck", "id_str": "772189964327084032", "is_retweet": false}, {"created_at": "Tue Jun 21 16:37:25 +0000 2016", "text": "\"He\u2019s giving more away to the 120,000 richest...families than he would to 120 million hardworking people.\" \u2014Hillary on Trump's tax plan", "in_reply_to_screen_name": null, "retweet_count": 1092, "favorite_count": 2900, "source": "TweetDeck", "id_str": "745294563057737729", "is_retweet": false}, {"created_at": "Tue Nov 08 05:13:57 +0000 2016", "text": "Join Hillary for her last rally of the campaign in Raleigh, North Carolina: https://t.co/a6K9DWYY3e", "in_reply_to_screen_name": null, "retweet_count": 1319, "favorite_count": 5608, "source": "TweetDeck", "id_str": "795856862939906048", "is_retweet": false}, {"created_at": "Fri Jun 03 22:30:07 +0000 2016", "text": ".@realDonaldTrump's \"ideas\" are really just a series of bizarre rants, personal feuds, and outright lies. https://t.co/qmyGDuwRZC", "in_reply_to_screen_name": null, "retweet_count": 3782, "favorite_count": 8553, "source": "TweetDeck", "id_str": "738860341526958080", "is_retweet": false}, {"created_at": "Mon Sep 19 17:01:11 +0000 2016", "text": "When we work together, we will trump hate. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 749, "favorite_count": 1889, "source": "Twitter Web Client", "id_str": "777915454186749952", "is_retweet": false}, {"created_at": "Wed Jul 20 23:39:32 +0000 2016", "text": "Hillary on the passing of Rep. Mark Takai. https://t.co/wzVKFaUF1y", "in_reply_to_screen_name": null, "retweet_count": 729, "favorite_count": 2144, "source": "TweetDeck", "id_str": "755910041715245057", "is_retweet": false}, {"created_at": "Wed Oct 05 01:17:48 +0000 2016", "text": "RT @timkaine: .@Mike_Pence if you wanted a refresher on Hillary\u2019s accomplishments as Secretary of State. #VPDebate https://t.co/WqbWQ4S36m", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 0, "source": "TweetDeck", "id_str": "783476247758331904", "is_retweet": true}, {"created_at": "Wed Sep 14 16:48:08 +0000 2016", "text": "13. How can we know you won't (again) impulsively damage relationships with crucial allies to preserve your own ego? https://t.co/j1VtaFhA6C", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2716, "favorite_count": 4322, "source": "TweetDeck", "id_str": "776100228441268228", "is_retweet": false}, {"created_at": "Fri Oct 14 20:34:46 +0000 2016", "text": "RT @mayaharris_: .@13THFilm a stark reminder the fight for racial justice isn\u2019t past\u2014it\u2019s here &amp; now &amp; requires us all to do our part https\u2026", "in_reply_to_screen_name": null, "retweet_count": 1951, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787028900337582080", "is_retweet": true}, {"created_at": "Tue Feb 16 21:18:38 +0000 2016", "text": "\"I\u2019ll be the first to admit...I\u2019ve made my own mistakes; I've walked my own journey. But I believe with all my heart that we can do better.\"", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 1871, "source": "TweetDeck", "id_str": "699704464429727746", "is_retweet": false}, {"created_at": "Sat Nov 05 15:02:59 +0000 2016", "text": "RT @nytimes: The front page of The New York Times, Nov. 5, 2016 https://t.co/jqstjvHjAk", "in_reply_to_screen_name": null, "retweet_count": 4877, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "794917936070803457", "is_retweet": true}, {"created_at": "Mon Nov 07 18:03:12 +0000 2016", "text": "\"I voted for Hillary Clinton because I am absolutely confident that when she is president, this country will be in\u2026 https://t.co/RnPxkX398g", "in_reply_to_screen_name": null, "retweet_count": 6690, "favorite_count": 19696, "source": "TweetDeck", "id_str": "795688066065297408", "is_retweet": false}, {"created_at": "Mon Jun 27 19:36:50 +0000 2016", "text": "\"Here\u2019s what I say to voters who may have doubts: No one will fight harder for you and your families than I will.\"", "in_reply_to_screen_name": null, "retweet_count": 1209, "favorite_count": 4073, "source": "TweetDeck", "id_str": "747514041078276096", "is_retweet": false}, {"created_at": "Tue Apr 12 17:06:35 +0000 2016", "text": "From one Iowa road trip to a campaign that's millions strong: here's what we\u2019ve built together in the past year. https://t.co/rs2LxgGjAU", "in_reply_to_screen_name": null, "retweet_count": 466, "favorite_count": 1041, "source": "TweetDeck", "id_str": "719934754456498177", "is_retweet": false}, {"created_at": "Thu Oct 20 03:18:05 +0000 2016", "text": "RT @jasoncherkis: This will get lost in the Trump news but Hillary Clinton's debate performance was close to flawless.", "in_reply_to_screen_name": null, "retweet_count": 5190, "favorite_count": 0, "source": "TweetDeck", "id_str": "788942334608216064", "is_retweet": true}, {"created_at": "Mon Aug 01 16:21:42 +0000 2016", "text": ".@FLOTUS brought the house down.\nA Muslim family reminded us what America is about.\nWe shattered a glass ceiling. https://t.co/J6AR3eaNU8", "in_reply_to_screen_name": null, "retweet_count": 2039, "favorite_count": 7638, "source": "TweetDeck", "id_str": "760148509421174784", "is_retweet": false}, {"created_at": "Thu Sep 01 16:07:30 +0000 2016", "text": "RT @JoeBiden: \"[Trump] was born with a silver spoon in his mouth that he's now choking on because his foot's in his mouth along with the sp\u2026", "in_reply_to_screen_name": null, "retweet_count": 8724, "favorite_count": 0, "source": "TweetDeck", "id_str": "771378960672387072", "is_retweet": true}, {"created_at": "Tue Mar 22 14:48:06 +0000 2016", "text": "Arizona, go vote today! Retweet to let everyone know you\u2019re with her. https://t.co/bBqOf8iiuA", "in_reply_to_screen_name": null, "retweet_count": 1588, "favorite_count": 2810, "source": "TweetDeck", "id_str": "712289758521782273", "is_retweet": false}, {"created_at": "Wed Oct 26 20:37:55 +0000 2016", "text": "Join @S_C_ in Cleveland for a concert to help get out the vote for Hillary! Text JAYZ to 47246 for all the details. https://t.co/6RenC6z0et", "in_reply_to_screen_name": null, "retweet_count": 3697, "favorite_count": 8592, "source": "TweetDeck", "id_str": "791378344709357568", "is_retweet": false}, {"created_at": "Wed Jul 06 16:28:50 +0000 2016", "text": "We can't let Trump bankrupt America like we're one of his casinos.\n\nWatch Hillary live from Atlantic City \u2192 https://t.co/gLIOpQTKj3", "in_reply_to_screen_name": null, "retweet_count": 850, "favorite_count": 2048, "source": "TweetDeck", "id_str": "750728222137024513", "is_retweet": false}, {"created_at": "Sun Jul 10 22:43:58 +0000 2016", "text": "\"You can count on her, and how she won\u2019t waver, and she won\u2019t back down, and she will not quit.\" \u2014@POTUS https://t.co/BYCgixAh8K", "in_reply_to_screen_name": null, "retweet_count": 2527, "favorite_count": 8215, "source": "TweetDeck", "id_str": "752272179627233281", "is_retweet": false}, {"created_at": "Tue Jul 05 19:43:12 +0000 2016", "text": "Our families and workplaces have changed in the 21st century. It's time for our policies\u2014from paid leave to equal pay\u2014to be updated, too.", "in_reply_to_screen_name": null, "retweet_count": 948, "favorite_count": 3554, "source": "TweetDeck", "id_str": "750414749075181568", "is_retweet": false}, {"created_at": "Fri Jul 29 14:57:59 +0000 2016", "text": "\"Let\u2019s look to the future with courage and confidence.\n\nLet\u2019s build a better tomorrow for our beloved children.\" https://t.co/jcMy9VIuIJ", "in_reply_to_screen_name": null, "retweet_count": 2428, "favorite_count": 8461, "source": "TweetDeck", "id_str": "759040280280662016", "is_retweet": false}, {"created_at": "Mon Oct 10 18:58:14 +0000 2016", "text": "RT @realgranthill33: I've been in a lot of locker rooms, and what Trump said is not locker room banter. Don't let this pass, go to https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 3839, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785555053184708608", "is_retweet": true}, {"created_at": "Tue Nov 01 13:00:07 +0000 2016", "text": "Donald Trump's equal pay plan for women: \"You're gonna make the same if you do as good a job.\" https://t.co/0qxb8r0OyV", "in_reply_to_screen_name": null, "retweet_count": 1936, "favorite_count": 4283, "source": "TweetDeck", "id_str": "793437463377276928", "is_retweet": false}, {"created_at": "Fri Nov 04 21:26:24 +0000 2016", "text": "The presidency doesn\u2019t change who you are\u2014it reveals who you are. And we\u2019ve seen all we need to of Donald Trump.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1272, "favorite_count": 2715, "source": "TweetDeck", "id_str": "794652036650434560", "is_retweet": false}, {"created_at": "Sat Apr 02 21:30:37 +0000 2016", "text": "We can't let Republican governors get in the way of affordable college. Read Hillary's plan: https://t.co/A4pWb3xp6C\nhttps://t.co/VrfRQO5CiX", "in_reply_to_screen_name": null, "retweet_count": 1413, "favorite_count": 2596, "source": "Twitter Web Client", "id_str": "716377321813356544", "is_retweet": false}, {"created_at": "Fri Jul 29 02:41:26 +0000 2016", "text": "\"We will not ban a religion\u2014we will work with all Americans and our allies to fight and defeat terrorism.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 5207, "source": "TweetDeck", "id_str": "758854919189176320", "is_retweet": false}, {"created_at": "Tue Jul 12 15:53:52 +0000 2016", "text": "\"Hillary Clinton will make an outstanding president, and I am proud to stand with her today.\" \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 2006, "favorite_count": 4503, "source": "TweetDeck", "id_str": "752893748158296068", "is_retweet": false}, {"created_at": "Tue May 10 19:58:47 +0000 2016", "text": "Quality, affordable child care isn't a luxury for the few. It's a necessity that too many Americans are struggling to achieve.", "in_reply_to_screen_name": null, "retweet_count": 954, "favorite_count": 2784, "source": "TweetDeck", "id_str": "730124947348172804", "is_retweet": false}, {"created_at": "Thu Sep 08 18:07:19 +0000 2016", "text": "At last night's forum, Trump disrespected our generals, our country, and women in the military\u2014but he praised Putin. https://t.co/I08j5ap1DX", "in_reply_to_screen_name": null, "retweet_count": 6355, "favorite_count": 10499, "source": "Twitter Web Client", "id_str": "773945829577162757", "is_retweet": false}, {"created_at": "Wed Jul 27 02:25:20 +0000 2016", "text": "\"Hillary enjoyed teaching, encouraging her students to believe in themselves and their potential.\u201d \u2014@BillClinton", "in_reply_to_screen_name": null, "retweet_count": 953, "favorite_count": 3409, "source": "TweetDeck", "id_str": "758126093912113153", "is_retweet": false}, {"created_at": "Wed Jun 15 20:54:37 +0000 2016", "text": "Miles de familias est\u00e1n juntas gracias a las acciones de @potus sobre DACA. Protejamos DACA/DAPA y aprobemos una reforma migratoria.", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 1465, "source": "TweetDeck", "id_str": "743184963307180032", "is_retweet": false}, {"created_at": "Fri Sep 16 19:17:48 +0000 2016", "text": "\u201cWe have an opportunity to elect one of the most qualified people who has ever endeavored to become president.\u201d \u2014@FLOTUS on Hillary", "in_reply_to_screen_name": null, "retweet_count": 1727, "favorite_count": 5107, "source": "TweetDeck", "id_str": "776862668305141761", "is_retweet": false}, {"created_at": "Fri Jun 03 18:11:05 +0000 2016", "text": "No, Donald. Esto no es un \u201cconflicto de inter\u00e9s\u201d\u2014el problema eres t\u00fa. https://t.co/T9jJ1QdAWL", "in_reply_to_screen_name": null, "retweet_count": 668, "favorite_count": 1408, "source": "TweetDeck", "id_str": "738795152504950784", "is_retweet": false}, {"created_at": "Thu Oct 20 01:51:02 +0000 2016", "text": "In 2011, Hillary advised @POTUS on the mission to take out bin Laden. Trump was on the Apprentice.\u2026 https://t.co/PzwYD5OoXu", "in_reply_to_screen_name": null, "retweet_count": 4162, "favorite_count": 8753, "source": "TweetDeck", "id_str": "788920429314445312", "is_retweet": false}, {"created_at": "Thu Oct 20 20:13:02 +0000 2016", "text": "Watch live: @POTUS hits the campaign trail for Hillary in Miami. https://t.co/lFWJRhSouE", "in_reply_to_screen_name": null, "retweet_count": 966, "favorite_count": 3650, "source": "TweetDeck", "id_str": "789197756162150400", "is_retweet": false}, {"created_at": "Tue Jul 26 01:47:48 +0000 2016", "text": "\"Trump says he would run our country like he has run his businesses. Well, I\u2019m from Jersey...we see how he leads in Atlantic City.\u201d \u2014Booker", "in_reply_to_screen_name": null, "retweet_count": 2256, "favorite_count": 6476, "source": "TweetDeck", "id_str": "757754260633321472", "is_retweet": false}, {"created_at": "Thu Aug 11 17:57:13 +0000 2016", "text": "Donald Trump has spent his whole career stiffing small businesses. https://t.co/i51CBQ9lKM", "in_reply_to_screen_name": null, "retweet_count": 1888, "favorite_count": 3387, "source": "TweetDeck", "id_str": "763796425037713408", "is_retweet": false}, {"created_at": "Mon Jul 25 23:55:19 +0000 2016", "text": "Tonight, @TheDemocrats voted for the most progressive party platform ever. Here are some highlights: https://t.co/A0FcBw91VK #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1586, "favorite_count": 3960, "source": "TweetDeck", "id_str": "757725952696811522", "is_retweet": false}, {"created_at": "Thu Jul 28 13:13:24 +0000 2016", "text": "RT @HFA: To: @POTUS\nFrom: All of us https://t.co/swH52dLR6f", "in_reply_to_screen_name": null, "retweet_count": 4495, "favorite_count": 0, "source": "TweetDeck", "id_str": "758651570120716288", "is_retweet": true}, {"created_at": "Thu Feb 11 13:45:57 +0000 2016", "text": "HBCUs graduate the majority of African American teachers in our country. We should support and reward HBCUs and the vital role they play.", "in_reply_to_screen_name": null, "retweet_count": 1399, "favorite_count": 2143, "source": "Twitter for iPhone", "id_str": "697778601282957314", "is_retweet": false}, {"created_at": "Thu May 19 16:13:53 +0000 2016", "text": "Today's Senate vote is a necessary step to combat the spread of Zika\u2014but it's not enough. Republicans in Congress should fully fund this. -H", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 2231, "source": "TweetDeck", "id_str": "733329842628898818", "is_retweet": false}, {"created_at": "Thu Oct 13 02:41:47 +0000 2016", "text": "\"Can I just say, I am really into electing Hillary Clinton.\u201d \u2014@POTUS: https://t.co/tTgeqxNqYm https://t.co/CHAbLbmESN", "in_reply_to_screen_name": null, "retweet_count": 4400, "favorite_count": 13151, "source": "Media Studio", "id_str": "786396485952868352", "is_retweet": false}, {"created_at": "Tue Jun 14 16:28:20 +0000 2016", "text": "\"I believe we Americans are capable of protecting Second Amendment rights while making sure guns don\u2019t fall into the wrong hands.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1735, "favorite_count": 4452, "source": "TweetDeck", "id_str": "742755560873955328", "is_retweet": false}, {"created_at": "Fri Feb 12 03:23:16 +0000 2016", "text": "There are two candidates on stage at the #DemDebate. Only one is ready to be commander in chief.", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 2782, "source": "Twitter Web Client", "id_str": "697984288374050816", "is_retweet": false}, {"created_at": "Tue Sep 20 20:30:39 +0000 2016", "text": "Trump\u2019s calls to torture and mistreat prisoners go against the very values we are fighting to defend. We\u2019re better than this.", "in_reply_to_screen_name": null, "retweet_count": 3086, "favorite_count": 9077, "source": "TweetDeck", "id_str": "778330554102079488", "is_retweet": false}, {"created_at": "Sun Feb 28 14:39:50 +0000 2016", "text": "We need more love and kindness in America. Our best years can be ahead of us if we stand with each other.\nhttps://t.co/hFMNKuQv1B", "in_reply_to_screen_name": null, "retweet_count": 1806, "favorite_count": 3820, "source": "Twitter Web Client", "id_str": "703952755547766785", "is_retweet": false}, {"created_at": "Fri Sep 09 22:15:33 +0000 2016", "text": "Join @SarahEMcBride and activists across the country in supporting LGBT rights this November: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 718, "favorite_count": 1777, "source": "TweetDeck", "id_str": "774370688404692992", "is_retweet": false}, {"created_at": "Mon Sep 26 23:34:21 +0000 2016", "text": "Hillary\u2019s set to take the debate stage at 9pm ET.\n\nHere's where you can watch: https://t.co/DhwVYhlA6K #DebateNight https://t.co/gMJINu5xJi", "in_reply_to_screen_name": null, "retweet_count": 1196, "favorite_count": 3369, "source": "TweetDeck", "id_str": "780551112386633728", "is_retweet": false}, {"created_at": "Tue Sep 27 18:06:28 +0000 2016", "text": "\"What we hear from my opponent is dangerously incoherent. It's unclear what he's saying, but words matter.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1176, "favorite_count": 3473, "source": "TweetDeck", "id_str": "780830984262516736", "is_retweet": false}, {"created_at": "Wed Jun 15 02:23:40 +0000 2016", "text": "Donald Trump just gave us his \"plan\" for defeating terrorism\u2014conspiracy theories and self-congratulations. https://t.co/5tgNsWkoQh", "in_reply_to_screen_name": null, "retweet_count": 1986, "favorite_count": 4939, "source": "TweetDeck", "id_str": "742905381744218114", "is_retweet": false}, {"created_at": "Tue Jan 12 03:09:23 +0000 2016", "text": "\"We have systemic racism and bias that is implicit in our [criminal justice] system.\" #DemForum\nhttps://t.co/uTqKuuq8eR", "in_reply_to_screen_name": null, "retweet_count": 773, "favorite_count": 1272, "source": "Twitter Web Client", "id_str": "686746769263214592", "is_retweet": false}, {"created_at": "Thu Jun 02 19:02:38 +0000 2016", "text": "Watch now: Hillary on why America\u2014and the world\u2014can't afford Trump as Commander-in-Chief \u2192 https://t.co/U4YoA58DhR https://t.co/icQmlfrRgz", "in_reply_to_screen_name": null, "retweet_count": 942, "favorite_count": 1964, "source": "TweetDeck", "id_str": "738445736984125440", "is_retweet": false}, {"created_at": "Mon Jun 06 12:04:25 +0000 2016", "text": ".@realdonaldtrump's bigoted comments about a Latino judge are so disgusting, even other Republicans are offended.\nhttps://t.co/3CEBq2jsDh", "in_reply_to_screen_name": null, "retweet_count": 6546, "favorite_count": 10241, "source": "Twitter Web Client", "id_str": "739790041497501696", "is_retweet": false}, {"created_at": "Tue Sep 13 19:26:47 +0000 2016", "text": "Proud to mark 22 years of the Violence Against Women Act. Our work isn't done until women in every community are safe from violence.", "in_reply_to_screen_name": null, "retweet_count": 2477, "favorite_count": 7560, "source": "TweetDeck", "id_str": "775777767640199168", "is_retweet": false}, {"created_at": "Wed Mar 09 13:56:39 +0000 2016", "text": "Penalizing people who paid their student loans on time is outrageous\u2014and illegal. We've got to fight this. https://t.co/XuEUjOW3qe -H", "in_reply_to_screen_name": null, "retweet_count": 845, "favorite_count": 1596, "source": "Twitter for iPhone", "id_str": "707565768368640000", "is_retweet": false}, {"created_at": "Fri Apr 08 20:04:48 +0000 2016", "text": "We can't sit back while politicians make it virtually impossible for women to access the health care they need. https://t.co/ZPzAw1dbVx", "in_reply_to_screen_name": null, "retweet_count": 1494, "favorite_count": 3030, "source": "TweetDeck", "id_str": "718530050723852288", "is_retweet": false}, {"created_at": "Tue Jul 12 16:19:07 +0000 2016", "text": "\"Let's make it easier to vote, not harder. Let\u2019s fight back against attacks on voting rights across the country.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1052, "favorite_count": 3290, "source": "TweetDeck", "id_str": "752900102189096961", "is_retweet": false}, {"created_at": "Sun Aug 28 01:22:48 +0000 2016", "text": "RT @HillaryforUT: Hate is not welcome in our homes. We shouldn't welcome it into the White House. #StrongerTogether https://t.co/B3sK5KpiQ4", "in_reply_to_screen_name": null, "retweet_count": 2187, "favorite_count": 0, "source": "TweetDeck", "id_str": "769706768041709568", "is_retweet": true}, {"created_at": "Fri Sep 30 20:13:22 +0000 2016", "text": "Trump \"finds it a lot easier to insult women than to talk to the president of Mexico about building a wall.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1251, "favorite_count": 3101, "source": "TweetDeck", "id_str": "781950085437526021", "is_retweet": false}, {"created_at": "Fri Mar 11 04:01:42 +0000 2016", "text": "Debate one of these guys? Bring it on. #GOPdebate https://t.co/k9SNv0T3cL", "in_reply_to_screen_name": null, "retweet_count": 3015, "favorite_count": 7577, "source": "TweetDeck", "id_str": "708140820256440321", "is_retweet": false}, {"created_at": "Fri Feb 19 18:45:54 +0000 2016", "text": "So proud to have Congressman Jim Clyburn on this team. https://t.co/pmD9jdLr7q", "in_reply_to_screen_name": null, "retweet_count": 903, "favorite_count": 2115, "source": "TweetDeck", "id_str": "700753190795485186", "is_retweet": false}, {"created_at": "Wed Jul 27 22:16:06 +0000 2016", "text": "The story of Bill and Hillary, in photos: https://t.co/fDNQl66gNU https://t.co/206mlwXnml", "in_reply_to_screen_name": null, "retweet_count": 1073, "favorite_count": 3765, "source": "TweetDeck", "id_str": "758425760419946496", "is_retweet": false}, {"created_at": "Sun Nov 06 00:25:56 +0000 2016", "text": "Join Hillary, @KatyPerry, and @ShondaRhimes live in Philadelphia for a special GOTV concert: https://t.co/HVnJV7ccxc", "in_reply_to_screen_name": null, "retweet_count": 1731, "favorite_count": 5833, "source": "TweetDeck", "id_str": "795059609249705988", "is_retweet": false}, {"created_at": "Sat Feb 27 23:04:10 +0000 2016", "text": "Lots of love in South Carolina. https://t.co/4ct6Xe9nRj", "in_reply_to_screen_name": null, "retweet_count": 530, "favorite_count": 1678, "source": "Twitter Web Client", "id_str": "703717289254920192", "is_retweet": false}, {"created_at": "Tue Aug 30 21:21:40 +0000 2016", "text": "60% of adults experiencing mental health illnesses are untreated. It's time to close the treatment gap. https://t.co/9QIUUpOd26", "in_reply_to_screen_name": null, "retweet_count": 1854, "favorite_count": 4904, "source": "TweetDeck", "id_str": "770733246032347136", "is_retweet": false}, {"created_at": "Thu Oct 13 16:49:24 +0000 2016", "text": "\u201cStrong men, men who are truly role models, don\u2019t need to put down women to make themselves feel powerful.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2198, "favorite_count": 3819, "source": "TweetDeck", "id_str": "786609795612741632", "is_retweet": false}, {"created_at": "Mon Sep 19 16:34:19 +0000 2016", "text": "This election isn\u2019t a reality TV show. It shouldn\u2019t be about birth certificates or name-calling or stunts to get on cable news.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 715, "favorite_count": 1459, "source": "TweetDeck", "id_str": "777908689227354112", "is_retweet": false}, {"created_at": "Wed Sep 14 17:01:01 +0000 2016", "text": "20. It's pretty clear: Trump's spent his life unscrupulously looking out for his own wallet above all. Why would that change as president?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3758, "favorite_count": 6814, "source": "TweetDeck", "id_str": "776103470554353664", "is_retweet": false}, {"created_at": "Tue Apr 26 19:07:42 +0000 2016", "text": "If our leaders won't stand up to the gun lobby, we need to hold them accountable.\nhttps://t.co/M5ryVG4glD", "in_reply_to_screen_name": null, "retweet_count": 799, "favorite_count": 1710, "source": "Twitter Web Client", "id_str": "725038663667601408", "is_retweet": false}, {"created_at": "Wed Jun 22 18:50:56 +0000 2016", "text": "We\u2019re going to invest $20 billion specifically to create jobs for young people, especially in communities of color. https://t.co/86wMnjfxhs", "in_reply_to_screen_name": null, "retweet_count": 668, "favorite_count": 1956, "source": "TweetDeck", "id_str": "745690551433965568", "is_retweet": false}, {"created_at": "Wed Jun 08 15:21:53 +0000 2016", "text": "Let\u2019s keep making history, together.\nhttps://t.co/7IIvZVW3HY", "in_reply_to_screen_name": null, "retweet_count": 3653, "favorite_count": 8711, "source": "Twitter Web Client", "id_str": "740564514228211712", "is_retweet": false}, {"created_at": "Tue Mar 01 15:03:02 +0000 2016", "text": "It's #SuperTuesday! Hillary needs your help to ensure wins across the country. Will you make some calls? https://t.co/irwO4iCV1D", "in_reply_to_screen_name": null, "retweet_count": 511, "favorite_count": 1126, "source": "TweetDeck", "id_str": "704683370735865857", "is_retweet": false}, {"created_at": "Thu Jul 14 15:53:19 +0000 2016", "text": "Next week in Cleveland, Republicans will nominate someone who thinks \u201cLatino outreach\u201d is tweeting out a picture of a taco bowl.", "in_reply_to_screen_name": null, "retweet_count": 5730, "favorite_count": 12606, "source": "TweetDeck", "id_str": "753618387369095168", "is_retweet": false}, {"created_at": "Thu Sep 01 21:17:49 +0000 2016", "text": "Born Sept. 1, 1933, former TX Gov. Ann Richards opened doors for women and minorities in her own state and beyond. https://t.co/K1h1Hcdgjq", "in_reply_to_screen_name": null, "retweet_count": 3564, "favorite_count": 11968, "source": "TweetDeck", "id_str": "771457054133321728", "is_retweet": false}, {"created_at": "Fri Nov 04 21:20:49 +0000 2016", "text": "\u201cI believe that we should have a confident, optimistic, inclusive vision of where we\u2019re going and how we\u2019re going to get there.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 842, "favorite_count": 1916, "source": "TweetDeck", "id_str": "794650633324425217", "is_retweet": false}, {"created_at": "Thu Nov 03 21:48:49 +0000 2016", "text": "RT @Hillary_esp: \"Ustedes hacen a nuestra naci\u00f3n m\u00e1s fuerte, m\u00e1s inteligente y m\u00e1s creativa... Estados Unidos es un pa\u00eds mejor gracias a us\u2026", "in_reply_to_screen_name": null, "retweet_count": 598, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794295289905561604", "is_retweet": true}, {"created_at": "Wed Feb 17 02:54:47 +0000 2016", "text": "Something\u2019s wrong when the median wealth for black families is a tiny fraction of what it is for white families. https://t.co/lehHVwUS3k", "in_reply_to_screen_name": null, "retweet_count": 815, "favorite_count": 1562, "source": "TweetDeck", "id_str": "699789058407579648", "is_retweet": false}, {"created_at": "Mon Sep 19 16:51:52 +0000 2016", "text": "In a democracy, if you want to help the greatest number of people, you have to push for reform from both the outside-in and the inside-out.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 595, "favorite_count": 1465, "source": "TweetDeck", "id_str": "777913107708600320", "is_retweet": false}, {"created_at": "Thu Oct 20 01:45:55 +0000 2016", "text": "RT @voxdotcom: It would be impossible for Donald Trump to stick by his tax plan and lower debt. https://t.co/ofvUgXzoaE #debate https://t.c\u2026", "in_reply_to_screen_name": null, "retweet_count": 1692, "favorite_count": 0, "source": "TweetDeck", "id_str": "788919143949008898", "is_retweet": true}, {"created_at": "Mon Jul 18 23:16:01 +0000 2016", "text": "\"Donald Trump lost control of his own convention before it even started.\" #RNCinCLE\nhttps://t.co/esmsUx29iH", "in_reply_to_screen_name": null, "retweet_count": 4602, "favorite_count": 8012, "source": "Twitter Web Client", "id_str": "755179347812548608", "is_retweet": false}, {"created_at": "Wed Aug 31 17:13:39 +0000 2016", "text": "50 GOP national security experts said they will not vote for Trump because he would be \u201cthe most reckless president in American history.\u201d", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1221, "favorite_count": 2635, "source": "TweetDeck", "id_str": "771033219810680841", "is_retweet": false}, {"created_at": "Mon Sep 19 23:08:47 +0000 2016", "text": "Barack Obama said progress is on the ballot this November. This economic data shows he\u2019s right. https://t.co/CIoKKKIxqz", "in_reply_to_screen_name": null, "retweet_count": 1805, "favorite_count": 4005, "source": "TweetDeck", "id_str": "778007963009179648", "is_retweet": false}, {"created_at": "Thu Oct 20 20:53:26 +0000 2016", "text": "\"You wanna give me a good send off? Go knock on some doors.\u201d \u2014@POTUS: https://t.co/iWKBODJGCy", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 531, "favorite_count": 2044, "source": "TweetDeck", "id_str": "789207924052627456", "is_retweet": false}, {"created_at": "Fri Sep 02 18:24:50 +0000 2016", "text": "Drug companies should never put profits before patients. Our plan to stop excessive prescription drug price hikes: https://t.co/2MdTyJ3Xti", "in_reply_to_screen_name": null, "retweet_count": 2403, "favorite_count": 5833, "source": "TweetDeck", "id_str": "771775910278291456", "is_retweet": false}, {"created_at": "Thu Apr 07 14:38:11 +0000 2016", "text": "Thanks, Pittsburgh. It was an unqualified delight. https://t.co/ayFlTUkfJs https://t.co/LwyEgA2CE1", "in_reply_to_screen_name": null, "retweet_count": 1059, "favorite_count": 2319, "source": "TweetDeck", "id_str": "718085466982100993", "is_retweet": false}, {"created_at": "Tue Mar 22 03:10:17 +0000 2016", "text": "\"Clinton has the better overall experience [and] grasp on the broad range of issues.\u201d \u2014@IdahoStatesman https://t.co/JuzR1aR8Vz", "in_reply_to_screen_name": null, "retweet_count": 911, "favorite_count": 2255, "source": "TweetDeck", "id_str": "712114145060134912", "is_retweet": false}, {"created_at": "Mon Mar 14 17:27:08 +0000 2016", "text": "Four generations of Ohio women. Four reasons to vote for Hillary.\nhttps://t.co/4XjnvZMWbG", "in_reply_to_screen_name": null, "retweet_count": 962, "favorite_count": 2010, "source": "Twitter Web Client", "id_str": "709430678035648512", "is_retweet": false}, {"created_at": "Mon Sep 12 15:31:22 +0000 2016", "text": "The reporting on Hillary's emails has left the basis of facts and veered into dangerous territory. https://t.co/ycp0KW7LZL", "in_reply_to_screen_name": null, "retweet_count": 1608, "favorite_count": 4421, "source": "TweetDeck", "id_str": "775356135872294912", "is_retweet": false}, {"created_at": "Tue Mar 01 21:08:49 +0000 2016", "text": "There are 800+ delegates up for grabs on #SuperTuesday\u2014here's the breakdown: https://t.co/u5fl0tnbol https://t.co/B5rHUjWhrK", "in_reply_to_screen_name": null, "retweet_count": 788, "favorite_count": 1793, "source": "TweetDeck", "id_str": "704775424585416710", "is_retweet": false}, {"created_at": "Tue Jan 26 02:27:01 +0000 2016", "text": "We are a nation of second chances, especially for young people. Good news from SCOTUS today. https://t.co/RyjGkvU4J9 -H", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 776, "source": "TweetDeck", "id_str": "691809539075735552", "is_retweet": false}, {"created_at": "Fri Jul 29 03:30:34 +0000 2016", "text": "In America, we\u2019re always stronger together. https://t.co/7TJgiJiqzv", "in_reply_to_screen_name": null, "retweet_count": 7092, "favorite_count": 20931, "source": "TweetDeck", "id_str": "758867285167644672", "is_retweet": false}, {"created_at": "Mon Nov 07 21:48:21 +0000 2016", "text": "\"I want to be a president for all Americans: Democrats, Republicans, Independents. Not just people who support me, but everyone.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2833, "favorite_count": 7637, "source": "TweetDeck", "id_str": "795744725303234562", "is_retweet": false}, {"created_at": "Sat Jul 23 17:53:41 +0000 2016", "text": "\u201cWe\u2019ll make sure that Wall Street, and corporations, and the wealthy pay their fair share of taxes.\u201d \u2014@TimKaine", "in_reply_to_screen_name": null, "retweet_count": 809, "favorite_count": 2888, "source": "TweetDeck", "id_str": "756910168852561920", "is_retweet": false}, {"created_at": "Sat Jul 30 20:23:42 +0000 2016", "text": "We're going to make the biggest investment in new, good-paying jobs since World War II: https://t.co/eSMDdK4HRw", "in_reply_to_screen_name": null, "retweet_count": 1171, "favorite_count": 4012, "source": "TweetDeck", "id_str": "759484637446037504", "is_retweet": false}, {"created_at": "Mon Jul 18 17:12:41 +0000 2016", "text": "\"As Dr. King said, 'Our lives begin to end when we become silent about things that matter.' None of can afford to be silent.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2493, "favorite_count": 5371, "source": "TweetDeck", "id_str": "755087909754134529", "is_retweet": false}, {"created_at": "Thu Oct 20 20:43:14 +0000 2016", "text": "\"When you try to sow the seeds of doubt in people's minds about the legitimacy of our elections\u2014then that undermines our democracy.\" \u2014@POTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 752, "favorite_count": 1906, "source": "TweetDeck", "id_str": "789205356945760256", "is_retweet": false}, {"created_at": "Wed Oct 19 15:07:44 +0000 2016", "text": "Tonight is the final presidential debate. RT this if you're with Hillary. #Debate https://t.co/a6IJYb1xCi", "in_reply_to_screen_name": null, "retweet_count": 15832, "favorite_count": 17293, "source": "TweetDeck", "id_str": "788758537799360512", "is_retweet": false}, {"created_at": "Sun Jan 17 23:50:59 +0000 2016", "text": "\"We need someone who knows when to...stand her ground, but also when common ground is possible.\" \u2014@ChelseaClinton https://t.co/wAsJwyllkU", "in_reply_to_screen_name": null, "retweet_count": 581, "favorite_count": 1680, "source": "TweetDeck", "id_str": "688871165759217664", "is_retweet": false}, {"created_at": "Fri Jul 01 15:00:22 +0000 2016", "text": "Trump says people should have pride in \"Made in the USA\" products, but where does he make his?\n\n(Hint: not here.)\nhttps://t.co/vtVLwZAAUM", "in_reply_to_screen_name": null, "retweet_count": 5188, "favorite_count": 9443, "source": "Twitter Web Client", "id_str": "748894019208359944", "is_retweet": false}, {"created_at": "Fri Sep 16 17:01:09 +0000 2016", "text": "When Trump tries to deflect blame for denying that @POTUS was born in America, he is lying. https://t.co/lje3lKrZQy https://t.co/yq9IWnvXUc", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3506, "favorite_count": 6295, "source": "TweetDeck", "id_str": "776828281488281600", "is_retweet": false}, {"created_at": "Sun Jul 31 18:00:47 +0000 2016", "text": "RT @jmurray20: Hillary is \"guided by the sacrifice\" of those that give their life to this country. Trump denigrates their families https://\u2026", "in_reply_to_screen_name": null, "retweet_count": 865, "favorite_count": 0, "source": "TweetDeck", "id_str": "759811056260751360", "is_retweet": true}, {"created_at": "Sat Apr 09 23:14:35 +0000 2016", "text": "It's not just Trump: Every Republican presidential candidate has attacked women's health and rights. https://t.co/3TQdSvYTSs", "in_reply_to_screen_name": null, "retweet_count": 1586, "favorite_count": 2774, "source": "Twitter Web Client", "id_str": "718940200752295936", "is_retweet": false}, {"created_at": "Fri Nov 04 00:59:57 +0000 2016", "text": "\u201cIf you elect me next Tuesday, that is the kind of president I will be.\u201d https://t.co/3TKJ4H68Kz https://t.co/cxVjZatDY8", "in_reply_to_screen_name": null, "retweet_count": 2194, "favorite_count": 6921, "source": "TweetDeck", "id_str": "794343391597391872", "is_retweet": false}, {"created_at": "Sat Oct 22 19:16:54 +0000 2016", "text": "Donald Trump has a unique view of the Bill of Rights. Here\u2019s what it might look like under his presidency: https://t.co/DCTtNKMFQv", "in_reply_to_screen_name": null, "retweet_count": 1480, "favorite_count": 3576, "source": "TweetDeck", "id_str": "789908407277027329", "is_retweet": false}, {"created_at": "Sat Jul 23 17:17:07 +0000 2016", "text": "\"Tim is everything Donald Trump &amp; Mike Pence are not\u2026he is a progressive who likes to get things done. That\u2019s just my kind of guy.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1090, "favorite_count": 3751, "source": "TweetDeck", "id_str": "756900964242694147", "is_retweet": false}, {"created_at": "Tue Mar 29 00:34:39 +0000 2016", "text": "Voters elected @POTUS\u2014twice. He did his job and gave us a @SCOTUSnom. Time for Senate Republicans to do theirs.\nhttps://t.co/Ma4DHo22Tv", "in_reply_to_screen_name": null, "retweet_count": 2117, "favorite_count": 4990, "source": "Twitter Web Client", "id_str": "714611694954106880", "is_retweet": false}, {"created_at": "Mon Oct 31 22:42:13 +0000 2016", "text": "Dozens of former nuclear launch officers agree: Donald Trump should never be in charge of America's nuclear weapons.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1321, "favorite_count": 2547, "source": "TweetDeck", "id_str": "793221567916441601", "is_retweet": false}, {"created_at": "Wed Jan 20 17:30:46 +0000 2016", "text": "Climate change is real. It\u2019s hurting our planet and our people. We can\u2019t afford a president who ignores the science. https://t.co/bg8c68ESK2", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 1512, "source": "TweetDeck", "id_str": "689862646229786624", "is_retweet": false}, {"created_at": "Sun Jul 24 18:12:33 +0000 2016", "text": "\"@TimKaine is a good man. He\u2019s a true progressive. And he will make a great vice president.\" \u2014@POTUS https://t.co/Vw6kyxtO9r", "in_reply_to_screen_name": null, "retweet_count": 1538, "favorite_count": 4503, "source": "TweetDeck", "id_str": "757277302074052608", "is_retweet": false}, {"created_at": "Fri Jul 01 17:06:38 +0000 2016", "text": "\"If the space you\u2019re in doesn\u2019t have room for your voice don\u2019t be afraid to carve out a space of your own.\" \u2014Hillary https://t.co/VQQMyYHyNm", "in_reply_to_screen_name": null, "retweet_count": 2232, "favorite_count": 4980, "source": "TweetDeck", "id_str": "748925792873279488", "is_retweet": false}, {"created_at": "Thu Oct 06 01:53:20 +0000 2016", "text": "The many, many lies Mike Pence told at last night's debate. https://t.co/Ro4TkFRAHw", "in_reply_to_screen_name": null, "retweet_count": 2295, "favorite_count": 5003, "source": "TweetDeck", "id_str": "783847579650056193", "is_retweet": false}, {"created_at": "Wed Apr 27 01:28:16 +0000 2016", "text": "\"Let\u2019s go forward. Let\u2019s win the nomination.\" \u2014Hillary https://t.co/NNXa1Us7rf https://t.co/U80iCEa3Fi", "in_reply_to_screen_name": null, "retweet_count": 1140, "favorite_count": 2503, "source": "TweetDeck", "id_str": "725134434563973120", "is_retweet": false}, {"created_at": "Wed Jul 13 20:14:47 +0000 2016", "text": "Let\u2019s be more than allies to each other.\n\nLet\u2019s take on each other\u2019s struggles as our own.\nhttps://t.co/iA8LXuAUvl", "in_reply_to_screen_name": null, "retweet_count": 1369, "favorite_count": 3480, "source": "Twitter Web Client", "id_str": "753321799681572864", "is_retweet": false}, {"created_at": "Fri Jul 08 02:43:12 +0000 2016", "text": "We have a responsibility to fight for the next generation. All of us. #TBT\nhttps://t.co/p4FcuCcVmW", "in_reply_to_screen_name": null, "retweet_count": 1549, "favorite_count": 4775, "source": "Twitter Web Client", "id_str": "751245220222689280", "is_retweet": false}, {"created_at": "Tue Feb 23 18:12:36 +0000 2016", "text": "Wall Street can never be allowed to wreck Main Street again. No bank can be too big to fail and no executive can be too powerful to jail.", "in_reply_to_screen_name": null, "retweet_count": 897, "favorite_count": 2205, "source": "TweetDeck", "id_str": "702194363187773440", "is_retweet": false}, {"created_at": "Fri Aug 26 16:16:58 +0000 2016", "text": "On this day in 1920, the 19th Amendment was adopted and many women won the right to vote. Let's break more ceilings. https://t.co/AGskZ5jhfK", "in_reply_to_screen_name": null, "retweet_count": 9379, "favorite_count": 23915, "source": "TweetDeck", "id_str": "769207018045321216", "is_retweet": false}, {"created_at": "Mon Sep 19 21:21:30 +0000 2016", "text": "\"Everyone who wants to go to college should be able to without drowning in debt.\" \u2014Hillary https://t.co/wDxspmxT9Q", "in_reply_to_screen_name": null, "retweet_count": 1637, "favorite_count": 4273, "source": "TweetDeck", "id_str": "777980962877665284", "is_retweet": false}, {"created_at": "Fri Aug 26 13:08:34 +0000 2016", "text": "Republican leaders should take a look at who they're standing with. https://t.co/1sXhWgXx02", "in_reply_to_screen_name": null, "retweet_count": 1473, "favorite_count": 3212, "source": "TweetDeck", "id_str": "769159604286533632", "is_retweet": false}, {"created_at": "Wed Oct 05 00:52:21 +0000 2016", "text": "RT @timkaine: Ready. #VPDebate https://t.co/tiMgo9pmqC", "in_reply_to_screen_name": null, "retweet_count": 2034, "favorite_count": 0, "source": "TweetDeck", "id_str": "783469843999842309", "is_retweet": true}, {"created_at": "Fri Jun 17 16:29:14 +0000 2016", "text": "Donald Trump says he's \"the real friend\" of the LGBT community.\n\nYeah, no.\nhttps://t.co/TWwZKC5ARS", "in_reply_to_screen_name": null, "retweet_count": 4879, "favorite_count": 9546, "source": "Twitter Web Client", "id_str": "743842950912737281", "is_retweet": false}, {"created_at": "Thu Aug 25 19:24:06 +0000 2016", "text": "Trump famously posted an anti-Semitic graphic that first appeared on a white supremacist website. https://t.co/JgH87OylQC", "in_reply_to_screen_name": null, "retweet_count": 820, "favorite_count": 1667, "source": "TweetDeck", "id_str": "768891722680197124", "is_retweet": false}, {"created_at": "Thu May 19 00:58:16 +0000 2016", "text": "\u2026 y solo es mi\u00e9rcoles. https://t.co/ZWwByVX2vm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 365, "favorite_count": 702, "source": "TweetDeck", "id_str": "733099417872519168", "is_retweet": false}, {"created_at": "Thu May 05 02:14:18 +0000 2016", "text": "We need the strongest team to take on Donald Trump and the GOP in November. Apply to join @HFA today: https://t.co/mqHP020BgD", "in_reply_to_screen_name": null, "retweet_count": 772, "favorite_count": 1814, "source": "TweetDeck", "id_str": "728045122462617600", "is_retweet": false}, {"created_at": "Tue Jul 26 13:11:37 +0000 2016", "text": "\"It is ridiculous that there has never been a female president before.\"\nhttps://t.co/CMHJiprlgt", "in_reply_to_screen_name": null, "retweet_count": 4120, "favorite_count": 11142, "source": "Twitter Web Client", "id_str": "757926349302472704", "is_retweet": false}, {"created_at": "Fri Jul 29 01:09:27 +0000 2016", "text": "\"Some issues are not left vs. right or liberal vs. conservative, they are right vs. wrong.\" \u2014Rev. William Barber https://t.co/LRZRS9Qmqu", "in_reply_to_screen_name": null, "retweet_count": 4741, "favorite_count": 9889, "source": "TweetDeck", "id_str": "758831770833858564", "is_retweet": false}, {"created_at": "Tue Feb 02 05:14:01 +0000 2016", "text": "Are you with Hillary? Let her know: https://t.co/cXOZQF7gJH", "in_reply_to_screen_name": null, "retweet_count": 1071, "favorite_count": 3510, "source": "TweetDeck", "id_str": "694388278548656128", "is_retweet": false}, {"created_at": "Mon Oct 03 20:14:47 +0000 2016", "text": "RT @lorellapraeli: Got to share my story &amp; talk about why our voice is our vote on @TheRivetersPod. Register: https://t.co/TLKzt5ylEr. http\u2026", "in_reply_to_screen_name": null, "retweet_count": 173, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "783037603201347584", "is_retweet": true}, {"created_at": "Tue Oct 25 15:32:51 +0000 2016", "text": "FACT: Donald Trump's company systematically denied housing to people of color dating back to the 1960s and 70s. https://t.co/x1rpVn3TPX", "in_reply_to_screen_name": null, "retweet_count": 1888, "favorite_count": 3672, "source": "TweetDeck", "id_str": "790939186106920961", "is_retweet": false}, {"created_at": "Fri Sep 02 01:51:50 +0000 2016", "text": "So, how did Donald Trump's first swing at diplomacy go? Not so great.\n\nTry to follow his decision-making process: https://t.co/nLpVoJICv1", "in_reply_to_screen_name": null, "retweet_count": 1638, "favorite_count": 4105, "source": "TweetDeck", "id_str": "771526014988062720", "is_retweet": false}, {"created_at": "Wed Mar 30 22:27:32 +0000 2016", "text": "The fact is, Trump isn't that different from every other Republican candidate who would also outlaw abortion.", "in_reply_to_screen_name": null, "retweet_count": 1978, "favorite_count": 4625, "source": "TweetDeck", "id_str": "715304478434598913", "is_retweet": false}, {"created_at": "Thu Jul 21 21:06:43 +0000 2016", "text": "\"Dummy.\"\n\"Slob.\"\n\"Animal.\"\n\nHere's what @realDonaldTrump has said about you: https://t.co/o3ohaHfR77 #TrumpYourself", "in_reply_to_screen_name": null, "retweet_count": 1076, "favorite_count": 2159, "source": "TweetDeck", "id_str": "756233970455613441", "is_retweet": false}, {"created_at": "Sun Nov 06 23:31:46 +0000 2016", "text": "This is what it's about:\nAll the good we can,\nfor all the people we can,\nfor as long as we can.\u2026 https://t.co/vJcRZMILoR", "in_reply_to_screen_name": null, "retweet_count": 5223, "favorite_count": 11642, "source": "Media Studio", "id_str": "795408365643911168", "is_retweet": false}, {"created_at": "Thu Sep 08 00:50:57 +0000 2016", "text": "RT @TheBriefing2016: Donald Trump's super secret plan to fight ISIS is still a super secret. #NBCNewsForum \nhttps://t.co/SBbCVgeaQD", "in_reply_to_screen_name": null, "retweet_count": 833, "favorite_count": 0, "source": "TweetDeck", "id_str": "773685017042096128", "is_retweet": true}, {"created_at": "Mon May 09 00:41:56 +0000 2016", "text": "Here's what you can do to make sure @realDonaldTrump never reaches the White House: https://t.co/8saCz16aUp", "in_reply_to_screen_name": null, "retweet_count": 1227, "favorite_count": 2200, "source": "TweetDeck", "id_str": "729471431881412614", "is_retweet": false}, {"created_at": "Wed May 25 18:19:01 +0000 2016", "text": "We have to build on the Affordable Care Act and continue our march toward making sure every single American has health coverage.", "in_reply_to_screen_name": null, "retweet_count": 981, "favorite_count": 3094, "source": "TweetDeck", "id_str": "735535658677194752", "is_retweet": false}, {"created_at": "Thu Oct 20 01:36:39 +0000 2016", "text": "RT @TheBriefing2016: These men were responsible for launching nuclear missiles.\n\nThey don't want Trump to have that power. #debatenight\nhtt\u2026", "in_reply_to_screen_name": null, "retweet_count": 719, "favorite_count": 0, "source": "TweetDeck", "id_str": "788916809571401728", "is_retweet": true}, {"created_at": "Wed Jul 13 17:14:32 +0000 2016", "text": "Trump has banished members of the press who have criticized him.\n\nIs there any doubt he would do the same as president?", "in_reply_to_screen_name": null, "retweet_count": 1230, "favorite_count": 3246, "source": "TweetDeck", "id_str": "753276435968757760", "is_retweet": false}, {"created_at": "Wed Oct 05 04:42:33 +0000 2016", "text": "The headline says it all. https://t.co/mMCFxUuwvq #VPdebate", "in_reply_to_screen_name": null, "retweet_count": 3906, "favorite_count": 7901, "source": "TweetDeck", "id_str": "783527776846577664", "is_retweet": false}, {"created_at": "Fri Jul 15 15:58:42 +0000 2016", "text": "Si ten\u00edas alguna duda que Trump continuar\u00e1 su peligroso plan para el pa\u00eds, conoce qui\u00e9n escogi\u00f3 para vicepresidente. https://t.co/C5649W1Ccn", "in_reply_to_screen_name": null, "retweet_count": 1035, "favorite_count": 1474, "source": "TweetDeck", "id_str": "753982130968035328", "is_retweet": false}, {"created_at": "Sun Mar 06 00:49:11 +0000 2016", "text": "We're ahead by 199 pledged delegates. Here\u2019s why that matters: https://t.co/xOX1an4OYp https://t.co/8oOvuzbsbB", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 2925, "source": "TweetDeck", "id_str": "706280429691801601", "is_retweet": false}, {"created_at": "Wed May 25 21:04:59 +0000 2016", "text": "The @realDonaldTrump business model: exploit anyone or anything he can to turn a quick buck. https://t.co/tRjRJXJ2x0", "in_reply_to_screen_name": null, "retweet_count": 788, "favorite_count": 1305, "source": "TweetDeck", "id_str": "735577428161073152", "is_retweet": false}, {"created_at": "Wed Mar 30 16:32:53 +0000 2016", "text": "\"New Yorkers have always believed that if you work hard and you do your part, you should be able to get ahead and stay ahead.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 558, "favorite_count": 1753, "source": "TweetDeck", "id_str": "715215229072748544", "is_retweet": false}, {"created_at": "Thu Jul 28 02:15:14 +0000 2016", "text": "RT @timkaine: \"If any of you are looking for that Party of Lincoln, we've got a home for you right here in the Democratic Party!\" \u2014Tim", "in_reply_to_screen_name": null, "retweet_count": 1569, "favorite_count": 0, "source": "TweetDeck", "id_str": "758485938045464576", "is_retweet": true}, {"created_at": "Sat Aug 27 18:11:57 +0000 2016", "text": "Helping small businesses succeed is about more than policy\u2014it's personal. https://t.co/mHmnin9sOR https://t.co/x0HTkkomBQ", "in_reply_to_screen_name": null, "retweet_count": 1855, "favorite_count": 6052, "source": "TweetDeck", "id_str": "769598338576547841", "is_retweet": false}, {"created_at": "Tue May 24 18:35:22 +0000 2016", "text": "Right before the housing market crashed, @realDonaldTrump said he hoped it would happen\u2014because he could make money off of it.", "in_reply_to_screen_name": null, "retweet_count": 1899, "favorite_count": 3250, "source": "TweetDeck", "id_str": "735177387994800128", "is_retweet": false}, {"created_at": "Mon Oct 31 15:11:49 +0000 2016", "text": "As secretary of state, Hillary restored our reputation around the world and made us safer. https://t.co/K5xvmKOAm7", "in_reply_to_screen_name": null, "retweet_count": 1995, "favorite_count": 5573, "source": "TweetDeck", "id_str": "793108219765854208", "is_retweet": false}, {"created_at": "Tue Jul 05 19:46:32 +0000 2016", "text": "\"The world hangs on every word a president says, and Donald Trump is...temperamentally unfit to be our Commander-in-Chief.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1225, "favorite_count": 3533, "source": "TweetDeck", "id_str": "750415587885580288", "is_retweet": false}, {"created_at": "Tue Nov 01 20:07:46 +0000 2016", "text": "Most of us learned by elementary school that it\u2019s not OK to insult people\u2019s looks.\n\nDonald calls women fat, ugly, and disgusting.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1087, "favorite_count": 2141, "source": "TweetDeck", "id_str": "793545087674380288", "is_retweet": false}, {"created_at": "Thu Feb 11 23:38:14 +0000 2016", "text": "@AditiRao83 Thank you, Aditi\u2014for all of your hard work in Iowa, and for this.", "in_reply_to_screen_name": "aditilrao", "retweet_count": 104, "favorite_count": 297, "source": "Twitter Web Client", "id_str": "697927654792683520", "is_retweet": false}, {"created_at": "Sun Jul 17 21:34:18 +0000 2016", "text": "Just a few of the ways @realDonaldTrump has proven that he's unfit for the presidency:\nhttps://t.co/dp65Gh93JC", "in_reply_to_screen_name": null, "retweet_count": 1905, "favorite_count": 4359, "source": "Twitter Web Client", "id_str": "754791361556062208", "is_retweet": false}, {"created_at": "Sat Mar 26 19:38:12 +0000 2016", "text": "When Republican candidates demonize Muslim Americans, it\u2019s wrong, counterproductive, and dangerous. https://t.co/n2DGYSMX1O", "in_reply_to_screen_name": null, "retweet_count": 2841, "favorite_count": 6034, "source": "TweetDeck", "id_str": "713812313329967104", "is_retweet": false}, {"created_at": "Mon Aug 15 17:36:04 +0000 2016", "text": "\"Home is where your character is stamped, where it\u2019s stamped into your soul. Where your values are set.\u201d \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 653, "favorite_count": 2224, "source": "TweetDeck", "id_str": "765240654855303169", "is_retweet": false}, {"created_at": "Fri Mar 18 15:15:16 +0000 2016", "text": "Donald Trump isn\u2019t who we are. We\u2019re better than this. https://t.co/hKYejfyJHn", "in_reply_to_screen_name": null, "retweet_count": 3130, "favorite_count": 6022, "source": "TweetDeck", "id_str": "710847044278214656", "is_retweet": false}, {"created_at": "Thu Oct 27 19:09:35 +0000 2016", "text": "\"Thankfully, Hillary is a policy wonk. And let me tell you, when you are president, that is a good thing.\u201d \u2014@FLOTUS https://t.co/GPdwi7JtwP", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 708, "favorite_count": 1465, "source": "TweetDeck", "id_str": "791718505297145857", "is_retweet": false}, {"created_at": "Thu Mar 10 22:06:56 +0000 2016", "text": "This kind of behavior is repugnant. We set the tone for our campaigns\u2014we should encourage respect, not violence. https://t.co/reqTlYTRHv", "in_reply_to_screen_name": null, "retweet_count": 2563, "favorite_count": 4128, "source": "TweetDeck", "id_str": "708051539752067073", "is_retweet": false}, {"created_at": "Mon Aug 08 18:45:52 +0000 2016", "text": "Here's what people with actual \"tremendous business success\" say about Donald Trump. https://t.co/0T22CRcy2V", "in_reply_to_screen_name": null, "retweet_count": 1254, "favorite_count": 2627, "source": "TweetDeck", "id_str": "762721506547863552", "is_retweet": false}, {"created_at": "Tue Sep 20 21:06:44 +0000 2016", "text": "Help get out the vote for Hillary (plus, get a free sticker when you sign up!): https://t.co/v4rISVHYuG", "in_reply_to_screen_name": null, "retweet_count": 708, "favorite_count": 1712, "source": "TweetDeck", "id_str": "778339633763643392", "is_retweet": false}, {"created_at": "Sat Jan 30 15:08:28 +0000 2016", "text": "We need to say loudly and clearly: We will not let Wall Street wreck Main Street again.", "in_reply_to_screen_name": null, "retweet_count": 494, "favorite_count": 1350, "source": "Twitter for iPhone", "id_str": "693450715105226753", "is_retweet": false}, {"created_at": "Tue Apr 26 15:09:28 +0000 2016", "text": "Primarias en Connecticut, Maryland, Pensilvania, Delaware y Rhode Island. #EstoyConElla https://t.co/k13PaS5qLx https://t.co/aH0etEcuIz", "in_reply_to_screen_name": null, "retweet_count": 433, "favorite_count": 877, "source": "TweetDeck", "id_str": "724978710777073664", "is_retweet": false}, {"created_at": "Thu Sep 08 18:36:28 +0000 2016", "text": "RT @Hillary_esp: Hillary cree que la verdadera fuerza se encuentra en lo que hacemos por los dem\u00e1s. Vea nuestro nuevo anuncio. https://t.co\u2026", "in_reply_to_screen_name": null, "retweet_count": 624, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "773953165158977536", "is_retweet": true}, {"created_at": "Thu Aug 25 19:15:29 +0000 2016", "text": "\"Everywhere I go, people tell me how concerned they are by the divisive rhetoric coming from my opponent in this election.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1070, "favorite_count": 3694, "source": "TweetDeck", "id_str": "768889555072249856", "is_retweet": false}, {"created_at": "Thu Sep 22 17:56:37 +0000 2016", "text": "\"Donald Trump doesn't see people like me, he only sees disability. I honestly feel bad for someone with so much hat\u2026 https://t.co/NTeF9u8JpN", "in_reply_to_screen_name": null, "retweet_count": 5228, "favorite_count": 11239, "source": "Twitter Web Client", "id_str": "779016565475962882", "is_retweet": false}, {"created_at": "Tue Mar 15 22:26:19 +0000 2016", "text": "FL, IL, MO, NC, &amp; OH: Hillary needs you now! If you haven't voted yet, grab a friend and head to the polls: https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": null, "retweet_count": 797, "favorite_count": 1760, "source": "TweetDeck", "id_str": "709868356661338112", "is_retweet": false}, {"created_at": "Thu Oct 20 01:35:33 +0000 2016", "text": "When the president gives the order to launch a nuclear weapon, that\u2019s it. The officer has to launch. It can take as little as four minutes.", "in_reply_to_screen_name": null, "retweet_count": 3777, "favorite_count": 9620, "source": "TweetDeck", "id_str": "788916533573591040", "is_retweet": false}, {"created_at": "Thu Aug 18 01:00:21 +0000 2016", "text": "Let\u2019s make sure it does on Election Day \u2192 https://t.co/iWKBOE1i18 https://t.co/41ebkLl4pb", "in_reply_to_screen_name": null, "retweet_count": 2106, "favorite_count": 6325, "source": "TweetDeck", "id_str": "766077240438382597", "is_retweet": false}, {"created_at": "Fri Jul 22 14:39:42 +0000 2016", "text": "RT @RyanLizza: Leading criminologist on Trump's speech: \u201cA good illustration of how to lie with statistics.\u201d https://t.co/QIwd78V7ce", "in_reply_to_screen_name": null, "retweet_count": 1674, "favorite_count": 0, "source": "TweetDeck", "id_str": "756498961276530688", "is_retweet": true}, {"created_at": "Sat Apr 23 23:48:11 +0000 2016", "text": "Uno no se intimida cuando se tienen que denunciar abusos a los derechos humanos.\nhttps://t.co/ULMzosJ2Dr", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 1253, "source": "Twitter Web Client", "id_str": "724022083726888962", "is_retweet": false}, {"created_at": "Wed Feb 24 22:50:02 +0000 2016", "text": "The Puerto Rican senate just confirmed Maite Oronoz Rodr\u00edguez, making her the first LGBT chief justice in the US. https://t.co/EAvYZvoAYu", "in_reply_to_screen_name": null, "retweet_count": 2175, "favorite_count": 3947, "source": "TweetDeck", "id_str": "702626568825413632", "is_retweet": false}, {"created_at": "Sun Apr 17 18:20:35 +0000 2016", "text": "A great day in East Harlem, in photos. https://t.co/gHbulHPSLu https://t.co/jclVhj7jtD", "in_reply_to_screen_name": null, "retweet_count": 818, "favorite_count": 1897, "source": "TweetDeck", "id_str": "721765314720100352", "is_retweet": false}, {"created_at": "Fri Jun 10 19:17:00 +0000 2016", "text": "\u201cElla tiene la valent\u00eda, la compasi\u00f3n y el coraz\u00f3n para realizar el trabajo\u201d. Mira el mensaje del presidente Obama.\nhttps://t.co/mOIfHhSxWT", "in_reply_to_screen_name": null, "retweet_count": 1532, "favorite_count": 3254, "source": "Twitter Web Client", "id_str": "741348456329945088", "is_retweet": false}, {"created_at": "Fri Mar 04 03:01:49 +0000 2016", "text": "The more time that passes, the scarier this gets. \u2b07\ufe0f #GOPdebate https://t.co/EEfDR3qyM0", "in_reply_to_screen_name": null, "retweet_count": 2694, "favorite_count": 6458, "source": "TweetDeck", "id_str": "705589034182115328", "is_retweet": false}, {"created_at": "Tue Jul 26 23:59:29 +0000 2016", "text": "Thank you, President Carter. https://t.co/zb94pXV95r", "in_reply_to_screen_name": null, "retweet_count": 2507, "favorite_count": 8341, "source": "TweetDeck", "id_str": "758089389276889088", "is_retweet": false}, {"created_at": "Thu Oct 20 01:52:19 +0000 2016", "text": "In 1995, Hillary declared that \"women's rights are human rights.\" Trump lost nearly a billion dollars.\u2026 https://t.co/gljLTuIlwL", "in_reply_to_screen_name": null, "retweet_count": 4383, "favorite_count": 8561, "source": "TweetDeck", "id_str": "788920753756536832", "is_retweet": false}, {"created_at": "Thu Feb 11 18:38:38 +0000 2016", "text": "Let's dispel with this fiction that @POTUS doesn't know what he's doing. He knows exactly what he's doing. https://t.co/DQ4HHj9kXZ", "in_reply_to_screen_name": null, "retweet_count": 2089, "favorite_count": 3156, "source": "TweetDeck", "id_str": "697852256557928448", "is_retweet": false}, {"created_at": "Sat Jan 30 16:55:01 +0000 2016", "text": "Time is running out to tell Hillary you're standing with her before the Iowa caucus! Commit now: https://t.co/orlYXsirZc", "in_reply_to_screen_name": null, "retweet_count": 343, "favorite_count": 927, "source": "TweetDeck", "id_str": "693477529873678336", "is_retweet": false}, {"created_at": "Wed Oct 26 17:49:05 +0000 2016", "text": "1973:\nHillary takes on discrimination against kids with disabilities.\nTrump gets sued for housing discrimination.\u2026 https://t.co/Na7jBbZCWT", "in_reply_to_screen_name": null, "retweet_count": 2429, "favorite_count": 5237, "source": "TweetDeck", "id_str": "791335856585965568", "is_retweet": false}, {"created_at": "Fri Jun 10 23:21:28 +0000 2016", "text": "\"I am the least racist person that you\u2019ve ever encountered.\" \u2014@realDonaldTrump https://t.co/9EvXSWTQGr https://t.co/smaUds8PnY", "in_reply_to_screen_name": null, "retweet_count": 5718, "favorite_count": 14394, "source": "TweetDeck", "id_str": "741409978376957952", "is_retweet": false}, {"created_at": "Tue Aug 02 18:26:31 +0000 2016", "text": "Under Trump, our economy would lose 3.5 million jobs.\n\nHillary's plan would create 10.4 million\u2014in one term alone. https://t.co/MsVrIdXbDF", "in_reply_to_screen_name": null, "retweet_count": 2339, "favorite_count": 5516, "source": "TweetDeck", "id_str": "760542310216138753", "is_retweet": false}, {"created_at": "Fri Aug 26 18:55:26 +0000 2016", "text": "RT @POTUS: Nearly 100 years ago, women broke down barriers to the ballot box, moving us closer to a more equal nation. Let's finish what th\u2026", "in_reply_to_screen_name": null, "retweet_count": 24230, "favorite_count": 0, "source": "TweetDeck", "id_str": "769246896581857282", "is_retweet": true}, {"created_at": "Tue Mar 01 13:02:15 +0000 2016", "text": "Is your state voting on #SuperTuesday? Call the hotline with any questions: 844-IM4-HILL (844-464-4455). https://t.co/1mcng2D11M", "in_reply_to_screen_name": null, "retweet_count": 757, "favorite_count": 1089, "source": "TweetDeck", "id_str": "704652973255880705", "is_retweet": false}, {"created_at": "Mon Jan 25 21:05:30 +0000 2016", "text": "One week. #iacaucus  https://t.co/gV4NkjQQly", "in_reply_to_screen_name": null, "retweet_count": 224, "favorite_count": 499, "source": "Twitter Web Client", "id_str": "691728624907612164", "is_retweet": false}, {"created_at": "Mon Oct 24 17:56:07 +0000 2016", "text": "RT @dougmillsnyt: .@SenWarren with @HillaryClinton during a campaign rally at Saint Anselm College in Manchester, NH https://t.co/ZsCfgVPKoz", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "790612853480882176", "is_retweet": true}, {"created_at": "Tue Mar 22 01:48:59 +0000 2016", "text": "\"I want to get comprehensive immigration reform. And I want to start trying to get it as soon as I'm elected, if I'm so fortunate.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 2455, "source": "Twitter Web Client", "id_str": "712093688009256960", "is_retweet": false}, {"created_at": "Thu May 19 18:11:47 +0000 2016", "text": "\"Everybody gets knocked down in life. The real test is whether you get back up, dust yourself off, and keep going.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1540, "favorite_count": 3100, "source": "TweetDeck", "id_str": "733359512099422212", "is_retweet": false}, {"created_at": "Sun Feb 07 21:29:54 +0000 2016", "text": "What\u2019s it like to watch football with @billclinton? Hillary explains.\nhttps://t.co/XRj5CaBBUK", "in_reply_to_screen_name": null, "retweet_count": 379, "favorite_count": 959, "source": "Twitter Web Client", "id_str": "696445806279135232", "is_retweet": false}, {"created_at": "Mon Aug 15 17:50:31 +0000 2016", "text": "\u201cThis guy doesn\u2019t care about the middle class...he doesn\u2019t understand it. He doesn\u2019t have a clue.\u201d \u2014@JoeBiden on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 1089, "favorite_count": 3520, "source": "TweetDeck", "id_str": "765244292638056448", "is_retweet": false}, {"created_at": "Fri Jul 29 03:05:17 +0000 2016", "text": "\"If you believe that companies should share profits with their workers, not pad executive bonuses, join us.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1622, "favorite_count": 5609, "source": "TweetDeck", "id_str": "758860920923697152", "is_retweet": false}, {"created_at": "Tue May 24 23:29:42 +0000 2016", "text": "Big win for those who think we should make it easier, not harder, to vote (which really should be all of us). https://t.co/GwwHT4qopp -H", "in_reply_to_screen_name": null, "retweet_count": 854, "favorite_count": 2122, "source": "TweetDeck", "id_str": "735251459445510144", "is_retweet": false}, {"created_at": "Thu Oct 20 02:09:01 +0000 2016", "text": "\u201cIt\u2019s not just about women\u2014[Trump] never apologizes or says he\u2019s sorry for anything.\u201d \u2014Hillary #DebateNight https://t.co/b1FuQDuBrO", "in_reply_to_screen_name": null, "retweet_count": 2651, "favorite_count": 7668, "source": "TweetDeck", "id_str": "788924955744407552", "is_retweet": false}, {"created_at": "Mon May 09 13:02:49 +0000 2016", "text": "Donald Trump could be our next Commander-in-Chief. Here's who thinks that's a good idea. https://t.co/xykspfpMU5", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 1308, "source": "TweetDeck", "id_str": "729657881340039168", "is_retweet": false}, {"created_at": "Sun Jun 19 14:09:59 +0000 2016", "text": "Happy Father's Day, @BillClinton! https://t.co/3C2RFFuIAr", "in_reply_to_screen_name": null, "retweet_count": 3026, "favorite_count": 17501, "source": "Twitter Web Client", "id_str": "744532685998161920", "is_retweet": false}, {"created_at": "Thu Oct 06 21:26:35 +0000 2016", "text": "RT @TheBriefing2016: Hey @mike_pence\u2014there's this thing called Google... https://t.co/LXInR0CaNP", "in_reply_to_screen_name": null, "retweet_count": 2018, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "784142835914334208", "is_retweet": true}, {"created_at": "Mon Nov 07 19:00:44 +0000 2016", "text": "RT @clionamccarney: 89 year old Elizabeth was out knocking doors in #VirWINia for Hillary today because this election is \"too important to\u2026", "in_reply_to_screen_name": null, "retweet_count": 2863, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795702543791849472", "is_retweet": true}, {"created_at": "Thu Feb 04 21:51:12 +0000 2016", "text": "Amen. \nhttps://t.co/JpHuh7dsfj", "in_reply_to_screen_name": null, "retweet_count": 799, "favorite_count": 1819, "source": "TweetDeck", "id_str": "695364002570874885", "is_retweet": false}, {"created_at": "Mon Jun 20 21:01:56 +0000 2016", "text": "You inspire me too, @ChrisMurphyCT. Let's all demand action on gun violence prevention: https://t.co/yafqJygzVf https://t.co/1Eh4uVmtmB", "in_reply_to_screen_name": null, "retweet_count": 1219, "favorite_count": 3952, "source": "TweetDeck", "id_str": "744998743460569089", "is_retweet": false}, {"created_at": "Mon May 23 17:58:55 +0000 2016", "text": "The labor movement pioneered the basic bargain that made America great: If you work hard and do your part, you should be able to get ahead.", "in_reply_to_screen_name": null, "retweet_count": 850, "favorite_count": 1884, "source": "TweetDeck", "id_str": "734805823843618816", "is_retweet": false}, {"created_at": "Mon Oct 31 19:04:09 +0000 2016", "text": "\"That\u2019s what\u2019s on the ballot this year. It\u2019s not just my name and Donald Trump\u2019s name. It\u2019s our future. Our security. Our values.\" \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1550, "favorite_count": 3780, "source": "TweetDeck", "id_str": "793166686551703552", "is_retweet": false}, {"created_at": "Mon Feb 08 23:54:13 +0000 2016", "text": "America's opportunity gap is not just about economic inequality. It is also about racial inequality, and we need to tackle both together.", "in_reply_to_screen_name": null, "retweet_count": 854, "favorite_count": 1661, "source": "TweetDeck", "id_str": "696844515479519232", "is_retweet": false}, {"created_at": "Tue Mar 15 22:41:14 +0000 2016", "text": "Waiting in line to vote? Stay put\u2014Hillary\u2019s counting on you! RT to tell a friend. https://t.co/kJJe7OxgHN", "in_reply_to_screen_name": null, "retweet_count": 1298, "favorite_count": 2666, "source": "TweetDeck", "id_str": "709872110651514880", "is_retweet": false}, {"created_at": "Sun Oct 09 18:38:50 +0000 2016", "text": "Targeting police officers with violence is unacceptable. My heart breaks for the loss these families have suffered.\u2026 https://t.co/w8Qwm40NKt", "in_reply_to_screen_name": null, "retweet_count": 1893, "favorite_count": 5988, "source": "TweetDeck", "id_str": "785187786047520770", "is_retweet": false}, {"created_at": "Fri Apr 22 16:47:22 +0000 2016", "text": "We need to act on Zika\u2014fast. Add your name and tell Congress: approve emergency funding now to keep families safe. https://t.co/H0jvAG9rZ2", "in_reply_to_screen_name": null, "retweet_count": 526, "favorite_count": 964, "source": "TweetDeck", "id_str": "723553794114641920", "is_retweet": false}, {"created_at": "Wed Jul 13 16:58:41 +0000 2016", "text": "We need to take a hard look at our laws and our attitudes. We need to embrace policies that promote justice for all people.", "in_reply_to_screen_name": null, "retweet_count": 655, "favorite_count": 1864, "source": "TweetDeck", "id_str": "753272449932861445", "is_retweet": false}, {"created_at": "Fri Jan 22 23:34:20 +0000 2016", "text": "We\u2019ve come too far to let Republicans take us back. The fight for women\u2019s reproductive rights is far from over. https://t.co/XuuOyFV0ym", "in_reply_to_screen_name": null, "retweet_count": 1934, "favorite_count": 5149, "source": "TweetDeck", "id_str": "690678915543777280", "is_retweet": false}, {"created_at": "Thu Aug 18 00:12:37 +0000 2016", "text": "Trump is running a cynical campaign of hate and fear, and he's got a new campaign chief to match. https://t.co/wSgKlxxebU", "in_reply_to_screen_name": null, "retweet_count": 4555, "favorite_count": 9059, "source": "TweetDeck", "id_str": "766065224717918208", "is_retweet": false}, {"created_at": "Mon Nov 07 22:07:51 +0000 2016", "text": "\"If your closest advisors don\u2019t trust you to tweet, how can we trust you with the nuclear codes?\u201d \u2014@POTUS on Trump", "in_reply_to_screen_name": null, "retweet_count": 14163, "favorite_count": 35312, "source": "TweetDeck", "id_str": "795749635126161408", "is_retweet": false}, {"created_at": "Tue Nov 01 23:10:38 +0000 2016", "text": "RT @RobbyMook: Some stats from the field: door knocks last weekend in PA were up 261% from the same weekend in 2012; 108% in OH.", "in_reply_to_screen_name": null, "retweet_count": 1408, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793591104113405952", "is_retweet": true}, {"created_at": "Sun Oct 23 21:06:20 +0000 2016", "text": "\"My vision for America is an America where everyone has a place. This is the America that I know and love.\" \u2014Hillary https://t.co/mndHv0mqJ5", "in_reply_to_screen_name": null, "retweet_count": 4702, "favorite_count": 13957, "source": "Media Studio", "id_str": "790298335743582208", "is_retweet": false}, {"created_at": "Mon Aug 29 18:44:01 +0000 2016", "text": "Trump talks about enacting extreme policy ideas that hurt Americans. \n\nHis VP pick has actually done it. https://t.co/q3p5XFENI5", "in_reply_to_screen_name": null, "retweet_count": 4414, "favorite_count": 6888, "source": "TweetDeck", "id_str": "770331185692180480", "is_retweet": false}, {"created_at": "Tue Jul 19 02:22:31 +0000 2016", "text": "When @realDonaldTrump makes you mad, chip in to make him\u2026sad! https://t.co/VEDD5mvPGc https://t.co/LJ36UTZeGz", "in_reply_to_screen_name": null, "retweet_count": 1194, "favorite_count": 2807, "source": "TweetDeck", "id_str": "755226280359038976", "is_retweet": false}, {"created_at": "Thu Sep 08 01:13:11 +0000 2016", "text": "Donald Trump is unqualified and totally unfit to be Commander-in-Chief.\n\nYou can stop him. Register to vote today: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 2984, "favorite_count": 6182, "source": "TweetDeck", "id_str": "773690611971088384", "is_retweet": false}, {"created_at": "Thu Jun 02 19:34:31 +0000 2016", "text": "Imagine if he had not just his Twitter account at his disposal when he\u2019s angry, but America\u2019s entire arsenal. https://t.co/e7M2CV3sj6", "in_reply_to_screen_name": null, "retweet_count": 10318, "favorite_count": 13642, "source": "TweetDeck", "id_str": "738453762575110144", "is_retweet": false}, {"created_at": "Wed Mar 23 19:03:16 +0000 2016", "text": "America should not be shutting our doors to orphans or applying religious tests for people fleeing persecution. That\u2019s not who we are.", "in_reply_to_screen_name": null, "retweet_count": 980, "favorite_count": 2804, "source": "TweetDeck", "id_str": "712716361018056706", "is_retweet": false}, {"created_at": "Thu Oct 20 04:06:14 +0000 2016", "text": "RT @voxdotcom: Hillary Clinton\u2019s three debate performances left the Trump campaign in ruins https://t.co/7Jc2CrPdRE", "in_reply_to_screen_name": null, "retweet_count": 3676, "favorite_count": 0, "source": "TweetDeck", "id_str": "788954453676285952", "is_retweet": true}, {"created_at": "Tue Jan 12 14:09:50 +0000 2016", "text": "Our criminal justice system is broken. We need to end mass incarceration and close private prisons. https://t.co/8KJYXm5v6K", "in_reply_to_screen_name": null, "retweet_count": 608, "favorite_count": 1253, "source": "Twitter for iPhone", "id_str": "686912978059456516", "is_retweet": false}, {"created_at": "Thu Jul 28 01:45:08 +0000 2016", "text": "\"Hillary Clinton understands that this is not reality television, this is reality!\" \u2014@MikeBloomberg", "in_reply_to_screen_name": null, "retweet_count": 1624, "favorite_count": 4980, "source": "TweetDeck", "id_str": "758478362587168768", "is_retweet": false}, {"created_at": "Sat Sep 24 00:58:13 +0000 2016", "text": "RT @IGNITE_National: Tell a girl to run - for office! #DeclareYourAmbition at https://t.co/Gcthrb8QwO https://t.co/AAIOYi1hFA", "in_reply_to_screen_name": null, "retweet_count": 1526, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "779485052216471552", "is_retweet": true}, {"created_at": "Mon Feb 22 13:57:12 +0000 2016", "text": "If we face the reality of systemic racism, we can begin to reform our broken criminal justice &amp; immigration systems. https://t.co/NsCvcshTGy", "in_reply_to_screen_name": null, "retweet_count": 1111, "favorite_count": 2287, "source": "TweetDeck", "id_str": "701767700775890945", "is_retweet": false}, {"created_at": "Fri May 06 15:52:49 +0000 2016", "text": "Are you a Republican who thinks @realDonaldTrump should not become president?\n\nTell us why: https://t.co/OvwepPNXoC", "in_reply_to_screen_name": null, "retweet_count": 1074, "favorite_count": 1976, "source": "TweetDeck", "id_str": "728613495969853440", "is_retweet": false}, {"created_at": "Wed Sep 14 23:05:21 +0000 2016", "text": "George was scammed out of his savings\u2014his retirement, his kids' college funds\u2014by a real estate \"course\" at Trump U. https://t.co/ricRlymi01", "in_reply_to_screen_name": null, "retweet_count": 7838, "favorite_count": 10761, "source": "Twitter Web Client", "id_str": "776195158245306368", "is_retweet": false}, {"created_at": "Tue Jun 28 16:04:59 +0000 2016", "text": "A progressive who gets things done? Make that two. https://t.co/zqsXNdDqEU https://t.co/dmTATNcbby", "in_reply_to_screen_name": null, "retweet_count": 1225, "favorite_count": 3811, "source": "TweetDeck", "id_str": "747823117997842433", "is_retweet": false}, {"created_at": "Tue Oct 04 17:07:11 +0000 2016", "text": "Under Hillary\u2019s plan, if your family earns $125,000 or less, you'll be able to go to a public college tuition-free. https://t.co/PSA3wHyHXM", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1215, "favorite_count": 2880, "source": "TweetDeck", "id_str": "783352780748623872", "is_retweet": false}, {"created_at": "Tue Nov 08 06:04:26 +0000 2016", "text": "\"It\u2019s not just my name or Donald Trump\u2019s name on the ballot\u2014it\u2019s the kind of country we want.\u201d \u2014Hillary https://t.co/jfd3CXLD1s", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1136, "favorite_count": 3415, "source": "TweetDeck", "id_str": "795869569709735936", "is_retweet": false}, {"created_at": "Fri Sep 16 13:58:03 +0000 2016", "text": "\"We know who Donald is. For five years, he has led the birther movement to de-legitimize our first black president.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 964, "favorite_count": 1873, "source": "TweetDeck", "id_str": "776782199832113152", "is_retweet": false}, {"created_at": "Tue Aug 02 16:09:45 +0000 2016", "text": "This from a man who says he\u2019s \u201csacrificed\u201d for our country. https://t.co/oId7LJdrx8", "in_reply_to_screen_name": null, "retweet_count": 3671, "favorite_count": 7280, "source": "TweetDeck", "id_str": "760507891166085120", "is_retweet": false}, {"created_at": "Sat Jun 04 00:57:12 +0000 2016", "text": "When Trump insults Muslims or immigrants, he should remember that Muslims and immigrants serve in our armed forces. https://t.co/EkShqvbssC", "in_reply_to_screen_name": null, "retweet_count": 3841, "favorite_count": 7123, "source": "Twitter for iPhone", "id_str": "738897355710291968", "is_retweet": false}, {"created_at": "Thu Aug 11 18:03:03 +0000 2016", "text": "A four-year degree shouldn\u2019t be the only path to a good job. You should be able to learn a skill, practice a trade, and make a good living.", "in_reply_to_screen_name": null, "retweet_count": 3081, "favorite_count": 7051, "source": "TweetDeck", "id_str": "763797895111933952", "is_retweet": false}, {"created_at": "Sat Nov 05 00:52:01 +0000 2016", "text": "With just 4 days until Election Day, Hillary is in Ohio with @S_C_, @ChanceTheRapper, @JColeNC, &amp; more. Watch live: https://t.co/BiMWwj4xvs", "in_reply_to_screen_name": null, "retweet_count": 1522, "favorite_count": 4295, "source": "TweetDeck", "id_str": "794703783712489472", "is_retweet": false}, {"created_at": "Wed Mar 02 17:01:36 +0000 2016", "text": "No parent should have to choose between getting a paycheck and caring for their sick child.\nhttps://t.co/j0aIxfGfJq", "in_reply_to_screen_name": null, "retweet_count": 1217, "favorite_count": 2478, "source": "Twitter Web Client", "id_str": "705075594451505153", "is_retweet": false}, {"created_at": "Fri Sep 16 11:47:06 +0000 2016", "text": "Remember: Trump, the Birther-in-Chief, still refuses to even release his own tax returns and real medical records. https://t.co/BgtM199Ncg", "in_reply_to_screen_name": null, "retweet_count": 7063, "favorite_count": 12752, "source": "Twitter Web Client", "id_str": "776749248943628289", "is_retweet": false}, {"created_at": "Fri Oct 21 21:08:43 +0000 2016", "text": "More than 200 million voters are registered to vote in this election. That\u2019s more than ever before.\n\nJoin them: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 607, "favorite_count": 1295, "source": "TweetDeck", "id_str": "789574160058023936", "is_retweet": false}, {"created_at": "Fri May 13 02:58:46 +0000 2016", "text": "Even Republicans can't come to terms with the idea of \"President Trump.\" https://t.co/MPLsSpDxiO", "in_reply_to_screen_name": null, "retweet_count": 1447, "favorite_count": 2809, "source": "TweetDeck", "id_str": "730955416750948352", "is_retweet": false}, {"created_at": "Thu Jul 28 01:34:52 +0000 2016", "text": "\"I believe it is an imperative that we elect Hillary Clinton as the next President of the United States.\u201d \u2014@MikeBloomberg", "in_reply_to_screen_name": null, "retweet_count": 1065, "favorite_count": 3604, "source": "TweetDeck", "id_str": "758475781274120192", "is_retweet": false}, {"created_at": "Sun Apr 03 18:09:52 +0000 2016", "text": "You should never have to choose between your paycheck and taking care of your family. https://t.co/1mmeRVBnxv https://t.co/z3iq4diRcX", "in_reply_to_screen_name": null, "retweet_count": 1802, "favorite_count": 4307, "source": "Twitter Web Client", "id_str": "716689186674327552", "is_retweet": false}, {"created_at": "Mon Nov 07 22:03:58 +0000 2016", "text": "RT @CNN: Hillary Clinton: \"This election is basically between division and unity in our country.\" https://t.co/nfLKayaIwh https://t.co/kdD6\u2026", "in_reply_to_screen_name": null, "retweet_count": 2120, "favorite_count": 0, "source": "TweetDeck", "id_str": "795748654900461568", "is_retweet": true}, {"created_at": "Wed Oct 05 16:36:25 +0000 2016", "text": ".@Time: Why Mike Pence Didn\u2019t Defend Donald Trump https://t.co/l2XSvbvTlT https://t.co/1EbBnZdQnb", "in_reply_to_screen_name": null, "retweet_count": 1110, "favorite_count": 2679, "source": "TweetDeck", "id_str": "783707425228648448", "is_retweet": false}, {"created_at": "Fri Oct 14 15:53:30 +0000 2016", "text": "\"All the progress we've made these last 8 years is on the ballot.\" \u2014@POTUS\n\nMake sure you're ready to vote: https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 737, "favorite_count": 2051, "source": "TweetDeck", "id_str": "786958117531742208", "is_retweet": false}, {"created_at": "Fri Feb 19 17:39:17 +0000 2016", "text": "\u201cWe feel very blessed with opportunity\u2014like we\u2019ve reached our American dream. That started with an immigrant story.\u201d\nhttps://t.co/eiqWnQXP30", "in_reply_to_screen_name": null, "retweet_count": 3029, "favorite_count": 6591, "source": "Twitter Web Client", "id_str": "700736425042415616", "is_retweet": false}, {"created_at": "Tue Sep 13 17:41:54 +0000 2016", "text": "With just 56 days until Election Day, @POTUS is back out on the trail for Hillary in Philly. Watch live: https://t.co/TJr8lLVbDS", "in_reply_to_screen_name": null, "retweet_count": 621, "favorite_count": 2206, "source": "TweetDeck", "id_str": "775751372557910016", "is_retweet": false}, {"created_at": "Fri Apr 15 02:53:47 +0000 2016", "text": "\"We're never asked about [abortion]\u2014this goes to who we are as women: our rights, autonomy, our ability to make our own decisions.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1471, "favorite_count": 3015, "source": "TweetDeck", "id_str": "720807300533993472", "is_retweet": false}, {"created_at": "Thu Feb 11 16:14:21 +0000 2016", "text": "In 2014, Public Advocate @TishJames became the first woman of color to hold citywide office in New York City. https://t.co/k5tPj2NNnY", "in_reply_to_screen_name": null, "retweet_count": 592, "favorite_count": 1388, "source": "TweetDeck", "id_str": "697815948057829376", "is_retweet": false}, {"created_at": "Sat Feb 27 18:02:31 +0000 2016", "text": "Do all the good you can, for all the people you can, for as long as you can.\nhttps://t.co/xeUOQwFXa4", "in_reply_to_screen_name": null, "retweet_count": 1194, "favorite_count": 2082, "source": "Twitter Web Client", "id_str": "703641376714465281", "is_retweet": false}, {"created_at": "Fri Oct 21 18:18:58 +0000 2016", "text": "\"I took a break from my rigorous nap schedule to be here.\"\n\nCatch up on Hillary's best lines at the #AlSmithDinner: https://t.co/XQkzWYh9fU", "in_reply_to_screen_name": null, "retweet_count": 1399, "favorite_count": 5747, "source": "TweetDeck", "id_str": "789531437376602113", "is_retweet": false}, {"created_at": "Wed Oct 05 02:01:49 +0000 2016", "text": "RT @TheBriefing2016: Mike Pence denied that Donald Trump would put a ban on Muslims. \n\nIt's still on their website. https://t.co/WKJcZLvPrQ\u2026", "in_reply_to_screen_name": null, "retweet_count": 3621, "favorite_count": 0, "source": "TweetDeck", "id_str": "783487323962998784", "is_retweet": true}, {"created_at": "Thu Oct 13 21:17:19 +0000 2016", "text": "\"I would like to extend my warmest congratulations to Ant\u00f3nio Guterres on his appointment as the next Secretary-Gen\u2026 https://t.co/jU6vgnl4Mj", "in_reply_to_screen_name": null, "retweet_count": 2020, "favorite_count": 8032, "source": "TweetDeck", "id_str": "786677220056104960", "is_retweet": false}, {"created_at": "Mon Jul 04 18:11:25 +0000 2016", "text": "\"To be great, we can't be small. We have to be as big as the values that define America.\" \u2014Hillary https://t.co/RPCgLUrBTs", "in_reply_to_screen_name": null, "retweet_count": 2970, "favorite_count": 9262, "source": "TweetDeck", "id_str": "750029259956166661", "is_retweet": false}, {"created_at": "Thu Sep 15 19:49:31 +0000 2016", "text": "\"I want to give our kids a safer world...that means a world with strong allies, more friends, fewer enemies, and fewer nuclear weapons.\"", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 694, "favorite_count": 1271, "source": "TweetDeck", "id_str": "776508263923871749", "is_retweet": false}, {"created_at": "Wed Apr 13 20:01:53 +0000 2016", "text": "Clean air shouldn't be a luxury in America. https://t.co/cky04GONj1 https://t.co/AK9QXC3qK7", "in_reply_to_screen_name": null, "retweet_count": 478, "favorite_count": 1069, "source": "TweetDeck", "id_str": "720341257210474500", "is_retweet": false}, {"created_at": "Sat Oct 22 23:41:26 +0000 2016", "text": "Talk to your loved ones about this election\u2014there's too much at stake to sit out. https://t.co/tTgeqy51PU\u2026 https://t.co/2s2F3s1AnJ", "in_reply_to_screen_name": null, "retweet_count": 2650, "favorite_count": 7069, "source": "Media Studio", "id_str": "789974977965494272", "is_retweet": false}, {"created_at": "Wed Jan 20 03:28:51 +0000 2016", "text": "I'm so sorry to hear about this terrible tragedy. My heart goes out to Braden's family and colleagues. -H \nhttps://t.co/zqI0JBfiJ5", "in_reply_to_screen_name": null, "retweet_count": 864, "favorite_count": 2819, "source": "TweetDeck", "id_str": "689650769147097088", "is_retweet": false}, {"created_at": "Sun Jan 24 15:02:13 +0000 2016", "text": "It\u2019s time to reclaim our democracy. We need to overturn Citizens United, fix our campaign finance system, and protect voting rights.", "in_reply_to_screen_name": null, "retweet_count": 1316, "favorite_count": 3159, "source": "TweetDeck", "id_str": "691274811637633024", "is_retweet": false}, {"created_at": "Tue Sep 27 23:08:41 +0000 2016", "text": "If we stand together, there's nothing we can't do. \n\nMake sure you're ready to vote: https://t.co/tTgeqxNqYm https://t.co/Q3Ymbb7UNy", "in_reply_to_screen_name": null, "retweet_count": 2202, "favorite_count": 6070, "source": "Media Studio", "id_str": "780907038650068994", "is_retweet": false}, {"created_at": "Thu Feb 04 22:49:58 +0000 2016", "text": "On the campaign trail in New Hampshire with @GabbyGiffords and @ShuttleCDRKelly. https://t.co/pZAycOwIDQ", "in_reply_to_screen_name": null, "retweet_count": 386, "favorite_count": 1116, "source": "TweetDeck", "id_str": "695378791237967872", "is_retweet": false}, {"created_at": "Thu Aug 25 19:28:36 +0000 2016", "text": "Look at the policies Trump has proposed\u2014they would put prejudice into practice. https://t.co/2AJqkb8JUs", "in_reply_to_screen_name": null, "retweet_count": 736, "favorite_count": 1584, "source": "TweetDeck", "id_str": "768892856559894528", "is_retweet": false}, {"created_at": "Thu Oct 27 18:56:21 +0000 2016", "text": "RT @asmamk: I've covered a lot of political rallies - I haven seen many where the crowd was THIS excited. https://t.co/lnyYwozYlt", "in_reply_to_screen_name": null, "retweet_count": 3414, "favorite_count": 0, "source": "TweetDeck", "id_str": "791715174222798849", "is_retweet": true}, {"created_at": "Tue Apr 12 02:52:52 +0000 2016", "text": "We can't afford a President Trump, Cruz, or Kasich. \n\nIf you agree, get your sticker \u2192 https://t.co/B2ka2oRcMh https://t.co/CCASJ2J7Gt", "in_reply_to_screen_name": null, "retweet_count": 1173, "favorite_count": 3532, "source": "TweetDeck", "id_str": "719719906279833600", "is_retweet": false}, {"created_at": "Tue Apr 05 22:20:53 +0000 2016", "text": "Hillary in 1995: Raising the minimum wage is the right thing to do.\nHillary in 2016: Still true.\nhttps://t.co/tLc3GmzUQy", "in_reply_to_screen_name": null, "retweet_count": 2177, "favorite_count": 4261, "source": "Twitter Web Client", "id_str": "717477133631623168", "is_retweet": false}, {"created_at": "Wed Mar 23 18:42:25 +0000 2016", "text": "Watch live: Hillary speaks about how we will defeat terrorism, stand up to hate, and keep America safe \u2192 https://t.co/Ehb7UBAYfY", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 815, "source": "TweetDeck", "id_str": "712711114883211264", "is_retweet": false}, {"created_at": "Fri May 20 21:16:04 +0000 2016", "text": "The United States presidency requires steadiness as well as strength and smarts.\n\nDonald Trump is not qualified. https://t.co/04viDbO5fV", "in_reply_to_screen_name": null, "retweet_count": 1882, "favorite_count": 3960, "source": "TweetDeck", "id_str": "733768274970857473", "is_retweet": false}, {"created_at": "Thu May 19 18:58:22 +0000 2016", "text": "Question: \"Do you think Donald Trump is qualified to be president?\"\n\n\"No, I do not.\" \u2014Hillary\nhttps://t.co/04viDc5G7t", "in_reply_to_screen_name": null, "retweet_count": 1929, "favorite_count": 3880, "source": "Twitter Web Client", "id_str": "733371236005249024", "is_retweet": false}, {"created_at": "Sat Nov 05 14:18:57 +0000 2016", "text": "RT if you agree we need to keep moving forward, not back. https://t.co/3TKJ4H68Kz https://t.co/uMsYLKaTCc", "in_reply_to_screen_name": null, "retweet_count": 8730, "favorite_count": 10793, "source": "Twitter for iPhone", "id_str": "794906854216396800", "is_retweet": false}, {"created_at": "Wed Jun 15 01:38:48 +0000 2016", "text": "A lot of people are saying Donald Trump is a conspiracy theorist... https://t.co/NFjHuq1ypI", "in_reply_to_screen_name": null, "retweet_count": 1330, "favorite_count": 3222, "source": "TweetDeck", "id_str": "742894093366333440", "is_retweet": false}, {"created_at": "Thu Feb 18 19:26:21 +0000 2016", "text": "Text MADE to 47246 to be the first to know when new items are added to the #MadeForHistory collection.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 160, "favorite_count": 363, "source": "TweetDeck", "id_str": "700400979867496448", "is_retweet": false}, {"created_at": "Sun Oct 30 01:05:20 +0000 2016", "text": "With just 10 days to go, Republicans are pulling out all the stops to try to bring Hillary down. RT this to help ge\u2026 https://t.co/o7q41liYSs", "in_reply_to_screen_name": null, "retweet_count": 41760, "favorite_count": 41788, "source": "TweetDeck", "id_str": "792532805691604992", "is_retweet": false}, {"created_at": "Wed Jul 27 23:43:01 +0000 2016", "text": "\u201cWhile Trump talks and talks and talks, Hillary does stuff. She fights for us on the big issues.\u201d\u2014@JerryBrownGov #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 881, "favorite_count": 2821, "source": "TweetDeck", "id_str": "758447633526644744", "is_retweet": false}, {"created_at": "Thu Nov 03 20:07:10 +0000 2016", "text": "Donald\u2014his father Fred\u2014and their entire company were sued by @TheJusticeDept for discriminating against African Americans and Latinos.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1310, "favorite_count": 2209, "source": "TweetDeck", "id_str": "794269711437594631", "is_retweet": false}, {"created_at": "Tue Oct 18 17:02:10 +0000 2016", "text": "Ryan talks about living with a disability\u2014and befriending Hillary back in 1994: \"She looks at me the way I always w\u2026 https://t.co/8O6vwG3YgY", "in_reply_to_screen_name": null, "retweet_count": 8688, "favorite_count": 22196, "source": "Media Studio", "id_str": "788424949635682304", "is_retweet": false}, {"created_at": "Tue Jul 26 02:36:29 +0000 2016", "text": "\"What kind of a man cheats students, cheats investors, cheats workers? ... A man who must never be president\" \u2014Warren on Trump #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 2739, "favorite_count": 7230, "source": "TweetDeck", "id_str": "757766513013194752", "is_retweet": false}, {"created_at": "Mon Oct 24 22:22:43 +0000 2016", "text": "\u201cClinton has the temperament, knowledge and experience to be president.\u201d \u2014@PhillyTrib https://t.co/KpM8ECx00D", "in_reply_to_screen_name": null, "retweet_count": 1124, "favorite_count": 3571, "source": "TweetDeck", "id_str": "790679943671930880", "is_retweet": false}, {"created_at": "Thu Sep 08 23:17:35 +0000 2016", "text": "This election is too important for anyone to sit on the sidelines.\n\nMake sure your friends are registered to vote. https://t.co/tTgeqy51PU", "in_reply_to_screen_name": null, "retweet_count": 1729, "favorite_count": 4271, "source": "TweetDeck", "id_str": "774023910018777092", "is_retweet": false}, {"created_at": "Thu Aug 11 00:58:50 +0000 2016", "text": "Our kids see the president as a role model. How will they see Donald Trump?\nhttps://t.co/xOxe3LdL70", "in_reply_to_screen_name": null, "retweet_count": 6216, "favorite_count": 11357, "source": "Twitter Web Client", "id_str": "763540143034609667", "is_retweet": false}, {"created_at": "Tue Sep 13 14:19:41 +0000 2016", "text": "7 questions we have about the Trump Foundation (and how Donald used it to stop investigations into his fraud): https://t.co/3YdytDZDek", "in_reply_to_screen_name": null, "retweet_count": 3230, "favorite_count": 4724, "source": "TweetDeck", "id_str": "775700481825992704", "is_retweet": false}, {"created_at": "Wed Feb 10 02:23:48 +0000 2016", "text": "\u201cYou\u2019re the reason we\u2019re here. You\u2019re the reason we\u2019re going to win this nomination and then win this election.\u201d \u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1473, "source": "TweetDeck", "id_str": "697244546648907781", "is_retweet": false}, {"created_at": "Mon Jul 25 15:57:49 +0000 2016", "text": "\"We are not going to privatize the V.A., we\u2019re going to reform it.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 657, "favorite_count": 2545, "source": "TweetDeck", "id_str": "757605786847703040", "is_retweet": false}, {"created_at": "Mon Jun 13 17:29:59 +0000 2016", "text": "Background checks and an assault weapons ban might not stop every attack\u2014but they'll stop some, and save lives. We need to fight for them.", "in_reply_to_screen_name": null, "retweet_count": 3665, "favorite_count": 9716, "source": "TweetDeck", "id_str": "742408690985226241", "is_retweet": false}, {"created_at": "Fri Oct 07 18:40:32 +0000 2016", "text": "RT @denveropinion: ENDORSEMENT: The Denver Post endorses Hillary Clinton for president - it's an easy call.\nhttps://t.co/1RJAwV78CZ https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 3285, "favorite_count": 0, "source": "TweetDeck", "id_str": "784463435379642368", "is_retweet": true}, {"created_at": "Tue Jun 21 23:01:50 +0000 2016", "text": "\u201cA proven leader who shares our values.\" \u2014@AFLCIO\n\nWhy labor unions across industries are backing Hillary: https://t.co/y07F7uvqv3", "in_reply_to_screen_name": null, "retweet_count": 1058, "favorite_count": 2611, "source": "TweetDeck", "id_str": "745391304683593732", "is_retweet": false}, {"created_at": "Tue Mar 01 11:05:55 +0000 2016", "text": "If you live in AL, AR, CO, GA, MA, MN, OK, TN, TX, VA, or VT, confirm your polling place: https://t.co/J9oeqBonzX https://t.co/W8ah8QBGnG", "in_reply_to_screen_name": null, "retweet_count": 2217, "favorite_count": 3047, "source": "TweetDeck", "id_str": "704623697773068288", "is_retweet": false}, {"created_at": "Thu Jun 16 02:45:27 +0000 2016", "text": "Belgium: Donald Trump's favorite \"city.\"\nhttps://t.co/9ASLMhAbiF", "in_reply_to_screen_name": null, "retweet_count": 7507, "favorite_count": 12793, "source": "Twitter Web Client", "id_str": "743273251036553217", "is_retweet": false}, {"created_at": "Tue Oct 04 18:17:43 +0000 2016", "text": "White people need to empathize and understand what it\u2019s like for black parents to worry about their kids' safety. https://t.co/Qw8r6Aa6C7", "in_reply_to_screen_name": null, "retweet_count": 2568, "favorite_count": 6463, "source": "TweetDeck", "id_str": "783370529675837441", "is_retweet": false}, {"created_at": "Thu Oct 27 19:04:23 +0000 2016", "text": "\"We want someone who is a unifying force in this country, who sees our differences not as a threat, but as as blessing.\" \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 617, "favorite_count": 1363, "source": "TweetDeck", "id_str": "791717196338720769", "is_retweet": false}, {"created_at": "Thu Feb 04 17:34:59 +0000 2016", "text": "As president, I would put an end to drug companies holding families hostage for profit. https://t.co/AjDUArwSxm -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 441, "favorite_count": 1043, "source": "TweetDeck", "id_str": "695299526664548353", "is_retweet": false}, {"created_at": "Tue Jan 19 02:09:44 +0000 2016", "text": "\u201cDo you think that when you\u2019re president, you\u2019ll be paid as much as a man?\u201d\nhttps://t.co/ZY91UT3BCU", "in_reply_to_screen_name": null, "retweet_count": 1758, "favorite_count": 3818, "source": "Twitter Web Client", "id_str": "689268472006586368", "is_retweet": false}, {"created_at": "Sun Aug 07 17:27:20 +0000 2016", "text": "RT @HillaryforVA: In honor of our Weekend of Action, read why Jasmine Smalls (@ajazzyworld) is a proud member of Team #VirWINia. https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 0, "source": "TweetDeck", "id_str": "762339357151924225", "is_retweet": true}, {"created_at": "Mon Oct 31 20:33:16 +0000 2016", "text": "A guide to help you make your choice for president. https://t.co/QzK7XZYmJW", "in_reply_to_screen_name": null, "retweet_count": 4411, "favorite_count": 6789, "source": "TweetDeck", "id_str": "793189117005860864", "is_retweet": false}, {"created_at": "Tue Jun 21 19:28:18 +0000 2016", "text": ".@realDonaldTrump has written a lot of books about business, but they all seem to end at Chapter 11.\nhttps://t.co/LU8aCjFm2J", "in_reply_to_screen_name": null, "retweet_count": 4472, "favorite_count": 9795, "source": "Twitter Web Client", "id_str": "745337568615555073", "is_retweet": false}, {"created_at": "Sun Sep 25 18:09:38 +0000 2016", "text": "7 ways Hillary's policies would help you in your daily life: https://t.co/f7oDXlVyx6", "in_reply_to_screen_name": null, "retweet_count": 1531, "favorite_count": 3066, "source": "TweetDeck", "id_str": "780107005793071104", "is_retweet": false}, {"created_at": "Mon Jun 27 15:06:33 +0000 2016", "text": "Let\u2019s make sure that Wall Street and the wealthy pay their fair share of taxes.\n\nLet\u2019s put our families first.", "in_reply_to_screen_name": null, "retweet_count": 753, "favorite_count": 2803, "source": "TweetDeck", "id_str": "747446023136677888", "is_retweet": false}, {"created_at": "Tue Jul 26 21:32:05 +0000 2016", "text": "RT @sjbxtr: The tears are very real. Now when I tell my daughter she can be what she wants (even president) I'm not completely full of it.#\u2026", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 0, "source": "TweetDeck", "id_str": "758052292247552000", "is_retweet": true}, {"created_at": "Wed Feb 10 19:42:58 +0000 2016", "text": "Glowing with pride in Columbia, South Carolina. https://t.co/okVvaglDzz", "in_reply_to_screen_name": null, "retweet_count": 770, "favorite_count": 2211, "source": "TweetDeck", "id_str": "697506062161879040", "is_retweet": false}, {"created_at": "Sat Jun 11 23:53:06 +0000 2016", "text": "During a decade when other casinos in Atlantic City thrived, Trump's posted huge losses: https://t.co/pVE3gSW293 https://t.co/UXY1k3HBbp", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1051, "favorite_count": 1981, "source": "Twitter Web Client", "id_str": "741780329606717440", "is_retweet": false}, {"created_at": "Thu Apr 21 20:08:37 +0000 2016", "text": "A few bad actors supply the vast majority of guns used in crimes. We need to stop them. https://t.co/fLUBDiGFQ6 https://t.co/bFNQ4LeGcn", "in_reply_to_screen_name": null, "retweet_count": 853, "favorite_count": 1630, "source": "TweetDeck", "id_str": "723242052595638272", "is_retweet": false}, {"created_at": "Tue Jul 26 03:17:02 +0000 2016", "text": "\"Donald Trump? Well, like most Republicans, he chooses to reject science. He believes that climate change is a 'hoax.'\u201d \u2014@BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 2645, "favorite_count": 8384, "source": "TweetDeck", "id_str": "757776714273546241", "is_retweet": false}, {"created_at": "Sat Mar 19 15:00:29 +0000 2016", "text": "\u201cShe is one of the most experienced people to ever run for president.\u201d \u2014@azcentral https://t.co/cgaD8kpLV1", "in_reply_to_screen_name": null, "retweet_count": 1645, "favorite_count": 4088, "source": "Twitter Web Client", "id_str": "711205708776214528", "is_retweet": false}, {"created_at": "Sat Nov 05 20:17:46 +0000 2016", "text": "RT @nowthisnews: Jay Z says Donald Trump can't be our president because he divides us https://t.co/7WsGruabQv", "in_reply_to_screen_name": null, "retweet_count": 8248, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "794997153945022465", "is_retweet": true}, {"created_at": "Thu Oct 20 03:21:13 +0000 2016", "text": "RT @BresPolitico: Clinton easily won this debate. She won all 3 debates. I'm not sure Trump ever understood the nature/goal of these debate\u2026", "in_reply_to_screen_name": null, "retweet_count": 4248, "favorite_count": 0, "source": "TweetDeck", "id_str": "788943124030754817", "is_retweet": true}, {"created_at": "Sun Jun 12 13:20:17 +0000 2016", "text": "Woke up to hear the devastating news from FL. As we wait for more information, my thoughts are with those affected by this horrific act. -H", "in_reply_to_screen_name": null, "retweet_count": 11809, "favorite_count": 35153, "source": "TweetDeck", "id_str": "741983463721553920", "is_retweet": false}, {"created_at": "Thu Feb 11 22:37:02 +0000 2016", "text": "Absolutely right: We should provide counsel for children seeking asylum. Thanks, @SenatorReid. https://t.co/7hvg7d0fdi -H", "in_reply_to_screen_name": null, "retweet_count": 390, "favorite_count": 840, "source": "TweetDeck", "id_str": "697912251735482369", "is_retweet": false}, {"created_at": "Sun May 01 18:52:29 +0000 2016", "text": "@potus Nice job last night. Aunt Hillary approves. #WHCD -H", "in_reply_to_screen_name": "POTUS44", "retweet_count": 2985, "favorite_count": 7440, "source": "Twitter for iPhone", "id_str": "726846774250471425", "is_retweet": false}, {"created_at": "Mon May 02 20:00:37 +0000 2016", "text": "When we stand together against the other side's hateful words, we all rise.\nhttps://t.co/UagcfYANnR", "in_reply_to_screen_name": null, "retweet_count": 1248, "favorite_count": 2673, "source": "Twitter Web Client", "id_str": "727226308330029061", "is_retweet": false}, {"created_at": "Wed Mar 16 01:03:54 +0000 2016", "text": "\"Making differences in people\u2019s lives comes first because Americans everywhere are hungry for solutions.\" \u2014Hillary in FL", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 2249, "source": "TweetDeck", "id_str": "709908012329275392", "is_retweet": false}, {"created_at": "Thu Apr 07 22:38:50 +0000 2016", "text": "Agree? Get your free sticker: https://t.co/OMmnXNFQDy", "in_reply_to_screen_name": null, "retweet_count": 633, "favorite_count": 1655, "source": "TweetDeck", "id_str": "718206428427776000", "is_retweet": false}, {"created_at": "Wed Jul 27 23:44:05 +0000 2016", "text": "\u201cFrom her first day in office, President Hillary Clinton will do what\u2019s needed to combat climate change.\u201d \u2014@JerryBrownGov #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 696, "favorite_count": 2664, "source": "TweetDeck", "id_str": "758447901634863104", "is_retweet": false}, {"created_at": "Sat Nov 05 03:12:30 +0000 2016", "text": "\"I'm with her!\" \u2014@Beyonce https://t.co/RGabD4XXQT", "in_reply_to_screen_name": null, "retweet_count": 26236, "favorite_count": 73811, "source": "TweetDeck", "id_str": "794739137098223621", "is_retweet": false}, {"created_at": "Fri Jul 08 22:22:18 +0000 2016", "text": "\"In my first budget, I'll commit $1 billion to find and fund the best training programs [and] support new research.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1064, "favorite_count": 3519, "source": "TweetDeck", "id_str": "751541948654100481", "is_retweet": false}, {"created_at": "Mon Dec 26 21:37:34 +0000 2016", "text": "The holidays are a time to be thankful for our blessings. Let's rejoice in this season &amp; look forward with renewed hope &amp; determination. -H", "in_reply_to_screen_name": null, "retweet_count": 21459, "favorite_count": 122726, "source": "Twitter for iPhone", "id_str": "813499015753039872", "is_retweet": false}, {"created_at": "Wed Jan 06 21:24:50 +0000 2016", "text": "This is the only comprehensive plan from a presidential candidate to support families with autism: https://t.co/39hodpzw9n", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 784, "source": "TweetDeck", "id_str": "684848121466228736", "is_retweet": false}, {"created_at": "Fri Sep 09 21:10:47 +0000 2016", "text": "Appalling behavior from Wells Fargo. This is exactly why we need a strong @CFPB\u2014and can't let Trump dismantle it. https://t.co/tTA2jz7unf", "in_reply_to_screen_name": null, "retweet_count": 1789, "favorite_count": 4620, "source": "TweetDeck", "id_str": "774354388211081216", "is_retweet": false}, {"created_at": "Sun Jun 12 13:52:37 +0000 2016", "text": "Despert\u00e9 con la devastadora noticia de FL. Mientras esperamos m\u00e1s informaci\u00f3n,mis pensamientos est\u00e1n con los afectados de este horrible acto", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2454, "favorite_count": 4444, "source": "TweetDeck", "id_str": "741991598871961600", "is_retweet": false}, {"created_at": "Wed Jun 22 18:43:37 +0000 2016", "text": "Every American willing to work hard should be able to find a job that pays enough to support a family.", "in_reply_to_screen_name": null, "retweet_count": 821, "favorite_count": 2701, "source": "TweetDeck", "id_str": "745688712135254017", "is_retweet": false}, {"created_at": "Wed Jul 27 02:14:21 +0000 2016", "text": "\"I was so impressed and surprised that, whether you believe it or not, I was momentarily speechless.\u201d  \u2014@BillClinton on meeting Hillary", "in_reply_to_screen_name": null, "retweet_count": 1102, "favorite_count": 4608, "source": "TweetDeck", "id_str": "758123328905371648", "is_retweet": false}, {"created_at": "Wed Aug 31 23:22:27 +0000 2016", "text": "\"It turns out Trump didn't just choke, he got beat in the room and lied about it.\" \u2014@JohnPodesta https://t.co/YgGN3HG7Hx", "in_reply_to_screen_name": null, "retweet_count": 5412, "favorite_count": 10313, "source": "TweetDeck", "id_str": "771126030631403520", "is_retweet": false}, {"created_at": "Tue Jun 07 00:11:45 +0000 2016", "text": "Trump is intensifying his bigoted attacks on Judge Curiel's Latino heritage\u2014and belittling his staff in the process: https://t.co/EHtmg53jyI", "in_reply_to_screen_name": null, "retweet_count": 1224, "favorite_count": 1993, "source": "TweetDeck", "id_str": "739973084040531968", "is_retweet": false}, {"created_at": "Sat Jan 16 21:27:51 +0000 2016", "text": "Hillary picked a @nytimes reader question out of a hat. Watch her answer \u2192 https://t.co/S9YkHQCMRG", "in_reply_to_screen_name": null, "retweet_count": 176, "favorite_count": 417, "source": "TweetDeck", "id_str": "688472759702302720", "is_retweet": false}, {"created_at": "Fri Feb 26 03:15:15 +0000 2016", "text": "We live in a world with serious foreign policy challenges. We need serious leadership. #GOPdebate https://t.co/dKnVM7wB85", "in_reply_to_screen_name": null, "retweet_count": 2674, "favorite_count": 5558, "source": "TweetDeck", "id_str": "703055697454436352", "is_retweet": false}, {"created_at": "Sat Sep 10 20:09:27 +0000 2016", "text": "RT @USNewsOpinion: If Donald Trump wins, kids lose. https://t.co/TvQS8jWqYy", "in_reply_to_screen_name": null, "retweet_count": 1249, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "774701341084151808", "is_retweet": true}, {"created_at": "Sat Sep 17 21:12:52 +0000 2016", "text": "Trump went to Flint to draw attention to the city's lead poisoning crisis\u2014but he just made a spectacle of himself. https://t.co/Dw4KoVgrQ3", "in_reply_to_screen_name": null, "retweet_count": 2325, "favorite_count": 5512, "source": "TweetDeck", "id_str": "777254015734321152", "is_retweet": false}, {"created_at": "Sat Sep 17 15:15:55 +0000 2016", "text": "Take it from @FLOTUS: This election is too important to sit out. Register to vote: https://t.co/tTgeqy51PU https://t.co/NblU3Tth7T", "in_reply_to_screen_name": null, "retweet_count": 4103, "favorite_count": 8938, "source": "Twitter Web Client", "id_str": "777164184505114624", "is_retweet": false}, {"created_at": "Thu Oct 27 12:21:41 +0000 2016", "text": "We're almost to the finish line, and you can help Hillary get there. Early vote today: https://t.co/tTgeqxNqYm https://t.co/blFBq5GjDT", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 4934, "source": "TweetDeck", "id_str": "791615853779443712", "is_retweet": false}, {"created_at": "Sun Jun 26 00:02:48 +0000 2016", "text": "We're going to keep fighting for equality, at home and around the world.\nhttps://t.co/4JjtWshXRI", "in_reply_to_screen_name": null, "retweet_count": 1809, "favorite_count": 5083, "source": "Twitter Web Client", "id_str": "746856200113815552", "is_retweet": false}, {"created_at": "Wed Jun 08 12:50:13 +0000 2016", "text": "Thank you, California! https://t.co/EgtQpT6JZT", "in_reply_to_screen_name": null, "retweet_count": 2898, "favorite_count": 10871, "source": "TweetDeck", "id_str": "740526342974889988", "is_retweet": false}, {"created_at": "Fri Jun 10 04:20:58 +0000 2016", "text": "Proud to have the support of @SenWarren\u2014a woman who is Trump's exact opposite: honest, decent, and deeply concerned for working families. -H", "in_reply_to_screen_name": null, "retweet_count": 6168, "favorite_count": 22904, "source": "Twitter for iPhone", "id_str": "741122964813447168", "is_retweet": false}, {"created_at": "Sun Oct 30 18:19:25 +0000 2016", "text": "\"LGBT kids don\u2019t need to be cured of anything. They just need to be accepted and loved and embraced.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 16810, "favorite_count": 33563, "source": "TweetDeck", "id_str": "792793044525481989", "is_retweet": false}, {"created_at": "Mon Oct 24 17:32:53 +0000 2016", "text": "\"Get this Donald: nasty women are smart, nasty women are tough, and nasty women vote.\u201d \u2014@ElizabethForMA: https://t.co/uTXX68HXhY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3394, "favorite_count": 6720, "source": "TweetDeck", "id_str": "790607004968611840", "is_retweet": false}, {"created_at": "Sat Mar 12 17:43:01 +0000 2016", "text": "The ugly, divisive rhetoric we're hearing from Donald Trump\u2014the encouragement of violence and aggression\u2014is not only wrong, it\u2019s dangerous.", "in_reply_to_screen_name": null, "retweet_count": 3133, "favorite_count": 5489, "source": "TweetDeck", "id_str": "708709898461249537", "is_retweet": false}, {"created_at": "Sun Oct 23 15:05:10 +0000 2016", "text": "Did you know Hillary's college plan makes it easier for student-parents to afford school? Get the details: https://t.co/duxJbIPwCy", "in_reply_to_screen_name": null, "retweet_count": 1889, "favorite_count": 5511, "source": "TweetDeck", "id_str": "790207444941205504", "is_retweet": false}, {"created_at": "Tue Jan 26 03:52:55 +0000 2016", "text": "Cada persona en este pa\u00eds merece ser tratada con respeto. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 491, "favorite_count": 945, "source": "TweetDeck", "id_str": "691831155751002114", "is_retweet": false}, {"created_at": "Tue Mar 08 18:26:46 +0000 2016", "text": "No child should live in fear of losing her parents to deportation. We will keep families together. https://t.co/TM8pPbGr5z", "in_reply_to_screen_name": null, "retweet_count": 1424, "favorite_count": 2846, "source": "Twitter Web Client", "id_str": "707271356275146752", "is_retweet": false}, {"created_at": "Tue Nov 08 17:23:42 +0000 2016", "text": "RT @VP: Today is Election Day in America. It\u2019s time to get out and vote. https://t.co/a0MJUF4QIy", "in_reply_to_screen_name": null, "retweet_count": 3782, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "796040510997676032", "is_retweet": true}, {"created_at": "Thu Jul 14 15:42:45 +0000 2016", "text": "\"Latinos are 17% of our country\u2019s population, but you hold only 2% of its wealth. There\u2019s a disconnect here.\" \u2014Hillary at @LULAC", "in_reply_to_screen_name": null, "retweet_count": 662, "favorite_count": 1649, "source": "TweetDeck", "id_str": "753615727106596865", "is_retweet": false}, {"created_at": "Wed Mar 09 01:09:18 +0000 2016", "text": "Thank you, Mississippi! https://t.co/xzO5DJhoAV", "in_reply_to_screen_name": null, "retweet_count": 1650, "favorite_count": 4331, "source": "TweetDeck", "id_str": "707372658397155330", "is_retweet": false}, {"created_at": "Thu Jul 14 16:32:51 +0000 2016", "text": "One year in, the #IranDeal has put a lid on Iran\u2019s nuclear program. Strong, principled diplomacy can work. Effective enforcement is key. -H", "in_reply_to_screen_name": null, "retweet_count": 1058, "favorite_count": 3381, "source": "TweetDeck", "id_str": "753628337206165504", "is_retweet": false}, {"created_at": "Sun Nov 06 20:55:04 +0000 2016", "text": "Loved this moment from last night. Thanks to @KatyPerry, @JenCarlosMusic, and everyone out on the trail helping to\u2026 https://t.co/jSsMzyyKyX", "in_reply_to_screen_name": null, "retweet_count": 3992, "favorite_count": 14651, "source": "Twitter Web Client", "id_str": "795368930332315648", "is_retweet": false}, {"created_at": "Tue Nov 08 02:17:56 +0000 2016", "text": "\"I believe with all my heart that our best days are still ahead of us, if we reach for them together.\u201d \u2014Hillary in Philly", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1355, "favorite_count": 3401, "source": "TweetDeck", "id_str": "795812567881019392", "is_retweet": false}, {"created_at": "Mon Jul 25 15:47:32 +0000 2016", "text": "Our troops strive to conduct themselves with honor.\n\nThey deserve a Commander-in-Chief who will never order them to commit war crimes.", "in_reply_to_screen_name": null, "retweet_count": 1381, "favorite_count": 4682, "source": "TweetDeck", "id_str": "757603199410896897", "is_retweet": false}, {"created_at": "Wed Jul 27 16:34:54 +0000 2016", "text": "RT @TheBriefing2016: A few thoughts from @FLOTUS that seem particularly relevant right now.  https://t.co/FgRTjWYUjl", "in_reply_to_screen_name": null, "retweet_count": 764, "favorite_count": 0, "source": "TweetDeck", "id_str": "758339891314974722", "is_retweet": true}, {"created_at": "Mon Sep 12 15:46:33 +0000 2016", "text": "RT @TIME: Senator Tim Kaine: \"Everyone deserves affordable higher education\" https://t.co/unC6d07poy", "in_reply_to_screen_name": null, "retweet_count": 818, "favorite_count": 0, "source": "TweetDeck", "id_str": "775359954349879296", "is_retweet": true}, {"created_at": "Wed Sep 28 18:34:16 +0000 2016", "text": "RT @washingtonpost: \"I sold Trump $100,000 worth of pianos. Then he stiffed me.\" https://t.co/cKCmIsOPUA via @PostEverything", "in_reply_to_screen_name": null, "retweet_count": 2391, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "781200369258995712", "is_retweet": true}, {"created_at": "Fri Jun 10 16:02:52 +0000 2016", "text": ".@SenWarren to @Maddow: Donald Trump cannot be the one who leads the United States of America.\nhttps://t.co/qQ2gtzhxmF", "in_reply_to_screen_name": null, "retweet_count": 1949, "favorite_count": 5213, "source": "Twitter Web Client", "id_str": "741299600359890944", "is_retweet": false}, {"created_at": "Mon Oct 10 12:16:46 +0000 2016", "text": "RT @nytopinion: He lied about a sex tape. He lied about tax rates. He lied about ISIS. https://t.co/2e6gMnR2dL", "in_reply_to_screen_name": null, "retweet_count": 5255, "favorite_count": 0, "source": "Twitter for iPhone", "id_str": "785454020517322753", "is_retweet": true}, {"created_at": "Wed May 18 22:11:54 +0000 2016", "text": "Los trabajadores no han recibido un aumento en a\u00f1os\u2014Hillary tiene un plan para subir los salarios. https://t.co/ODUmS9rO2p", "in_reply_to_screen_name": null, "retweet_count": 368, "favorite_count": 800, "source": "TweetDeck", "id_str": "733057553001775104", "is_retweet": false}, {"created_at": "Tue Jul 26 02:16:01 +0000 2016", "text": "\"In this election, I\u2019m with her!\" \u2014@FLOTUS on Hillary #DemsInPhilly", "in_reply_to_screen_name": null, "retweet_count": 1924, "favorite_count": 6248, "source": "TweetDeck", "id_str": "757761359035699200", "is_retweet": false}, {"created_at": "Sun Oct 09 16:45:02 +0000 2016", "text": "RT @UncleRUSH: Those of us who are compassionate need to put someone in office who will take care of those of us who are less fortunate. #I\u2026", "in_reply_to_screen_name": null, "retweet_count": 3643, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785159144504426496", "is_retweet": true}, {"created_at": "Fri Aug 05 18:29:22 +0000 2016", "text": "Stronger Together comes out in Sept\u2014a book on Hillary's policy plans and vision for America: https://t.co/okQWnu725t https://t.co/lzyuvRstpt", "in_reply_to_screen_name": null, "retweet_count": 2051, "favorite_count": 5778, "source": "TweetDeck", "id_str": "761630188811804672", "is_retweet": false}, {"created_at": "Fri Jul 08 22:31:26 +0000 2016", "text": "\"When the 24-hour news cycle moves on, I won\u2019t.\u201d \u2014Hillary on preventing gun violence and addressing racial injustice", "in_reply_to_screen_name": null, "retweet_count": 2434, "favorite_count": 7375, "source": "TweetDeck", "id_str": "751544249716445184", "is_retweet": false}, {"created_at": "Fri Feb 26 20:01:57 +0000 2016", "text": "\"She cares. She tries. She perseveres.\" @jonfavs on supporting Hillary in 2016: https://t.co/uW2g9VJuuY", "in_reply_to_screen_name": null, "retweet_count": 590, "favorite_count": 1291, "source": "TweetDeck", "id_str": "703309045076271104", "is_retweet": false}, {"created_at": "Tue Oct 04 23:36:15 +0000 2016", "text": "Number of times Trump has tweeted at @Rosie: 65\n\nNumber of times Trump has tweeted in support of Mike Pence, his running mate: 21 #VPDebate", "in_reply_to_screen_name": null, "retweet_count": 10734, "favorite_count": 25931, "source": "TweetDeck", "id_str": "783450692879081472", "is_retweet": false}, {"created_at": "Thu Oct 20 01:39:55 +0000 2016", "text": "Terrifying. #DebateNight https://t.co/f14hmRUkkr", "in_reply_to_screen_name": null, "retweet_count": 2357, "favorite_count": 5343, "source": "TweetDeck", "id_str": "788917632732893185", "is_retweet": false}, {"created_at": "Fri Mar 18 19:36:08 +0000 2016", "text": "I'm told the number just ticked over: As of a few minutes ago, 1,000,000 people have pitched in to be a part of this campaign. Thank you. -H", "in_reply_to_screen_name": null, "retweet_count": 1941, "favorite_count": 7298, "source": "TweetDeck", "id_str": "710912693885128704", "is_retweet": false}, {"created_at": "Wed Oct 26 16:56:54 +0000 2016", "text": "RT @timkaine: Happy birthday, Hillary. I hope this year is one for the history books. https://t.co/UndDdFb1xh", "in_reply_to_screen_name": null, "retweet_count": 4407, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "791322724715102208", "is_retweet": true}, {"created_at": "Thu Oct 20 20:31:14 +0000 2016", "text": "\"She's got the temperament, the knowledge, the steady hand to be the next Commander-in-Chief.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 505, "favorite_count": 1408, "source": "TweetDeck", "id_str": "789202337919275008", "is_retweet": false}, {"created_at": "Fri May 13 00:01:41 +0000 2016", "text": "Nurses care for our families like their own. It's time we returned the favor. #InternationalNursesDay https://t.co/dqC6cqTiHg", "in_reply_to_screen_name": null, "retweet_count": 1959, "favorite_count": 4603, "source": "TweetDeck", "id_str": "730910853604605952", "is_retweet": false}, {"created_at": "Mon Aug 29 15:52:21 +0000 2016", "text": "RT @emilyslist: Back when she was New York's senator, @HillaryClinton fought political attacks on access to emergency contraception: https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 774, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "770287986122588160", "is_retweet": true}, {"created_at": "Fri May 27 17:31:00 +0000 2016", "text": "$25 billion could pay for:\n\n1,500 new schools.\nClean energy to power 5 million homes.\n\nor...\n\nTrump's wall: https://t.co/GmVfH0zR1D", "in_reply_to_screen_name": null, "retweet_count": 1681, "favorite_count": 2950, "source": "TweetDeck", "id_str": "736248351939776521", "is_retweet": false}, {"created_at": "Wed Jan 06 04:17:34 +0000 2016", "text": "\u201cDare to compete.\u201d Hillary tells @hardball_chris about the athlete who inspired her to run for office.\nhttps://t.co/ucGreO64xj", "in_reply_to_screen_name": null, "retweet_count": 473, "favorite_count": 1063, "source": "Twitter Web Client", "id_str": "684589598828134400", "is_retweet": false}, {"created_at": "Sun Aug 28 21:09:02 +0000 2016", "text": "\"The right to vote is still the most powerful nonviolent tool of transformation we have.\" \u2014@RepJohnLewis https://t.co/l0cGUBNlOK", "in_reply_to_screen_name": null, "retweet_count": 2466, "favorite_count": 6288, "source": "Twitter for iPhone", "id_str": "770005293757505536", "is_retweet": false}, {"created_at": "Thu Aug 11 18:13:49 +0000 2016", "text": "Trump would give trillions in tax cuts to big corporations, millionaires, and Wall Street money managers. https://t.co/tymag0QkLx", "in_reply_to_screen_name": null, "retweet_count": 927, "favorite_count": 2070, "source": "TweetDeck", "id_str": "763800602837123072", "is_retweet": false}, {"created_at": "Fri Jul 22 21:51:39 +0000 2016", "text": "\u201cI never thought I\u2019d say these words, but Ted Cruz was right...in this election, do the right thing and vote your conscience.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2442, "favorite_count": 7936, "source": "TweetDeck", "id_str": "756607664763834368", "is_retweet": false}, {"created_at": "Wed Sep 14 20:13:20 +0000 2016", "text": "Donald Trump's foundation: paying off would-be opponents, stiffing actual charities. https://t.co/y0bY1efHwL", "in_reply_to_screen_name": null, "retweet_count": 2117, "favorite_count": 3553, "source": "TweetDeck", "id_str": "776151871127949312", "is_retweet": false}, {"created_at": "Thu Sep 15 15:26:40 +0000 2016", "text": "Let's mark the start of Hispanic Heritage Month by celebrating our country's rich diversity and standing up to bigotry and intolerance. -H", "in_reply_to_screen_name": null, "retweet_count": 3188, "favorite_count": 8320, "source": "TweetDeck", "id_str": "776442117048700928", "is_retweet": false}, {"created_at": "Mon Jul 25 16:04:31 +0000 2016", "text": "\u201cEveryone who has served deserves our thanks...and you deserve a country and a president and Commander-in-Chief who honors your service.\"", "in_reply_to_screen_name": null, "retweet_count": 996, "favorite_count": 3868, "source": "TweetDeck", "id_str": "757607471896723457", "is_retweet": false}, {"created_at": "Fri Jul 29 16:50:39 +0000 2016", "text": "RT @timkaine: We share this basic belief: Do all the good you can and serve one another. That's what this election is about. https://t.co/5\u2026", "in_reply_to_screen_name": null, "retweet_count": 4611, "favorite_count": 0, "source": "TweetDeck", "id_str": "759068632777428992", "is_retweet": true}, {"created_at": "Thu Sep 15 19:54:36 +0000 2016", "text": "\u201cI have this old-fashioned notion that if you\u2019re running for president, you should say what you\u2019re going to do.\u201d https://t.co/IOJAboxXfh", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 680, "favorite_count": 1384, "source": "TweetDeck", "id_str": "776509544558100480", "is_retweet": false}, {"created_at": "Fri Jan 08 17:59:00 +0000 2016", "text": "It's a make-or-break moment for SCOTUS appointments\u2014we can\u2019t afford to let a GOP president decide. Hillary's op-ed: https://t.co/nOCqr1doSV", "in_reply_to_screen_name": null, "retweet_count": 359, "favorite_count": 617, "source": "TweetDeck", "id_str": "685521095953379330", "is_retweet": false}, {"created_at": "Mon Nov 07 21:18:34 +0000 2016", "text": "\u201cThe choice in this election could not be clearer...this election is basically between division and unity in our co\u2026 https://t.co/axyCv4Al3G", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1208, "favorite_count": 2810, "source": "TweetDeck", "id_str": "795737232212684800", "is_retweet": false}, {"created_at": "Tue Sep 27 01:37:26 +0000 2016", "text": "No wonder Donald Trump is hiding his tax returns. #debatenight https://t.co/gcvsadMwHJ", "in_reply_to_screen_name": null, "retweet_count": 8438, "favorite_count": 15174, "source": "TweetDeck", "id_str": "780582086231126016", "is_retweet": false}, {"created_at": "Fri Jul 29 03:27:51 +0000 2016", "text": "\"Yes, the world is watching what we do.\nYes, America's destiny is ours to choose.\nSo let's be stronger together my fellow Americans!\"", "in_reply_to_screen_name": null, "retweet_count": 4181, "favorite_count": 13717, "source": "TweetDeck", "id_str": "758866600330039298", "is_retweet": false}, {"created_at": "Mon Sep 26 15:21:38 +0000 2016", "text": "RT @timkaine: This job takes maturity, compassion, and wisdom. Only one candidate has what it takes. #DebateNight https://t.co/TAA1qZUdtq", "in_reply_to_screen_name": null, "retweet_count": 2957, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "780427115325980672", "is_retweet": true}, {"created_at": "Sun Sep 25 22:11:42 +0000 2016", "text": "Let's send Donald Trump\u2014and the world\u2014a clear message. https://t.co/tTgeqxNqYm #LoveTrumpsHate https://t.co/0VI8zmXgZE", "in_reply_to_screen_name": null, "retweet_count": 3839, "favorite_count": 8473, "source": "TweetDeck", "id_str": "780167921746210816", "is_retweet": false}, {"created_at": "Wed Mar 30 22:42:44 +0000 2016", "text": "Remember: If you make abortion a crime, you make women who seek abortions criminals. You put one in three women at risk.", "in_reply_to_screen_name": null, "retweet_count": 2799, "favorite_count": 6078, "source": "TweetDeck", "id_str": "715308306827460608", "is_retweet": false}, {"created_at": "Tue Sep 06 18:55:06 +0000 2016", "text": "Right now, too many Americans are being held back by student debt.\n\nWe\u2019ve got to fix that: https://t.co/ds1LK4CPxh", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 508, "favorite_count": 1084, "source": "TweetDeck", "id_str": "773233077065768960", "is_retweet": false}, {"created_at": "Tue Aug 16 17:49:20 +0000 2016", "text": "Be a part of this: Get registered to vote, and ask everyone you know to register, too. https://t.co/tTgeqxNqYm", "in_reply_to_screen_name": null, "retweet_count": 1687, "favorite_count": 3159, "source": "TweetDeck", "id_str": "765606382271918080", "is_retweet": false}, {"created_at": "Tue Oct 11 19:53:40 +0000 2016", "text": "RT @johnpodesta: Hillary won\u2019t just meet the goals we set in Paris\u2014she\u2019ll aim to exceed them &amp; cut emissions as much as 30% by 2025. https:\u2026", "in_reply_to_screen_name": null, "retweet_count": 991, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "785931390755876864", "is_retweet": true}, {"created_at": "Fri Oct 28 22:24:17 +0000 2016", "text": "Trump has contributed $0 for our military, $0 for Pell Grants to help people afford college, $0 for our highways. https://t.co/dRqI1W6IXI", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2642, "favorite_count": 4571, "source": "TweetDeck", "id_str": "792129890288017409", "is_retweet": false}, {"created_at": "Thu Oct 20 01:21:42 +0000 2016", "text": "Trump doesn't know what he's talking about when it comes to women's health. He shouldn't be making the decisions. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 9439, "favorite_count": 24034, "source": "TweetDeck", "id_str": "788913047817576448", "is_retweet": false}, {"created_at": "Wed May 18 14:54:33 +0000 2016", "text": "Let's make it easier to raise a family in America. https://t.co/aoTlReHn6M https://t.co/C1gPS8uITf", "in_reply_to_screen_name": null, "retweet_count": 1013, "favorite_count": 2069, "source": "TweetDeck", "id_str": "732947488685051905", "is_retweet": false}, {"created_at": "Fri Jul 29 02:40:41 +0000 2016", "text": "FDR came up with the perfect rebuke to Donald Trump more than 80 years ago:\n\n\u201cThe only thing we have to fear is fear itself.\u201d", "in_reply_to_screen_name": null, "retweet_count": 3269, "favorite_count": 7234, "source": "TweetDeck", "id_str": "758854732622417921", "is_retweet": false}, {"created_at": "Tue Jun 14 19:09:48 +0000 2016", "text": "An attack on LGBT Americans is an attack on all Americans.\nhttps://t.co/q4Z3kWOcPR", "in_reply_to_screen_name": null, "retweet_count": 2130, "favorite_count": 5824, "source": "Twitter Web Client", "id_str": "742796195475529728", "is_retweet": false}, {"created_at": "Thu Jul 28 01:17:49 +0000 2016", "text": "\"Hillary understands that a college loan is about a lot more than getting a qualified child an education.\" \u2014@JoeBiden", "in_reply_to_screen_name": null, "retweet_count": 629, "favorite_count": 2357, "source": "TweetDeck", "id_str": "758471487976185856", "is_retweet": false}, {"created_at": "Mon Sep 19 13:54:31 +0000 2016", "text": "RT @GeorgeTakei: Want to do a small part to help defeat Trump in November? RT this link and get everyone registered, and confirmed. https:/\u2026", "in_reply_to_screen_name": null, "retweet_count": 4351, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "777868477310918656", "is_retweet": true}, {"created_at": "Thu Jul 14 16:05:32 +0000 2016", "text": "\u201cWe have to move our country and ourselves\u2026toward a future that reflects the simple, timeless notion that all of us are equal.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1264, "favorite_count": 3395, "source": "TweetDeck", "id_str": "753621460195897344", "is_retweet": false}, {"created_at": "Tue Jun 07 12:05:04 +0000 2016", "text": "RT if you're ready to make history. https://t.co/1Pr9e5y5Bh", "in_reply_to_screen_name": null, "retweet_count": 13441, "favorite_count": 15287, "source": "TweetDeck", "id_str": "740152594224558080", "is_retweet": false}, {"created_at": "Wed Jun 29 17:42:09 +0000 2016", "text": "We have an obligation to protect an open internet and defend net neutrality: https://t.co/6CJVBl9j7e", "in_reply_to_screen_name": null, "retweet_count": 705, "favorite_count": 1886, "source": "TweetDeck", "id_str": "748209956076261376", "is_retweet": false}, {"created_at": "Fri Oct 14 14:47:54 +0000 2016", "text": "RT @Latina: .@Latina officially endorses @HillaryClinton. The only thing that needs to be deported is a Donald Trump presidency: https://t.\u2026", "in_reply_to_screen_name": null, "retweet_count": 2396, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786941607677423616", "is_retweet": true}, {"created_at": "Sat Jun 04 21:33:06 +0000 2016", "text": "It's time to judge Donald Trump by his words and his deeds. And they make him unfit to be President of the United States.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2020, "favorite_count": 4286, "source": "TweetDeck", "id_str": "739208381639102464", "is_retweet": false}, {"created_at": "Mon Aug 15 17:15:16 +0000 2016", "text": "No matter what Donald Trump says, America is great, and the American Dream is big enough for everyone to share in its promise.", "in_reply_to_screen_name": null, "retweet_count": 1407, "favorite_count": 4392, "source": "TweetDeck", "id_str": "765235420724625408", "is_retweet": false}, {"created_at": "Sat Oct 22 19:08:16 +0000 2016", "text": "RT @creynoldsnc: HFA response to Trump's closing argument today in Gettysburg. https://t.co/2g5Yo0u3LA", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "789906233562128388", "is_retweet": true}, {"created_at": "Sat Apr 23 14:02:22 +0000 2016", "text": "Zika has reached the U.S. and we can't wait any longer to act. Tell Congress to address this public health crisis: https://t.co/H0jvAG9rZ2", "in_reply_to_screen_name": null, "retweet_count": 930, "favorite_count": 1623, "source": "Twitter for iPhone", "id_str": "723874658555187200", "is_retweet": false}, {"created_at": "Tue Apr 05 16:12:44 +0000 2016", "text": "Wisconsin: Go vote today! Text WHERE to 47246 to find your polling place. https://t.co/8J4tedbog7", "in_reply_to_screen_name": null, "retweet_count": 782, "favorite_count": 1311, "source": "TweetDeck", "id_str": "717384487894708224", "is_retweet": false}, {"created_at": "Wed Jul 20 15:03:13 +0000 2016", "text": "\"He won me over with that Mexican rapist speech.\" \u2014Ann Coulter on Donald Trump https://t.co/GTNOhKYMA2", "in_reply_to_screen_name": null, "retweet_count": 1876, "favorite_count": 3080, "source": "TweetDeck", "id_str": "755780104781987840", "is_retweet": false}, {"created_at": "Tue Sep 27 02:35:21 +0000 2016", "text": "\"When Donald Trump spends 11 hours testifying in front of a congressional committee, he can talk to me about stamina.\" \u2014Hillary #debatenight", "in_reply_to_screen_name": null, "retweet_count": 20211, "favorite_count": 46628, "source": "TweetDeck", "id_str": "780596663345905664", "is_retweet": false}, {"created_at": "Fri Jul 29 04:00:03 +0000 2016", "text": "Let's go win this, together. https://t.co/vCKpROauyZ", "in_reply_to_screen_name": null, "retweet_count": 22338, "favorite_count": 74544, "source": "TweetDeck", "id_str": "758874703771471872", "is_retweet": false}, {"created_at": "Fri Apr 22 00:15:30 +0000 2016", "text": "\"To all the people who supported Sen. Sanders, I believe there's much more that unites us than divides us.\" \u2014Hillary https://t.co/oGJ0BwYWuI", "in_reply_to_screen_name": null, "retweet_count": 2570, "favorite_count": 6788, "source": "TweetDeck", "id_str": "723304185232547845", "is_retweet": false}, {"created_at": "Mon Nov 07 17:16:30 +0000 2016", "text": "RT @JesseRodriguez: NBC News: As of today, over 43 million votes have been cast nationwide, with nearly 20 million in 12 battleground states", "in_reply_to_screen_name": null, "retweet_count": 810, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "795676313503858689", "is_retweet": true}, {"created_at": "Fri Mar 11 03:13:42 +0000 2016", "text": "Ya es hora de movernos hacia el futuro\u2014el embargo no ha funcionado por 50 a\u00f1os. Hillary apoya la normalizaci\u00f3n de relaciones con Cuba.", "in_reply_to_screen_name": null, "retweet_count": 603, "favorite_count": 1206, "source": "TweetDeck", "id_str": "708128738999926785", "is_retweet": false}, {"created_at": "Fri Jun 03 18:40:04 +0000 2016", "text": "Hillary schooled Donald Trump on foreign policy yesterday. Miss the speech? Catch up on some of the highlights: https://t.co/KSrFV7MnfG", "in_reply_to_screen_name": null, "retweet_count": 1242, "favorite_count": 2852, "source": "TweetDeck", "id_str": "738802447934758912", "is_retweet": false}, {"created_at": "Mon Sep 19 16:56:49 +0000 2016", "text": "RT @HFA: Go to https://t.co/SvSvlg48vI and register to vote today. Register your friends. Register everyone you know.", "in_reply_to_screen_name": null, "retweet_count": 811, "favorite_count": 0, "source": "TweetDeck", "id_str": "777914352884146176", "is_retweet": true}, {"created_at": "Fri Oct 14 15:37:56 +0000 2016", "text": "\u201cShe's got the knowledge and experience and the temperament to be the next Commander-in-Chief.\u201d \u2014@POTUS on Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 593, "favorite_count": 1466, "source": "TweetDeck", "id_str": "786954200584454144", "is_retweet": false}, {"created_at": "Fri Jul 29 02:34:16 +0000 2016", "text": "\"We heard from\u2026@JoeBiden. He spoke from his big heart about our party\u2019s commitment to working people.\" \u2014Hillary https://t.co/PHHCeD7YYh", "in_reply_to_screen_name": null, "retweet_count": 844, "favorite_count": 3370, "source": "TweetDeck", "id_str": "758853117613965317", "is_retweet": false}, {"created_at": "Fri Sep 02 01:13:10 +0000 2016", "text": "Turns out, hosting Miss Universe pageants abroad doesn't equate to diplomatic skills. https://t.co/qsra0EJnyI", "in_reply_to_screen_name": null, "retweet_count": 1790, "favorite_count": 4915, "source": "Twitter for iPhone", "id_str": "771516282151792641", "is_retweet": false}, {"created_at": "Tue Apr 12 15:59:57 +0000 2016", "text": "Women earn just $0.79 for every $1 men do. It's worse for women of color. Let's close that gap. #EqualPayDay -H\nhttps://t.co/gcz8hhV60O", "in_reply_to_screen_name": null, "retweet_count": 2327, "favorite_count": 3639, "source": "Twitter Web Client", "id_str": "719917982709784578", "is_retweet": false}, {"created_at": "Fri Jun 03 22:02:15 +0000 2016", "text": "Q: \"Saying [a judge] can't do his job because of his race\u2014is that not the definition of racism?\"\nTrump: \"No.\" https://t.co/IWNshV7XMc", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 4107, "favorite_count": 7513, "source": "Twitter for iPhone", "id_str": "738853327543341056", "is_retweet": false}, {"created_at": "Fri Apr 22 22:01:23 +0000 2016", "text": "Para dejarle un mejor futuro a nuestros ni\u00f1os, tenemos que proteger el futuro de nuestro planeta. #DiaDeLaTierra https://t.co/BUdyIdA5lz", "in_reply_to_screen_name": null, "retweet_count": 653, "favorite_count": 1427, "source": "TweetDeck", "id_str": "723632819180806145", "is_retweet": false}, {"created_at": "Wed Sep 14 16:29:37 +0000 2016", "text": "3. While refusing to release your tax returns, how will you confirm that you do not have dangerous financial ties to bad actors abroad?", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3529, "favorite_count": 5827, "source": "TweetDeck", "id_str": "776095570960248832", "is_retweet": false}, {"created_at": "Wed Sep 28 15:49:52 +0000 2016", "text": "A man who bullies and shames a woman for her weight should never become president. https://t.co/ueLuxRS6Ta", "in_reply_to_screen_name": null, "retweet_count": 8918, "favorite_count": 17894, "source": "Media Studio", "id_str": "781158993888698368", "is_retweet": false}, {"created_at": "Tue Aug 16 16:01:16 +0000 2016", "text": "You should be able to learn a skill, practice a trade, and make a good living doing it. https://t.co/vNEHs6UJmo", "in_reply_to_screen_name": null, "retweet_count": 3161, "favorite_count": 10238, "source": "TweetDeck", "id_str": "765579185582698497", "is_retweet": false}, {"created_at": "Thu Feb 25 13:56:41 +0000 2016", "text": "The South Carolina primary is almost here! Ready to stand with Hillary? Say #ImWithHer and commit to vote. https://t.co/mDLrYOTngv", "in_reply_to_screen_name": null, "retweet_count": 670, "favorite_count": 1548, "source": "TweetDeck", "id_str": "702854731723644928", "is_retweet": false}, {"created_at": "Tue Oct 11 19:39:03 +0000 2016", "text": "We've always had destructive hurricanes, but Hurricane Matthew was likely more destructive because of climate change.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 447, "favorite_count": 1246, "source": "TweetDeck", "id_str": "785927713894924288", "is_retweet": false}, {"created_at": "Thu Oct 20 01:43:11 +0000 2016", "text": ".@TheEconomist ranked Donald Trump and his economic policies as tied for 4th among the greatest risks to the world\u2026 https://t.co/NkhnShXEI2", "in_reply_to_screen_name": null, "retweet_count": 7518, "favorite_count": 10896, "source": "TweetDeck", "id_str": "788918452669014017", "is_retweet": false}, {"created_at": "Mon Jul 11 14:02:17 +0000 2016", "text": "Donald Trump says he supports our veterans, but he's taken advantage of them time and time again. https://t.co/TxvAHkn38q", "in_reply_to_screen_name": null, "retweet_count": 1256, "favorite_count": 2503, "source": "TweetDeck", "id_str": "752503279268065280", "is_retweet": false}, {"created_at": "Tue May 17 14:11:33 +0000 2016", "text": "It's Primary Day for Kentucky and Oregon. RT this if you\u2019re voting for Hillary. https://t.co/E5GyPU0GTI", "in_reply_to_screen_name": null, "retweet_count": 1874, "favorite_count": 4101, "source": "TweetDeck", "id_str": "732574280425328640", "is_retweet": false}, {"created_at": "Wed Jan 27 00:15:52 +0000 2016", "text": "At the #DemTownHall, a young voter asked Hillary about her record of fighting income inequality.\nhttps://t.co/FcWx7cOs00", "in_reply_to_screen_name": null, "retweet_count": 1027, "favorite_count": 1805, "source": "Twitter Web Client", "id_str": "692138918347603968", "is_retweet": false}, {"created_at": "Fri Jul 29 03:10:08 +0000 2016", "text": "\"If you believe that every man, woman &amp; child in America has the right to affordable health care, join us!\u201d \u2014Hillary https://t.co/Bk9KW26OoQ", "in_reply_to_screen_name": null, "retweet_count": 1864, "favorite_count": 5745, "source": "TweetDeck", "id_str": "758862142862831616", "is_retweet": false}, {"created_at": "Mon Oct 31 22:07:20 +0000 2016", "text": "RT @Slate: Was a Trump server communicating with a Russian bank? These cyber experts believe so. https://t.co/qwSapCsZqn https://t.co/VksTn\u2026", "in_reply_to_screen_name": null, "retweet_count": 3399, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "793212786335768576", "is_retweet": true}, {"created_at": "Fri Feb 19 05:56:33 +0000 2016", "text": "We will have legislation to enact comprehensive immigration reform before Congress within my first 100 days in office.", "in_reply_to_screen_name": null, "retweet_count": 966, "favorite_count": 2208, "source": "Twitter for iPhone", "id_str": "700559577100722176", "is_retweet": false}, {"created_at": "Tue Feb 02 04:53:32 +0000 2016", "text": "From the bottom of my heart: Thank you, Iowa. -H https://t.co/ptMgfAPFMJ", "in_reply_to_screen_name": null, "retweet_count": 2629, "favorite_count": 6656, "source": "TweetDeck", "id_str": "694383123702882304", "is_retweet": false}, {"created_at": "Thu Apr 07 19:34:33 +0000 2016", "text": "Still wondering if Hillary's qualified to be president? Good thing there's this handy quiz to give us the answer! https://t.co/iJYqKbNuOZ", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 2105, "source": "TweetDeck", "id_str": "718160049085014016", "is_retweet": false}, {"created_at": "Fri Aug 05 16:37:36 +0000 2016", "text": "Tune in to watch Hillary speak live with the @NABJ and the @NAHJ: https://t.co/nNYrAM60IC", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 1176, "source": "TweetDeck", "id_str": "761602061804900352", "is_retweet": false}, {"created_at": "Tue Jan 26 03:48:33 +0000 2016", "text": "We don't make America greater by insulting, demeaning, and demonizing our communities. We're better than that. #DemTownHall", "in_reply_to_screen_name": null, "retweet_count": 1302, "favorite_count": 2543, "source": "TweetDeck", "id_str": "691830057459912705", "is_retweet": false}, {"created_at": "Mon Jul 25 15:46:54 +0000 2016", "text": "\"One thing\u2019s for certain: You won\u2019t ever hear me praising dictators and strongmen who have no love for America.\u201d \u2014Hillary on Donald Trump", "in_reply_to_screen_name": null, "retweet_count": 2006, "favorite_count": 5355, "source": "TweetDeck", "id_str": "757603036978089984", "is_retweet": false}, {"created_at": "Thu Sep 15 14:56:09 +0000 2016", "text": "Trump on releasing detailed medical records: \"I have no problem in doing so!\"\n\nHe still hasn't released them. https://t.co/Zk1AXnWqes", "in_reply_to_screen_name": null, "retweet_count": 4406, "favorite_count": 7655, "source": "Twitter Web Client", "id_str": "776434436195938304", "is_retweet": false}, {"created_at": "Mon Mar 14 01:06:40 +0000 2016", "text": "At our best, Americans have rejected demagogues and fear mongers. Donald Trump is not who we are.\nhttps://t.co/m1RSMToSBN", "in_reply_to_screen_name": null, "retweet_count": 1716, "favorite_count": 3306, "source": "Twitter Web Client", "id_str": "709183932646862849", "is_retweet": false}, {"created_at": "Thu Sep 15 01:31:38 +0000 2016", "text": "RT @SophiaBush: This is the America I believe in-Beautiful. Multifaceted. Loving. Inclusive. This is why I'm passionate https://t.co/ia363m\u2026", "in_reply_to_screen_name": null, "retweet_count": 1057, "favorite_count": 0, "source": "TweetDeck", "id_str": "776231971022376960", "is_retweet": true}, {"created_at": "Wed Aug 31 17:06:12 +0000 2016", "text": "\"I will never, ever disrespect Gold Star families who\u2019ve made the ultimate sacrifice for our nation or prisoners of war.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 713, "favorite_count": 1782, "source": "TweetDeck", "id_str": "771031343841116161", "is_retweet": false}, {"created_at": "Tue Nov 08 01:44:47 +0000 2016", "text": "\u201cWhen the going gets tough, Hillary is the person we want on our side because she never gives up. She never quits.\u201d \u2014@FLOTUS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 961, "favorite_count": 2336, "source": "TweetDeck", "id_str": "795804224194052096", "is_retweet": false}, {"created_at": "Wed Apr 06 15:54:20 +0000 2016", "text": "\u201cIf you do your part, you and your family should be able to get ahead and stay ahead.\u201d -Hillary to the @AFLCIO", "in_reply_to_screen_name": null, "retweet_count": 409, "favorite_count": 1030, "source": "TweetDeck", "id_str": "717742245340913664", "is_retweet": false}, {"created_at": "Fri Oct 21 16:48:01 +0000 2016", "text": "RT @PhillyInquirer: EDITORIAL | @HillaryClinton is easily the best candidate for president https://t.co/ZM32itnhBA https://t.co/gygMjHZahz", "in_reply_to_screen_name": null, "retweet_count": 1645, "favorite_count": 0, "source": "TweetDeck", "id_str": "789508552536850432", "is_retweet": true}, {"created_at": "Mon Nov 07 17:42:34 +0000 2016", "text": "If you believe that America thrives when the middle class thrives, then you have to vote. https://t.co/jfd3CXLD1s https://t.co/H4FdKU7IxL", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 814, "favorite_count": 1990, "source": "TweetDeck", "id_str": "795682872875188229", "is_retweet": false}, {"created_at": "Fri Jul 29 02:36:28 +0000 2016", "text": "\"To all of your supporters here and around the country: I want you to know, I've heard you.\" \u2014Hillary on @BernieSanders", "in_reply_to_screen_name": null, "retweet_count": 1651, "favorite_count": 5309, "source": "TweetDeck", "id_str": "758853671920672769", "is_retweet": false}, {"created_at": "Thu Feb 18 18:13:43 +0000 2016", "text": "No child should have to live in fear of losing her parents. We need to support DREAMers and keep families together.\nhttps://t.co/TM8pPboPGZ", "in_reply_to_screen_name": null, "retweet_count": 1480, "favorite_count": 2187, "source": "Twitter Web Client", "id_str": "700382703200276481", "is_retweet": false}, {"created_at": "Mon Jan 18 21:56:19 +0000 2016", "text": "Two weeks to Iowa! https://t.co/ejuzERJXej", "in_reply_to_screen_name": null, "retweet_count": 428, "favorite_count": 980, "source": "TweetDeck", "id_str": "689204696108654593", "is_retweet": false}, {"created_at": "Wed Apr 27 20:03:43 +0000 2016", "text": "Donald Trump's foreign policy isn't just offensive, it's dangerous. https://t.co/iueuFgzGod https://t.co/7GVc6ihQPc", "in_reply_to_screen_name": null, "retweet_count": 1942, "favorite_count": 3354, "source": "TweetDeck", "id_str": "725415149516013568", "is_retweet": false}, {"created_at": "Wed Jul 27 03:08:15 +0000 2016", "text": "\u201cHillary Clinton will be our first woman president.\n\nAnd she will be a great president.\" \u2014Meryl Streep https://t.co/nCOhgJmzNz", "in_reply_to_screen_name": null, "retweet_count": 5408, "favorite_count": 15181, "source": "TweetDeck", "id_str": "758136895146758147", "is_retweet": false}, {"created_at": "Fri Jan 22 18:12:20 +0000 2016", "text": "10 days to Iowa! Add your name to get a daily email on how to help Hillary win the caucus: https://t.co/e8UXuf5yWx https://t.co/e0VHO8VaDR", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 1001, "source": "TweetDeck", "id_str": "690597880797761537", "is_retweet": false}, {"created_at": "Sat Jul 23 17:26:18 +0000 2016", "text": "Trump's dangerously wrong when he says \u201cI alone can fix it.\u201d\n\nAmericans haver never put our faith in one man\u2014we put our faith in each other.", "in_reply_to_screen_name": null, "retweet_count": 2462, "favorite_count": 6043, "source": "TweetDeck", "id_str": "756903275841069057", "is_retweet": false}, {"created_at": "Thu Jun 09 22:38:31 +0000 2016", "text": "\"I\u2019ve seen her judgment, toughness, and commitment to our values up close. ... I'm with her.\" \u2014@POTUS https://t.co/DzKgMFgdmP", "in_reply_to_screen_name": null, "retweet_count": 4502, "favorite_count": 11442, "source": "Twitter Web Client", "id_str": "741036783698345988", "is_retweet": false}, {"created_at": "Tue Sep 06 03:36:22 +0000 2016", "text": "RT @timkaine: Stronger together. https://t.co/6qmOJ39K56", "in_reply_to_screen_name": null, "retweet_count": 3177, "favorite_count": 0, "source": "TweetDeck", "id_str": "773001872022114305", "is_retweet": true}, {"created_at": "Thu Aug 25 14:51:17 +0000 2016", "text": "There's a reason the most hateful fringe of the right wing is supporting Donald Trump.\nhttps://t.co/AqB3DM2m0N", "in_reply_to_screen_name": null, "retweet_count": 11762, "favorite_count": 14862, "source": "Twitter Web Client", "id_str": "768823064033308673", "is_retweet": false}, {"created_at": "Wed Jun 22 22:54:31 +0000 2016", "text": "House Republicans may have cut the cameras, but they can't cut off our voices. We have to act on gun violence. -H https://t.co/lAj28YZDLY", "in_reply_to_screen_name": null, "retweet_count": 5530, "favorite_count": 12502, "source": "TweetDeck", "id_str": "745751853116325888", "is_retweet": false}, {"created_at": "Mon Feb 22 23:33:01 +0000 2016", "text": "Gun manufacturers should be held accountable when they endanger Americans. Add your name if you agree: https://t.co/T9nZ3kFPEm", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 705, "favorite_count": 1427, "source": "TweetDeck", "id_str": "701912609692504064", "is_retweet": false}, {"created_at": "Wed Nov 02 00:00:27 +0000 2016", "text": "Be like @JoeBiden:\n\nAlways make a plan. https://t.co/3TKJ4HnJC7 https://t.co/80ZfLWbu6g", "in_reply_to_screen_name": null, "retweet_count": 4673, "favorite_count": 9630, "source": "Media Studio", "id_str": "793603640766320640", "is_retweet": false}, {"created_at": "Thu Sep 29 14:08:13 +0000 2016", "text": "\"She\u2019s tough. She doesn\u2019t back down.\n\nTrump responds to criticism with the petulance of verbal spit wads.\" https://t.co/bz6gQay3Mi", "in_reply_to_screen_name": null, "retweet_count": 1798, "favorite_count": 5210, "source": "TweetDeck", "id_str": "781495801017143296", "is_retweet": false}, {"created_at": "Tue Sep 27 03:41:28 +0000 2016", "text": "#DebateNight https://t.co/x4oTfkIlHS", "in_reply_to_screen_name": null, "retweet_count": 36233, "favorite_count": 76307, "source": "TweetDeck", "id_str": "780613300086276096", "is_retweet": false}, {"created_at": "Wed Mar 16 21:54:24 +0000 2016", "text": "Congress shouldn't block states from giving families information about their food\u2014glad the senate stopped this bill. https://t.co/lSq9gnbQZl", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 2178, "source": "TweetDeck", "id_str": "710222713584033794", "is_retweet": false}, {"created_at": "Sun Oct 23 17:05:10 +0000 2016", "text": "Donald Trump says he'd deport 16 million people. How do you even begin to quantify that? https://t.co/Fu1aBQrZag", "in_reply_to_screen_name": null, "retweet_count": 6519, "favorite_count": 13658, "source": "Media Studio", "id_str": "790237644194189312", "is_retweet": false}, {"created_at": "Thu Jul 28 00:22:29 +0000 2016", "text": "\"In the White House, she will stand up to the gun lobby. That\u2019s why I'm voting for Hillary!\u201d \u2014@GabbyGiffords https://t.co/4lybM9zEYi", "in_reply_to_screen_name": null, "retweet_count": 2236, "favorite_count": 9957, "source": "TweetDeck", "id_str": "758457565701296128", "is_retweet": false}, {"created_at": "Wed Nov 09 16:43:20 +0000 2016", "text": "\"We have seen that our nation is more deeply divided than we thought. But I still believe in America\u2014and I always will.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 22524, "favorite_count": 71077, "source": "TweetDeck", "id_str": "796392743027310592", "is_retweet": false}, {"created_at": "Fri Apr 15 03:13:34 +0000 2016", "text": "\"Together, we won't just make promises we can't keep\u2014we'll deliver results that will improve the lives of the people of America.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1567, "favorite_count": 3220, "source": "TweetDeck", "id_str": "720812281941135365", "is_retweet": false}, {"created_at": "Sat Jul 23 00:41:00 +0000 2016", "text": "RT @timkaine: Just got off the phone with Hillary. I\u2019m honored to be her running mate. Can\u2019t wait to hit the trail tomorrow in Miami!", "in_reply_to_screen_name": null, "retweet_count": 12376, "favorite_count": 0, "source": "TweetDeck", "id_str": "756650283334328321", "is_retweet": true}, {"created_at": "Tue Aug 23 21:39:54 +0000 2016", "text": "RT @USPS: This fall, USPS will honor joyous Hindu Festival of #Diwali with a Forever\u00ae stamp! https://t.co/ahplXrlp5s https://t.co/XadduwKYok", "in_reply_to_screen_name": null, "retweet_count": 839, "favorite_count": 0, "source": "TweetDeck", "id_str": "768201120133046272", "is_retweet": true}, {"created_at": "Tue Oct 11 21:49:43 +0000 2016", "text": "G\u2019mar chatima tova to those celebrating #YomKippur. Wishing you a meaningful day and an easy fast. -H", "in_reply_to_screen_name": null, "retweet_count": 2283, "favorite_count": 9181, "source": "Twitter Web Client", "id_str": "785960597934313472", "is_retweet": false}, {"created_at": "Wed Aug 24 00:07:01 +0000 2016", "text": "RT @jtimberlake: Look WHO DID come over for lunch... Wow. #ImWithHer https://t.co/1pX4V4mUxq", "in_reply_to_screen_name": null, "retweet_count": 9765, "favorite_count": 0, "source": "TweetDeck", "id_str": "768238143669669888", "is_retweet": true}, {"created_at": "Wed Mar 02 16:06:09 +0000 2016", "text": "We need to break down barriers and build ladders of opportunity, so every person can live up to his or her potential.", "in_reply_to_screen_name": null, "retweet_count": 910, "favorite_count": 2239, "source": "TweetDeck", "id_str": "705061640031567872", "is_retweet": false}, {"created_at": "Mon Mar 14 16:00:25 +0000 2016", "text": "\u00a1Hillary necesita tu apoyo! Confirma en d\u00f3nde puedes votar aqu\u00ed \u2192 https://t.co/aSHOQKSJW0 #EstoyConElla https://t.co/lh4acx9wNU", "in_reply_to_screen_name": null, "retweet_count": 457, "favorite_count": 816, "source": "TweetDeck", "id_str": "709408853310488576", "is_retweet": false}, {"created_at": "Sat Sep 24 18:55:41 +0000 2016", "text": "We know all too well who Donald Trump is. Let's make sure he never becomes president: https://t.co/tTgeqxNqYm https://t.co/3lJjQEQ0BR", "in_reply_to_screen_name": null, "retweet_count": 3923, "favorite_count": 9098, "source": "TweetDeck", "id_str": "779756206231617536", "is_retweet": false}, {"created_at": "Tue Oct 25 19:05:09 +0000 2016", "text": "Nobody should wake up on November 9 and wonder whether there is more you could have done. https://t.co/eS3ie0qMIX", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 709, "favorite_count": 1526, "source": "TweetDeck", "id_str": "790992611892989953", "is_retweet": false}, {"created_at": "Tue Jun 07 17:16:25 +0000 2016", "text": "Eight years ago today. https://t.co/ZAHXdKbgHV", "in_reply_to_screen_name": null, "retweet_count": 3436, "favorite_count": 8567, "source": "TweetDeck", "id_str": "740230947816235009", "is_retweet": false}, {"created_at": "Thu Oct 27 22:49:59 +0000 2016", "text": "In which @realDonaldTrump basically proves our point. https://t.co/BCfxhPEmk8", "in_reply_to_screen_name": null, "retweet_count": 2607, "favorite_count": 5703, "source": "Media Studio", "id_str": "791773969980481536", "is_retweet": false}, {"created_at": "Tue Mar 08 18:02:20 +0000 2016", "text": "\u201cWomen\u2019s rights are human rights.\u201d #IWD2016\nhttps://t.co/a9tkZcM2Zf", "in_reply_to_screen_name": null, "retweet_count": 2764, "favorite_count": 4433, "source": "Twitter Web Client", "id_str": "707265206347403264", "is_retweet": false}, {"created_at": "Mon Oct 10 02:08:10 +0000 2016", "text": "RT @Refinery29: To recap: \n#debate https://t.co/wQM4Fqdkri", "in_reply_to_screen_name": null, "retweet_count": 1854, "favorite_count": 0, "source": "TweetDeck", "id_str": "785300860771368961", "is_retweet": true}, {"created_at": "Thu Jul 28 03:40:42 +0000 2016", "text": "\"America, you have vindicated that hope these past eight years. And now I\u2019m ready to pass the baton.\u201d \u2014@POTUS", "in_reply_to_screen_name": null, "retweet_count": 1996, "favorite_count": 7008, "source": "TweetDeck", "id_str": "758507446675668996", "is_retweet": false}, {"created_at": "Wed Mar 09 01:51:46 +0000 2016", "text": "Marriage equality is the law. I stand with those filibustering in MO to make sure discrimination won't be. -H\nhttps://t.co/u34dGDcVeY", "in_reply_to_screen_name": null, "retweet_count": 1884, "favorite_count": 4171, "source": "TweetDeck", "id_str": "707383345961947136", "is_retweet": false}, {"created_at": "Thu Nov 03 01:14:41 +0000 2016", "text": "Sign up for the chance to join Hillary on Election Night in NYC\u2014and bring a guest! We'll take care of the details: https://t.co/RjYGtkmoOC", "in_reply_to_screen_name": null, "retweet_count": 941, "favorite_count": 3390, "source": "TweetDeck", "id_str": "793984712268255233", "is_retweet": false}, {"created_at": "Tue Apr 05 20:24:11 +0000 2016", "text": "It's time to tear down the barriers that are holding too many women back. Watch Hillary's town hall in Brooklyn: https://t.co/772qMIorPO", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 973, "source": "TweetDeck", "id_str": "717447767040389121", "is_retweet": false}, {"created_at": "Fri Nov 04 21:05:26 +0000 2016", "text": "Join Hillary live in Detroit just 4 days from Election Day: https://t.co/DjCTPpvx6I\n\nhttps://t.co/3TKJ4H68Kz", "in_reply_to_screen_name": null, "retweet_count": 1286, "favorite_count": 3822, "source": "TweetDeck", "id_str": "794646761453264896", "is_retweet": false}, {"created_at": "Sun Nov 06 20:05:54 +0000 2016", "text": "\"We don't want to go back. We want to go forward.\" \u2014@RepJohnLewis https://t.co/3TKJ4H68Kz https://t.co/ZmWyB40o1M", "in_reply_to_screen_name": null, "retweet_count": 4049, "favorite_count": 8348, "source": "Media Studio", "id_str": "795356555327787012", "is_retweet": false}, {"created_at": "Mon Nov 07 18:30:27 +0000 2016", "text": "\"America depends on you\u2014you, all of you. ... I didn\u2019t say, 'Yes, I can.' I said, 'Yes, we can.'\" \u2014@POTUS https://t.co/oHVglCTncQ", "in_reply_to_screen_name": null, "retweet_count": 4676, "favorite_count": 11955, "source": "TweetDeck", "id_str": "795694921697071104", "is_retweet": false}, {"created_at": "Wed Oct 12 00:37:22 +0000 2016", "text": "\u201cIt might seem like a very small thing, but these small policies matter.\u201d \u2014@LaverneCox on Hillary improving passpor\u2026 https://t.co/Ck3HsO8Cqh", "in_reply_to_screen_name": null, "retweet_count": 7103, "favorite_count": 18597, "source": "Media Studio", "id_str": "786002789201682432", "is_retweet": false}, {"created_at": "Fri May 13 18:26:23 +0000 2016", "text": "We can do a lot to help working parents. Join a Facebook Q&amp;A on Hillary's new child care plan at 3pm ET: https://t.co/DNtiGUWBzy", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 934, "source": "TweetDeck", "id_str": "731188860827340800", "is_retweet": false}, {"created_at": "Tue Jul 19 20:04:41 +0000 2016", "text": "Just 10 minutes left to finish reading Trump's lawsuits. Think we can make it? Tune in now: https://t.co/uEDYLIKkFk https://t.co/jpZ1a750Sx", "in_reply_to_screen_name": null, "retweet_count": 1021, "favorite_count": 2608, "source": "TweetDeck", "id_str": "755493583575285760", "is_retweet": false}, {"created_at": "Sun Feb 21 15:28:32 +0000 2016", "text": "Have student debt? Here's a real plan to help you right now, explained by @MichelleWKwan and @Vivek_Vis.\nhttps://t.co/8oQ56WWRXD", "in_reply_to_screen_name": null, "retweet_count": 754, "favorite_count": 1260, "source": "Twitter Web Client", "id_str": "701428296861376512", "is_retweet": false}, {"created_at": "Tue Apr 26 21:25:25 +0000 2016", "text": "Polls close soon in CT, DE, MD, PA, and RI. Confirm where to go here, then head over: https://t.co/NviDFw2Rra https://t.co/6W4QayuT7v", "in_reply_to_screen_name": null, "retweet_count": 638, "favorite_count": 1319, "source": "TweetDeck", "id_str": "725073321277181956", "is_retweet": false}, {"created_at": "Sun Jun 05 17:59:40 +0000 2016", "text": "\"Two years ago, my son was killed by a mass shooter. I\u2019ve never spoken about it publicly until now.\" \u2014Caryn Michaels https://t.co/2GrJCLXhmW", "in_reply_to_screen_name": null, "retweet_count": 1061, "favorite_count": 2025, "source": "TweetDeck", "id_str": "739517058241724416", "is_retweet": false}, {"created_at": "Fri Jan 01 19:26:11 +0000 2016", "text": "#Hillary2016 starts the new year stronger than ever. To everyone who has supported this campaign: Thank you.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 385, "favorite_count": 1181, "source": "TweetDeck", "id_str": "683006320354668544", "is_retweet": false}, {"created_at": "Thu Jul 28 02:07:00 +0000 2016", "text": "RT @timkaine: \"I want to thank my beautiful wife Anne and my three wonderful children: Nat, Woody and Annella.\" \u2014Tim https://t.co/kJuJuLXaM6", "in_reply_to_screen_name": null, "retweet_count": 1076, "favorite_count": 0, "source": "TweetDeck", "id_str": "758483865396621312", "is_retweet": true}, {"created_at": "Tue Jan 26 16:26:44 +0000 2016", "text": "Gender equality and economic equality go hand in hand. You can't fight for one without understanding the other.", "in_reply_to_screen_name": null, "retweet_count": 1393, "favorite_count": 2675, "source": "TweetDeck", "id_str": "692020859972771841", "is_retweet": false}, {"created_at": "Fri Jun 24 02:43:38 +0000 2016", "text": "The fate of immigration reform\u2014and millions of undocumented families\u2014is in the hands of the next president. https://t.co/DvG1zUNNNi", "in_reply_to_screen_name": null, "retweet_count": 1862, "favorite_count": 3535, "source": "TweetDeck", "id_str": "746171897499508739", "is_retweet": false}, {"created_at": "Thu Oct 13 01:03:32 +0000 2016", "text": "RT @creynoldsnc: HFA statement from @jmpalmieri on tonight's troubling Trump revelations: https://t.co/dxs2PIm7Gz", "in_reply_to_screen_name": null, "retweet_count": 1281, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "786371760274804736", "is_retweet": true}, {"created_at": "Fri Oct 14 19:16:43 +0000 2016", "text": "RT @MarleeMatlin: My response to recent media reports - Marlee. https://t.co/Mkrbh47dUO", "in_reply_to_screen_name": null, "retweet_count": 22642, "favorite_count": 0, "source": "Twitter Web Client", "id_str": "787009257371754496", "is_retweet": true}, {"created_at": "Sat Mar 12 17:04:59 +0000 2016", "text": "The average CEO at America\u2019s biggest companies earns 200x more than the median worker. We've got to change that. https://t.co/RumEX8zi6W", "in_reply_to_screen_name": null, "retweet_count": 772, "favorite_count": 1628, "source": "Twitter for iPhone", "id_str": "708700327017631744", "is_retweet": false}, {"created_at": "Wed Feb 17 13:50:36 +0000 2016", "text": "No American should work 40 hours/week and still struggle to make ends meet\u2014not in Alabama and not anywhere else. https://t.co/VpUp3jWL29 -H", "in_reply_to_screen_name": null, "retweet_count": 804, "favorite_count": 1596, "source": "TweetDeck", "id_str": "699954097584279552", "is_retweet": false}, {"created_at": "Thu Oct 27 02:55:44 +0000 2016", "text": "This is heartbreaking. No child in America should feel afraid to practice their religion or embrace their heritage. https://t.co/QAfnEXH6ls", "in_reply_to_screen_name": null, "retweet_count": 3110, "favorite_count": 7468, "source": "TweetDeck", "id_str": "791473425323847680", "is_retweet": false}, {"created_at": "Tue Jun 14 16:42:21 +0000 2016", "text": "We need a Commander-in-Chief who can grapple with our challenges in all their complexity, with real plans that actually address them.", "in_reply_to_screen_name": null, "retweet_count": 1351, "favorite_count": 4604, "source": "TweetDeck", "id_str": "742759089109880832", "is_retweet": false}, {"created_at": "Tue Jan 19 03:03:31 +0000 2016", "text": "Health care. Gun violence prevention. Immigration. Hillary's been fighting for progressive issues her entire career. https://t.co/OpILv8azpM", "in_reply_to_screen_name": null, "retweet_count": 506, "favorite_count": 1241, "source": "TweetDeck", "id_str": "689282006451118080", "is_retweet": false}, {"created_at": "Thu May 26 14:41:43 +0000 2016", "text": "There\u2019s nothing more important than protecting our kids. If we fail at that, it doesn\u2019t matter what we get right. https://t.co/So40afmf4L", "in_reply_to_screen_name": null, "retweet_count": 1766, "favorite_count": 4059, "source": "TweetDeck", "id_str": "735843360934645760", "is_retweet": false}, {"created_at": "Thu Oct 20 01:57:00 +0000 2016", "text": "Donald thinks belittling women makes him a bigger man. It just makes him a bully. #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 7331, "favorite_count": 18161, "source": "TweetDeck", "id_str": "788921932590768129", "is_retweet": false}, {"created_at": "Wed May 04 18:17:45 +0000 2016", "text": "\"I don't think we can take a risk on a loose cannon like Donald Trump running the country.\" \u2014Hillary to @AndersonCooper", "in_reply_to_screen_name": null, "retweet_count": 1118, "favorite_count": 2710, "source": "TweetDeck", "id_str": "727925197454610435", "is_retweet": false}, {"created_at": "Sun Jul 24 01:58:40 +0000 2016", "text": "Your @GOP nominee for president has some thoughts on graphic design.\nhttps://t.co/d2fZdgWK7E", "in_reply_to_screen_name": null, "retweet_count": 1262, "favorite_count": 3308, "source": "Twitter Web Client", "id_str": "757032217914642433", "is_retweet": false}, {"created_at": "Sun Nov 06 13:57:56 +0000 2016", "text": "Isn't it time to have a mom in the Oval Office? https://t.co/jfd3CXLD1s https://t.co/btBI9jL3wF", "in_reply_to_screen_name": null, "retweet_count": 3482, "favorite_count": 12342, "source": "TweetDeck", "id_str": "795263955082084352", "is_retweet": false}, {"created_at": "Wed Feb 17 21:14:03 +0000 2016", "text": "\"I want to know that the candidate I'm voting for acknowledges our struggles.\" \u2014@FeministaJones https://t.co/dkYEqSfFQS", "in_reply_to_screen_name": null, "retweet_count": 463, "favorite_count": 1033, "source": "TweetDeck", "id_str": "700065695699222528", "is_retweet": false}, {"created_at": "Thu Jun 02 19:10:12 +0000 2016", "text": "We cannot put the security of our children and grandchildren in Donald Trump\u2019s hands. We cannot let him roll the dice with America.", "in_reply_to_screen_name": null, "retweet_count": 1834, "favorite_count": 4423, "source": "TweetDeck", "id_str": "738447641370107905", "is_retweet": false}, {"created_at": "Wed Jul 13 17:23:59 +0000 2016", "text": "\u201cIf we do the work, we will 'cease to be divided.' We will be indivisible, with liberty and justice for all.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 848, "favorite_count": 2374, "source": "TweetDeck", "id_str": "753278813895786496", "is_retweet": false}, {"created_at": "Wed Nov 02 01:29:47 +0000 2016", "text": "Election Day is in one week\u2014and once it's over, it can't be redone. Is everyone you know voting? RT this.\u2026 https://t.co/exWpMyjTIp", "in_reply_to_screen_name": null, "retweet_count": 5523, "favorite_count": 7902, "source": "TweetDeck", "id_str": "793626122932088832", "is_retweet": false}, {"created_at": "Thu Sep 15 20:39:33 +0000 2016", "text": "\u201cThis is why I do it and this is who I\u2019m in it for\u2014to make life better for children and families.\" \u2014Hillary https://t.co/gkvtA1yQNX", "in_reply_to_screen_name": null, "retweet_count": 3043, "favorite_count": 7705, "source": "Twitter Web Client", "id_str": "776520852758298624", "is_retweet": false}, {"created_at": "Fri Sep 23 23:02:20 +0000 2016", "text": "\"I was just blown away by this 9-year-old girl.\" \u2014Hillary on meeting disability rights advocate @AnastasiaSomoza https://t.co/nrjcqfGiRe", "in_reply_to_screen_name": null, "retweet_count": 1363, "favorite_count": 4056, "source": "TweetDeck", "id_str": "779455891586314240", "is_retweet": false}, {"created_at": "Fri Apr 15 03:21:04 +0000 2016", "text": "If we work together, we can change history. Chip in today and get your sticker: https://t.co/cL3FHzWPJm https://t.co/Hp6ZFOcPMo", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 1418, "source": "TweetDeck", "id_str": "720814168715214848", "is_retweet": false}, {"created_at": "Wed Sep 21 02:05:58 +0000 2016", "text": "A real headline about the Republican nominee: \"Trump used $258,000 from his charity to settle legal problems.\" https://t.co/2LRtZB3Ri2", "in_reply_to_screen_name": null, "retweet_count": 4619, "favorite_count": 6991, "source": "TweetDeck", "id_str": "778414941376245760", "is_retweet": false}, {"created_at": "Fri Sep 16 13:56:36 +0000 2016", "text": "\"We\u2019ll remember the pain of the Mothers of the Movement and fight for a criminal justice system that actually delivers justice.\u201d \u2014Hillary", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 500, "favorite_count": 1103, "source": "TweetDeck", "id_str": "776781835942633473", "is_retweet": false}, {"created_at": "Mon Mar 07 21:54:17 +0000 2016", "text": "When it was time to fund the rescue of our auto industry, only one Democratic candidate voted yes. https://t.co/r8R0oX7lYE", "in_reply_to_screen_name": null, "retweet_count": 1156, "favorite_count": 2361, "source": "TweetDeck", "id_str": "706961192552701952", "is_retweet": false}, {"created_at": "Fri Sep 16 00:56:16 +0000 2016", "text": "\"I intend to close my campaign the way I began my career: fighting for kids and families..it will be the passion of my presidency.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2259, "favorite_count": 7496, "source": "TweetDeck", "id_str": "776585458084114432", "is_retweet": false}, {"created_at": "Sun Jun 12 19:01:37 +0000 2016", "text": "\"This was an act of terror. ... This was also an act of hate.\" \u2014Hillary on the attack in Orlando https://t.co/MmaGjrSufr", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2491, "favorite_count": 5578, "source": "TweetDeck", "id_str": "742069363340107777", "is_retweet": false}, {"created_at": "Fri Oct 21 17:15:23 +0000 2016", "text": "Trump called Latinos \"bad hombres\" on Wednesday. It's not even the most insulting thing he said about the community. https://t.co/ClGi0LEfJ0", "in_reply_to_screen_name": null, "retweet_count": 1578, "favorite_count": 4318, "source": "TweetDeck", "id_str": "789515436849262592", "is_retweet": false}, {"created_at": "Sat Apr 16 00:07:17 +0000 2016", "text": "A quarter of renters in the U.S. spend more than half their income on rent. We need to make housing more affordable. https://t.co/dgAkEHG4mc", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 1798, "source": "TweetDeck", "id_str": "721127790083448833", "is_retweet": false}, {"created_at": "Wed Jan 13 03:02:15 +0000 2016", "text": "Couldn't agree more with @POTUS: We need to make voting easier, not harder. #SOTU", "in_reply_to_screen_name": null, "retweet_count": 1869, "favorite_count": 4836, "source": "TweetDeck", "id_str": "687107359999705088", "is_retweet": false}, {"created_at": "Wed Sep 07 02:31:06 +0000 2016", "text": "Enter to win a signed copy of Hillary and Tim's new book! https://t.co/j5hq0SqGlG", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 1448, "source": "TweetDeck", "id_str": "773347835949359104", "is_retweet": false}, {"created_at": "Tue Jul 26 00:10:32 +0000 2016", "text": "\u201cMy family believed so deeply in the promise of this country that we risked everything for the American Dream.\u201d \u2014DREAMer activist @Astrid_NV", "in_reply_to_screen_name": null, "retweet_count": 857, "favorite_count": 2977, "source": "TweetDeck", "id_str": "757729780687134722", "is_retweet": false}, {"created_at": "Wed Mar 02 02:32:23 +0000 2016", "text": "RT if you\u2019re ready to make history. https://t.co/gnVMhZSU9U", "in_reply_to_screen_name": null, "retweet_count": 7163, "favorite_count": 7534, "source": "TweetDeck", "id_str": "704856851721146369", "is_retweet": false}, {"created_at": "Fri Jun 10 13:22:59 +0000 2016", "text": "Thank you, @POTUS. https://t.co/gPFJ4LZq0B", "in_reply_to_screen_name": null, "retweet_count": 2608, "favorite_count": 8322, "source": "Twitter Web Client", "id_str": "741259364657463296", "is_retweet": false}, {"created_at": "Sat Feb 20 19:33:45 +0000 2016", "text": "This is what we're fighting for in Nevada. https://t.co/KdsmUU4PVe", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 790, "source": "TweetDeck", "id_str": "701127617706065920", "is_retweet": false}, {"created_at": "Fri Feb 19 00:33:27 +0000 2016", "text": "We cannot back down from breaking the barriers that keep us from living up to our full potential. https://t.co/2Lt322cQ3n", "in_reply_to_screen_name": null, "retweet_count": 1386, "favorite_count": 2809, "source": "TweetDeck", "id_str": "700478265744605184", "is_retweet": false}, {"created_at": "Fri Jul 22 02:33:57 +0000 2016", "text": "Let's review the record. https://t.co/l1ntdZY9fM", "in_reply_to_screen_name": null, "retweet_count": 4983, "favorite_count": 10360, "source": "TweetDeck", "id_str": "756316324096274435", "is_retweet": false}, {"created_at": "Wed Jun 22 16:01:17 +0000 2016", "text": "This is what real leadership looks like. https://t.co/4Nh6QpqSxL", "in_reply_to_screen_name": null, "retweet_count": 3553, "favorite_count": 7598, "source": "TweetDeck", "id_str": "745647857345101824", "is_retweet": false}, {"created_at": "Tue Sep 27 02:01:59 +0000 2016", "text": "\"Trump just criticized me for preparing for this debate. You know what else I prepared for? Being president.\" #DebateNight", "in_reply_to_screen_name": null, "retweet_count": 52865, "favorite_count": 111716, "source": "TweetDeck", "id_str": "780588262402424832", "is_retweet": false}]