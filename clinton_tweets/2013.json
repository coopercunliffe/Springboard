[{"created_at": "Thu Nov 14 03:45:24 +0000 2013", "text": "Went to premiere of White Gold @MuseumModernArt last night, a film I narrated about elephant poaching. Coming soon! http://t.co/gCtuWJYepR", "in_reply_to_screen_name": null, "retweet_count": 596, "favorite_count": 920, "source": "Twitter for iPhone", "id_str": "400831807786348545", "is_retweet": false}, {"created_at": "Fri Sep 13 13:01:08 +0000 2013", "text": ".@jk_rowling, look familiar? Not Hogwarts but beautiful St Andrews! Thanks to grad student Claire for the grand tour http://t.co/cuOxYry7yt", "in_reply_to_screen_name": null, "retweet_count": 1431, "favorite_count": 1828, "source": "Twitter for iPhone", "id_str": "378503612399644673", "is_retweet": false}, {"created_at": "Sat Nov 16 02:34:46 +0000 2013", "text": "#SecStates 67 &amp; 68 reunited @giwps today. Watching program backstage before going out to discuss #AfghanWomen. http://t.co/KG05g1aAd4", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 580, "source": "Twitter Web Client", "id_str": "401538806668460032", "is_retweet": false}, {"created_at": "Mon Aug 19 23:44:20 +0000 2013", "text": "I can't believe he turned 67 today.  He doesn't look a day over four... http://t.co/neOvrB7TR6", "in_reply_to_screen_name": null, "retweet_count": 1971, "favorite_count": 2030, "source": "Twitter for iPhone", "id_str": "369605784981995520", "is_retweet": false}, {"created_at": "Thu Jun 13 13:47:51 +0000 2013", "text": "What an incredible Twitter welcome! In my hometown Chicago for #CGIAmerica. 11amET I'll talk about my #BHCCF work http://t.co/YALcy54VIi", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 707, "source": "Twitter Web Client", "id_str": "345175686820012034", "is_retweet": false}, {"created_at": "Thu Sep 26 22:36:59 +0000 2013", "text": "8 African nations, 16 NGOs, $80 million, and a path to end elephant poaching. @ChelseaClinton and I are thrilled! http://t.co/zkPNF1EDTc", "in_reply_to_screen_name": null, "retweet_count": 814, "favorite_count": 613, "source": "Twitter for iPhone", "id_str": "383359574155485185", "is_retweet": false}, {"created_at": "Tue Jul 23 13:01:29 +0000 2013", "text": "Congratulations from across the pond to the Duke and Duchess! Wishing you the best of luck and a bit of advice: It Takes a (Royal) Village!", "in_reply_to_screen_name": null, "retweet_count": 2011, "favorite_count": 2150, "source": "Twitter for iPhone", "id_str": "359659535008415745", "is_retweet": false}, {"created_at": "Mon Sep 02 21:31:25 +0000 2013", "text": "Flying to 112 countries is a lot until you consider swimming between 2. Feels like I swim with sharks - but you actually did it! Congrats!", "in_reply_to_screen_name": null, "retweet_count": 2750, "favorite_count": 2544, "source": "Twitter Web Client", "id_str": "374645764867125248", "is_retweet": false}, {"created_at": "Wed Jul 17 03:11:34 +0000 2013", "text": "Went to Central Pk Zoo to meet w/wildlife experts about elephants. Their solution: Stop the Killing - Stop the Trafficking - Stop the Demand", "in_reply_to_screen_name": null, "retweet_count": 1351, "favorite_count": 1034, "source": "Twitter Web Client", "id_str": "357336749472612352", "is_retweet": false}, {"created_at": "Tue Dec 17 17:53:25 +0000 2013", "text": "What happens to kids in families cut from unemployment insurance &amp; food stamps? They\u2019re #2SmallToFail, &amp; deserve an equal chance to succeed.", "in_reply_to_screen_name": null, "retweet_count": 1899, "favorite_count": 1181, "source": "Twitter for iPhone", "id_str": "413004018429198336", "is_retweet": false}, {"created_at": "Fri Aug 16 20:55:26 +0000 2013", "text": "Bill wrote a wonderful letter about BHCCF work. So proud of what's been accomplished, I know the best is yet to come. http://t.co/wDsX86zd4n", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 279, "source": "Twitter Web Client", "id_str": "368476115687337984", "is_retweet": false}, {"created_at": "Tue Jun 25 23:52:08 +0000 2013", "text": "I am disappointed in today's decision striking at the heart of the Voting Rights Act. http://t.co/pmxXHO2N7h", "in_reply_to_screen_name": null, "retweet_count": 2236, "favorite_count": 1216, "source": "Twitter Web Client", "id_str": "349676416088014848", "is_retweet": false}, {"created_at": "Tue Dec 31 20:30:47 +0000 2013", "text": "10 years ago I was proud to begin working on bipartisan efforts to save unemployment insurance. Let's do it again quickly in this new year.", "in_reply_to_screen_name": null, "retweet_count": 852, "favorite_count": 1178, "source": "Twitter Web Client", "id_str": "418117050003779584", "is_retweet": false}, {"created_at": "Thu Dec 12 03:07:15 +0000 2013", "text": "Wishing my good friend the 68th #SecState a Very Happy 70th Birthday.", "in_reply_to_screen_name": null, "retweet_count": 264, "favorite_count": 589, "source": "Twitter for BlackBerry", "id_str": "410969065935867904", "is_retweet": false}, {"created_at": "Fri Nov 01 17:56:24 +0000 2013", "text": "No Ceilings: The Full Participation Project. Our new BHCCF initiative to accelerate progress for all women and girls. http://t.co/jzaiKiBTVR", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 412, "source": "Twitter for iPhone", "id_str": "396334924778975232", "is_retweet": false}, {"created_at": "Wed Dec 11 21:31:53 +0000 2013", "text": "Just landed in NY. The Ukrainian government must follow Madiba's example &amp; choose dialogue with its people, not force.", "in_reply_to_screen_name": null, "retweet_count": 871, "favorite_count": 897, "source": "Twitter for BlackBerry", "id_str": "410884668607959040", "is_retweet": false}, {"created_at": "Wed Dec 18 19:37:02 +0000 2013", "text": "Excited to report Patti Miller (formerly of\u00a0@sesamestreet) has joined @ClintonFdn\u00a0to co-lead\u00a0my early childhood initiative,\u00a0@2SmallToFail.", "in_reply_to_screen_name": null, "retweet_count": 229, "favorite_count": 372, "source": "Twitter for BlackBerry", "id_str": "413392482039103488", "is_retweet": false}, {"created_at": "Mon Jun 10 16:44:22 +0000 2013", "text": "Thanks for the inspiration @ASmith83 &amp; @Sllambe - I'll take it from here... #tweetsfromhillary", "in_reply_to_screen_name": null, "retweet_count": 9940, "favorite_count": 6392, "source": "Twitter Web Client", "id_str": "344132945122054144", "is_retweet": false}, {"created_at": "Tue Dec 24 16:06:25 +0000 2013", "text": "Merry XMas &amp; Happy New Year x 1,002,958. Thinking about the millions who face challenges everyday. Looking forward to 2014. So much to do.", "in_reply_to_screen_name": null, "retweet_count": 1705, "favorite_count": 2399, "source": "Twitter Web Client", "id_str": "415513805762727937", "is_retweet": false}, {"created_at": "Mon Sep 23 13:20:33 +0000 2013", "text": "Something I didn't know until I read her new bio this AM: Secretary Albright plays the drums. Welcome to Twitter @Madeleine. See you at CGI!", "in_reply_to_screen_name": null, "retweet_count": 1127, "favorite_count": 799, "source": "Twitter Web Client", "id_str": "382132379155845121", "is_retweet": false}, {"created_at": "Tue Nov 12 05:34:19 +0000 2013", "text": "Backstage with @GabbyGiffords at the Glamour Women of the Year Awards.  What an incredible woman. http://t.co/edjNP4zXo6", "in_reply_to_screen_name": null, "retweet_count": 770, "favorite_count": 1627, "source": "Twitter for iPhone", "id_str": "400134441022267392", "is_retweet": false}, {"created_at": "Fri Oct 04 12:12:28 +0000 2013", "text": "As a mom, I made reading to @ChelseaClinton a priority every night. New studies show us the importance of words: http://t.co/eQftZBVnKz", "in_reply_to_screen_name": null, "retweet_count": 2002, "favorite_count": 1257, "source": "Twitter for iPhone", "id_str": "386101512742912000", "is_retweet": false}, {"created_at": "Wed Sep 18 17:52:30 +0000 2013", "text": "Great 1st meeting with @2SmallToFail Leadership &amp; Advisory Council yesterday. Here's some good reading on the issue: http://t.co/ybA33ew9Jr", "in_reply_to_screen_name": null, "retweet_count": 220, "favorite_count": 182, "source": "Twitter Web Client", "id_str": "380388878823071744", "is_retweet": false}, {"created_at": "Thu Nov 14 18:22:01 +0000 2013", "text": "New op ed by Senator, Doctor and friend Bill Frist, who is on the @2SmallToFail leadership council. Worth a read. http://t.co/4MWAy2vbIY", "in_reply_to_screen_name": null, "retweet_count": 213, "favorite_count": 218, "source": "Twitter Web Client", "id_str": "401052413504663552", "is_retweet": false}, {"created_at": "Sat Nov 16 02:43:29 +0000 2013", "text": "After #SecState Kerry spoke, I sat down for Q&amp;A with @laurawbush, my fellow #AfghanWomen Council co-chair. http://t.co/kGbtECg2MN", "in_reply_to_screen_name": null, "retweet_count": 348, "favorite_count": 600, "source": "Twitter Web Client", "id_str": "401541001417728000", "is_retweet": false}, {"created_at": "Thu Sep 26 12:10:55 +0000 2013", "text": "So proud of what we've done and so much more to do. Join me. #Beijing+20", "in_reply_to_screen_name": null, "retweet_count": 255, "favorite_count": 303, "source": "Twitter for iPhone", "id_str": "383202017478717440", "is_retweet": false}, {"created_at": "Tue Oct 01 02:05:05 +0000 2013", "text": "Here at #CDF40. My advocacy for children began with Marian Wright Edelman, it continues w/ @2SmallToFail http://t.co/XNIHtHTfUV", "in_reply_to_screen_name": null, "retweet_count": 295, "favorite_count": 338, "source": "Twitter for iPhone", "id_str": "384861493143306240", "is_retweet": false}, {"created_at": "Thu Aug 15 18:23:46 +0000 2013", "text": ".@RachaelRad, tweet and ye shall receive.  And I see that you're a fellow Downton Abbey fan.  Birds of a feather it would seem!", "in_reply_to_screen_name": null, "retweet_count": 262, "favorite_count": 490, "source": "Twitter for iPhone", "id_str": "368075557881524224", "is_retweet": false}, {"created_at": "Fri Oct 11 21:19:32 +0000 2013", "text": "@WilliamJHague great seeing you today. I'm so pleased that our special relationship continues even after leaving office.", "in_reply_to_screen_name": "WilliamJHague", "retweet_count": 60, "favorite_count": 87, "source": "Twitter for iPhone", "id_str": "388775900097290240", "is_retweet": false}, {"created_at": "Wed Jul 10 13:12:20 +0000 2013", "text": ".@WPSProject at Bryn Mawr was so inspiring. Women in public sector jobs: 50% by 2050. That's the goal. http://t.co/8xp0ggoKT8", "in_reply_to_screen_name": null, "retweet_count": 867, "favorite_count": 990, "source": "Twitter Web Client", "id_str": "354951219988537347", "is_retweet": false}, {"created_at": "Fri Oct 25 23:50:29 +0000 2013", "text": ".@wef report on women shows progress in 2/3 of countries, still more to do. I'll address on Nov 1 in Philadelphia. http://t.co/XBfEQ3L2xD", "in_reply_to_screen_name": null, "retweet_count": 428, "favorite_count": 297, "source": "Twitter for iPhone", "id_str": "393887319088189440", "is_retweet": false}, {"created_at": "Fri Jul 12 21:32:52 +0000 2013", "text": "Malala today at the UN: \u201cNothing changed in my life except this-weakness, fear and hopelessness died.\u201d Extraordinary young woman. #MalalaDay", "in_reply_to_screen_name": null, "retweet_count": 3986, "favorite_count": 1883, "source": "Twitter Web Client", "id_str": "355801960554840065", "is_retweet": false}, {"created_at": "Fri Dec 06 01:40:24 +0000 2013", "text": "Nelson Mandela was a champion for justice &amp; human dignity, with unmatched grace. I'll remember him as Madiba, truly an unconquerable soul.", "in_reply_to_screen_name": null, "retweet_count": 6029, "favorite_count": 4392, "source": "Twitter for iPad", "id_str": "408772884283555841", "is_retweet": false}, {"created_at": "Tue Nov 12 17:52:03 +0000 2013", "text": "Text AID to 80108 to give $10 to the @mGiveFoundation to help with Typhoon Haiyan disaster relief effort. I'm doing it, I hope you will too!", "in_reply_to_screen_name": null, "retweet_count": 900, "favorite_count": 312, "source": "Twitter for iPhone", "id_str": "400320098059444224", "is_retweet": false}, {"created_at": "Fri Aug 09 16:24:05 +0000 2013", "text": "Bill &amp; Chelsea are back from a great BH&amp;CCF trip to Africa, just in time for Bill's big news from POTUS: http://t.co/6GFSaiVhhj", "in_reply_to_screen_name": null, "retweet_count": 375, "favorite_count": 395, "source": "Twitter Web Client", "id_str": "365871110866206720", "is_retweet": false}, {"created_at": "Fri Jun 14 19:31:52 +0000 2013", "text": "Having so much fun with Chelsea, taking selfies back stage. MT:@ChelseaClinton\u00a0http://t.co/QXvdrgDH7n", "in_reply_to_screen_name": null, "retweet_count": 2026, "favorite_count": 1959, "source": "Twitter for BlackBerry\u00ae", "id_str": "345624650186891264", "is_retweet": false}, {"created_at": "Tue Jun 25 21:03:32 +0000 2013", "text": "Bill, Cheslea &amp; I have sent our love and prayers to our great friend, Madiba, his family and his nation during this difficult time.", "in_reply_to_screen_name": null, "retweet_count": 1033, "favorite_count": 713, "source": "Twitter for BlackBerry\u00ae", "id_str": "349633984256417794", "is_retweet": false}, {"created_at": "Thu Jul 18 23:33:52 +0000 2013", "text": "Today I\u2019m reminded of Invictus, a poem Mandela used to recite in prison. You're truly an \"unconquerable soul\" Madiba. Happy 95th Birthday.", "in_reply_to_screen_name": null, "retweet_count": 2207, "favorite_count": 1411, "source": "Twitter Web Client", "id_str": "358006740077391872", "is_retweet": false}, {"created_at": "Mon Nov 25 19:48:22 +0000 2013", "text": "Great op ed from another @2SmallToFail leadership council member (and a teacher), @cindymccain . Read it here: http://t.co/6RXwUEbSCQ", "in_reply_to_screen_name": null, "retweet_count": 201, "favorite_count": 185, "source": "Twitter Web Client", "id_str": "405060412585959424", "is_retweet": false}, {"created_at": "Fri Jul 19 23:10:36 +0000 2013", "text": "Seneca Falls, 165 years ago today, began a movement that remains the unfinished business of the 21st century. http://t.co/zCSbjVvMyI", "in_reply_to_screen_name": null, "retweet_count": 2904, "favorite_count": 1399, "source": "Twitter for iPhone", "id_str": "358363269603409920", "is_retweet": false}, {"created_at": "Wed Jun 26 19:21:59 +0000 2013", "text": "I applaud all the hard work of everyone who worked so tirelessly to make today possible.\u00a0http://t.co/wP9GWajguy", "in_reply_to_screen_name": null, "retweet_count": 2071, "favorite_count": 1657, "source": "Twitter for BlackBerry\u00ae", "id_str": "349970816122892289", "is_retweet": false}, {"created_at": "Fri Oct 11 12:59:01 +0000 2013", "text": "New profile pic in honor of the International #DayoftheGirl. Join us at the Clinton Foundation in celebrating. http://t.co/QfhKWkng7E", "in_reply_to_screen_name": null, "retweet_count": 539, "favorite_count": 413, "source": "Twitter Web Client", "id_str": "388649942492774400", "is_retweet": false}, {"created_at": "Fri Jun 14 16:40:42 +0000 2013", "text": ".@2SmalltoFail is my new effort w/ @nextgen_usa to help our kids in their crucial early years. We can all act:\u00a0http://t.co/dncy8cDgwk", "in_reply_to_screen_name": null, "retweet_count": 673, "favorite_count": 368, "source": "Twitter for BlackBerry\u00ae", "id_str": "345581573556535297", "is_retweet": false}, {"created_at": "Wed Dec 11 13:45:37 +0000 2013", "text": "On my way back to the U.S. from Madiba's funeral and watching what's going on in Ukraine with alarm.", "in_reply_to_screen_name": null, "retweet_count": 699, "favorite_count": 684, "source": "Twitter Web Client", "id_str": "410767329698381825", "is_retweet": false}, {"created_at": "Sat Nov 09 21:21:31 +0000 2013", "text": "Talking about how we can empower the next generation in LA with\n@ChelseaClinton @2SmallToFail &amp; @ServiceNation http://t.co/RYROq1Z8hp", "in_reply_to_screen_name": null, "retweet_count": 496, "favorite_count": 660, "source": "Twitter for iPhone", "id_str": "399285646172229633", "is_retweet": false}]