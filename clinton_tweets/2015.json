[{"created_at": "Sat Jun 13 20:19:42 +0000 2015", "text": "What Hillary's listening to en route to Iowa: The official #Hillary2016 playlist on @Spotify: http://t.co/dL7vGv4gGi http://t.co/ZwhkYUFAch", "in_reply_to_screen_name": null, "retweet_count": 495, "favorite_count": 741, "source": "Twitter Web Client", "id_str": "609817442282545154", "is_retweet": false}, {"created_at": "Thu May 21 19:00:21 +0000 2015", "text": "That's all for me! Thanks for the opportunity, Hillary\u2014&amp; thank you for fighting for women &amp; business owners like me! http://t.co/B6bKZZ1LQL", "in_reply_to_screen_name": null, "retweet_count": 168, "favorite_count": 538, "source": "TweetDeck", "id_str": "601462550845239296", "is_retweet": false}, {"created_at": "Tue Nov 17 15:18:03 +0000 2015", "text": "Hillary and her supporters take a lot of selfies\u2014and she\u2019s learned a few things along the way.\nhttps://t.co/Eow4QerNXA", "in_reply_to_screen_name": null, "retweet_count": 388, "favorite_count": 967, "source": "Twitter Web Client", "id_str": "666636423819202560", "is_retweet": false}, {"created_at": "Wed Sep 30 16:50:59 +0000 2015", "text": "The @HillaryforNV team held a focus group with some of Hillary's littlest supporters. \ud83d\udc6d\nhttps://t.co/OAx1VdOh1M", "in_reply_to_screen_name": null, "retweet_count": 235, "favorite_count": 409, "source": "Twitter Web Client", "id_str": "649265194258948096", "is_retweet": false}, {"created_at": "Sat Jun 20 23:54:38 +0000 2015", "text": "\"Race remains a deep fault line in America.\" http://t.co/U8WFW0eemG http://t.co/iT2NFh3sEQ", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 1162, "source": "Twitter Web Client", "id_str": "612408244527628288", "is_retweet": false}, {"created_at": "Tue Apr 28 02:44:01 +0000 2015", "text": "Tonight I am praying for peace &amp; safety for all in Baltimore, &amp; for Freddie Gray's family - his death is a tragedy that demands answers. -H", "in_reply_to_screen_name": null, "retweet_count": 5737, "favorite_count": 7988, "source": "Twitter Web Client", "id_str": "592881927725658112", "is_retweet": false}, {"created_at": "Mon Jun 15 00:08:07 +0000 2015", "text": "What a weekend. http://t.co/cSH8Xc0cMy #Hillary2016 http://t.co/ye4XyJrifF", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 1645, "source": "Twitter Web Client", "id_str": "610237310513319936", "is_retweet": false}, {"created_at": "Mon Oct 26 22:38:38 +0000 2015", "text": "@JesseFFerguson you make our team better every day. Rest up, I'm rooting for you &amp; looking forward to having you back 100%. #ImWithJesse -H", "in_reply_to_screen_name": "JesseFFerguson", "retweet_count": 169, "favorite_count": 309, "source": "Twitter Web Client", "id_str": "658774765482700800", "is_retweet": false}, {"created_at": "Tue Jul 07 20:39:51 +0000 2015", "text": "Hillary never forgets a birthday. Sign up to get a message on yours: http://t.co/tcOGvCycSv http://t.co/aGlIiLezp9", "in_reply_to_screen_name": null, "retweet_count": 218, "favorite_count": 537, "source": "Twitter Web Client", "id_str": "618519819214827520", "is_retweet": false}, {"created_at": "Fri Jul 10 22:20:00 +0000 2015", "text": "Between July 4th festivities, Hillary said hello to a fellow grandma and her granddaughter in New Hampshire.\nhttps://t.co/pT3YBnFAFe", "in_reply_to_screen_name": null, "retweet_count": 232, "favorite_count": 599, "source": "Twitter Web Client", "id_str": "619632188988919808", "is_retweet": false}, {"created_at": "Wed Oct 14 03:06:51 +0000 2015", "text": "RT this if you\u2019re proud to stand with Hillary. #ImWithHer #DemDebate http://t.co/gNnlOqnBq3", "in_reply_to_screen_name": null, "retweet_count": 3516, "favorite_count": 3281, "source": "TweetDeck", "id_str": "654131224185802752", "is_retweet": false}, {"created_at": "Sun Dec 20 04:00:22 +0000 2015", "text": "Hillary is the tough leader we need as our next president. Add your name if you agree: https://t.co/QEj7rbTIUQ #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 616, "favorite_count": 1815, "source": "TweetDeck", "id_str": "678424680383008768", "is_retweet": false}, {"created_at": "Tue May 19 19:17:00 +0000 2015", "text": "RT if you agree with Hillary: Small business is at the heart of our economy. http://t.co/xjhr6aupq1", "in_reply_to_screen_name": null, "retweet_count": 758, "favorite_count": 857, "source": "TweetDeck", "id_str": "600741964389179392", "is_retweet": false}, {"created_at": "Wed Apr 15 14:28:36 +0000 2015", "text": "Hillary\u2019s on the trail in Iowa again today\u2014follow @HillaryforIA for updates! http://t.co/2vBHlkUw5C", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 1515, "source": "Twitter Web Client", "id_str": "588348199947075584", "is_retweet": false}, {"created_at": "Fri Jul 17 21:08:24 +0000 2015", "text": "My best wishes to those celebrating the end of the holy month of Ramadan. Eid Mubarak. -H", "in_reply_to_screen_name": null, "retweet_count": 831, "favorite_count": 1504, "source": "Twitter Web Client", "id_str": "622150883623763968", "is_retweet": false}, {"created_at": "Sun Nov 08 16:26:32 +0000 2015", "text": "Ten women senators say why they\u2019re supporting one of their own: https://t.co/RhDqFmFGIo https://t.co/X0zdOBHBcl", "in_reply_to_screen_name": null, "retweet_count": 469, "favorite_count": 805, "source": "Twitter Web Client", "id_str": "663392164945219584", "is_retweet": false}, {"created_at": "Tue Nov 17 17:55:20 +0000 2015", "text": "Thank you, @SEIU.\n\nhttps://t.co/3Pz951cx9T", "in_reply_to_screen_name": null, "retweet_count": 251, "favorite_count": 446, "source": "TweetDeck", "id_str": "666676004228874241", "is_retweet": false}, {"created_at": "Sun Jul 26 23:19:00 +0000 2015", "text": "So as step one, I'm proposing goals to meet this challenge and power our economy forward. Learn more at http://t.co/l2hJBII8ya. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 348, "favorite_count": 523, "source": "Twitter Web Client", "id_str": "625445240577622016", "is_retweet": false}, {"created_at": "Mon Oct 19 23:53:54 +0000 2015", "text": "After battling it out in the primaries, Hillary got a call from President Obama to serve\u2014and she answered.\nhttps://t.co/KMY836O2Pk", "in_reply_to_screen_name": null, "retweet_count": 471, "favorite_count": 934, "source": "Twitter Web Client", "id_str": "656256994165129216", "is_retweet": false}, {"created_at": "Fri Nov 20 17:57:21 +0000 2015", "text": "I will fight for DAPA so millions of children won't fear coming home to empty houses. Strengthening families means keeping them together. -H", "in_reply_to_screen_name": null, "retweet_count": 552, "favorite_count": 906, "source": "TweetDeck", "id_str": "667763674203955201", "is_retweet": false}, {"created_at": "Sat Sep 12 17:26:27 +0000 2015", "text": "Every future president needs one. http://t.co/dLsbiEsVC4", "in_reply_to_screen_name": null, "retweet_count": 1066, "favorite_count": 3466, "source": "TweetDeck", "id_str": "642751136567574528", "is_retweet": false}, {"created_at": "Fri Nov 06 19:37:55 +0000 2015", "text": ".@MikeyLikesItNY helps people with criminal records find jobs, one scoop at a time. https://t.co/gHAs0Etddn", "in_reply_to_screen_name": null, "retweet_count": 162, "favorite_count": 331, "source": "TweetDeck", "id_str": "662715556370505728", "is_retweet": false}, {"created_at": "Tue Sep 15 22:27:40 +0000 2015", "text": "While others attack, insult, and denigrate\u2014today we proudly celebrate the beginning of Hispanic Heritage Month. S\u00ed se puede. -H", "in_reply_to_screen_name": null, "retweet_count": 1090, "favorite_count": 1803, "source": "TweetDeck", "id_str": "643914102767788032", "is_retweet": false}, {"created_at": "Wed Aug 26 20:42:53 +0000 2015", "text": "\"We have got to do something about gun violence in America.\"\nhttps://t.co/L3xZHMUTVZ", "in_reply_to_screen_name": null, "retweet_count": 1910, "favorite_count": 2783, "source": "Twitter Web Client", "id_str": "636639978999549952", "is_retweet": false}, {"created_at": "Sun Sep 20 01:25:06 +0000 2015", "text": "What Every 20-Something Should Know About Hillary Clinton: http://t.co/72dCwQdDM6 via @Refinery29", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 547, "source": "TweetDeck", "id_str": "645408307205697536", "is_retweet": false}, {"created_at": "Mon Jul 13 14:37:43 +0000 2015", "text": "\"When all Americans have the chance to study hard, work hard, and share in our country\u2019s prosperity\u2014that\u2019s fair growth.\"", "in_reply_to_screen_name": null, "retweet_count": 288, "favorite_count": 485, "source": "Twitter Web Client", "id_str": "620603014777278465", "is_retweet": false}, {"created_at": "Sun Nov 22 22:37:54 +0000 2015", "text": "Important words from someone who found refuge in America: https://t.co/yGdMuUXxhM https://t.co/Pjycs3Y1ag", "in_reply_to_screen_name": null, "retweet_count": 444, "favorite_count": 915, "source": "Twitter Web Client", "id_str": "668559052729917440", "is_retweet": false}, {"created_at": "Sun Jul 26 15:46:49 +0000 2015", "text": "We\u2019ll rely on organizations in our community, because Adam will need training, direction &amp; safety as an adult.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 59, "favorite_count": 179, "source": "Twitter Web Client", "id_str": "625331444840275968", "is_retweet": false}, {"created_at": "Fri May 22 14:29:44 +0000 2015", "text": "Today in really cool things:  https://t.co/P7D0sKJf47", "in_reply_to_screen_name": null, "retweet_count": 86, "favorite_count": 180, "source": "TweetDeck", "id_str": "601756837436874752", "is_retweet": false}, {"created_at": "Thu Oct 15 16:44:03 +0000 2015", "text": "\"Immigration is good for America. Immigration built our country.\" \u2014Hillary at @USHCC", "in_reply_to_screen_name": null, "retweet_count": 471, "favorite_count": 761, "source": "TweetDeck", "id_str": "654699265957060608", "is_retweet": false}, {"created_at": "Sun Nov 01 14:50:04 +0000 2015", "text": "\u201cI can't stop asking myself once again: Where does my community go from here?\u201d -@claynmiddleton https://t.co/eakToXxU9h", "in_reply_to_screen_name": null, "retweet_count": 208, "favorite_count": 361, "source": "Twitter Web Client", "id_str": "660831174567329792", "is_retweet": false}, {"created_at": "Wed Sep 09 13:22:28 +0000 2015", "text": "\"I support this deal\u2014as part of a larger strategy toward Iran.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 222, "favorite_count": 497, "source": "TweetDeck", "id_str": "641602571656929280", "is_retweet": false}, {"created_at": "Thu Jul 16 00:44:12 +0000 2015", "text": "\ud83c\udf08 40,000 stickers celebrating equality\n\ud83d\udc55 32,961 pieces of #Hillary2016 swag with new owners\n\ud83c\udf1f 3 Grammy winners http://t.co/HtuGson6vB", "in_reply_to_screen_name": null, "retweet_count": 309, "favorite_count": 699, "source": "TweetDeck", "id_str": "621480415145160704", "is_retweet": false}, {"created_at": "Thu Dec 31 18:48:41 +0000 2015", "text": "38 states, 524 town hall questions, 89,399 birthday wishes, and more: 2015, by the numbers. https://t.co/F9qmw6WslX", "in_reply_to_screen_name": null, "retweet_count": 294, "favorite_count": 671, "source": "TweetDeck", "id_str": "682634498316476417", "is_retweet": false}, {"created_at": "Thu Aug 20 00:28:09 +0000 2015", "text": "But what about @LinkedIn? http://t.co/6Gh727BbRr https://t.co/26SJu0Ma9W", "in_reply_to_screen_name": null, "retweet_count": 198, "favorite_count": 862, "source": "Twitter Web Client", "id_str": "634159952299458560", "is_retweet": false}, {"created_at": "Tue Apr 14 20:38:43 +0000 2015", "text": "\"And we need to fix the dysfunctional political system and get unaccountable money out of it once and for all\u2026\"", "in_reply_to_screen_name": null, "retweet_count": 683, "favorite_count": 1418, "source": "Twitter Web Client", "id_str": "588078953870585856", "is_retweet": false}, {"created_at": "Fri Dec 04 19:42:22 +0000 2015", "text": "This should be common sense\u2014yet Republican senators blocked a bill to stop suspected terrorists from buying guns. https://t.co/Xcbdhb2mp0", "in_reply_to_screen_name": null, "retweet_count": 2216, "favorite_count": 3731, "source": "TweetDeck", "id_str": "672863535882465280", "is_retweet": false}, {"created_at": "Thu Aug 13 02:01:57 +0000 2015", "text": "My thoughts and prayers are with President Carter and his family. -H", "in_reply_to_screen_name": null, "retweet_count": 783, "favorite_count": 2417, "source": "Twitter Web Client", "id_str": "631646842003017728", "is_retweet": false}, {"created_at": "Fri Nov 27 22:36:13 +0000 2015", "text": "Today and every day, we #StandWithPP. https://t.co/oifqTQLx1X", "in_reply_to_screen_name": null, "retweet_count": 4951, "favorite_count": 10178, "source": "Twitter for iPhone", "id_str": "670370572019376128", "is_retweet": false}, {"created_at": "Fri Sep 11 00:29:58 +0000 2015", "text": "Highlight of the week: A sitdown with America\u2019s cutest presidential history expert.\nhttps://t.co/PmglfKYC8H", "in_reply_to_screen_name": null, "retweet_count": 602, "favorite_count": 1373, "source": "Twitter Web Client", "id_str": "642132944245559296", "is_retweet": false}, {"created_at": "Sun Dec 20 23:18:04 +0000 2015", "text": "Here\u2019s what people were texting Hillary while she was on the debate stage. https://t.co/r7KcPBeTfF", "in_reply_to_screen_name": null, "retweet_count": 233, "favorite_count": 584, "source": "Twitter Web Client", "id_str": "678716022040457217", "is_retweet": false}, {"created_at": "Tue Dec 01 20:39:27 +0000 2015", "text": "Hillary just joined @Quora! Check out her answers on health care, Planned Parenthood, and being a grandma: https://t.co/SpMBN6ZA1H", "in_reply_to_screen_name": null, "retweet_count": 200, "favorite_count": 337, "source": "TweetDeck", "id_str": "671790735423840256", "is_retweet": false}, {"created_at": "Tue Sep 22 19:56:26 +0000 2015", "text": "Hillary\u2019s prescription drug reform plan: \"I want to both protect consumers and promote innovation\u2014while putting an end to profiteering.\"", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 902, "source": "TweetDeck", "id_str": "646412760444719104", "is_retweet": false}, {"created_at": "Mon Jul 13 14:40:56 +0000 2015", "text": "\"Workers are assets. Investing in them pays off. Higher wages pay off. And training pays off.\"", "in_reply_to_screen_name": null, "retweet_count": 373, "favorite_count": 570, "source": "TweetDeck", "id_str": "620603824441458688", "is_retweet": false}, {"created_at": "Tue Apr 14 20:39:05 +0000 2015", "text": "\"I'm here in Iowa to begin a conversation about how we do that.\"", "in_reply_to_screen_name": null, "retweet_count": 268, "favorite_count": 852, "source": "Twitter Web Client", "id_str": "588079045478330369", "is_retweet": false}, {"created_at": "Thu Oct 15 18:19:45 +0000 2015", "text": "\"I will fight any effort, anywhere, to disenfranchise any American.\" \u2014Hillary in San Antonio #LatinosForHillary", "in_reply_to_screen_name": null, "retweet_count": 245, "favorite_count": 465, "source": "TweetDeck", "id_str": "654723351626145792", "is_retweet": false}, {"created_at": "Fri Aug 28 16:44:44 +0000 2015", "text": "Live from the DNC: Hillary is speaking about strengthening the middle class and moving this country forward. Watch \u2192 http://t.co/IE1LPM7wca", "in_reply_to_screen_name": null, "retweet_count": 207, "favorite_count": 369, "source": "TweetDeck", "id_str": "637304819124977664", "is_retweet": false}, {"created_at": "Wed Jun 10 20:43:53 +0000 2015", "text": "Coming soon: Hillary on the fights that matter. http://t.co/SEnOOl3TI3", "in_reply_to_screen_name": null, "retweet_count": 228, "favorite_count": 551, "source": "TweetDeck", "id_str": "608736363362533378", "is_retweet": false}, {"created_at": "Thu Nov 05 21:27:43 +0000 2015", "text": "50 years ago, @repjohnlewis marched\u2014and bled\u2014for the right to vote. His message today: \u201cWe must use the vote.\u201d\nhttps://t.co/NoNHImLS51", "in_reply_to_screen_name": null, "retweet_count": 886, "favorite_count": 1076, "source": "Twitter Web Client", "id_str": "662380800072003584", "is_retweet": false}, {"created_at": "Fri Jun 26 14:08:47 +0000 2015", "text": "Proud. http://t.co/9J44PCYeuQ", "in_reply_to_screen_name": null, "retweet_count": 37720, "favorite_count": 47039, "source": "TweetDeck", "id_str": "614435138232037376", "is_retweet": false}, {"created_at": "Wed Jul 01 23:38:16 +0000 2015", "text": "Here's your must-read of the day: http://t.co/mMJICVBwwx http://t.co/U08ggRJYBh", "in_reply_to_screen_name": null, "retweet_count": 270, "favorite_count": 409, "source": "TweetDeck", "id_str": "616390395388383232", "is_retweet": false}, {"created_at": "Sat Sep 12 21:24:20 +0000 2015", "text": "We need to put our elections back in the hands of everyday Americans. http://t.co/W16DL9R3E8", "in_reply_to_screen_name": null, "retweet_count": 510, "favorite_count": 827, "source": "Twitter Web Client", "id_str": "642811003957288960", "is_retweet": false}, {"created_at": "Tue Aug 18 13:21:34 +0000 2015", "text": "The Arctic is a unique treasure. Given what we know, it's not worth the risk of drilling. -H", "in_reply_to_screen_name": null, "retweet_count": 2735, "favorite_count": 3158, "source": "TweetDeck", "id_str": "633629814713397249", "is_retweet": false}, {"created_at": "Thu Jun 11 12:07:51 +0000 2015", "text": "Pedal to the metal. #tbt http://t.co/OEBj1DhOuH", "in_reply_to_screen_name": null, "retweet_count": 523, "favorite_count": 2030, "source": "TweetDeck", "id_str": "608968888370515968", "is_retweet": false}, {"created_at": "Tue Jun 16 15:54:44 +0000 2015", "text": "Hillary told her story and shared her vision for the future\u2014now, add your notes using @Genius: http://t.co/dVieJ1NOpa", "in_reply_to_screen_name": null, "retweet_count": 138, "favorite_count": 226, "source": "Twitter Web Client", "id_str": "610837925820014592", "is_retweet": false}, {"created_at": "Tue Nov 17 23:40:42 +0000 2015", "text": "51% of the kids in our public schools are eligible for free or reduced cost lunches. We need to raise wages to lift families out of poverty.", "in_reply_to_screen_name": null, "retweet_count": 1048, "favorite_count": 2370, "source": "TweetDeck", "id_str": "666762920555057152", "is_retweet": false}, {"created_at": "Sun Dec 06 18:44:00 +0000 2015", "text": "No one should face discrimination because of who they are and who they love. That\u2019s why Hillary is #StillFighting.\nhttps://t.co/uN85txDgcP", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 2828, "source": "Twitter Web Client", "id_str": "673573623181914112", "is_retweet": false}, {"created_at": "Wed Sep 09 13:27:33 +0000 2015", "text": "\"Is it perfect? No agreement like this ever is. But is it a strong agreement? Yes. And we absolutely should not turn it down.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 557, "source": "TweetDeck", "id_str": "641603853918564352", "is_retweet": false}, {"created_at": "Wed Nov 11 04:22:49 +0000 2015", "text": "If you're proud to be a Democrat after watching tonight's #GOPdebate, add your name here: https://t.co/gcsfX41UyE", "in_reply_to_screen_name": null, "retweet_count": 457, "favorite_count": 1526, "source": "TweetDeck", "id_str": "664297201280008192", "is_retweet": false}, {"created_at": "Wed Jul 22 03:20:36 +0000 2015", "text": "Dinner. With Hillary. Yes, that Hillary. Enter for your spot at the table: http://t.co/trsS7tD9fN http://t.co/XZML3zo14O", "in_reply_to_screen_name": null, "retweet_count": 196, "favorite_count": 391, "source": "Twitter for iPhone", "id_str": "623694102220156928", "is_retweet": false}, {"created_at": "Fri Sep 04 22:40:45 +0000 2015", "text": "\"Women's rights are human rights.\u201d Make a statement\u2014in 6 different languages\u2014wherever you go: http://t.co/ofU2KVwDcU http://t.co/nocsrXPmWc", "in_reply_to_screen_name": null, "retweet_count": 329, "favorite_count": 683, "source": "TweetDeck", "id_str": "639931130184093696", "is_retweet": false}, {"created_at": "Tue Sep 08 22:05:06 +0000 2015", "text": "This weekend in Iowa, a mom told Hillary: \"I\u2019m counting on you to know what it\u2019s like to be a working mother.\u201d\nhttps://t.co/LhURfBj9As", "in_reply_to_screen_name": null, "retweet_count": 348, "favorite_count": 755, "source": "Twitter Web Client", "id_str": "641371709128335360", "is_retweet": false}, {"created_at": "Thu Jul 16 00:40:14 +0000 2015", "text": "Some great numbers: http://t.co/t5jBofWU6V", "in_reply_to_screen_name": null, "retweet_count": 247, "favorite_count": 663, "source": "TweetDeck", "id_str": "621479419408949248", "is_retweet": false}, {"created_at": "Thu Oct 22 17:50:43 +0000 2015", "text": "The work of Chris Stevens and his colleagues represented the best of this approach to foreign policy.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 208, "favorite_count": 385, "source": "Twitter Web Client", "id_str": "657252758026899457", "is_retweet": false}, {"created_at": "Tue Dec 15 22:39:56 +0000 2015", "text": "\"To all our Muslim American brothers and sisters: This is your country too. And I am proud to be your fellow American.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1436, "favorite_count": 2675, "source": "TweetDeck", "id_str": "676894487268990976", "is_retweet": false}, {"created_at": "Tue Nov 03 15:52:26 +0000 2015", "text": "A 12-year-old feminist named Olivia wrote Hillary this brave, heartwarming letter. Olivia 2040, anybody? https://t.co/5ZEKdOpTrQ", "in_reply_to_screen_name": null, "retweet_count": 1350, "favorite_count": 3840, "source": "TweetDeck", "id_str": "661571645446864896", "is_retweet": false}, {"created_at": "Wed Apr 29 14:24:30 +0000 2015", "text": "\"It\u2019s time to change our approach. It\u2019s time to end the era of mass incarceration.\" - Hillary at the #DinkinsForum", "in_reply_to_screen_name": null, "retweet_count": 908, "favorite_count": 1589, "source": "Twitter Web Client", "id_str": "593420598291890176", "is_retweet": false}, {"created_at": "Wed Sep 16 12:03:26 +0000 2015", "text": "See where Hillary stands on many issues, from college affordability to voting rights expansion: http://t.co/IB2KxWgZyR", "in_reply_to_screen_name": null, "retweet_count": 288, "favorite_count": 448, "source": "TweetDeck", "id_str": "644119397011955712", "is_retweet": false}, {"created_at": "Thu Aug 27 16:44:44 +0000 2015", "text": "http://t.co/q05u9Hjlgd", "in_reply_to_screen_name": null, "retweet_count": 1470, "favorite_count": 2104, "source": "TweetDeck", "id_str": "636942432060489728", "is_retweet": false}, {"created_at": "Thu May 21 17:25:16 +0000 2015", "text": "One of my favorite &amp; proudest things as a business owner is our pro-bono work. Every year, we donate a year's worth of work to a non-profit.", "in_reply_to_screen_name": null, "retweet_count": 73, "favorite_count": 234, "source": "TweetDeck", "id_str": "601438623100051457", "is_retweet": false}, {"created_at": "Wed Jun 17 13:10:44 +0000 2015", "text": "Step 1: Plug in headphones.\nStep 2: Press play. http://t.co/dL7vGv4gGi http://t.co/cRM22LIdAG", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1181, "source": "TweetDeck", "id_str": "611159037724499968", "is_retweet": false}, {"created_at": "Mon Aug 10 19:31:41 +0000 2015", "text": "A5 Rising tuition leaves families with a painful choice: pass up on a degree, \u200aor do whatever it takes\u2014even go way into debt. #MillennialMon", "in_reply_to_screen_name": null, "retweet_count": 222, "favorite_count": 398, "source": "TweetDeck", "id_str": "630823853489569793", "is_retweet": false}, {"created_at": "Tue Jul 21 22:59:44 +0000 2015", "text": "We need to protect reforms we've made to rein in excessive risk on Wall Street, like Dodd-Frank\u2014and go further. http://t.co/xJj1egggPy", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 559, "source": "Twitter Web Client", "id_str": "623628453087199232", "is_retweet": false}, {"created_at": "Tue Jul 14 14:00:46 +0000 2015", "text": "Read Hillary's ideas for the economy in her own words: http://t.co/2ta3l1zMU8 http://t.co/Ey3jGrNagx", "in_reply_to_screen_name": null, "retweet_count": 299, "favorite_count": 501, "source": "Twitter Web Client", "id_str": "620956103828992000", "is_retweet": false}, {"created_at": "Sun Nov 29 23:27:27 +0000 2015", "text": "10 members of the @SenateDems \u201cgirls\u2019 club\u201d came together to talk about why they\u2019re supporting Hillary Clinton: https://t.co/pTf6AqI8UJ", "in_reply_to_screen_name": null, "retweet_count": 297, "favorite_count": 633, "source": "Twitter Web Client", "id_str": "671108241175281665", "is_retweet": false}, {"created_at": "Tue Apr 14 20:38:07 +0000 2015", "text": "\"We need to strengthen families and communities because that's where it all starts.\"", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 1519, "source": "Twitter Web Client", "id_str": "588078803664113665", "is_retweet": false}, {"created_at": "Sun Jun 21 14:05:53 +0000 2015", "text": "Happy Father's Day. http://t.co/Ju1DddRjKO", "in_reply_to_screen_name": null, "retweet_count": 791, "favorite_count": 2315, "source": "Twitter Web Client", "id_str": "612622468285616128", "is_retweet": false}, {"created_at": "Sun Apr 12 21:34:43 +0000 2015", "text": "Be a part of this campaign from the very beginning: https://t.co/gYqo31Pp1l", "in_reply_to_screen_name": null, "retweet_count": 2619, "favorite_count": 4451, "source": "Twitter Web Client", "id_str": "587368273160839169", "is_retweet": false}, {"created_at": "Sat Apr 18 22:02:10 +0000 2015", "text": "Head over to Facebook for a photo recap of Hillary's trip to Iowa: https://t.co/zKYQMzemyz http://t.co/UEqrIWbNhE", "in_reply_to_screen_name": null, "retweet_count": 504, "favorite_count": 1154, "source": "Twitter Web Client", "id_str": "589549509052600320", "is_retweet": false}, {"created_at": "Mon Jun 29 13:59:52 +0000 2015", "text": "Team #Hillary2016 out in full force at #NYCpride2015\u2014plus a few familiar faces. @ChelseaClinton @jasoncollins98 http://t.co/HfTvFwgFsk", "in_reply_to_screen_name": null, "retweet_count": 254, "favorite_count": 632, "source": "TweetDeck", "id_str": "615520060623462400", "is_retweet": false}, {"created_at": "Tue Oct 13 16:12:39 +0000 2015", "text": "Happy birthday, @USNavy! Proud of the generations of brave sailors serving our country and the families who love them. #240NavyBday", "in_reply_to_screen_name": null, "retweet_count": 373, "favorite_count": 856, "source": "TweetDeck", "id_str": "653966586836054016", "is_retweet": false}, {"created_at": "Sun Sep 27 15:12:52 +0000 2015", "text": "Hillary on her vision for the country: http://t.co/rspNDPyGc8", "in_reply_to_screen_name": null, "retweet_count": 512, "favorite_count": 825, "source": "TweetDeck", "id_str": "648153337280471040", "is_retweet": false}, {"created_at": "Wed Sep 23 00:56:29 +0000 2015", "text": "Time to invest in a clean energy future\u2014not build a pipeline to carry our continent's dirtiest fuel across the US. I oppose Keystone XL. -H", "in_reply_to_screen_name": null, "retweet_count": 1228, "favorite_count": 2073, "source": "TweetDeck", "id_str": "646488271871213568", "is_retweet": false}, {"created_at": "Mon Jul 06 23:02:03 +0000 2015", "text": "Sun-inspired styles (because life's better with no ceilings): http://t.co/Ukvqf0ofZL http://t.co/Etoil3Iw7M", "in_reply_to_screen_name": null, "retweet_count": 295, "favorite_count": 1027, "source": "Twitter Web Client", "id_str": "618193217624895488", "is_retweet": false}, {"created_at": "Thu Jul 09 03:38:25 +0000 2015", "text": "Anyone who believes Americans aren't working hard enough hasn't met enough American workers. http://t.co/wyS1p8zcDo", "in_reply_to_screen_name": null, "retweet_count": 2747, "favorite_count": 3339, "source": "Twitter Web Client", "id_str": "618987543674142720", "is_retweet": false}, {"created_at": "Wed Jul 29 21:06:31 +0000 2015", "text": "Rising fifth grader Emily had a big question for Hillary in New Hampshire:\nhttps://t.co/8U0uY3gD3C", "in_reply_to_screen_name": null, "retweet_count": 406, "favorite_count": 837, "source": "Twitter Web Client", "id_str": "626499063886671874", "is_retweet": false}, {"created_at": "Sun May 24 17:56:52 +0000 2015", "text": "Get 10% off #Hillary2016 swag when the store opens\u2014you can spend the savings on sunscreen. http://t.co/GwRJhOzwc1 http://t.co/qilsjBkbzK", "in_reply_to_screen_name": null, "retweet_count": 145, "favorite_count": 218, "source": "Twitter Web Client", "id_str": "602533737872646144", "is_retweet": false}, {"created_at": "Thu Jul 02 13:00:08 +0000 2015", "text": "From Park Ridge to Roosevelt Island and beyond, follow all of Hillary's Memorable Moments on @Pinterest: http://t.co/cLwTvurEZ6", "in_reply_to_screen_name": null, "retweet_count": 126, "favorite_count": 213, "source": "Twitter Web Client", "id_str": "616592189309747200", "is_retweet": false}, {"created_at": "Fri Oct 09 00:55:22 +0000 2015", "text": "An important question from a young man: \u201cCan you fix the prison problems?\u201d\nhttps://t.co/yDCR348i5G", "in_reply_to_screen_name": null, "retweet_count": 453, "favorite_count": 849, "source": "Twitter Web Client", "id_str": "652286195032915968", "is_retweet": false}, {"created_at": "Sun Dec 20 03:35:00 +0000 2015", "text": "Don't you think? https://t.co/I7cSwLqlEq #DemDebate https://t.co/ggCFCbfgm0", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 2016, "source": "TweetDeck", "id_str": "678418296719437824", "is_retweet": false}, {"created_at": "Sun Jul 05 14:07:37 +0000 2015", "text": "Towel, cape\u2014make it what you want. http://t.co/xJ51bx886r http://t.co/PZlEhRYSPd", "in_reply_to_screen_name": null, "retweet_count": 232, "favorite_count": 646, "source": "Twitter Web Client", "id_str": "617696336025096192", "is_retweet": false}, {"created_at": "Tue Oct 20 14:14:25 +0000 2015", "text": "Former Senior Advisor to President Obama @davidaxelrod on Hillary's greatest accomplishments as Secretary of State: https://t.co/1yaBsfZkUG", "in_reply_to_screen_name": null, "retweet_count": 661, "favorite_count": 1114, "source": "TweetDeck", "id_str": "656473549184479233", "is_retweet": false}, {"created_at": "Thu May 21 15:16:00 +0000 2015", "text": "Matt, on the left in that photo, is our talented senior designer\u2014he's been with us since he was a student intern!", "in_reply_to_screen_name": null, "retweet_count": 41, "favorite_count": 119, "source": "Twitter Web Client", "id_str": "601406090136391680", "is_retweet": false}, {"created_at": "Thu Jul 23 18:52:05 +0000 2015", "text": "The Equality Act will mean full federal equality for LGBT Americans &amp; stronger anti-discrimination protections for everyone. Past time. -H", "in_reply_to_screen_name": null, "retweet_count": 742, "favorite_count": 1400, "source": "Twitter Web Client", "id_str": "624290907634958336", "is_retweet": false}, {"created_at": "Thu Oct 29 01:13:27 +0000 2015", "text": "Las mujeres deber\u00edan de ganar lo mismo por hacer el mismo trabajo que los hombres. Punto. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 595, "favorite_count": 773, "source": "TweetDeck", "id_str": "659538504280616960", "is_retweet": false}, {"created_at": "Sat Jun 13 17:01:51 +0000 2015", "text": "\"Madam President! Madam President! Madam President!\" http://t.co/c7Jolknti4", "in_reply_to_screen_name": null, "retweet_count": 815, "favorite_count": 1738, "source": "Twitter Web Client", "id_str": "609767651469078528", "is_retweet": false}, {"created_at": "Mon Apr 20 20:58:25 +0000 2015", "text": "Hat envy in Keene, NH http://t.co/8kGlDrWM8G", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 1301, "source": "Twitter Web Client", "id_str": "590258240769941505", "is_retweet": false}, {"created_at": "Mon Jun 15 14:59:35 +0000 2015", "text": "\"Early childhood education is so important\u2014I want more for my daughter than I had.\" \u2014Ellen and Katie in Rochester, NH http://t.co/NcYjI51hsV", "in_reply_to_screen_name": null, "retweet_count": 236, "favorite_count": 518, "source": "TweetDeck", "id_str": "610461658922749952", "is_retweet": false}, {"created_at": "Thu Jun 25 17:02:20 +0000 2015", "text": "\"You have to get up off the floor\u2014and you keep fighting.\" Hillary on the fight for health care back in 1993: http://t.co/vedCBng2cz", "in_reply_to_screen_name": null, "retweet_count": 252, "favorite_count": 512, "source": "TweetDeck", "id_str": "614116425574301696", "is_retweet": false}, {"created_at": "Mon Nov 02 23:23:54 +0000 2015", "text": "Their faces say it all. https://t.co/vB2FrSHgDJ", "in_reply_to_screen_name": null, "retweet_count": 225, "favorite_count": 429, "source": "TweetDeck", "id_str": "661322873840214016", "is_retweet": false}, {"created_at": "Sun Nov 29 15:37:45 +0000 2015", "text": "What did her mom say when Hillary thought @Wellesley was too hard? The best advice she could have gotten.\nhttps://t.co/fSlnvdmvHZ", "in_reply_to_screen_name": null, "retweet_count": 514, "favorite_count": 1176, "source": "Twitter Web Client", "id_str": "670990034124730368", "is_retweet": false}, {"created_at": "Wed Oct 14 02:46:58 +0000 2015", "text": "For too long, issues affecting women\u2014from reproductive rights to paid leave\u2014have been dismissed as \"women's issues.\" Those days are over.", "in_reply_to_screen_name": null, "retweet_count": 2178, "favorite_count": 3891, "source": "TweetDeck", "id_str": "654126218548264960", "is_retweet": false}, {"created_at": "Thu Jun 25 15:10:50 +0000 2015", "text": "Everyone deserves to live free from discrimination. Glad the Supreme Court did the right thing to #KeepHousingFair. -H", "in_reply_to_screen_name": null, "retweet_count": 1253, "favorite_count": 2612, "source": "Twitter Web Client", "id_str": "614088367563743232", "is_retweet": false}, {"created_at": "Fri Jul 24 18:37:43 +0000 2015", "text": "Corporations' responsibility isn't just to their shareholders. http://t.co/rfM3aOPYXh", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 681, "source": "TweetDeck", "id_str": "624649679788228608", "is_retweet": false}, {"created_at": "Sun Jul 26 16:17:29 +0000 2015", "text": "She told me that he was a great runner! I just thought, \"How would this happen?\" I knew it should happen, but I also knew the challenges.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 51, "favorite_count": 149, "source": "Twitter Web Client", "id_str": "625339162401611776", "is_retweet": false}, {"created_at": "Wed Sep 30 21:29:39 +0000 2015", "text": "Hillary\u2019s working to earn every vote, but needs your support. Donate by tonight's deadline: http://t.co/XlRpuEsjSi http://t.co/yGBds5whPW", "in_reply_to_screen_name": null, "retweet_count": 281, "favorite_count": 478, "source": "TweetDeck", "id_str": "649335322736787456", "is_retweet": false}, {"created_at": "Fri Nov 13 21:09:11 +0000 2015", "text": "Follow #Hillary2016 campaign staff to stay in the know during tomorrow\u2019s #DemDebate: https://t.co/Ab57ZumWw9", "in_reply_to_screen_name": null, "retweet_count": 275, "favorite_count": 531, "source": "TweetDeck", "id_str": "665275236095361024", "is_retweet": false}, {"created_at": "Thu Aug 06 01:52:39 +0000 2015", "text": "Hemos tenido muchos abuelos en @lacasablanca, pero nunca hemos tenido una abuela. \u2014Hillary en @scdp: http://t.co/wht093L78R", "in_reply_to_screen_name": null, "retweet_count": 228, "favorite_count": 410, "source": "Twitter Web Client", "id_str": "629107786358628353", "is_retweet": false}, {"created_at": "Thu Sep 24 18:50:08 +0000 2015", "text": "The Senate was right to block a resolution that would defund Planned Parenthood. Now, stop these attacks\u2014and don't shut down the government.", "in_reply_to_screen_name": null, "retweet_count": 731, "favorite_count": 1565, "source": "TweetDeck", "id_str": "647120850701942784", "is_retweet": false}, {"created_at": "Mon Dec 14 14:31:02 +0000 2015", "text": "\"Even though marriage equality is now legal nationwide, I\u2019m still fighting.\" \u2014@JimObergefell https://t.co/hpuEYwLLf1", "in_reply_to_screen_name": null, "retweet_count": 330, "favorite_count": 818, "source": "Twitter for iPhone", "id_str": "676409063492689920", "is_retweet": false}, {"created_at": "Tue Oct 20 00:49:08 +0000 2015", "text": "\u00a1Celebraci\u00f3n in Texas! Juli\u00e1n Castro endorses Hillary: https://t.co/Vvr9D4CbPX https://t.co/F2c9JwJIQ8", "in_reply_to_screen_name": null, "retweet_count": 409, "favorite_count": 886, "source": "TweetDeck", "id_str": "656270891190366208", "is_retweet": false}, {"created_at": "Tue Jul 14 23:37:07 +0000 2015", "text": "We have new challenges; we need new solutions. http://t.co/ltHVOwAm3X http://t.co/il2qrjjQwM", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 672, "source": "TweetDeck", "id_str": "621101147219206144", "is_retweet": false}, {"created_at": "Thu Nov 19 18:20:21 +0000 2015", "text": "Turning away orphans, discriminating against Muslims, slamming the door on Syrian refugees\u2014that is not who we are.\nhttps://t.co/VAkf6HENpG", "in_reply_to_screen_name": null, "retweet_count": 5550, "favorite_count": 8398, "source": "Twitter Web Client", "id_str": "667407077669625856", "is_retweet": false}, {"created_at": "Wed Oct 14 02:51:32 +0000 2015", "text": "We cannot afford to have a Republican succeed Barack Obama as President of the United States. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 2628, "favorite_count": 4844, "source": "Twitter Web Client", "id_str": "654127367984709632", "is_retweet": false}, {"created_at": "Wed Jul 01 15:01:58 +0000 2015", "text": "(1/3) Still running the numbers\u2014but here's what we know: In the first quarter of this campaign, supporters gave more than $45 million. -H", "in_reply_to_screen_name": null, "retweet_count": 322, "favorite_count": 623, "source": "Twitter Web Client", "id_str": "616260460980105217", "is_retweet": false}, {"created_at": "Mon Jun 29 21:17:38 +0000 2015", "text": "Hillary needs you. Help the campaign end its first quarter strong by meeting our goal before the deadline: http://t.co/VUQdxh0NRP", "in_reply_to_screen_name": null, "retweet_count": 166, "favorite_count": 280, "source": "TweetDeck", "id_str": "615630224680685568", "is_retweet": false}, {"created_at": "Sat Aug 01 23:45:14 +0000 2015", "text": "Fighting to dismantle voting rights, health care, and living wages? That doesn't sound like the right to rise.\nhttps://t.co/QhEGIkCzCP", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 1060, "source": "Twitter Web Client", "id_str": "627626168984809472", "is_retweet": false}, {"created_at": "Mon Nov 16 23:42:26 +0000 2015", "text": "No American should work full-time and struggle to get by. Raising the minimum wage will help lift millions out of poverty.", "in_reply_to_screen_name": null, "retweet_count": 1175, "favorite_count": 2873, "source": "TweetDeck", "id_str": "666400965659074562", "is_retweet": false}, {"created_at": "Thu Apr 16 18:14:26 +0000 2015", "text": "Hillary: \u201cI\u2019m excited to be here and I'm really excited about starting a campaign by talking to the people who really have a stake in it.\u201d", "in_reply_to_screen_name": null, "retweet_count": 458, "favorite_count": 1118, "source": "Twitter Web Client", "id_str": "588767422343213056", "is_retweet": false}, {"created_at": "Sat Nov 07 02:10:14 +0000 2015", "text": "Watch now: Hillary joins @maddow at the #FirstintheSouth Democratic Candidates Forum in Rock Hill, SC \u2192 https://t.co/68f9wJQYiy", "in_reply_to_screen_name": null, "retweet_count": 168, "favorite_count": 369, "source": "TweetDeck", "id_str": "662814285056184320", "is_retweet": false}, {"created_at": "Fri Oct 16 01:19:45 +0000 2015", "text": "No puede ser que las latinas ganen en promedio 55 centavos por cada d\u00f3lar que gana un hombre blanco. #LatinaEqualPay", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 542, "source": "Twitter for iPhone", "id_str": "654829046082215936", "is_retweet": false}, {"created_at": "Wed May 06 01:57:41 +0000 2015", "text": "It's time to fix our broken immigration system. Read Hillary's remarks in Nevada earlier: http://t.co/mViZAk4spG http://t.co/nP2pvS8g0I", "in_reply_to_screen_name": null, "retweet_count": 621, "favorite_count": 814, "source": "TweetDeck", "id_str": "595769369101213697", "is_retweet": false}, {"created_at": "Thu Mar 26 23:37:44 +0000 2015", "text": "Protecting pregnant women from discrimination shouldn't be a fight, should be as American as apple pie. More to do: \nhttp://t.co/icUxTfuBUz", "in_reply_to_screen_name": null, "retweet_count": 1238, "favorite_count": 1878, "source": "Twitter for iPhone", "id_str": "581238635594403840", "is_retweet": false}, {"created_at": "Tue Apr 14 18:45:59 +0000 2015", "text": "\"When we heard she was coming, we figured we oughta be here to welcome her.\" http://t.co/iHKFdtdm1e", "in_reply_to_screen_name": null, "retweet_count": 660, "favorite_count": 2351, "source": "Twitter Web Client", "id_str": "588050586563665921", "is_retweet": false}, {"created_at": "Sat Dec 05 16:27:52 +0000 2015", "text": "Proud to stand for quality, affordable health care. Proud to #StandWithPP. #solidarity https://t.co/R3jdPbc9wT", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 1288, "source": "TweetDeck", "id_str": "673176975704350721", "is_retweet": false}, {"created_at": "Wed Dec 02 13:03:53 +0000 2015", "text": "Hillary talked health care, being a grandmother, and more on @Quora: https://t.co/wOGAQZu8xc", "in_reply_to_screen_name": null, "retweet_count": 244, "favorite_count": 549, "source": "Twitter for iPhone", "id_str": "672038476448182272", "is_retweet": false}, {"created_at": "Sun Oct 04 23:30:54 +0000 2015", "text": "In this week's Facebook Q&amp;A, Hillary took on Jeb\u2019s claim that Democrats use \"free stuff\" to appeal to minorities. http://t.co/nx2FrUKl5G", "in_reply_to_screen_name": null, "retweet_count": 987, "favorite_count": 1651, "source": "Twitter Web Client", "id_str": "650815385764241408", "is_retweet": false}, {"created_at": "Tue Dec 15 22:26:21 +0000 2015", "text": "\"I have this old fashioned idea that we elect a president to keep us safe...I\u2019m not going to let the gun lobby tell me that\u2019s not right.\"", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 1375, "source": "TweetDeck", "id_str": "676891068512796673", "is_retweet": false}, {"created_at": "Fri Jul 24 22:48:07 +0000 2015", "text": "We must hold Wall Street accountable. Read more from Hillary's Facebook Q&amp;A: http://t.co/EVdGCtDdSD http://t.co/wy8erncXFv", "in_reply_to_screen_name": null, "retweet_count": 367, "favorite_count": 624, "source": "TweetDeck", "id_str": "624712694185246721", "is_retweet": false}, {"created_at": "Fri Dec 04 21:08:01 +0000 2015", "text": "It\u2019s not complicated: If you are too dangerous to fly in America, you are too dangerous to buy a gun in America.\nhttps://t.co/PbUHmAGCzU", "in_reply_to_screen_name": null, "retweet_count": 1762, "favorite_count": 3057, "source": "Twitter Web Client", "id_str": "672885087663296512", "is_retweet": false}, {"created_at": "Mon Sep 28 21:02:15 +0000 2015", "text": "Wishing all Korean Americans and their families a safe and happy Chuseok!", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 636, "source": "Twitter Web Client", "id_str": "648603651611623424", "is_retweet": false}, {"created_at": "Tue Dec 01 17:47:12 +0000 2015", "text": "These little girls have a message for America: When it comes to presidents, \u201c44 boys is too many.\u201d\nhttps://t.co/i5uNW3qkAf", "in_reply_to_screen_name": null, "retweet_count": 894, "favorite_count": 1664, "source": "Twitter Web Client", "id_str": "671747386796994560", "is_retweet": false}, {"created_at": "Mon Aug 24 01:08:45 +0000 2015", "text": "We must make community colleges tuition-free across America.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 2512, "favorite_count": 3285, "source": "Twitter Web Client", "id_str": "635619720805384192", "is_retweet": false}, {"created_at": "Thu Dec 10 20:23:31 +0000 2015", "text": "It wasn\u2019t always pantsuits and presidential races. Some of Hillary's best #TBT moments: https://t.co/PaBpGpWRbZ https://t.co/ro7EsXFd7T", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 952, "source": "TweetDeck", "id_str": "675048216195411969", "is_retweet": false}, {"created_at": "Sat Jun 13 18:13:58 +0000 2015", "text": "Hillary's speech from today was a little longer than 140 characters, but you can find the whole thing here: https://t.co/l08bk5wpoG", "in_reply_to_screen_name": null, "retweet_count": 505, "favorite_count": 681, "source": "Twitter Web Client", "id_str": "609785799551397888", "is_retweet": false}, {"created_at": "Wed Jun 17 20:58:15 +0000 2015", "text": "Hillary just called for a $1,500 tax credit to encourage businesses to invest in workers' skills: http://t.co/urn04KnbWJ", "in_reply_to_screen_name": null, "retweet_count": 191, "favorite_count": 382, "source": "TweetDeck", "id_str": "611276693232308224", "is_retweet": false}, {"created_at": "Tue May 05 22:49:43 +0000 2015", "text": "No GOP candidate has consistently supported a path to citizenship. When they talk about \u201clegal status,\u201d that\u2019s code for \u201c2nd class status.\u201d", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 1033, "source": "Twitter Web Client", "id_str": "595722068588630016", "is_retweet": false}, {"created_at": "Sat Nov 21 15:05:55 +0000 2015", "text": "We\u2019re better than that. https://t.co/ZI9bt8h2a2", "in_reply_to_screen_name": null, "retweet_count": 2620, "favorite_count": 4752, "source": "Twitter Web Client", "id_str": "668082922000400384", "is_retweet": false}, {"created_at": "Wed Jun 24 16:11:20 +0000 2015", "text": "\"Some have suggested that gay rights and human rights are separate and distinct\u2014in fact, they are one and the same.\"\nhttps://t.co/Vc5v7namo9", "in_reply_to_screen_name": null, "retweet_count": 3697, "favorite_count": 4737, "source": "Twitter Web Client", "id_str": "613741205977894912", "is_retweet": false}, {"created_at": "Sun Nov 15 03:50:35 +0000 2015", "text": "For too long, issues affecting women and families\u2014from childcare to paid leave\u2014have been dismissed as \"women's issues.\" Those days are over.", "in_reply_to_screen_name": null, "retweet_count": 1270, "favorite_count": 2656, "source": "TweetDeck", "id_str": "665738642820698114", "is_retweet": false}, {"created_at": "Wed May 13 18:36:57 +0000 2015", "text": "Heartbroken for the passengers and families affected by #Amtrak188, and grateful to all the first responders on the scene. -H", "in_reply_to_screen_name": null, "retweet_count": 467, "favorite_count": 1014, "source": "TweetDeck", "id_str": "598557558165614592", "is_retweet": false}, {"created_at": "Wed Oct 07 01:29:19 +0000 2015", "text": "We need comprehensive immigration reform with a real path to full citizenship. There is no place in America for second-class citizenship.", "in_reply_to_screen_name": null, "retweet_count": 1069, "favorite_count": 1626, "source": "Twitter for iPhone", "id_str": "651569964382597120", "is_retweet": false}, {"created_at": "Wed Oct 14 02:56:42 +0000 2015", "text": "Hillary has fought for women her whole life\u2014and she's just getting started. #ImWithHer #DemDebate http://t.co/vr1z1APQxJ", "in_reply_to_screen_name": null, "retweet_count": 1443, "favorite_count": 2696, "source": "TweetDeck", "id_str": "654128669292666880", "is_retweet": false}, {"created_at": "Mon Aug 10 18:34:50 +0000 2015", "text": "Cost won't be a barrier to an education. Debt won't hold you back. Read Hillary's plan: http://t.co/A4pWb3fOf4 http://t.co/KVyr8SlSVn", "in_reply_to_screen_name": null, "retweet_count": 1978, "favorite_count": 1656, "source": "TweetDeck", "id_str": "630809548459220992", "is_retweet": false}, {"created_at": "Tue Aug 04 14:18:54 +0000 2015", "text": "Hillary's spent her entire life standing up for kids &amp; families. Watch one of our first TV ads of the 2016 campaign:\nhttps://t.co/1WNZO5Wavj", "in_reply_to_screen_name": null, "retweet_count": 704, "favorite_count": 1083, "source": "Twitter Web Client", "id_str": "628570813277433856", "is_retweet": false}, {"created_at": "Wed May 06 20:28:21 +0000 2015", "text": "Join this campaign if you agree with Hillary on comprehensive immigration reform \u2192 http://t.co/E2cY58edLT https://t.co/poSKRN3oUH", "in_reply_to_screen_name": null, "retweet_count": 342, "favorite_count": 410, "source": "TweetDeck", "id_str": "596048877112991744", "is_retweet": false}, {"created_at": "Sun Dec 20 02:02:01 +0000 2015", "text": "We're not at war with a religion; we're at war with radical jihadism. Muslim Americans: This is your country too. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 2318, "favorite_count": 4037, "source": "TweetDeck", "id_str": "678394892725460993", "is_retweet": false}, {"created_at": "Sat Sep 19 19:22:29 +0000 2015", "text": "Cheers to you, @jimmyfallon. Happy birthday! \ud83c\udf77 http://t.co/SBMyEfRzWc", "in_reply_to_screen_name": null, "retweet_count": 831, "favorite_count": 2475, "source": "TweetDeck", "id_str": "645317053172326400", "is_retweet": false}, {"created_at": "Sat Oct 03 03:33:48 +0000 2015", "text": "\u00a1Bienvenido a Latinos por Hillary, @marcanthony! Para tambi\u00e9n unirte textea LATINOS a 47246. http://t.co/PucWkRU7l0", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1136, "source": "TweetDeck", "id_str": "650151738805239808", "is_retweet": false}, {"created_at": "Fri Sep 18 01:01:20 +0000 2015", "text": "Love this idea, @smrtgrls. If you were president, what\u2019s the first thing you would do? #SmartGirlsAsk https://t.co/vx3kU3irke", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 895, "source": "Twitter Web Client", "id_str": "644677551454060544", "is_retweet": false}, {"created_at": "Sat Dec 05 03:50:56 +0000 2015", "text": "Heartbroken for the victims' families and our friends at @seiu. -H https://t.co/5a5cxHdpOG", "in_reply_to_screen_name": null, "retweet_count": 350, "favorite_count": 882, "source": "TweetDeck", "id_str": "672986484572618753", "is_retweet": false}, {"created_at": "Fri Jul 31 16:05:02 +0000 2015", "text": "\"The United States needs to lead in the Americas. And if we don't, make no mistake\u2014others will.\"", "in_reply_to_screen_name": null, "retweet_count": 244, "favorite_count": 515, "source": "TweetDeck", "id_str": "627147969813442560", "is_retweet": false}, {"created_at": "Tue Jun 30 13:24:03 +0000 2015", "text": "Midnight deadline! Put your name on the list of supporters who were with HRC from the start: http://t.co/8W3E2ecCsY http://t.co/x5UHYoBU1E", "in_reply_to_screen_name": null, "retweet_count": 107, "favorite_count": 197, "source": "TweetDeck", "id_str": "615873431637094401", "is_retweet": false}, {"created_at": "Wed Sep 09 20:50:11 +0000 2015", "text": "Hillary\u2019s life wouldn\u2019t have been the same without the guidance of some special teachers. http://t.co/DZBxsuZJ7C http://t.co/uPe0lvvI2t", "in_reply_to_screen_name": null, "retweet_count": 280, "favorite_count": 631, "source": "TweetDeck", "id_str": "641715244939759616", "is_retweet": false}, {"created_at": "Fri Nov 20 13:06:01 +0000 2015", "text": "No one working full-time in America should have to raise their kids in poverty.", "in_reply_to_screen_name": null, "retweet_count": 927, "favorite_count": 2290, "source": "TweetDeck", "id_str": "667690360362020864", "is_retweet": false}, {"created_at": "Tue Aug 11 01:13:55 +0000 2015", "text": "Add us on Snapchat! @hillaryclinton \ud83d\udc7b http://t.co/ZpfETuFgDM", "in_reply_to_screen_name": null, "retweet_count": 311, "favorite_count": 770, "source": "Twitter Web Client", "id_str": "630909980569415680", "is_retweet": false}, {"created_at": "Tue Apr 14 22:14:05 +0000 2015", "text": "\"This was not how I thought this day was going to go when I woke up this morning!\" \u2014Nikki &amp; Lisa in Cedar Rapids http://t.co/z7Kep8ndUS", "in_reply_to_screen_name": null, "retweet_count": 235, "favorite_count": 758, "source": "Twitter Web Client", "id_str": "588102955552899072", "is_retweet": false}, {"created_at": "Wed Apr 15 18:49:41 +0000 2015", "text": "Hillary: \u201dThe deck is still stacked in favor of those at the top, and we need to shuffle the cards. We need to play a different hand.\"", "in_reply_to_screen_name": null, "retweet_count": 1139, "favorite_count": 2014, "source": "Twitter Web Client", "id_str": "588413902939103233", "is_retweet": false}, {"created_at": "Tue Apr 14 19:41:51 +0000 2015", "text": "Hillary talking education and college affordability with students at Kirkwood Community College: http://t.co/qzZki1hrFQ", "in_reply_to_screen_name": null, "retweet_count": 675, "favorite_count": 1501, "source": "Twitter Web Client", "id_str": "588064642481659905", "is_retweet": false}, {"created_at": "Wed Dec 23 20:50:53 +0000 2015", "text": "An Iowa fifth grader asked Hillary: \u201cWhat are you going to do about all this bullying?\u201d\nhttps://t.co/XH2uNcu9yO", "in_reply_to_screen_name": null, "retweet_count": 1446, "favorite_count": 2939, "source": "Twitter Web Client", "id_str": "679766144954179584", "is_retweet": false}, {"created_at": "Fri Oct 23 22:16:26 +0000 2015", "text": "Welcome to @sesamestreet, Julia! Kudos to @SesameWorkshop &amp; @autismspeaks for educating parents &amp; kids about autism. https://t.co/v0gDxpVdjj", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 1019, "source": "Twitter Web Client", "id_str": "657682015010082816", "is_retweet": false}, {"created_at": "Sat Dec 26 15:48:07 +0000 2015", "text": "Captain Khan saved the lives of his entire unit when he bravely stepped forward to investigate a suspicious vehicle.\nhttps://t.co/GGEf5kgjLy", "in_reply_to_screen_name": null, "retweet_count": 1006, "favorite_count": 1850, "source": "Twitter Web Client", "id_str": "680777115051003904", "is_retweet": false}, {"created_at": "Sun Jul 05 00:23:42 +0000 2015", "text": "Consulting with an important advisor at the Fourth of July parade in Gorham, NH. http://t.co/lQGm7cjdFE", "in_reply_to_screen_name": null, "retweet_count": 498, "favorite_count": 1527, "source": "Twitter for iPhone", "id_str": "617488990883737600", "is_retweet": false}, {"created_at": "Sun Jun 07 14:12:28 +0000 2015", "text": "Spotted at Texas Southern University: http://t.co/dKpqqFX7fs", "in_reply_to_screen_name": null, "retweet_count": 183, "favorite_count": 716, "source": "TweetDeck", "id_str": "607550696716562432", "is_retweet": false}, {"created_at": "Sat Oct 03 19:27:53 +0000 2015", "text": "\"Congress must pass the Federal Equality Act [to] finally outlaw discrimination against LGBT people basically everywhere.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 640, "favorite_count": 1330, "source": "Twitter Web Client", "id_str": "650391843235065857", "is_retweet": false}, {"created_at": "Thu Jul 09 15:00:29 +0000 2015", "text": "Tales from the trail\u2014pin your way from New Hampshire to Nevada and everywhere in between. http://t.co/B7MvKOcop8 http://t.co/mAgh15ltQv", "in_reply_to_screen_name": null, "retweet_count": 165, "favorite_count": 365, "source": "Twitter Web Client", "id_str": "619159190582464512", "is_retweet": false}, {"created_at": "Thu Oct 15 12:07:41 +0000 2015", "text": "Hillary's been a fighter for LGBT equality for years\u2014and she's just getting warmed up. Read her fiercest quotes: http://t.co/zu5vBC573H", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 935, "source": "Twitter Web Client", "id_str": "654629716712914944", "is_retweet": false}, {"created_at": "Tue Jul 21 02:55:05 +0000 2015", "text": "If Sen. McConnell thinks fighting for women and families is playing the \"gender card\"\u2014okay. Here's our #gendercard: http://t.co/mtSCvJWqAD", "in_reply_to_screen_name": null, "retweet_count": 1352, "favorite_count": 2266, "source": "TweetDeck", "id_str": "623325292686393344", "is_retweet": false}, {"created_at": "Wed Nov 11 04:03:40 +0000 2015", "text": "Yep\u2014Hillary\u2019s resume is full of accomplishments. #GOPdebate https://t.co/QSyZ6fTRWm", "in_reply_to_screen_name": null, "retweet_count": 619, "favorite_count": 1266, "source": "TweetDeck", "id_str": "664292382049832961", "is_retweet": false}, {"created_at": "Wed Oct 14 18:42:25 +0000 2015", "text": "We can protect the Second Amendment while also protecting our families and communities from gun violence. http://t.co/K3DN9ORtrk", "in_reply_to_screen_name": null, "retweet_count": 1133, "favorite_count": 2377, "source": "TweetDeck", "id_str": "654366668190273536", "is_retweet": false}, {"created_at": "Sun Sep 20 02:28:00 +0000 2015", "text": ".@POTUS is right: When we ensure black women and girls have the opportunity to live up to their God-given potential, America gets ahead. -H", "in_reply_to_screen_name": null, "retweet_count": 1060, "favorite_count": 2334, "source": "TweetDeck", "id_str": "645424136689426432", "is_retweet": false}, {"created_at": "Thu Oct 29 16:24:32 +0000 2015", "text": "Why are @OITNB\u2019s @UzoAduba &amp; Dascha Polanco on Team Hillary? \"She cares about the things that are important to us.\"\nhttps://t.co/uKBY0c0NDg", "in_reply_to_screen_name": null, "retweet_count": 471, "favorite_count": 920, "source": "Twitter Web Client", "id_str": "659767786806206465", "is_retweet": false}, {"created_at": "Mon Jul 27 00:52:07 +0000 2015", "text": "Stand with Hillary for a healthier climate: http://t.co/l2hJBII8ya http://t.co/a2Z5Hi6eBk", "in_reply_to_screen_name": null, "retweet_count": 423, "favorite_count": 792, "source": "Twitter Web Client", "id_str": "625468674133131264", "is_retweet": false}, {"created_at": "Fri Oct 30 19:42:19 +0000 2015", "text": "Hillary calls to \"ban the box\": \"People who have paid their debt to society need to be able to find jobs, not just closed doors and hearts.\"", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 940, "source": "TweetDeck", "id_str": "660179944811573250", "is_retweet": false}, {"created_at": "Sun May 31 19:40:10 +0000 2015", "text": "Big #Hillary2016 news: We'll announce the official campaign launch location soon. Be one of the first to know: http://t.co/8tRjsuLYCY", "in_reply_to_screen_name": null, "retweet_count": 271, "favorite_count": 544, "source": "Twitter Web Client", "id_str": "605096449622294528", "is_retweet": false}, {"created_at": "Fri Jul 31 15:38:28 +0000 2015", "text": "En vivo desde Miami: Hillary pide el levantamiento del embargo a Cuba \u2192 http://t.co/dAPfBBVeLE http://t.co/HEZm5wIL7e", "in_reply_to_screen_name": null, "retweet_count": 223, "favorite_count": 227, "source": "TweetDeck", "id_str": "627141286148055042", "is_retweet": false}, {"created_at": "Tue Dec 15 22:43:11 +0000 2015", "text": "\"Americans will not buckle or break. We will not turn on each other or turn on our principles.\" \u2014Hillary https://t.co/K6DdCAXQMh", "in_reply_to_screen_name": null, "retweet_count": 697, "favorite_count": 1685, "source": "TweetDeck", "id_str": "676895306206871552", "is_retweet": false}, {"created_at": "Tue Jun 16 00:09:24 +0000 2015", "text": "Accessories are everything. (via @TanyaTaylorNYC on Instagram) http://t.co/wjWURTZNJM", "in_reply_to_screen_name": null, "retweet_count": 286, "favorite_count": 944, "source": "TweetDeck", "id_str": "610600022741254144", "is_retweet": false}, {"created_at": "Sun Aug 09 01:06:00 +0000 2015", "text": "Hillary's pinning her way across America! Follow her on the campaign trail: http://t.co/B7MvKOcop8 http://t.co/6JCCAPdW2F", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 743, "source": "Twitter Web Client", "id_str": "630183209930764288", "is_retweet": false}, {"created_at": "Tue Oct 06 18:22:58 +0000 2015", "text": "Being a good parent has nothing to do with sexual orientation or gender identity. http://t.co/q7Qg338Oln", "in_reply_to_screen_name": null, "retweet_count": 881, "favorite_count": 1886, "source": "TweetDeck", "id_str": "651462669657112577", "is_retweet": false}, {"created_at": "Tue Sep 01 14:48:18 +0000 2015", "text": "Born September 1, 1933, Ann Richards was the 1st woman governor of TX in her own right\u2014and a fighter for families. http://t.co/FYXCIEn4Fw", "in_reply_to_screen_name": null, "retweet_count": 1365, "favorite_count": 2223, "source": "Twitter Web Client", "id_str": "638725068911194112", "is_retweet": false}, {"created_at": "Mon Nov 09 13:05:17 +0000 2015", "text": "Women shouldn\u2019t make less than men in 2015. Period. https://t.co/NUbM0Fa2eV", "in_reply_to_screen_name": null, "retweet_count": 892, "favorite_count": 1609, "source": "TweetDeck", "id_str": "663703906787135488", "is_retweet": false}, {"created_at": "Sat Sep 05 16:50:44 +0000 2015", "text": "When we join together, we can\u2019t be beat. Say you\u2019re on team #WomenForHillary: http://t.co/o9bIdII2aL http://t.co/IYrnUOZPL2", "in_reply_to_screen_name": null, "retweet_count": 477, "favorite_count": 792, "source": "Twitter Web Client", "id_str": "640205432112418817", "is_retweet": false}, {"created_at": "Wed Aug 19 02:19:26 +0000 2015", "text": "Question of the day\u2014\u201cDo you think that when you\u2019re president, you\u2019ll be paid as much as a man?\u201d Hear Hillary answer:\nhttps://t.co/IZayRKx31y", "in_reply_to_screen_name": null, "retweet_count": 2318, "favorite_count": 3245, "source": "Twitter Web Client", "id_str": "633825569084313600", "is_retweet": false}, {"created_at": "Sat Nov 21 01:31:06 +0000 2015", "text": "Have you ever met a president? RSVP today for a chance to meet President @billclinton! https://t.co/F9Vz02oCfE https://t.co/YHV3n1P4rD", "in_reply_to_screen_name": null, "retweet_count": 346, "favorite_count": 1170, "source": "TweetDeck", "id_str": "667877864168009728", "is_retweet": false}, {"created_at": "Mon Aug 03 03:51:18 +0000 2015", "text": "Our first TV ad of the 2016 campaign: Watch Hillary tell the story of her mom, Dorothy.\nhttps://t.co/K62hyntMt9", "in_reply_to_screen_name": null, "retweet_count": 1427, "favorite_count": 2341, "source": "Twitter Web Client", "id_str": "628050484977217536", "is_retweet": false}, {"created_at": "Wed Sep 30 15:09:38 +0000 2015", "text": "You shouldn't have to worry about your paycheck or your job when you have a baby or someone in your family gets sick.", "in_reply_to_screen_name": null, "retweet_count": 722, "favorite_count": 1648, "source": "Twitter Web Client", "id_str": "649239685768810496", "is_retweet": false}, {"created_at": "Wed Aug 26 22:23:25 +0000 2015", "text": "\"A strong America depends on strong rural communities.\" Read Hillary's plan: http://t.co/q9Qjhvyrtp http://t.co/ZSFgZabwHX", "in_reply_to_screen_name": null, "retweet_count": 409, "favorite_count": 732, "source": "TweetDeck", "id_str": "636665276038295552", "is_retweet": false}, {"created_at": "Sat May 23 18:40:17 +0000 2015", "text": "Thanks for the Seacoast hospitality, New Hampshire! http://t.co/Q2NEiYILTC http://t.co/9Y7QWz0I5D", "in_reply_to_screen_name": null, "retweet_count": 217, "favorite_count": 550, "source": "TweetDeck", "id_str": "602182278652030978", "is_retweet": false}, {"created_at": "Sat Sep 26 01:15:04 +0000 2015", "text": "Top CEOs earn 300 times more than a typical American worker. That\u2019s wrong. It\u2019s time for Americans to get a raise.", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 1440, "source": "TweetDeck", "id_str": "647580110653009922", "is_retweet": false}, {"created_at": "Thu Oct 29 01:51:10 +0000 2015", "text": "We can't wait any longer to keep our communities safe. We need to act on gun violence prevention. https://t.co/37QVIbRnpd #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 666, "favorite_count": 1288, "source": "TweetDeck", "id_str": "659547993033584640", "is_retweet": false}, {"created_at": "Sun Jul 26 19:06:23 +0000 2015", "text": "Sara: Thanks for sharing your story with us on #ADA25. Your work every day - as a mom, nurse, and advocate - is an inspiration to us all. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 104, "favorite_count": 323, "source": "Twitter Web Client", "id_str": "625381667025367040", "is_retweet": false}, {"created_at": "Wed Aug 26 15:34:51 +0000 2015", "text": "Heartbroken and angry. We must act to stop gun violence, and we cannot wait any longer. Praying for the victims' families in Virginia. -H", "in_reply_to_screen_name": null, "retweet_count": 4727, "favorite_count": 6744, "source": "TweetDeck", "id_str": "636562456618381312", "is_retweet": false}, {"created_at": "Tue Dec 15 22:09:48 +0000 2015", "text": "\"Bluster and bigotry are not credentials for becoming Commander-in-Chief.\" \u2014Hillary in Minneapolis", "in_reply_to_screen_name": null, "retweet_count": 510, "favorite_count": 1093, "source": "TweetDeck", "id_str": "676886904655228928", "is_retweet": false}, {"created_at": "Sat Sep 26 20:27:47 +0000 2015", "text": "Grateful to @Martin_Dempsey for long and distinguished service to our nation. It was an honor to work with him to keep our country safe. -H", "in_reply_to_screen_name": null, "retweet_count": 195, "favorite_count": 426, "source": "TweetDeck", "id_str": "647870203246866432", "is_retweet": false}, {"created_at": "Thu Oct 29 02:24:10 +0000 2015", "text": "Tonight's #GOPDebate made it clear: We cannot afford a Republican in the White House. Get your free sticker: https://t.co/o662Sz9ACJ", "in_reply_to_screen_name": null, "retweet_count": 1059, "favorite_count": 2193, "source": "Twitter Web Client", "id_str": "659556301127725056", "is_retweet": false}, {"created_at": "Mon Jun 22 18:18:15 +0000 2015", "text": "A great cap and a bright future! Congratulations! https://t.co/RWTHV6iLLk", "in_reply_to_screen_name": null, "retweet_count": 127, "favorite_count": 431, "source": "TweetDeck", "id_str": "613048367858495488", "is_retweet": false}, {"created_at": "Wed Dec 23 15:56:04 +0000 2015", "text": "@abbynicole1123 It was a wonderful conversation. Thanks for the invite!", "in_reply_to_screen_name": "abbynicole1123", "retweet_count": 42, "favorite_count": 124, "source": "Twitter Web Client", "id_str": "679691954440024064", "is_retweet": false}, {"created_at": "Tue Sep 29 12:02:44 +0000 2015", "text": "When Republicans attack Planned Parenthood, they\u2019re attacking women\u2019s health. Proud to #StandWithPP\u2014and always will.\nhttps://t.co/frqgxI6sjG", "in_reply_to_screen_name": null, "retweet_count": 1505, "favorite_count": 2048, "source": "Twitter Web Client", "id_str": "648830263317794816", "is_retweet": false}, {"created_at": "Thu Dec 10 23:59:25 +0000 2015", "text": "What's at stake at the Supreme Court if a Republican is elected president (hint: a lot): https://t.co/UrKaVxKJRC https://t.co/fexxGr1SIL", "in_reply_to_screen_name": null, "retweet_count": 718, "favorite_count": 1049, "source": "TweetDeck", "id_str": "675102549167497216", "is_retweet": false}, {"created_at": "Mon Jul 13 14:39:15 +0000 2015", "text": "\"Too many pressures in our economy today are pushing us toward short-termism.\" http://t.co/AgJQAOjBB9", "in_reply_to_screen_name": null, "retweet_count": 225, "favorite_count": 311, "source": "TweetDeck", "id_str": "620603399822643200", "is_retweet": false}, {"created_at": "Tue Dec 29 20:53:21 +0000 2015", "text": "There\u2019s no reason for teachers and nurses to ever pay higher tax rates than top CEOs. https://t.co/ipCwK2Ee4f", "in_reply_to_screen_name": null, "retweet_count": 2451, "favorite_count": 5417, "source": "Twitter Web Client", "id_str": "681941092850348032", "is_retweet": false}, {"created_at": "Thu Nov 19 15:58:47 +0000 2015", "text": "\"Repeating the specific words 'radical Islamic terrorism' is just a distraction...Our priority should be how to fight the enemy.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 416, "favorite_count": 768, "source": "TweetDeck", "id_str": "667371451398422528", "is_retweet": false}, {"created_at": "Fri Jul 31 21:59:05 +0000 2015", "text": "@marcorubio You've got it backwards: Engagement is a threat to the Castros, not a gift. Embargo hasn\u2019t worked for 50+ years. -H", "in_reply_to_screen_name": "marcorubio", "retweet_count": 308, "favorite_count": 361, "source": "Twitter Web Client", "id_str": "627237070268964864", "is_retweet": false}, {"created_at": "Mon May 04 14:51:37 +0000 2015", "text": "Hillary wants to call someone's mom on Mother's Day. It could be yours: http://t.co/Mvt75Gzj9c http://t.co/1EbCQNXp14", "in_reply_to_screen_name": null, "retweet_count": 238, "favorite_count": 438, "source": "Twitter Web Client", "id_str": "595239362746568705", "is_retweet": false}, {"created_at": "Sat Sep 26 15:59:02 +0000 2015", "text": ".@lorellapraeli\u2014DREAMer, activist, #Hillary2016 Latino Outreach Director\u2014shares her story of overcoming obstacles: http://t.co/Jwma0lxR4J", "in_reply_to_screen_name": null, "retweet_count": 176, "favorite_count": 300, "source": "Twitter for iPhone", "id_str": "647802566584201216", "is_retweet": false}, {"created_at": "Fri Oct 23 17:25:36 +0000 2015", "text": "Thanks for your support, brothers &amp; sisters of @AFSCME. You never stop fighting for working families, &amp; I'll never stop fighting for you. -H", "in_reply_to_screen_name": null, "retweet_count": 445, "favorite_count": 1027, "source": "TweetDeck", "id_str": "657608823675461632", "is_retweet": false}, {"created_at": "Tue Aug 04 21:17:25 +0000 2015", "text": ".@JebBush: You are absolutely, unequivocally wrong. https://t.co/a6O17dlEh4", "in_reply_to_screen_name": null, "retweet_count": 5778, "favorite_count": 8365, "source": "TweetDeck", "id_str": "628676133572100097", "is_retweet": false}, {"created_at": "Sun Apr 12 19:43:34 +0000 2015", "text": "I\u2019m hitting the trail to earn your vote. Headed to Iowa. \u2013H http://t.co/Mut4vOMxm0", "in_reply_to_screen_name": null, "retweet_count": 6397, "favorite_count": 12274, "source": "Twitter Web Client", "id_str": "587340299283869696", "is_retweet": false}, {"created_at": "Sat Oct 24 22:44:46 +0000 2015", "text": "Agreed, President @billclinton! https://t.co/rsAiHQ2ma7", "in_reply_to_screen_name": null, "retweet_count": 1560, "favorite_count": 3040, "source": "TweetDeck", "id_str": "658051536220782592", "is_retweet": false}, {"created_at": "Tue Jul 28 16:26:35 +0000 2015", "text": "Follow along at #ChatClimate as @HillaryforSC chats with local activists on Hillary's clean energy goals: https://t.co/j9qsBlNBLb", "in_reply_to_screen_name": null, "retweet_count": 100, "favorite_count": 160, "source": "Twitter Web Client", "id_str": "626066229313306624", "is_retweet": false}, {"created_at": "Tue May 05 22:51:19 +0000 2015", "text": "\"I will fight to stop partisan attacks on the executive actions that would put DREAMers\u2014including many with us today\u2014at risk of deportation\"", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 632, "source": "Twitter Web Client", "id_str": "595722469350191104", "is_retweet": false}, {"created_at": "Mon Sep 14 01:37:55 +0000 2015", "text": "Our health care system allows too many people with substance use disorders to go without care. We need to invest in treatment.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 779, "favorite_count": 1841, "source": "TweetDeck", "id_str": "643237205406842880", "is_retweet": false}, {"created_at": "Fri Nov 06 22:47:22 +0000 2015", "text": "#FF @HillaryforSC for tonight\u2019s Democratic candidate forum with @maddow. Great weekend ahead in the Palmetto State! \ud83c\udf34#HRCinSC", "in_reply_to_screen_name": null, "retweet_count": 196, "favorite_count": 391, "source": "TweetDeck", "id_str": "662763230062751744", "is_retweet": false}, {"created_at": "Tue Aug 25 15:54:37 +0000 2015", "text": "What does Jeb think cancer screenings, STI tests and treatments, birth control, and prenatal care are?\nhttps://t.co/30CMcxokfW", "in_reply_to_screen_name": null, "retweet_count": 627, "favorite_count": 849, "source": "Twitter Web Client", "id_str": "636205046351327232", "is_retweet": false}, {"created_at": "Sun Sep 20 21:18:50 +0000 2015", "text": "Where are we on gefilte fish? Hillary talks emails with @JimmyFallon.\nhttps://t.co/bYCA9j8pej", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 853, "source": "Twitter Web Client", "id_str": "645708722568761344", "is_retweet": false}, {"created_at": "Thu Jun 11 18:13:35 +0000 2015", "text": "You want to volunteer for #Hillary2016? Let's shake on it: http://t.co/0RymfTqXbx http://t.co/M1TRzrsuHb", "in_reply_to_screen_name": null, "retweet_count": 206, "favorite_count": 451, "source": "TweetDeck", "id_str": "609060927187615744", "is_retweet": false}, {"created_at": "Thu Aug 20 17:46:01 +0000 2015", "text": "They may not have Donald\u2019s pizzazz, but the rest of the GOP candidates are singing his tune:\nhttps://t.co/iR72ZYB4BB", "in_reply_to_screen_name": null, "retweet_count": 498, "favorite_count": 884, "source": "Twitter Web Client", "id_str": "634421140862058497", "is_retweet": false}, {"created_at": "Tue Aug 18 12:05:43 +0000 2015", "text": ".@madeleine is right: We can't afford another President Bush who would take us backward on Iraq and foreign policy. http://t.co/1el2pxWKeT", "in_reply_to_screen_name": null, "retweet_count": 440, "favorite_count": 900, "source": "Twitter for iPhone", "id_str": "633610724259037185", "is_retweet": false}, {"created_at": "Fri Aug 07 01:00:26 +0000 2015", "text": "Follow @TheBriefing2016 for real-time fact checks on the #GOPdebate\u2014starting now. https://t.co/FkNwtmWGBI", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 470, "source": "Twitter Web Client", "id_str": "629457034526740481", "is_retweet": false}, {"created_at": "Tue Dec 08 01:52:17 +0000 2015", "text": "Every Republican senator running for president voted against making it harder for suspected terrorists to buy guns. https://t.co/2pxyv8ja0P", "in_reply_to_screen_name": null, "retweet_count": 1012, "favorite_count": 1370, "source": "TweetDeck", "id_str": "674043792375332864", "is_retweet": false}, {"created_at": "Fri Jul 31 15:40:20 +0000 2015", "text": "\"We must decide between engagement and embargo\u2014between embracing fresh thinking and returning to Cold War deadlock.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 252, "favorite_count": 407, "source": "TweetDeck", "id_str": "627141752466599936", "is_retweet": false}, {"created_at": "Fri Jun 05 18:02:28 +0000 2015", "text": "Today in great headlines: http://t.co/3vwoFVR11B http://t.co/XjnKK7TtpV", "in_reply_to_screen_name": null, "retweet_count": 292, "favorite_count": 471, "source": "TweetDeck", "id_str": "606883801759924224", "is_retweet": false}, {"created_at": "Fri Oct 02 02:50:23 +0000 2015", "text": "Proud to have @wendydavis on Team Hillary. http://t.co/Ck3TxLbCL5", "in_reply_to_screen_name": null, "retweet_count": 634, "favorite_count": 1625, "source": "Twitter for iPhone", "id_str": "649778426841317376", "is_retweet": false}, {"created_at": "Sat Jul 04 20:43:44 +0000 2015", "text": "Happy Fourth of July. Celebrating this country we love\u2014and 239 years of progress, expanded opportunity, and broken barriers. More to do. -H", "in_reply_to_screen_name": null, "retweet_count": 818, "favorite_count": 1895, "source": "Twitter for iPhone", "id_str": "617433633964601344", "is_retweet": false}, {"created_at": "Thu Sep 10 22:53:34 +0000 2015", "text": "Dance break. http://t.co/aAUPlwBWZH", "in_reply_to_screen_name": null, "retweet_count": 1832, "favorite_count": 3029, "source": "TweetDeck", "id_str": "642108681966985216", "is_retweet": false}, {"created_at": "Sat Oct 31 23:57:34 +0000 2015", "text": "More lives lost. We need sensible gun violence prevention measures, and we need them now. https://t.co/uwcYLj1IRi", "in_reply_to_screen_name": null, "retweet_count": 919, "favorite_count": 1563, "source": "TweetDeck", "id_str": "660606571173408769", "is_retweet": false}, {"created_at": "Wed Nov 25 12:58:22 +0000 2015", "text": "Politicians have no right to interfere with women's access to health care\u2014not in Texas, not anywhere. https://t.co/GvKoAxGqFB", "in_reply_to_screen_name": null, "retweet_count": 1180, "favorite_count": 2607, "source": "Twitter for iPhone", "id_str": "669500374395539457", "is_retweet": false}, {"created_at": "Sat Aug 08 13:38:31 +0000 2015", "text": "Read more #MyFirstVote stories and share your own: http://t.co/Z1Nr11mfcz http://t.co/8nwdXZuHKz", "in_reply_to_screen_name": null, "retweet_count": 333, "favorite_count": 621, "source": "Twitter Web Client", "id_str": "630010198955008000", "is_retweet": false}, {"created_at": "Thu Jan 22 01:03:35 +0000 2015", "text": "Looks like @elmo enjoyed reading with @ChelseaClinton more than when I sang to her as a baby. #tinear @2SmallToFail http://t.co/2F9TgVwFsg", "in_reply_to_screen_name": null, "retweet_count": 290, "favorite_count": 900, "source": "Twitter for iPhone", "id_str": "558067419311534080", "is_retweet": false}, {"created_at": "Fri May 29 02:10:08 +0000 2015", "text": "It's the first big event of Hillary's campaign. You should be there. Enter by midnight: http://t.co/2AvWlZM7LJ http://t.co/sZDTVrfRZo", "in_reply_to_screen_name": null, "retweet_count": 187, "favorite_count": 298, "source": "TweetDeck", "id_str": "604107426514780160", "is_retweet": false}, {"created_at": "Fri Aug 21 23:26:26 +0000 2015", "text": ".@TheEllenShow's new clothing line celebrates girls being themselves, free from gender stereotypes. Hear, hear! http://t.co/A50xMvyU1x", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 1865, "source": "Twitter Web Client", "id_str": "634869196220932096", "is_retweet": false}, {"created_at": "Thu Oct 15 20:36:15 +0000 2015", "text": "It's time to stand up to the NRA. We have to #KeepShoutingOnGuns until our families are safe from gun violence.\nhttps://t.co/9PpdgPE7Ik", "in_reply_to_screen_name": null, "retweet_count": 928, "favorite_count": 1320, "source": "Twitter Web Client", "id_str": "654757701759561728", "is_retweet": false}, {"created_at": "Tue Jun 02 00:58:32 +0000 2015", "text": "Big news: Hillary's launching her campaign in NYC. Be a part of it\u2014your airfare's covered \u2192 http://t.co/ujlfJkM2gj http://t.co/Lr423XRAM7", "in_reply_to_screen_name": null, "retweet_count": 229, "favorite_count": 404, "source": "TweetDeck", "id_str": "605538957619642368", "is_retweet": false}, {"created_at": "Sun Nov 22 01:36:28 +0000 2015", "text": "It's snowing in Iowa right now\u2014and organizers and volunteers are still knocking on doors for Hillary. https://t.co/0uapkGzgst", "in_reply_to_screen_name": null, "retweet_count": 380, "favorite_count": 1280, "source": "Twitter Web Client", "id_str": "668241605720195072", "is_retweet": false}, {"created_at": "Wed Dec 16 18:44:40 +0000 2015", "text": "Seven reasons the world is a better place because Hillary was secretary of state: https://t.co/Vs4QhfRuQM", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 954, "source": "TweetDeck", "id_str": "677197668708429824", "is_retweet": false}, {"created_at": "Tue Dec 15 00:23:54 +0000 2015", "text": "It\u2019s a fact: The economy does better with a Democrat in the White House.\nhttps://t.co/LP8C6mNJHS", "in_reply_to_screen_name": null, "retweet_count": 824, "favorite_count": 1794, "source": "Twitter Web Client", "id_str": "676558263190622208", "is_retweet": false}, {"created_at": "Thu Jun 11 20:04:15 +0000 2015", "text": "A never-seen-before-today #tbt: Pedal to the metal. http://t.co/PZgqQAE8mU", "in_reply_to_screen_name": null, "retweet_count": 428, "favorite_count": 1601, "source": "TweetDeck", "id_str": "609088778649636864", "is_retweet": false}, {"created_at": "Sat Sep 05 22:04:57 +0000 2015", "text": ".@nytimes in 1995: Hillary spoke \"more forcefully on human rights than any American dignitary has on Chinese soil.\" \u2192 http://t.co/eGYp0JT7Ha", "in_reply_to_screen_name": null, "retweet_count": 305, "favorite_count": 537, "source": "Twitter Web Client", "id_str": "640284509586522112", "is_retweet": false}, {"created_at": "Wed Aug 05 15:59:29 +0000 2015", "text": "No parent should have to choose between getting a paycheck and caring for their baby. Well done, @Netflix. https://t.co/gDsKCuWrGe", "in_reply_to_screen_name": null, "retweet_count": 1294, "favorite_count": 3148, "source": "Twitter Web Client", "id_str": "628958513373519872", "is_retweet": false}, {"created_at": "Thu Nov 19 15:38:35 +0000 2015", "text": "\"After a major terrorist attack, every society faces a choice between fear and resolve.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 497, "favorite_count": 795, "source": "TweetDeck", "id_str": "667366365972533248", "is_retweet": false}, {"created_at": "Sat May 30 17:39:27 +0000 2015", "text": "Welcome to the race, Gov. O'Malley. Looking forward to discussing strong families and communities. -H", "in_reply_to_screen_name": null, "retweet_count": 807, "favorite_count": 1656, "source": "Twitter Web Client", "id_str": "604703680919662592", "is_retweet": false}, {"created_at": "Sat Oct 24 16:13:02 +0000 2015", "text": "I got to introduce Hillary at an event in Dubuque a few months ago\u2014it was an experience I\u2019ll never forget. #HillYes https://t.co/yy6Y4Bsyd5", "in_reply_to_screen_name": null, "retweet_count": 106, "favorite_count": 409, "source": "TweetDeck", "id_str": "657952951953027073", "is_retweet": false}, {"created_at": "Fri Oct 16 21:13:50 +0000 2015", "text": "Yesterday in San Antonio, three-time mayor of San Antonio Juli\u00e1n Castro announced his support for Hillary. http://t.co/HZKpp103Q1", "in_reply_to_screen_name": null, "retweet_count": 686, "favorite_count": 1279, "source": "TweetDeck", "id_str": "655129548506333184", "is_retweet": false}, {"created_at": "Thu Sep 24 21:42:59 +0000 2015", "text": "Hillary believes that what\u2019s good for women is good for America. http://t.co/hZBpaZcO2S http://t.co/HwXEVG59Jp", "in_reply_to_screen_name": null, "retweet_count": 445, "favorite_count": 774, "source": "Twitter Web Client", "id_str": "647164350411763712", "is_retweet": false}, {"created_at": "Sat Oct 03 17:21:00 +0000 2015", "text": "La riqueza de la comunidad latina es su gran diversidad. Estamos orgullosos de lanzar Latinos por Hillary. http://t.co/qSx4bqzeqU", "in_reply_to_screen_name": null, "retweet_count": 485, "favorite_count": 589, "source": "Twitter Web Client", "id_str": "650359911621218304", "is_retweet": false}, {"created_at": "Sat Oct 31 14:08:49 +0000 2015", "text": "Rated \u201cO\u201d for out of touch and out of date: The Zombie Policies. https://t.co/gso2dmzlq1", "in_reply_to_screen_name": null, "retweet_count": 1245, "favorite_count": 1871, "source": "Twitter Web Client", "id_str": "660458407175004160", "is_retweet": false}, {"created_at": "Sun Jul 05 23:47:03 +0000 2015", "text": "Be a part of THIS team: http://t.co/FYfvEKoCbf http://t.co/DnQ28NmNcZ", "in_reply_to_screen_name": null, "retweet_count": 243, "favorite_count": 703, "source": "Twitter Web Client", "id_str": "617842154556260353", "is_retweet": false}, {"created_at": "Sat May 09 21:01:13 +0000 2015", "text": "Add your name to wish our favorite mom (and grandmother) a happy Mother\u2019s Day: http://t.co/yx6cGM1uP1 http://t.co/dX1oWtOdqW", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 1040, "source": "Twitter Web Client", "id_str": "597144313500454912", "is_retweet": false}, {"created_at": "Mon Jul 13 21:16:30 +0000 2015", "text": "\u201cHe dicho que quiero ser la Presidenta que representa las peque\u00f1as empresas, y lo digo con convicci\u00f3n.\u201d", "in_reply_to_screen_name": null, "retweet_count": 391, "favorite_count": 767, "source": "Twitter Web Client", "id_str": "620703373088702464", "is_retweet": false}, {"created_at": "Tue Sep 22 20:02:45 +0000 2015", "text": "\"If the medicine you need costs less in Canada, you should be able to buy it from Canada\u2014or any country that meets our safety standards.\"", "in_reply_to_screen_name": null, "retweet_count": 766, "favorite_count": 1404, "source": "TweetDeck", "id_str": "646414350362779648", "is_retweet": false}, {"created_at": "Tue Jun 09 12:30:55 +0000 2015", "text": "Spotted on Instagram: The first #Hillary2016 Pride stickers are arriving! http://t.co/o4jC01dicR", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 1068, "source": "TweetDeck", "id_str": "608249918076157952", "is_retweet": false}, {"created_at": "Mon Dec 07 13:30:32 +0000 2015", "text": "If the GOP wants to put our economy at risk to help Wall St, we should be ready to fight back and win. My op-ed: https://t.co/B41GGe7zfb -H", "in_reply_to_screen_name": null, "retweet_count": 397, "favorite_count": 654, "source": "TweetDeck", "id_str": "673857121188974593", "is_retweet": false}, {"created_at": "Wed Sep 09 13:35:02 +0000 2015", "text": "\"Here\u2019s my message to Iran\u2019s leaders: The United States will never allow you to acquire a nuclear weapon.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 380, "favorite_count": 673, "source": "TweetDeck", "id_str": "641605736347369472", "is_retweet": false}, {"created_at": "Tue Apr 21 18:33:55 +0000 2015", "text": "Future engineer Aurora says, \"For all the girls out there\u2014you can do anything you put your mind to.\" \n\nHillary: \"Music to my ears!\"", "in_reply_to_screen_name": null, "retweet_count": 951, "favorite_count": 2107, "source": "Twitter Web Client", "id_str": "590584261150957569", "is_retweet": false}, {"created_at": "Sun Mar 08 17:24:26 +0000 2015", "text": "See my new profile pic to raise awareness on how far we've come in reaching equal rights for women &amp; girls worldwide. http://t.co/MzqVBq6FTL", "in_reply_to_screen_name": null, "retweet_count": 2276, "favorite_count": 2748, "source": "Twitter Web Client", "id_str": "574621709543870466", "is_retweet": false}, {"created_at": "Fri Apr 24 13:11:20 +0000 2015", "text": "Where should we send your free #Hillary2016 bumper sticker? http://t.co/69T5ckcCTB http://t.co/koU7TltvKp", "in_reply_to_screen_name": null, "retweet_count": 804, "favorite_count": 1355, "source": "Twitter Web Client", "id_str": "591590246749462528", "is_retweet": false}, {"created_at": "Tue Jul 28 14:01:48 +0000 2015", "text": "The winds of change are blowing in. Grab the Green Tee to support Hillary's climate agenda: http://t.co/qeBatnUNcT http://t.co/TXmvAELK4A", "in_reply_to_screen_name": null, "retweet_count": 174, "favorite_count": 348, "source": "Twitter Web Client", "id_str": "626029795541942272", "is_retweet": false}, {"created_at": "Sun Sep 20 14:25:16 +0000 2015", "text": "\"I believe in America, we should have each other\u2019s backs.\" Watch Hillary at #nhdems2016:\nhttps://t.co/ITmKiVEhhx", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 1244, "source": "Twitter Web Client", "id_str": "645604642055827457", "is_retweet": false}, {"created_at": "Thu Oct 22 14:43:21 +0000 2015", "text": "America \"has a long history of bipartisan cooperation on foreign policy...I know it\u2019s possible to find common ground because I\u2019ve done it.\"", "in_reply_to_screen_name": null, "retweet_count": 204, "favorite_count": 453, "source": "TweetDeck", "id_str": "657205605556441088", "is_retweet": false}, {"created_at": "Tue Dec 15 22:51:44 +0000 2015", "text": "We need a leader who will keep America safe and secure. Add your name if you agree: https://t.co/BmNNKX4QtJ https://t.co/IL2gNAhlSx", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 1203, "source": "TweetDeck", "id_str": "676897454827118593", "is_retweet": false}, {"created_at": "Mon Aug 03 19:52:38 +0000 2015", "text": ".@POTUS is right\u2014we can't wait for another generation to tackle climate change. Our future depends on what we do today &amp; in the next decade.", "in_reply_to_screen_name": null, "retweet_count": 827, "favorite_count": 1540, "source": "Twitter Web Client", "id_str": "628292409701597184", "is_retweet": false}, {"created_at": "Mon Jun 08 16:52:14 +0000 2015", "text": "Helping women &amp; families succeed isn\u2019t a side issue; it\u2019s fundamental to our economic future. http://t.co/ntWL0rfHrl http://t.co/pXinqdTRsL", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 678, "source": "TweetDeck", "id_str": "607953291872313344", "is_retweet": false}, {"created_at": "Mon Oct 12 01:22:50 +0000 2015", "text": "When Hillary\u2019s mother Dorothy needed a champion, someone was there. Today, Hillary\u2019s fighting for all the Dorothys.\nhttps://t.co/spHT5JgRmH", "in_reply_to_screen_name": null, "retweet_count": 528, "favorite_count": 1157, "source": "Twitter Web Client", "id_str": "653380271954223104", "is_retweet": false}, {"created_at": "Tue Dec 29 02:30:18 +0000 2015", "text": "We should treat the caretakers who serve 11 million Americans with serious medical needs like the heroes they are. https://t.co/7C0erdPV6N", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 1696, "source": "TweetDeck", "id_str": "681663502164033536", "is_retweet": false}, {"created_at": "Sat Nov 07 02:19:04 +0000 2015", "text": "\"Anybody who thinks that they can influence what I will do doesn't know me very well.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 675, "favorite_count": 1307, "source": "TweetDeck", "id_str": "662816508293152769", "is_retweet": false}, {"created_at": "Mon Jul 13 14:45:16 +0000 2015", "text": "\"I will offer plans to rein in excessive risk on Wall Street and ensure that stock markets work for everyday investors.\"", "in_reply_to_screen_name": null, "retweet_count": 165, "favorite_count": 336, "source": "TweetDeck", "id_str": "620604913727344640", "is_retweet": false}, {"created_at": "Fri Oct 23 21:23:00 +0000 2015", "text": "\u201cI am a little feminist growing up to help all women with equal rights.\u201d Meet Olivia: https://t.co/xN2sFbF4Rm", "in_reply_to_screen_name": null, "retweet_count": 456, "favorite_count": 1060, "source": "TweetDeck", "id_str": "657668568612478976", "is_retweet": false}, {"created_at": "Wed Oct 28 18:29:51 +0000 2015", "text": "We need to reauthorize the Export-Import Bank and help American businesses stay in business.", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 445, "source": "TweetDeck", "id_str": "659436934046068736", "is_retweet": false}, {"created_at": "Thu Oct 15 18:18:24 +0000 2015", "text": "\"Every American deserves access to quality, affordable health care\u2014even new Americans.\" \u2014Hillary #LatinosforHillary", "in_reply_to_screen_name": null, "retweet_count": 314, "favorite_count": 637, "source": "TweetDeck", "id_str": "654723009287053312", "is_retweet": false}, {"created_at": "Thu May 21 14:53:38 +0000 2015", "text": "Here's Haley, light of my life. She wants to run her own company, too. It's true: They're not bossy, they're leaders! http://t.co/SkFmFVFPJh", "in_reply_to_screen_name": null, "retweet_count": 148, "favorite_count": 569, "source": "Twitter Web Client", "id_str": "601400462911381505", "is_retweet": false}, {"created_at": "Fri May 01 02:33:09 +0000 2015", "text": "Hillary will protect women's ability to make their own health decisions. Say you're with her: http://t.co/ay0CYPalHt http://t.co/J9q5bR8IFV", "in_reply_to_screen_name": null, "retweet_count": 975, "favorite_count": 1931, "source": "Twitter Web Client", "id_str": "593966357038952449", "is_retweet": false}, {"created_at": "Thu Jul 09 21:42:21 +0000 2015", "text": "Donald Trump no es el \u00fanico que tiene ideas retrogradas acerca de la inmigraci\u00f3n. https://t.co/1nqc0gn8rh", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 698, "source": "Twitter Web Client", "id_str": "619260325955809280", "is_retweet": false}, {"created_at": "Tue May 05 22:19:38 +0000 2015", "text": "Watch live \u2192 Hillary sits down with DREAMers at Rancho High School in Nevada to talk about immigration reform. http://t.co/00WXyllw8L", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 327, "source": "Twitter Web Client", "id_str": "595714498486509568", "is_retweet": false}, {"created_at": "Tue Nov 03 04:58:58 +0000 2015", "text": "While in Chicago discussing the way forward, another child dies from gun violence just miles away. Devastating. https://t.co/3mXyMSTsxk -H", "in_reply_to_screen_name": null, "retweet_count": 579, "favorite_count": 623, "source": "TweetDeck", "id_str": "661407195804733440", "is_retweet": false}, {"created_at": "Wed Dec 16 02:11:11 +0000 2015", "text": "We need serious leadership to keep us safe. Hateful words and extreme proposals that go against our values aren't serious. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1472, "favorite_count": 2809, "source": "TweetDeck", "id_str": "676947650214821893", "is_retweet": false}, {"created_at": "Mon Apr 27 20:22:20 +0000 2015", "text": "Don't miss your chance to get a free Hillary 2016 bumper sticker! https://t.co/l2lPjM5p2l", "in_reply_to_screen_name": null, "retweet_count": 325, "favorite_count": 491, "source": "Twitter Web Client", "id_str": "592785872409522177", "is_retweet": false}, {"created_at": "Tue Nov 10 22:52:20 +0000 2015", "text": "Hillary\u2019s dad prepared thousands of sailors during WWII\u2014after he died, Hillary received letters from men he trained.\nhttps://t.co/zZUfzdNNxX", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 607, "source": "Twitter Web Client", "id_str": "664214033109643264", "is_retweet": false}, {"created_at": "Thu Jun 04 20:35:06 +0000 2015", "text": "\"We need a Supreme Court who cares more about the right to vote of a person than the right to buy an election of a corporation.\"", "in_reply_to_screen_name": null, "retweet_count": 900, "favorite_count": 1183, "source": "TweetDeck", "id_str": "606559825032396800", "is_retweet": false}, {"created_at": "Tue Apr 14 20:37:59 +0000 2015", "text": "\"We need to build the economy of tomorrow, not yesterday.\"", "in_reply_to_screen_name": null, "retweet_count": 803, "favorite_count": 1523, "source": "Twitter Web Client", "id_str": "588078770868908032", "is_retweet": false}, {"created_at": "Fri Jul 10 16:17:27 +0000 2015", "text": "Champions. Welcome to NYC @ussoccer_wnt! https://t.co/w8O8cPBCLy", "in_reply_to_screen_name": null, "retweet_count": 306, "favorite_count": 791, "source": "Twitter Web Client", "id_str": "619540950575120384", "is_retweet": false}, {"created_at": "Wed Sep 23 22:14:33 +0000 2015", "text": "Lower health care costs means families should see savings, not insurance companies. Hillary's plan addresses this. https://t.co/3vIluYFcz3", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 561, "source": "TweetDeck", "id_str": "646809906373373953", "is_retweet": false}, {"created_at": "Fri Jun 26 13:38:00 +0000 2015", "text": "Put your name next to Hillary's if you agree: http://t.co/xQtbs2Af31 http://t.co/rjZpaBSLSL", "in_reply_to_screen_name": null, "retweet_count": 1303, "favorite_count": 2742, "source": "TweetDeck", "id_str": "614427390886969344", "is_retweet": false}, {"created_at": "Tue Dec 22 23:29:29 +0000 2015", "text": "We can make an Alzheimer\u2019s cure possible by 2025, changing life for millions of Americans. https://t.co/kercNKV7w2", "in_reply_to_screen_name": null, "retweet_count": 654, "favorite_count": 1414, "source": "Twitter for iPhone", "id_str": "679443673126408192", "is_retweet": false}, {"created_at": "Sun Nov 15 22:58:02 +0000 2015", "text": "The president\u2019s job is to do everything she can do to lift up the people of this country.\nhttps://t.co/UgcxhclOCP", "in_reply_to_screen_name": null, "retweet_count": 678, "favorite_count": 1442, "source": "Twitter Web Client", "id_str": "666027405505523713", "is_retweet": false}, {"created_at": "Sun Sep 06 16:02:15 +0000 2015", "text": "Together we can break the highest glass ceiling. Join #WomenForHillary: http://t.co/1b9mMi7p8B http://t.co/QSqho7cLa2", "in_reply_to_screen_name": null, "retweet_count": 468, "favorite_count": 887, "source": "Twitter Web Client", "id_str": "640555620584656896", "is_retweet": false}, {"created_at": "Sun Oct 25 15:12:06 +0000 2015", "text": "\"Go win this thing, Madam Secretary.\" Thanks, @davidplouffe. https://t.co/inR1TAxdVu", "in_reply_to_screen_name": null, "retweet_count": 407, "favorite_count": 951, "source": "TweetDeck", "id_str": "658300004138807296", "is_retweet": false}, {"created_at": "Wed Oct 07 12:07:04 +0000 2015", "text": "Add your name if you think it\u2019s time to take action on gun violence: http://t.co/d5G3nBLwbw http://t.co/L2y4gtp9pO", "in_reply_to_screen_name": null, "retweet_count": 697, "favorite_count": 1204, "source": "TweetDeck", "id_str": "651730456711294976", "is_retweet": false}, {"created_at": "Thu Oct 22 14:44:42 +0000 2015", "text": "\"I am here, despite all the previous investigations...to honor those we lost and to do what I can to aid those who serve us still.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 405, "favorite_count": 887, "source": "TweetDeck", "id_str": "657205946192691201", "is_retweet": false}, {"created_at": "Tue Feb 03 03:45:25 +0000 2015", "text": "The science is clear: The earth is round, the sky is blue, and #vaccineswork. Let's protect all our kids. #GrandmothersKnowBest", "in_reply_to_screen_name": null, "retweet_count": 39849, "favorite_count": 38220, "source": "Twitter for iPhone", "id_str": "562456798020386816", "is_retweet": false}, {"created_at": "Sun Sep 27 11:39:30 +0000 2015", "text": "Xi hosting a meeting on women's rights at the UN while persecuting feminists? Shameless. #Freethe20 http://t.co/hRkaaAnMMp -H", "in_reply_to_screen_name": null, "retweet_count": 1546, "favorite_count": 1521, "source": "TweetDeck", "id_str": "648099640714391552", "is_retweet": false}, {"created_at": "Sun Jul 05 19:45:28 +0000 2015", "text": "Pinning the stories of women who lift us up and lead us forward: http://t.co/zCgarHr5i8 http://t.co/DB1vFr9u6N", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 1269, "source": "Twitter Web Client", "id_str": "617781360460189697", "is_retweet": false}, {"created_at": "Thu May 21 15:14:05 +0000 2015", "text": "It's all about collaboration here. Rush web project just came in. Impossible deadline, but we can do it! http://t.co/b3mYsEOmlZ", "in_reply_to_screen_name": null, "retweet_count": 46, "favorite_count": 114, "source": "TweetDeck", "id_str": "601405609586593792", "is_retweet": false}, {"created_at": "Mon May 18 00:16:07 +0000 2015", "text": "See you soon, Iowa! Follow @HillaryforIA for updates from Hillary's visit this week. https://t.co/6lIFDPwvmu", "in_reply_to_screen_name": null, "retweet_count": 227, "favorite_count": 401, "source": "TweetDeck", "id_str": "600092467086622721", "is_retweet": false}, {"created_at": "Sat Aug 01 15:53:11 +0000 2015", "text": "A photo we had to share: @Wellesley's Alumnae Ultimate team (named for Hillary!) plays in extra-appropriate uniforms. http://t.co/LPIoXHHrWz", "in_reply_to_screen_name": null, "retweet_count": 262, "favorite_count": 554, "source": "TweetDeck", "id_str": "627507375377903618", "is_retweet": false}, {"created_at": "Tue Jul 07 18:26:20 +0000 2015", "text": "RT if you're on Team #Hillary2016. http://t.co/6KZzN7ORhp http://t.co/53EJOVuuNO", "in_reply_to_screen_name": null, "retweet_count": 1074, "favorite_count": 933, "source": "Twitter Web Client", "id_str": "618486218716762114", "is_retweet": false}, {"created_at": "Thu Oct 29 01:42:20 +0000 2015", "text": "Commercial break: While Republicans work for those at the top, Hillary is going to bat for middle-class Americans.\nhttps://t.co/TrYTnwSmWu", "in_reply_to_screen_name": null, "retweet_count": 444, "favorite_count": 846, "source": "Twitter Web Client", "id_str": "659545772803801088", "is_retweet": false}, {"created_at": "Wed Jun 24 00:36:44 +0000 2015", "text": "\"We can\u2019t hide from hard truths about race and justice.\"\u2014Hillary http://t.co/f5xPbe3NVe", "in_reply_to_screen_name": null, "retweet_count": 1629, "favorite_count": 2465, "source": "TweetDeck", "id_str": "613506003531862016", "is_retweet": false}, {"created_at": "Mon Aug 17 02:13:20 +0000 2015", "text": "One of the single biggest ways we can raise incomes is by making college affordable and available to every American.", "in_reply_to_screen_name": null, "retweet_count": 1582, "favorite_count": 2400, "source": "Twitter Web Client", "id_str": "633099257432657920", "is_retweet": false}, {"created_at": "Tue Apr 14 20:18:29 +0000 2015", "text": "RT if this describes you. #EqualPayDay http://t.co/hHbXqS6VxM", "in_reply_to_screen_name": null, "retweet_count": 3783, "favorite_count": 3043, "source": "Twitter Web Client", "id_str": "588073861029167104", "is_retweet": false}, {"created_at": "Wed Sep 30 00:00:05 +0000 2015", "text": "Hillary has a plan to cap covered prescription drug costs at $250 per month: http://t.co/sjwwXiWxzQ http://t.co/YY6guHTOxk", "in_reply_to_screen_name": null, "retweet_count": 372, "favorite_count": 715, "source": "Twitter Web Client", "id_str": "649010793590194176", "is_retweet": false}, {"created_at": "Fri Jul 24 16:41:26 +0000 2015", "text": "\"Both my workers and I were better off.\" Why this CEO thinks profit-sharing = higher incomes + more productivity: http://t.co/sTbOil1XKU", "in_reply_to_screen_name": null, "retweet_count": 161, "favorite_count": 274, "source": "TweetDeck", "id_str": "624620414220668928", "is_retweet": false}, {"created_at": "Tue Jun 02 12:45:44 +0000 2015", "text": "Psyched about Hillary? How about volunteering? \u2192 http://t.co/Zl5YkFTvHb http://t.co/qgoppn0J8c", "in_reply_to_screen_name": null, "retweet_count": 189, "favorite_count": 408, "source": "Twitter Web Client", "id_str": "605716931522490368", "is_retweet": false}, {"created_at": "Sat Jul 25 14:58:47 +0000 2015", "text": "How to say \u201cGo Hillary!\u201d in Spanish. C\u00f3mo decir \u201cGo Hillary!\u201d en espa\u00f1ol. http://t.co/ssifEcHJ1F", "in_reply_to_screen_name": null, "retweet_count": 1500, "favorite_count": 1864, "source": "Twitter Web Client", "id_str": "624956968738926592", "is_retweet": false}, {"created_at": "Tue Nov 03 23:18:16 +0000 2015", "text": "Federal law doesn't prohibit convicted stalkers from purchasing or possessing guns. https://t.co/2tONgsL1Ti https://t.co/0vfxhMfaLe", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 1506, "source": "TweetDeck", "id_str": "661683845826134016", "is_retweet": false}, {"created_at": "Tue Oct 27 20:43:42 +0000 2015", "text": "\u201cStrong women help create strong families!\u201d Read @katyperry\u2019s note for Hillary's birthday: https://t.co/657n4LeA36 https://t.co/N78xLo4OfZ", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 1498, "source": "Twitter Web Client", "id_str": "659108232397500416", "is_retweet": false}, {"created_at": "Thu Sep 17 12:02:07 +0000 2015", "text": "\ud83d\udc46", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 203, "favorite_count": 649, "source": "Twitter for iPhone", "id_str": "644481453351436289", "is_retweet": false}, {"created_at": "Wed Jul 01 17:17:22 +0000 2015", "text": "Grandmothers' Club unite! Thank you! https://t.co/hmCf6cCQcI", "in_reply_to_screen_name": null, "retweet_count": 135, "favorite_count": 307, "source": "TweetDeck", "id_str": "616294536994816001", "is_retweet": false}, {"created_at": "Sat Nov 28 17:13:06 +0000 2015", "text": "Hillary's known the importance of small businesses ever since her dad owned one.\nhttps://t.co/Fy2SA8ZjWt", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 904, "source": "Twitter Web Client", "id_str": "670651641788391424", "is_retweet": false}, {"created_at": "Sat Oct 03 02:39:28 +0000 2015", "text": "Join Hillary and @marcanthony: Text LATINOS to 47246 to be part of Latinos for Hillary! http://t.co/5m2FoZc00g", "in_reply_to_screen_name": null, "retweet_count": 629, "favorite_count": 1285, "source": "TweetDeck", "id_str": "650138063776051200", "is_retweet": false}, {"created_at": "Fri May 08 23:00:57 +0000 2015", "text": "Even better than Mother's Day: the first Mother's Day as a grandmother! Sign Hillary's card: http://t.co/bW35eZDltV http://t.co/yN7zJRzpaq", "in_reply_to_screen_name": null, "retweet_count": 422, "favorite_count": 1348, "source": "TweetDeck", "id_str": "596812056474603520", "is_retweet": false}, {"created_at": "Tue May 05 22:51:43 +0000 2015", "text": "\u201cWe should put in place an accessible way for parents of DREAMers &amp; others to be eligible for the same deferred action as their children.\u201d", "in_reply_to_screen_name": null, "retweet_count": 561, "favorite_count": 679, "source": "Twitter Web Client", "id_str": "595722568713273345", "is_retweet": false}, {"created_at": "Sat Feb 14 20:16:08 +0000 2015", "text": "@billclinton It's a date!", "in_reply_to_screen_name": "billclinton", "retweet_count": 1313, "favorite_count": 4092, "source": "Twitter for iPhone", "id_str": "566692386282418176", "is_retweet": false}, {"created_at": "Sun Apr 12 23:09:07 +0000 2015", "text": "Hillary isn't the only one starting a new chapter. Watch: http://t.co/PuP6zpJSgh #Hillary2016", "in_reply_to_screen_name": null, "retweet_count": 1505, "favorite_count": 2635, "source": "Twitter Web Client", "id_str": "587392029862277121", "is_retweet": false}, {"created_at": "Fri Jun 19 12:36:10 +0000 2015", "text": "Last weekend, Hillary laid out her plans for America. Here's what you had to say on @Genius: http://t.co/1JZFArl2q1 http://t.co/P1bTcYtRqZ", "in_reply_to_screen_name": null, "retweet_count": 159, "favorite_count": 340, "source": "TweetDeck", "id_str": "611875116981616640", "is_retweet": false}, {"created_at": "Tue Oct 13 18:51:37 +0000 2015", "text": "Hillary takes the stage for the first #DemDebate tonight. Join the conversation\u2014follow these #Hillary2016 staff: http://t.co/4QmPIo5kaB", "in_reply_to_screen_name": null, "retweet_count": 430, "favorite_count": 828, "source": "TweetDeck", "id_str": "654006594905210880", "is_retweet": false}, {"created_at": "Fri Oct 30 23:11:35 +0000 2015", "text": "Glad to see @USArmy knocking down more barriers to women serving on the front lines. https://t.co/SPbcZxcmG6", "in_reply_to_screen_name": null, "retweet_count": 372, "favorite_count": 658, "source": "TweetDeck", "id_str": "660232608815513600", "is_retweet": false}, {"created_at": "Thu Oct 08 00:48:06 +0000 2015", "text": "Pres. Obama's student aid bill of rights is critical given ongoing predatory practices by student loan servicers. http://t.co/TG9oleEMje -H", "in_reply_to_screen_name": null, "retweet_count": 354, "favorite_count": 574, "source": "TweetDeck", "id_str": "651921979218399232", "is_retweet": false}, {"created_at": "Tue Sep 15 15:58:39 +0000 2015", "text": "Events in Ferguson stem from structural inequities. We need to acknowledge and confront them to move forward. -H \nhttps://t.co/lhG6J3jVJx", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 657, "source": "TweetDeck", "id_str": "643816203530674177", "is_retweet": false}, {"created_at": "Thu Nov 12 21:56:40 +0000 2015", "text": "The U.S. economy would have produced an additional $447.6 billion in 2013 if women received equal pay. https://t.co/tsR4IVlY9E", "in_reply_to_screen_name": null, "retweet_count": 671, "favorite_count": 865, "source": "TweetDeck", "id_str": "664924799752343552", "is_retweet": false}, {"created_at": "Mon Nov 02 00:49:39 +0000 2015", "text": "More than 1 in 100 American adults is behind bars. Here's how we can start fixing that. https://t.co/Qdz9h116G3", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 558, "source": "Twitter for iPhone", "id_str": "660982066503417856", "is_retweet": false}, {"created_at": "Sat Nov 07 02:15:33 +0000 2015", "text": "\"Pres. Obama doesn't get the credit he deserves for the job he's done...I want to build on that progress\u2014but I want to go further.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 2670, "source": "TweetDeck", "id_str": "662815622733041664", "is_retweet": false}, {"created_at": "Fri Sep 18 03:10:20 +0000 2015", "text": "Donald Trump not denouncing false statements about POTUS &amp; hateful rhetoric about Muslims is disturbing, &amp; just plain wrong. Cut it out. -H", "in_reply_to_screen_name": null, "retweet_count": 5853, "favorite_count": 8200, "source": "Twitter for iPhone", "id_str": "644710016633712640", "is_retweet": false}, {"created_at": "Thu Sep 03 01:33:30 +0000 2015", "text": "Great news that the Iran Deal has enough votes; as POTUS, I would aggressively enforce it and counter Iran\u2019s other malicious activities. -H", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 1715, "source": "Twitter for iPhone", "id_str": "639249827155550208", "is_retweet": false}, {"created_at": "Wed Oct 21 20:41:13 +0000 2015", "text": "Hillary championed LGBT equality around the world: \u201cThe strongest defense ever in terms of gay rights.\u201d\nhttps://t.co/R03iFA5MrB", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1047, "source": "Twitter Web Client", "id_str": "656933279635865600", "is_retweet": false}, {"created_at": "Wed Sep 09 13:18:19 +0000 2015", "text": "Watch live now: Hillary speaks on the Iran Deal \u2192 http://t.co/Y7guNMgvs5", "in_reply_to_screen_name": null, "retweet_count": 169, "favorite_count": 270, "source": "TweetDeck", "id_str": "641601526746775554", "is_retweet": false}, {"created_at": "Mon Oct 05 21:27:25 +0000 2015", "text": "Nicole Hockley\u2014mother of Sandy Hook victim Dylan and founder of @sandyhook\u2014joined Hillary's gun violence town hall.\nhttps://t.co/E1fzpdk69d", "in_reply_to_screen_name": null, "retweet_count": 459, "favorite_count": 828, "source": "Twitter Web Client", "id_str": "651146700552179712", "is_retweet": false}, {"created_at": "Mon Sep 14 22:31:38 +0000 2015", "text": "Tune in to @extratv tonight to catch Hillary talking Trump, social media, and @KimKardashian. Sneak preview: http://t.co/I8Uk9o8bMW", "in_reply_to_screen_name": null, "retweet_count": 193, "favorite_count": 350, "source": "TweetDeck", "id_str": "643552715314982914", "is_retweet": false}, {"created_at": "Sun Oct 25 17:29:40 +0000 2015", "text": "Happy birthday, @KatyPerry! \ud83c\udf89 https://t.co/JO1BI6SxJz", "in_reply_to_screen_name": null, "retweet_count": 2531, "favorite_count": 6320, "source": "Twitter Web Client", "id_str": "658334624616194048", "is_retweet": false}, {"created_at": "Sat Aug 08 18:10:30 +0000 2015", "text": "How to say \u201cGo Hillary!\u201d in Spanish. C\u00f3mo decir \u201cGo Hillary!\u201d en espa\u00f1ol. http://t.co/6YPNHJVVGX", "in_reply_to_screen_name": null, "retweet_count": 3225, "favorite_count": 3076, "source": "Twitter Web Client", "id_str": "630078647651696640", "is_retweet": false}, {"created_at": "Tue May 26 12:50:45 +0000 2015", "text": "Now open: the official #Hillary2016 store! Start shopping: http://t.co/mp8kHg2nbH http://t.co/5R3FNChIfE", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 506, "source": "Twitter Web Client", "id_str": "603181479057842177", "is_retweet": false}, {"created_at": "Wed Nov 04 01:46:20 +0000 2015", "text": "Congrats @simone_biles, the most decorated woman gymnast of all time! Can\u2019t wait to watch your next winning routine. https://t.co/XotGpSOq6P", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 1726, "source": "Twitter Web Client", "id_str": "661721106273947650", "is_retweet": false}, {"created_at": "Thu Sep 10 19:03:05 +0000 2015", "text": "Today on @TheEllenShow: @amyschumer, Hillary, a mini Hillary, Ellen, and @Pink. Don\u2019t miss it. http://t.co/DOgEUzAhG3", "in_reply_to_screen_name": null, "retweet_count": 689, "favorite_count": 1965, "source": "TweetDeck", "id_str": "642050680526635008", "is_retweet": false}, {"created_at": "Sat Oct 03 19:20:12 +0000 2015", "text": "\"As President, I will push to cut off federal funding for any public child welfare agency that discriminates against LGBT people.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 2293, "source": "Twitter Web Client", "id_str": "650389907429527552", "is_retweet": false}, {"created_at": "Wed Jul 29 00:54:07 +0000 2015", "text": "She gets it. http://t.co/fhCh7bMSiW http://t.co/woCtP4Xj5C", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 840, "source": "TweetDeck", "id_str": "626193952333537281", "is_retweet": false}, {"created_at": "Wed Oct 14 19:51:22 +0000 2015", "text": "No senior should have to choose between paying their Medicare premium and buying groceries. http://t.co/uQM4y4JBYz https://t.co/E5nVyk1sAP", "in_reply_to_screen_name": null, "retweet_count": 505, "favorite_count": 902, "source": "TweetDeck", "id_str": "654384018281136128", "is_retweet": false}, {"created_at": "Sat Jun 20 16:52:12 +0000 2015", "text": "http://t.co/34QJ6JWfqi", "in_reply_to_screen_name": null, "retweet_count": 2309, "favorite_count": 2660, "source": "Twitter Web Client", "id_str": "612301937057361923", "is_retweet": false}, {"created_at": "Mon May 25 13:44:13 +0000 2015", "text": "We have a sacred responsibility to those who serve and sacrifice for this country\u2014today we remember and honor the values they fought for. -H", "in_reply_to_screen_name": null, "retweet_count": 1032, "favorite_count": 1720, "source": "Twitter Web Client", "id_str": "602832544569151488", "is_retweet": false}, {"created_at": "Fri Oct 02 17:30:54 +0000 2015", "text": "Thanks to #KnowTomorrow student activists, we're better prepared than ever to face the climate challenge. http://t.co/moaclrevjX", "in_reply_to_screen_name": null, "retweet_count": 223, "favorite_count": 376, "source": "Twitter Web Client", "id_str": "650000015113498624", "is_retweet": false}, {"created_at": "Sun Jun 21 19:06:06 +0000 2015", "text": "Hillary's supporters have supporters of their own. Here's some of the best fatherly advice you've passed along. http://t.co/YhvZBwW7wU", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 676, "source": "Twitter Web Client", "id_str": "612698023035060224", "is_retweet": false}, {"created_at": "Thu Dec 31 17:03:29 +0000 2015", "text": "What happened when Hillary and John McCain went head-to-head in a drinking competition?\nhttps://t.co/Iki0m7RS0k", "in_reply_to_screen_name": null, "retweet_count": 525, "favorite_count": 1065, "source": "Twitter Web Client", "id_str": "682608021063614468", "is_retweet": false}, {"created_at": "Wed Sep 09 13:44:32 +0000 2015", "text": "\u201cI will always stand by Israel\u2019s right to defend itself, as I always have.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 420, "favorite_count": 777, "source": "TweetDeck", "id_str": "641608126261796865", "is_retweet": false}, {"created_at": "Wed Nov 11 23:11:45 +0000 2015", "text": "Our veterans have done so much for us; now we need to do more for them. Read Hillary\u2019s op-ed in the @MilitaryTimes: https://t.co/a5i6IYOlGh", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 623, "source": "TweetDeck", "id_str": "664581308731920384", "is_retweet": false}, {"created_at": "Thu Jun 04 20:25:53 +0000 2015", "text": "\u201cI believe every citizen has the right to vote, and I believe we should make it easier for every citizen to vote.\u201d -Hillary", "in_reply_to_screen_name": null, "retweet_count": 447, "favorite_count": 768, "source": "Twitter Web Client", "id_str": "606557507666862082", "is_retweet": false}, {"created_at": "Sun Nov 15 03:26:30 +0000 2015", "text": "\"President Obama deserves more credit than he gets for what he got done.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 2298, "favorite_count": 4620, "source": "Twitter Web Client", "id_str": "665732582282137600", "is_retweet": false}, {"created_at": "Sun Dec 13 22:11:19 +0000 2015", "text": "We are #StillFighting to ensure that transgender people are treated with the equal rights and dignity they deserve. https://t.co/NWrG3oMwml", "in_reply_to_screen_name": null, "retweet_count": 875, "favorite_count": 2065, "source": "TweetDeck", "id_str": "676162511050285056", "is_retweet": false}, {"created_at": "Sat Jun 06 22:02:46 +0000 2015", "text": "Happening today in the Silver State: @HillaryForNV is training organizers to help elect Hillary Clinton. #FellowsNV https://t.co/IZMdgLdTWS", "in_reply_to_screen_name": null, "retweet_count": 117, "favorite_count": 240, "source": "Twitter for iPhone", "id_str": "607306665017376769", "is_retweet": false}, {"created_at": "Thu Sep 10 15:16:38 +0000 2015", "text": "Hillary has always been a fighter for women. Let her know you\u2019re in her corner, too\u2014join Women for Hillary: http://t.co/5jY38AcaTm", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 662, "source": "Twitter Web Client", "id_str": "641993692279107584", "is_retweet": false}, {"created_at": "Mon Jul 13 14:49:14 +0000 2015", "text": "\"Above all, we have to break out of the poisonous partisan gridlock and focus on the long-term needs of our country.\"", "in_reply_to_screen_name": null, "retweet_count": 243, "favorite_count": 524, "source": "TweetDeck", "id_str": "620605913250934784", "is_retweet": false}, {"created_at": "Sat Sep 19 18:03:12 +0000 2015", "text": "Proud to have the support of New Hampshire\u2019s great governor, @Maggie_Hassan. #603forHRC http://t.co/nVS4nIRLHr", "in_reply_to_screen_name": null, "retweet_count": 396, "favorite_count": 843, "source": "Twitter Web Client", "id_str": "645297098833948672", "is_retweet": false}, {"created_at": "Sat Jun 06 01:33:27 +0000 2015", "text": "Last chance: http://t.co/pfy38tqzXs http://t.co/WJIhPCCruV", "in_reply_to_screen_name": null, "retweet_count": 161, "favorite_count": 247, "source": "Twitter Web Client", "id_str": "606997297742905344", "is_retweet": false}, {"created_at": "Thu Nov 19 15:42:01 +0000 2015", "text": "\"This is a worldwide fight\u2014and America must lead it.\" \u2014Hillary on defeating radical jihadism", "in_reply_to_screen_name": null, "retweet_count": 295, "favorite_count": 588, "source": "TweetDeck", "id_str": "667367232012476416", "is_retweet": false}, {"created_at": "Sat Sep 12 22:07:57 +0000 2015", "text": "Take it from @TheEllenShow. http://t.co/gdi88RUjKg", "in_reply_to_screen_name": null, "retweet_count": 977, "favorite_count": 2169, "source": "Twitter Web Client", "id_str": "642821976978014208", "is_retweet": false}, {"created_at": "Fri Jul 17 00:01:07 +0000 2015", "text": "Building the economy of tomorrow means supporting entrepreneurs today. See Hillary's plan here http://t.co/ltHVOwAm3X http://t.co/7rChdVsB6R", "in_reply_to_screen_name": null, "retweet_count": 287, "favorite_count": 479, "source": "Twitter Web Client", "id_str": "621831961544392704", "is_retweet": false}, {"created_at": "Thu Oct 15 23:50:08 +0000 2015", "text": "#LatinaEqualPay Day represents the day Latinas catch up to white men's earnings from last year. It's October. We need equal pay for all.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 459, "favorite_count": 744, "source": "TweetDeck", "id_str": "654806492424486912", "is_retweet": false}, {"created_at": "Fri Sep 25 21:50:47 +0000 2015", "text": "Mikaylah had to write a sentence using the word \u201ccan\u201d for homework. A+. (via Instagram/edenrmz) http://t.co/ayH2D35Jgu", "in_reply_to_screen_name": null, "retweet_count": 765, "favorite_count": 1955, "source": "TweetDeck", "id_str": "647528702721572865", "is_retweet": false}, {"created_at": "Tue Jun 16 18:23:07 +0000 2015", "text": "If you have to miss school, make sure you have a note. http://t.co/JAZEZFAWwP", "in_reply_to_screen_name": null, "retweet_count": 2643, "favorite_count": 6081, "source": "TweetDeck", "id_str": "610875265129029632", "is_retweet": false}, {"created_at": "Sun Apr 26 15:59:43 +0000 2015", "text": "Step 1: Get your free bumper sticker at http://t.co/qfjNmvWfeV.\nStep 2: Stick it to something. http://t.co/KdYTHxLrU6", "in_reply_to_screen_name": null, "retweet_count": 639, "favorite_count": 1197, "source": "Twitter Web Client", "id_str": "592357398196649985", "is_retweet": false}, {"created_at": "Mon Nov 30 22:06:32 +0000 2015", "text": "Thanks to this loophole, people who wouldn't pass an FBI background check have been able to get guns anyway. https://t.co/3EwtjT5aQe", "in_reply_to_screen_name": null, "retweet_count": 497, "favorite_count": 607, "source": "TweetDeck", "id_str": "671450262482108416", "is_retweet": false}, {"created_at": "Thu Jun 25 14:46:43 +0000 2015", "text": "A great day! Add your name if you agree: Affordable health care is a basic human right \u2192 http://t.co/5xR3n1XDoc http://t.co/kATncnkfGq", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 2738, "source": "TweetDeck", "id_str": "614082297067909120", "is_retweet": false}, {"created_at": "Sat Oct 24 02:34:20 +0000 2015", "text": "Hillary on the stakes of this election on @maddow tonight: https://t.co/JdxOTmQbDv", "in_reply_to_screen_name": null, "retweet_count": 543, "favorite_count": 934, "source": "TweetDeck", "id_str": "657746919226216449", "is_retweet": false}, {"created_at": "Mon Jul 27 15:42:20 +0000 2015", "text": "Happening now in Des Moines: Hillary's discussing the first steps in her plan to address climate change. Watch live: http://t.co/1IFvzDfZoD", "in_reply_to_screen_name": null, "retweet_count": 157, "favorite_count": 245, "source": "Twitter Web Client", "id_str": "625692706312966144", "is_retweet": false}, {"created_at": "Sun Dec 06 01:04:12 +0000 2015", "text": "From climate change to Comic-Con, there's an \u201cH\u201d for every occasion. Find them all on Pinterest! https://t.co/UidaPNuILO", "in_reply_to_screen_name": null, "retweet_count": 141, "favorite_count": 382, "source": "TweetDeck", "id_str": "673306914592198656", "is_retweet": false}, {"created_at": "Mon Dec 07 02:25:03 +0000 2015", "text": "Just 11 words from Hillary sent this powerful message of\nequality around the world. https://t.co/N3cjSvc0Ep", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 833, "source": "TweetDeck", "id_str": "673689646933475328", "is_retweet": false}, {"created_at": "Fri Nov 20 01:31:41 +0000 2015", "text": ".@KellyandMichael asked Hillary: What do you think would be some of the advantages of having a woman president?\nhttps://t.co/xyukcpeyhj", "in_reply_to_screen_name": null, "retweet_count": 629, "favorite_count": 1442, "source": "Twitter Web Client", "id_str": "667515624197783552", "is_retweet": false}, {"created_at": "Fri Nov 13 20:04:16 +0000 2015", "text": "A five-star review from a four-star general. Thank you, @GeneralClark. https://t.co/emocYkno9P", "in_reply_to_screen_name": null, "retweet_count": 654, "favorite_count": 1372, "source": "TweetDeck", "id_str": "665258901860777985", "is_retweet": false}, {"created_at": "Tue Nov 10 03:11:42 +0000 2015", "text": "America must lead the world in developing and deploying new clean energy sources that will power our economy.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 476, "favorite_count": 1081, "source": "TweetDeck", "id_str": "663916917011275776", "is_retweet": false}, {"created_at": "Thu Sep 03 18:17:35 +0000 2015", "text": "Marriage equality is the law of the land. Officials should be held to their duty to uphold the law\u2014end of story. https://t.co/9WfxgULBga", "in_reply_to_screen_name": null, "retweet_count": 3492, "favorite_count": 4018, "source": "Twitter for iPhone", "id_str": "639502513142669312", "is_retweet": false}, {"created_at": "Wed Nov 11 03:00:10 +0000 2015", "text": "#GOPdebate translation: Doubling down on trickle-down economics. \n\nAmerica needs an economy that works for everyone.", "in_reply_to_screen_name": null, "retweet_count": 343, "favorite_count": 656, "source": "TweetDeck", "id_str": "664276400199847936", "is_retweet": false}, {"created_at": "Sun Jul 26 15:31:04 +0000 2015", "text": "The ADA ensures Adam &amp; Turbo are welcome everywhere. Turbo even joined us at Wrigley Field for a @Cubs game! http://t.co/msnZm7FcRg", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 96, "favorite_count": 328, "source": "Twitter Web Client", "id_str": "625327482762362880", "is_retweet": false}, {"created_at": "Mon Oct 05 11:00:26 +0000 2015", "text": "Tune in to @todayshow for Hillary\u2019s live town hall with @savannahguthrie, starting at 7:30 AM ET. #HillaryTODAY", "in_reply_to_screen_name": null, "retweet_count": 163, "favorite_count": 310, "source": "TweetDeck", "id_str": "650988915025944576", "is_retweet": false}, {"created_at": "Thu Sep 17 01:38:29 +0000 2015", "text": "The GOP's ideas for the economy are just trickle-down economics in disguise. We need a new plan for the 21st century. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 2101, "source": "Twitter Web Client", "id_str": "644324514373963776", "is_retweet": false}, {"created_at": "Thu Apr 23 20:07:44 +0000 2015", "text": "#Hillary2016 bumper stickers have arrived (and we'll send you one for free)! http://t.co/6aE4rE44MY", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 1149, "source": "Twitter Web Client", "id_str": "591332646883446784", "is_retweet": false}, {"created_at": "Thu Apr 23 23:18:20 +0000 2015", "text": "Way to go! https://t.co/L0ksY94V5q", "in_reply_to_screen_name": null, "retweet_count": 184, "favorite_count": 485, "source": "Twitter Web Client", "id_str": "591380616484167681", "is_retweet": false}, {"created_at": "Mon Jun 01 12:03:36 +0000 2015", "text": "The #Hillary2016 Pride shop will open soon\u2014sign up to be first in line: http://t.co/S1ZzBrsvBs http://t.co/7tgw8nay67", "in_reply_to_screen_name": null, "retweet_count": 272, "favorite_count": 612, "source": "Twitter Web Client", "id_str": "605343938686414848", "is_retweet": false}, {"created_at": "Mon Dec 21 01:26:49 +0000 2015", "text": "Hillary\u2019s best #DemDebate moments, illustrated: https://t.co/eBOFk5VfNH https://t.co/Ixl67RfiS1", "in_reply_to_screen_name": null, "retweet_count": 957, "favorite_count": 2408, "source": "Twitter Web Client", "id_str": "678748425614188550", "is_retweet": false}, {"created_at": "Mon Dec 07 19:37:11 +0000 2015", "text": "Need some motivation this afternoon? Follow Hillary\u2019s lead: https://t.co/hIEy5Be5dh #MotivationMonday https://t.co/vn3MOtnRlN", "in_reply_to_screen_name": null, "retweet_count": 438, "favorite_count": 875, "source": "Twitter Web Client", "id_str": "673949395352756225", "is_retweet": false}, {"created_at": "Sat Aug 01 21:24:37 +0000 2015", "text": "\"Lifting the embargo doesn't set back the advance of freedom. It advances freedom.\"\u2014Hillary on Cuba http://t.co/QTEtIHgNxr", "in_reply_to_screen_name": null, "retweet_count": 440, "favorite_count": 824, "source": "TweetDeck", "id_str": "627590783533744128", "is_retweet": false}, {"created_at": "Sat Oct 24 20:07:03 +0000 2015", "text": "Why #ImWithHer: I trust Hillary. She will make the world better for me, my husband, and my mom. #HillYes https://t.co/jeNEQJjecb", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 912, "source": "TweetDeck", "id_str": "658011844536221696", "is_retweet": false}, {"created_at": "Sat Dec 05 00:07:04 +0000 2015", "text": "A girl-power playlist in honor of \u201cWaitress\u201d\u2014a musical that\u2019s about to make Broadway history: https://t.co/HSXwzIlZit", "in_reply_to_screen_name": null, "retweet_count": 363, "favorite_count": 900, "source": "TweetDeck", "id_str": "672930148010754048", "is_retweet": false}, {"created_at": "Tue Oct 27 23:46:08 +0000 2015", "text": "Some of America's most powerful women tell us why they support Hillary: https://t.co/6jEh4h6odZ https://t.co/a87Gq7tYhY", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 1293, "source": "TweetDeck", "id_str": "659154141655252992", "is_retweet": false}, {"created_at": "Mon Aug 03 18:28:01 +0000 2015", "text": "Republicans are trying to cut millions off from health care. Hillary has a message for them. #standwithPP\nhttps://t.co/iIz1sUPu2z", "in_reply_to_screen_name": null, "retweet_count": 1089, "favorite_count": 1378, "source": "Twitter Web Client", "id_str": "628271116142800896", "is_retweet": false}, {"created_at": "Mon Nov 16 20:17:50 +0000 2015", "text": "How will Hillary\u2019s college compact help you? Find out with this flowchart. https://t.co/Zoq3FGaRJm", "in_reply_to_screen_name": null, "retweet_count": 185, "favorite_count": 353, "source": "TweetDeck", "id_str": "666349477104623616", "is_retweet": false}, {"created_at": "Tue Dec 15 21:59:19 +0000 2015", "text": "Watch live: Hillary details her plan to defeat ISIS and protect Americans at home and abroad \u2192 https://t.co/8DfHpjK2hO", "in_reply_to_screen_name": null, "retweet_count": 230, "favorite_count": 395, "source": "TweetDeck", "id_str": "676884267776008193", "is_retweet": false}, {"created_at": "Mon Oct 05 16:23:35 +0000 2015", "text": "If Congress refuses to act to end this epidemic of gun violence, I'll take administrative action to do so. -H", "in_reply_to_screen_name": null, "retweet_count": 1068, "favorite_count": 2301, "source": "TweetDeck", "id_str": "651070235349487620", "is_retweet": false}, {"created_at": "Wed Oct 14 03:25:26 +0000 2015", "text": "A highlight of #DemDebate: Hillary stands up against Republican attacks on women's rights. #ImWithHer\nhttps://t.co/9OBNNSpaRf", "in_reply_to_screen_name": null, "retweet_count": 2490, "favorite_count": 4361, "source": "Twitter Web Client", "id_str": "654135901870657537", "is_retweet": false}, {"created_at": "Fri Sep 18 23:32:21 +0000 2015", "text": "\u201cThat is what I intend to do.\u201d http://t.co/kmydlAenUP", "in_reply_to_screen_name": null, "retweet_count": 340, "favorite_count": 791, "source": "Twitter Web Client", "id_str": "645017547251806208", "is_retweet": false}, {"created_at": "Mon Jul 20 15:02:14 +0000 2015", "text": "\"I am running for everyone who's ever been knocked down but refused to be knocked out.\"\u2014Hillary http://t.co/wa5dpO16aU", "in_reply_to_screen_name": null, "retweet_count": 1211, "favorite_count": 2394, "source": "TweetDeck", "id_str": "623145897833140227", "is_retweet": false}, {"created_at": "Mon Nov 16 01:15:07 +0000 2015", "text": "Your hard work should be reflected in a rising paycheck. https://t.co/P1Flqso3Fi", "in_reply_to_screen_name": null, "retweet_count": 702, "favorite_count": 1711, "source": "TweetDeck", "id_str": "666061905899839490", "is_retweet": false}, {"created_at": "Fri Oct 09 12:06:05 +0000 2015", "text": "Thank you, @repjohnlewis. http://t.co/qGmkKWf6UP", "in_reply_to_screen_name": null, "retweet_count": 664, "favorite_count": 1236, "source": "TweetDeck", "id_str": "652454986463363072", "is_retweet": false}, {"created_at": "Thu Aug 27 00:05:16 +0000 2015", "text": "Too many women still earn less than men on the job\u2014and women of color often lose out the most. This needs to change. #WomensEqualityDay", "in_reply_to_screen_name": null, "retweet_count": 9636, "favorite_count": 12569, "source": "Twitter Web Client", "id_str": "636690910206644226", "is_retweet": false}, {"created_at": "Tue Jul 07 16:36:10 +0000 2015", "text": "Today in Iowa City, Hillary shares her plan to help families get ahead and stay ahead. Watch live: http://t.co/RGQqnuKs00", "in_reply_to_screen_name": null, "retweet_count": 200, "favorite_count": 338, "source": "Twitter Web Client", "id_str": "618458494660943872", "is_retweet": false}, {"created_at": "Wed Sep 16 01:54:31 +0000 2015", "text": "We\u2019re having a lot of fun on @Snapchat. You should follow us! \ud83d\udc7bhillaryclinton https://t.co/duO1inxWMM", "in_reply_to_screen_name": null, "retweet_count": 184, "favorite_count": 362, "source": "Twitter Web Client", "id_str": "643966158023061504", "is_retweet": false}, {"created_at": "Mon Dec 07 20:53:53 +0000 2015", "text": "You know Hillary's a candidate\u2014but did you know she's also a #Grammys winner? More things you never knew about her: https://t.co/1dQ8yEW0YU", "in_reply_to_screen_name": null, "retweet_count": 341, "favorite_count": 678, "source": "Twitter Web Client", "id_str": "673968697942372352", "is_retweet": false}, {"created_at": "Wed Oct 07 00:12:04 +0000 2015", "text": "Thank you, @wendydavis. http://t.co/JWPxdyaBr2", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 1019, "source": "TweetDeck", "id_str": "651550523137495041", "is_retweet": false}, {"created_at": "Thu Jun 25 18:13:37 +0000 2015", "text": "\"I\u2019m waiting and hoping.\" Read Hillary's letter in support of equality, then add your name: http://t.co/kTqs1ojj7y http://t.co/FZZaS2PqyU", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 853, "source": "TweetDeck", "id_str": "614134366642524162", "is_retweet": false}, {"created_at": "Thu Dec 17 19:07:36 +0000 2015", "text": "The Buffett Rule says millionaires should pay more of what they can afford in taxes. Hillary will make sure they do. https://t.co/LFWebn0T1r", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 1076, "source": "Twitter Web Client", "id_str": "677565829291069440", "is_retweet": false}, {"created_at": "Sun Oct 25 03:46:54 +0000 2015", "text": "Did Hillary rock at #IDPJJ? https://t.co/Y8tu28CEKa", "in_reply_to_screen_name": null, "retweet_count": 785, "favorite_count": 1815, "source": "TweetDeck", "id_str": "658127568353271808", "is_retweet": false}, {"created_at": "Thu Oct 29 20:23:46 +0000 2015", "text": "Everyone who works hard and does their part should see that work reflected in a rising paycheck.", "in_reply_to_screen_name": null, "retweet_count": 713, "favorite_count": 1571, "source": "TweetDeck", "id_str": "659827991665639424", "is_retweet": false}, {"created_at": "Tue Nov 17 13:06:03 +0000 2015", "text": "Come for the coffee. Stay for the conversation\u2014about one of this campaign's most important issues. \u2615\ufe0f  https://t.co/zGfTENgQsq", "in_reply_to_screen_name": null, "retweet_count": 205, "favorite_count": 471, "source": "TweetDeck", "id_str": "666603204428230656", "is_retweet": false}, {"created_at": "Wed Jul 01 15:02:51 +0000 2015", "text": "(2/3) Here's a number we're especially proud of. -H https://t.co/5OF040W57R", "in_reply_to_screen_name": null, "retweet_count": 372, "favorite_count": 781, "source": "Twitter Web Client", "id_str": "616260683496353792", "is_retweet": false}, {"created_at": "Fri Jul 24 19:24:44 +0000 2015", "text": "Businesses need to start focusing more on long-term growth than short-term profits. Hillary's ideas: http://t.co/gEH1VxyuLI", "in_reply_to_screen_name": null, "retweet_count": 342, "favorite_count": 437, "source": "TweetDeck", "id_str": "624661509696831488", "is_retweet": false}, {"created_at": "Sun Jul 19 14:35:55 +0000 2015", "text": "167 years ago, pioneers in Seneca Falls began the fight for women's equality. Add your name: http://t.co/f0d40JLLDR http://t.co/2TyK3Y5OkL", "in_reply_to_screen_name": null, "retweet_count": 527, "favorite_count": 861, "source": "Twitter Web Client", "id_str": "622776887476158464", "is_retweet": false}, {"created_at": "Fri Sep 11 21:18:44 +0000 2015", "text": "9/11 responders deserve our support for their sacrifice. Congress must reauthorize the Zadroga 9/11 Health and Compensation Act. -H", "in_reply_to_screen_name": null, "retweet_count": 719, "favorite_count": 1401, "source": "TweetDeck", "id_str": "642447205081681920", "is_retweet": false}, {"created_at": "Fri Jul 31 15:51:27 +0000 2015", "text": "\"The Cuba embargo needs to go, once and for all.\"\u2014Hillary in Miami", "in_reply_to_screen_name": null, "retweet_count": 387, "favorite_count": 608, "source": "TweetDeck", "id_str": "627144551665401856", "is_retweet": false}, {"created_at": "Wed Sep 23 17:45:12 +0000 2015", "text": "Diversity is a strength, not a weakness. The GOP disagrees: https://t.co/uirbqn8YAq", "in_reply_to_screen_name": null, "retweet_count": 929, "favorite_count": 1173, "source": "TweetDeck", "id_str": "646742121433726976", "is_retweet": false}, {"created_at": "Mon Oct 12 19:29:41 +0000 2015", "text": "\u201cAs a woman...you\u2019re expected to be both strong and vulnerable at the same time. That\u2019s not easy to do.\u201d -Hillary http://t.co/kLCYETQ9MG", "in_reply_to_screen_name": null, "retweet_count": 1069, "favorite_count": 1576, "source": "TweetDeck", "id_str": "653653786364350465", "is_retweet": false}, {"created_at": "Tue May 19 21:27:06 +0000 2015", "text": "What does it mean to be a small-business president? Read this: http://t.co/3GFD65ETlc http://t.co/Ps0QFZgtpT", "in_reply_to_screen_name": null, "retweet_count": 247, "favorite_count": 401, "source": "TweetDeck", "id_str": "600774705008771072", "is_retweet": false}, {"created_at": "Tue Dec 01 16:41:27 +0000 2015", "text": "On this day in 1955, Rosa Parks\u2019 act of rebellion on a Montgomery bus sparked a national movement for equal rights. https://t.co/qJZ3rtfrqf", "in_reply_to_screen_name": null, "retweet_count": 1881, "favorite_count": 2415, "source": "TweetDeck", "id_str": "671730841618391040", "is_retweet": false}, {"created_at": "Tue Nov 10 19:39:56 +0000 2015", "text": "La Corte del 5to Circuito se equivoc\u00f3. La Corte Suprema tiene que validar a DACA/DAPA para que millones de familias puedan vivir sin miedo.", "in_reply_to_screen_name": null, "retweet_count": 151, "favorite_count": 211, "source": "TweetDeck", "id_str": "664165611623157761", "is_retweet": false}, {"created_at": "Wed Nov 04 15:03:46 +0000 2015", "text": "Racial profiling is demeaning, wrong, and unconstitutional. It's time to put that practice behind us.", "in_reply_to_screen_name": null, "retweet_count": 846, "favorite_count": 1801, "source": "TweetDeck", "id_str": "661921787257724928", "is_retweet": false}, {"created_at": "Sun May 10 15:42:41 +0000 2015", "text": "Daughter, mother, grandmother\u2014and a fierce champion for mothers, children, and families: https://t.co/VINeiM9RC7", "in_reply_to_screen_name": null, "retweet_count": 643, "favorite_count": 1217, "source": "Twitter Web Client", "id_str": "597426542340374528", "is_retweet": false}, {"created_at": "Wed Jun 10 14:14:27 +0000 2015", "text": "Overheard in IA, NH, SC, &amp; NV: Voters share thoughts on meeting Hillary on the campaign trail. http://t.co/GE7rIUFLnU http://t.co/YR0xAgUZ3Q", "in_reply_to_screen_name": null, "retweet_count": 134, "favorite_count": 233, "source": "TweetDeck", "id_str": "608638357921480704", "is_retweet": false}, {"created_at": "Thu Oct 22 17:40:53 +0000 2015", "text": "We cannot return to the go-it-alone foreign policy of the past, where military-based solutions are pursued as a first option.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 270, "favorite_count": 519, "source": "Twitter for iPhone", "id_str": "657250282158608385", "is_retweet": false}, {"created_at": "Mon Sep 21 03:01:29 +0000 2015", "text": "A moving moment backstage: \"I'm taking care of my mom, she has Alzheimer's...thank you for speaking up for that.\"\nhttps://t.co/yOWjZoHY3Q", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 1298, "source": "Twitter Web Client", "id_str": "645794949967904768", "is_retweet": false}, {"created_at": "Thu Jul 09 19:54:05 +0000 2015", "text": "Nope\u2014it's not just Donald Trump who has backwards ideas about immigration. https://t.co/1nqc0gn8rh", "in_reply_to_screen_name": null, "retweet_count": 414, "favorite_count": 798, "source": "TweetDeck", "id_str": "619233079878680582", "is_retweet": false}, {"created_at": "Fri Oct 30 18:12:56 +0000 2015", "text": "It's intolerable that black children in our country feel unsafe in their own skin. A powerful reminder: https://t.co/afY33gjdsx -H", "in_reply_to_screen_name": null, "retweet_count": 909, "favorite_count": 1144, "source": "TweetDeck", "id_str": "660157452227334145", "is_retweet": false}, {"created_at": "Sun May 03 19:08:27 +0000 2015", "text": "Sign up for your chance to give a Mother's Day gift to remember: http://t.co/ZH0LnIKT9j http://t.co/jrgXKtU83g", "in_reply_to_screen_name": null, "retweet_count": 269, "favorite_count": 425, "source": "Twitter Web Client", "id_str": "594941606463217665", "is_retweet": false}, {"created_at": "Thu Dec 17 20:53:47 +0000 2015", "text": "To keep America safe, we need leaders who will stand up against hateful proposals and reckless words. https://t.co/YrRplSouHP", "in_reply_to_screen_name": null, "retweet_count": 1251, "favorite_count": 2539, "source": "TweetDeck", "id_str": "677592548920152065", "is_retweet": false}, {"created_at": "Tue Apr 14 20:39:26 +0000 2015", "text": "More on Hillary laying out her priorities for the country here: http://t.co/4LUGU86pjt", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 736, "source": "Twitter Web Client", "id_str": "588079135009984512", "is_retweet": false}, {"created_at": "Sat May 23 18:57:36 +0000 2015", "text": "Well done, Ireland. -H", "in_reply_to_screen_name": null, "retweet_count": 6504, "favorite_count": 11407, "source": "Twitter Web Client", "id_str": "602186636022145024", "is_retweet": false}, {"created_at": "Tue Jul 07 22:24:28 +0000 2015", "text": "\"Se trata de proveer una oportunidad justa para Puerto Rico.\" La declaraci\u00f3n de Hillary sobre la econom\u00eda de PR http://t.co/CXSdNe6c01", "in_reply_to_screen_name": null, "retweet_count": 191, "favorite_count": 302, "source": "Twitter Web Client", "id_str": "618546148761051136", "is_retweet": false}, {"created_at": "Sat Nov 28 21:27:29 +0000 2015", "text": "From Olivia, age 12: \u201cI am a little feminist growing up to help all women with equal rights.\u201d Read her letter \u2b07 https://t.co/81NmApY5ge", "in_reply_to_screen_name": null, "retweet_count": 1206, "favorite_count": 3207, "source": "Twitter Web Client", "id_str": "670715660771659776", "is_retweet": false}, {"created_at": "Sat Jun 27 00:30:18 +0000 2015", "text": "Don't miss this: Hillary speaks at the @vademocrats Jefferson-Jackson Dinner. Watch live: http://t.co/O7xmM8qUpg", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 325, "source": "TweetDeck", "id_str": "614591548018282496", "is_retweet": false}, {"created_at": "Fri Jul 03 00:01:10 +0000 2015", "text": "Now pinning savvy supporters' DIY creations: http://t.co/DeIHEOBZ3d http://t.co/V7aZKRsyqg", "in_reply_to_screen_name": null, "retweet_count": 174, "favorite_count": 522, "source": "Twitter Web Client", "id_str": "616758544948436992", "is_retweet": false}, {"created_at": "Sat Oct 03 19:23:22 +0000 2015", "text": "\"It\u2019s outrageous that, in 2015, you can still be fired for being gay...this kind of discrimination goes against everything we stand for.\"", "in_reply_to_screen_name": null, "retweet_count": 1901, "favorite_count": 3721, "source": "Twitter Web Client", "id_str": "650390705437863936", "is_retweet": false}, {"created_at": "Thu Sep 17 03:13:25 +0000 2015", "text": "For a bunch of people who don't believe in acting on climate change, the Republican candidates seem committed to recycling ideas. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 4817, "favorite_count": 9903, "source": "Twitter Web Client", "id_str": "644348404043268096", "is_retweet": false}, {"created_at": "Wed Nov 18 22:30:33 +0000 2015", "text": ".@billclinton popped the question three times before Hillary said yes. How she remembers the proposal that worked: https://t.co/gvn9tS985h", "in_reply_to_screen_name": null, "retweet_count": 340, "favorite_count": 1134, "source": "TweetDeck", "id_str": "667107651952750592", "is_retweet": false}, {"created_at": "Wed Jul 15 20:40:06 +0000 2015", "text": "Bottom line: When women get ahead, America gets ahead. http://t.co/71MA2KUy53", "in_reply_to_screen_name": null, "retweet_count": 762, "favorite_count": 1268, "source": "TweetDeck", "id_str": "621418985716908033", "is_retweet": false}, {"created_at": "Wed Mar 18 00:05:45 +0000 2015", "text": "Making college more affordable is an investment in our kids and economic growth. Cuts to Pell Grants hold our kids back.", "in_reply_to_screen_name": null, "retweet_count": 3051, "favorite_count": 5085, "source": "Twitter Web Client", "id_str": "577984196460855297", "is_retweet": false}, {"created_at": "Tue Nov 10 01:58:53 +0000 2015", "text": "This ice cream shop named a sundae after Hillary Clinton. But that\u2019s only part of the story. https://t.co/Hp2Qa3AXQA", "in_reply_to_screen_name": null, "retweet_count": 227, "favorite_count": 497, "source": "TweetDeck", "id_str": "663898591413469184", "is_retweet": false}, {"created_at": "Thu Jun 04 20:21:44 +0000 2015", "text": "\"In SC, there\u2019s supposed to be one machine for every 250 voters. In minority areas, that rule is often overlooked.\" http://t.co/8DwFrTGZkI", "in_reply_to_screen_name": null, "retweet_count": 307, "favorite_count": 295, "source": "TweetDeck", "id_str": "606556461695537152", "is_retweet": false}, {"created_at": "Mon Oct 12 21:03:41 +0000 2015", "text": "Thoughts and prayers aren\u2019t enough\u2014we must act to protect families from gun violence. http://t.co/KDBBuXp6W5", "in_reply_to_screen_name": null, "retweet_count": 1044, "favorite_count": 1873, "source": "TweetDeck", "id_str": "653677442347986944", "is_retweet": false}, {"created_at": "Wed Oct 21 01:02:22 +0000 2015", "text": "Dorothy, la madre de Hillary, le ense\u00f1\u00f3 la importancia de trabajar duro y de nunca rendirse.\nhttps://t.co/6KI9lHxgYD", "in_reply_to_screen_name": null, "retweet_count": 282, "favorite_count": 489, "source": "Twitter Web Client", "id_str": "656636612307124224", "is_retweet": false}, {"created_at": "Thu Jun 11 18:55:31 +0000 2015", "text": "Team #Hillary2016 on Instagram: \ud83d\udcafk strong! Join us: http://t.co/FRwn75IrEJ http://t.co/aLsecPBVm5", "in_reply_to_screen_name": null, "retweet_count": 208, "favorite_count": 499, "source": "TweetDeck", "id_str": "609071479066664960", "is_retweet": false}, {"created_at": "Wed Sep 09 16:22:45 +0000 2015", "text": ".@DavidMuir asked: \u201cIs your mother\u2019s voice in your ear?\u201d Watch Hillary's response:\nhttps://t.co/rIMUqtmEck", "in_reply_to_screen_name": null, "retweet_count": 542, "favorite_count": 871, "source": "Twitter Web Client", "id_str": "641647942785437696", "is_retweet": false}, {"created_at": "Sun Apr 26 19:33:17 +0000 2015", "text": "ICYMI: Watch Hillary's keynote speech from @WomenintheWorld. http://t.co/8ebS4Zd5M6", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 748, "source": "Twitter for iPhone", "id_str": "592411143672569856", "is_retweet": false}, {"created_at": "Thu Sep 24 23:00:52 +0000 2015", "text": "The official soundtrack for shattering glass ceilings, by #WomenforHillary on @Spotify: http://t.co/SeyywuBxGw http://t.co/Dpj169XB07", "in_reply_to_screen_name": null, "retweet_count": 549, "favorite_count": 881, "source": "Twitter Web Client", "id_str": "647183950771810304", "is_retweet": false}, {"created_at": "Wed Sep 16 17:21:12 +0000 2015", "text": "Today\u2019s the day the Republican presidential candidates meet for the second debate. Follow @TheBriefing2016 for fact-checks and more.", "in_reply_to_screen_name": null, "retweet_count": 345, "favorite_count": 483, "source": "TweetDeck", "id_str": "644199366249566209", "is_retweet": false}, {"created_at": "Wed Jun 10 17:42:04 +0000 2015", "text": "Today's edition of \"#Hillary2016 supporters doing amazing things\": https://t.co/n44NRUfi0i", "in_reply_to_screen_name": null, "retweet_count": 92, "favorite_count": 160, "source": "TweetDeck", "id_str": "608690606731325440", "is_retweet": false}, {"created_at": "Sun Jun 14 17:05:29 +0000 2015", "text": "Packed house waiting to hear Hillary at the Iowa launch party in Des Moines. #Hillary2016 http://t.co/AShpArlJeg", "in_reply_to_screen_name": null, "retweet_count": 315, "favorite_count": 779, "source": "Twitter for iPhone", "id_str": "610130953600692226", "is_retweet": false}, {"created_at": "Wed Dec 09 22:50:11 +0000 2015", "text": "Nearly 3 million Americans are Muslims. They deserve better than Republicans\u2019 hateful, dangerous attacks.\nhttps://t.co/oT0UHz9Tor", "in_reply_to_screen_name": null, "retweet_count": 2768, "favorite_count": 4040, "source": "Twitter Web Client", "id_str": "674722739387695105", "is_retweet": false}, {"created_at": "Thu Oct 08 03:39:09 +0000 2015", "text": "Hillary on standing up to the NRA: \u201cWe can\u2019t just say, OK, nothing we can do about it...We have got to fight back.\u201d\nhttps://t.co/kwRJpE13mp", "in_reply_to_screen_name": null, "retweet_count": 698, "favorite_count": 1262, "source": "Twitter Web Client", "id_str": "651965024798294016", "is_retweet": false}, {"created_at": "Wed Sep 30 12:07:22 +0000 2015", "text": "\u201cNobody in America should have to choose between buying the medicine they need and paying their rent.\u201d -Hillary\nhttps://t.co/HmGeuX2vKz", "in_reply_to_screen_name": null, "retweet_count": 818, "favorite_count": 1478, "source": "Twitter Web Client", "id_str": "649193820244996096", "is_retweet": false}, {"created_at": "Wed Dec 16 02:18:14 +0000 2015", "text": "No estamos en guerra contra una religion. Estamos en guerra contra el yihadismo radical. Hillary entiende la diferencia. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 860, "source": "TweetDeck", "id_str": "676949425693020164", "is_retweet": false}, {"created_at": "Sat Jun 20 19:28:02 +0000 2015", "text": "Read Hillary's remarks on the need to confront systemic racism in America &amp; move forward together: http://t.co/U8WFW0eemG", "in_reply_to_screen_name": null, "retweet_count": 893, "favorite_count": 1128, "source": "Twitter Web Client", "id_str": "612341152570834944", "is_retweet": false}, {"created_at": "Thu May 28 01:40:28 +0000 2015", "text": "Being a champion for everyday Americans isn't just about talking\u2014it's also about listening. http://t.co/RjiNYWFXpU", "in_reply_to_screen_name": null, "retweet_count": 299, "favorite_count": 557, "source": "TweetDeck", "id_str": "603737569180913665", "is_retweet": false}, {"created_at": "Wed Dec 23 16:18:58 +0000 2015", "text": "Happy holidays! Text HOLIDAY to 47246 to hear a message from Hillary.", "in_reply_to_screen_name": null, "retweet_count": 313, "favorite_count": 842, "source": "TweetDeck", "id_str": "679697717065572352", "is_retweet": false}, {"created_at": "Sun Jul 05 23:14:11 +0000 2015", "text": "GOOOOOOOOOOOOAL! \u26bd\ufe0f  #SheBelieves", "in_reply_to_screen_name": null, "retweet_count": 2160, "favorite_count": 4379, "source": "Twitter Web Client", "id_str": "617833886228344832", "is_retweet": false}, {"created_at": "Thu Nov 19 15:37:27 +0000 2015", "text": "Happening now: Hillary lays out her plan to combat terrorism and defeat ISIS. Watch \u2192 https://t.co/nsPEP8Nsjq", "in_reply_to_screen_name": null, "retweet_count": 229, "favorite_count": 384, "source": "TweetDeck", "id_str": "667366081745575936", "is_retweet": false}, {"created_at": "Thu Oct 15 16:31:54 +0000 2015", "text": "Watch live: Hillary speaks at @USHCC. Don't miss this \u2192 http://t.co/ovA9XAULgP", "in_reply_to_screen_name": null, "retweet_count": 89, "favorite_count": 186, "source": "TweetDeck", "id_str": "654696207659364356", "is_retweet": false}, {"created_at": "Thu Oct 22 14:45:17 +0000 2015", "text": "\"The American people expect us to lead. To learn the right lessons. To rise above partisanship and reach for statesmanship.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 746, "source": "TweetDeck", "id_str": "657206091453976576", "is_retweet": false}, {"created_at": "Wed Jul 01 04:20:10 +0000 2015", "text": "If you've been thinking about donating, now's the time Hillary needs you most! Chip in before midnight local time: http://t.co/l0IiiUIpAC", "in_reply_to_screen_name": null, "retweet_count": 116, "favorite_count": 217, "source": "TweetDeck", "id_str": "616098948256665600", "is_retweet": false}, {"created_at": "Tue Oct 13 20:24:01 +0000 2015", "text": "One third of black men born today face the prospect of incarceration in their lifetimes. We can do better. http://t.co/2vtiRQZd9v", "in_reply_to_screen_name": null, "retweet_count": 934, "favorite_count": 1325, "source": "TweetDeck", "id_str": "654029848462106625", "is_retweet": false}, {"created_at": "Mon Apr 13 15:12:43 +0000 2015", "text": "Be a part of this campaign: http://t.co/j4Scv8sUPw", "in_reply_to_screen_name": null, "retweet_count": 1192, "favorite_count": 2115, "source": "Twitter Web Client", "id_str": "587634528216285184", "is_retweet": false}, {"created_at": "Mon Dec 28 01:11:08 +0000 2015", "text": "An Iowa fifth grader asked: \"What are you going to do about all this bullying?\"\nhttps://t.co/L2EuvH5DpQ", "in_reply_to_screen_name": null, "retweet_count": 1564, "favorite_count": 3461, "source": "Twitter Web Client", "id_str": "681281190783926272", "is_retweet": false}, {"created_at": "Thu Jul 09 17:00:16 +0000 2015", "text": "http://t.co/QU5RvdkYy9", "in_reply_to_screen_name": null, "retweet_count": 271, "favorite_count": 435, "source": "Twitter Web Client", "id_str": "619189338056847360", "is_retweet": false}, {"created_at": "Thu Oct 22 17:34:54 +0000 2015", "text": "Hillary is testifying before @HouseBenghazi to defend the vision of US diplomacy that Ambassador Stevens gave his life carrying out.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 193, "favorite_count": 368, "source": "Twitter for iPhone", "id_str": "657248780123770880", "is_retweet": false}, {"created_at": "Sun Jul 05 17:00:59 +0000 2015", "text": "Game time: Hit \u25b6\ufe0f on the #Hillary2016 championship playlist. Go Team #USA! http://t.co/ea46LZxxLd http://t.co/RSeCv1XIcl", "in_reply_to_screen_name": null, "retweet_count": 164, "favorite_count": 390, "source": "Twitter Web Client", "id_str": "617739967486369796", "is_retweet": false}, {"created_at": "Wed Dec 16 03:25:13 +0000 2015", "text": "The candidates on stage talk tough\u2014but they won't even support legislation preventing suspected terrorists from getting guns. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 2459, "favorite_count": 4101, "source": "TweetDeck", "id_str": "676966282332348416", "is_retweet": false}, {"created_at": "Thu Sep 24 22:06:58 +0000 2015", "text": "Gracias, @Pontifex. Tenemos que cuidar el medio ambiente, crear oportunidades econ\u00f3micas y defender los derechos y la dignidad de todos.", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 771, "source": "Twitter Web Client", "id_str": "647170384668790784", "is_retweet": false}, {"created_at": "Thu Dec 24 00:01:01 +0000 2015", "text": "Happy holidays! Text HOLIDAY to 47246 to hear a message from Hillary. https://t.co/pKn6YG6iQp", "in_reply_to_screen_name": null, "retweet_count": 592, "favorite_count": 1484, "source": "TweetDeck", "id_str": "679813995495178241", "is_retweet": false}, {"created_at": "Fri Apr 24 18:04:18 +0000 2015", "text": "@GabbyGiffords, always inspiring to see you\u2014resilience, bravery, &amp; sheer determination personified. \u2013H", "in_reply_to_screen_name": "GabbyGiffords", "retweet_count": 153, "favorite_count": 305, "source": "Twitter Web Client", "id_str": "591663972073480194", "is_retweet": false}, {"created_at": "Fri Oct 09 22:46:17 +0000 2015", "text": "\u00a1Gracias @DoloresHuerta por apoyar a Hillary Clinton! Para escuchar el mensaje de Dolores, env\u00eda HUERTA al 47246.", "in_reply_to_screen_name": null, "retweet_count": 169, "favorite_count": 341, "source": "TweetDeck", "id_str": "652616099482181632", "is_retweet": false}, {"created_at": "Fri Nov 13 02:16:30 +0000 2015", "text": "We've come too far to see our progress ripped away.https://t.co/obBV1uXu0V", "in_reply_to_screen_name": null, "retweet_count": 646, "favorite_count": 1269, "source": "Twitter Web Client", "id_str": "664990187160805376", "is_retweet": false}, {"created_at": "Sun Nov 15 15:12:57 +0000 2015", "text": "\"I\u2019m very proud that...a majority of my donors are women.\" \u2014Hillary at the #DemDebate\nhttps://t.co/iUozjULVvQ", "in_reply_to_screen_name": null, "retweet_count": 563, "favorite_count": 1647, "source": "Twitter Web Client", "id_str": "665910363691479040", "is_retweet": false}, {"created_at": "Fri Jul 10 20:52:56 +0000 2015", "text": "Hillary has a birthday \ud83c\udf81 for you\u2014a custom card. Sign up now: http://t.co/dsl9vl09hf", "in_reply_to_screen_name": null, "retweet_count": 101, "favorite_count": 248, "source": "TweetDeck", "id_str": "619610275319312384", "is_retweet": false}, {"created_at": "Tue Jan 20 00:18:35 +0000 2015", "text": "What would MLK say today? Great strides but miles to go. We have to keep up the fight against injustice. #MLKDay", "in_reply_to_screen_name": null, "retweet_count": 3255, "favorite_count": 4617, "source": "Twitter for iPhone", "id_str": "557331318527508480", "is_retweet": false}, {"created_at": "Thu Sep 17 22:58:50 +0000 2015", "text": "Hillary to @SpeakerBoehner: Shutting down our government over a partisan attack on Planned Parenthood is just wrong.\nhttps://t.co/m7ZEPnkjf6", "in_reply_to_screen_name": null, "retweet_count": 717, "favorite_count": 1284, "source": "Twitter Web Client", "id_str": "644646725013999616", "is_retweet": false}, {"created_at": "Thu Apr 16 13:11:48 +0000 2015", "text": "Hey, have you joined #Hillary2016 yet? http://t.co/F21u3DLKEH", "in_reply_to_screen_name": null, "retweet_count": 807, "favorite_count": 1419, "source": "Twitter Web Client", "id_str": "588691258484400128", "is_retweet": false}, {"created_at": "Fri Jul 31 00:21:30 +0000 2015", "text": "Proud to stand w/Planned Parenthood &amp; for access to quality, affordable healthcare for women, men &amp; young people. -H https://t.co/XLuRvxzsyZ", "in_reply_to_screen_name": null, "retweet_count": 1524, "favorite_count": 2729, "source": "Twitter Web Client", "id_str": "626910522009604096", "is_retweet": false}, {"created_at": "Wed Nov 11 03:14:37 +0000 2015", "text": "The @CFPB protects borrowers from unfair and deceptive Wall Street practices. Attacks against it are unfounded and outrageous.", "in_reply_to_screen_name": null, "retweet_count": 269, "favorite_count": 493, "source": "Twitter Web Client", "id_str": "664280037781147648", "is_retweet": false}, {"created_at": "Sun Oct 18 17:02:13 +0000 2015", "text": "Over four decades, Hillary has taken on her share of tough fights\u2014here are a few of her biggest accomplishments. http://t.co/fM8R3CrFrj", "in_reply_to_screen_name": null, "retweet_count": 493, "favorite_count": 782, "source": "Twitter Web Client", "id_str": "655791002926628866", "is_retweet": false}, {"created_at": "Fri Apr 17 16:44:21 +0000 2015", "text": "#ff @HillaryforIA, @HillaryforNH, @HillaryforSC, and @HillaryforNV for news from organizers and volunteers who are making it happen!", "in_reply_to_screen_name": null, "retweet_count": 275, "favorite_count": 508, "source": "Twitter Web Client", "id_str": "589107138863194112", "is_retweet": false}, {"created_at": "Fri Jul 31 15:43:32 +0000 2015", "text": "\"I understand the skepticism...But you've been promised progress for 50 years. We can't wait any longer for a failed policy to bear fruit.\"", "in_reply_to_screen_name": null, "retweet_count": 262, "favorite_count": 493, "source": "TweetDeck", "id_str": "627142560448933888", "is_retweet": false}, {"created_at": "Wed May 27 15:36:55 +0000 2015", "text": "5th Circuit is wrong on immigration. @POTUS followed precedent, took steps for families when GOP House wouldn't. Must continue the fight. -H", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 880, "source": "TweetDeck", "id_str": "603585683727491072", "is_retweet": false}, {"created_at": "Fri Nov 13 16:04:38 +0000 2015", "text": "The story of 2 women with moms named Dorothy, sharing beers of the same name, toasting to the first woman president. https://t.co/ZM2anns4Cg", "in_reply_to_screen_name": null, "retweet_count": 196, "favorite_count": 429, "source": "Twitter Web Client", "id_str": "665198596321480705", "is_retweet": false}, {"created_at": "Sat Nov 07 02:14:00 +0000 2015", "text": "\"I have been committed to and working on issues that I think are important...in particular to people who are marginalized.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 408, "favorite_count": 853, "source": "TweetDeck", "id_str": "662815233115721728", "is_retweet": false}, {"created_at": "Thu Dec 17 22:24:07 +0000 2015", "text": "This year, Republicans reminded us that the Dark Side is alive and well. https://t.co/3BfPeTmDNv https://t.co/ft3RTpMFWw", "in_reply_to_screen_name": null, "retweet_count": 1982, "favorite_count": 3310, "source": "TweetDeck", "id_str": "677615282869968900", "is_retweet": false}, {"created_at": "Thu May 21 14:32:55 +0000 2015", "text": "Morning checklist: Wake up, take Haley (my 10yo) to school, get coffee on the way in. Got a special \"H\" for today! http://t.co/VScN2SdJSl", "in_reply_to_screen_name": null, "retweet_count": 101, "favorite_count": 429, "source": "Twitter Web Client", "id_str": "601395248137445377", "is_retweet": false}, {"created_at": "Mon May 11 19:20:49 +0000 2015", "text": "2 smart #paidleave pieces: @iamjohnoliver being funny, @ezraklein being wonderfully wonky. http://t.co/g1OQMXrhgG http://t.co/WEPKYu9OIg -H", "in_reply_to_screen_name": null, "retweet_count": 301, "favorite_count": 427, "source": "Twitter Web Client", "id_str": "597843824166187008", "is_retweet": false}, {"created_at": "Sat Jun 13 16:37:31 +0000 2015", "text": "\"She was born on June 4, 1919\u2014before women in America had the right to vote. But on that very day...\" http://t.co/yVYlugvSor", "in_reply_to_screen_name": null, "retweet_count": 312, "favorite_count": 577, "source": "Twitter Web Client", "id_str": "609761527382560769", "is_retweet": false}, {"created_at": "Sat Aug 15 17:58:18 +0000 2015", "text": "\u2714\ufe0f Lower interest rates\n\u2714\ufe0f Never pay more than you can afford\nHillary\u2019s plan will relieve the burden of student debt: http://t.co/A4pWb3fOf4", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 620, "source": "Twitter Web Client", "id_str": "632612291561824257", "is_retweet": false}, {"created_at": "Sun Nov 15 03:34:14 +0000 2015", "text": "What Hillary believes: No American should have to take out a loan to pay tuition at a public college. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 986, "favorite_count": 2171, "source": "TweetDeck", "id_str": "665734527147360256", "is_retweet": false}, {"created_at": "Sun Nov 01 19:04:44 +0000 2015", "text": "While Republicans swapped out-of-touch ideas at the #GOPdebate, Hillary was live-texting her reactions. https://t.co/OFyM5HEYbZ", "in_reply_to_screen_name": null, "retweet_count": 298, "favorite_count": 667, "source": "Twitter Web Client", "id_str": "660895262190227456", "is_retweet": false}, {"created_at": "Tue Aug 25 15:31:20 +0000 2015", "text": "Jeb is just wrong.\n\n\u2714\ufe0f 2.7 million patients for\n\u2714\ufe0f 900K cancer screenings and\n\u2714\ufe0f 4.5M STI tests and treatments/year https://t.co/dpbWI0jn1E", "in_reply_to_screen_name": null, "retweet_count": 2600, "favorite_count": 3722, "source": "TweetDeck", "id_str": "636199183666544641", "is_retweet": false}, {"created_at": "Tue Sep 15 18:30:46 +0000 2015", "text": "Hillary has been fighting for women and families her entire life. If you're with her, chip in today: http://t.co/KX61ZTxsM2", "in_reply_to_screen_name": null, "retweet_count": 215, "favorite_count": 467, "source": "Twitter Web Client", "id_str": "643854485702508544", "is_retweet": false}, {"created_at": "Fri May 29 16:03:32 +0000 2015", "text": "\ud83d\udc4f\ud83d\udc4f\ud83d\udc4f Happy Friday from fashion icon @johnpodesta.  https://t.co/jVzVougnFn", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 257, "source": "TweetDeck", "id_str": "604317156281483265", "is_retweet": false}, {"created_at": "Wed Dec 16 04:17:43 +0000 2015", "text": "We cannot let Trump or any of the Republican candidates win the White House. Add your name if you agree: https://t.co/Wbrs7RMSSF", "in_reply_to_screen_name": null, "retweet_count": 868, "favorite_count": 2833, "source": "TweetDeck", "id_str": "676979493291089920", "is_retweet": false}, {"created_at": "Wed Apr 15 17:01:58 +0000 2015", "text": "High fives in Marshalltown, Iowa. http://t.co/x2K9sU1UVo", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 1207, "source": "Twitter Web Client", "id_str": "588386794347110401", "is_retweet": false}, {"created_at": "Sun Oct 11 18:59:01 +0000 2015", "text": "Just 30% of girls around the world are enrolled in secondary school. Together, we can change that: http://t.co/Ai12QdbJX0 #DayoftheGirl", "in_reply_to_screen_name": null, "retweet_count": 924, "favorite_count": 1266, "source": "Twitter Web Client", "id_str": "653283679389773824", "is_retweet": false}, {"created_at": "Mon Nov 09 04:10:59 +0000 2015", "text": "What would it mean to have a former secretary of state in the White House? This. https://t.co/G1zjo2uRQd", "in_reply_to_screen_name": null, "retweet_count": 405, "favorite_count": 834, "source": "Twitter Web Client", "id_str": "663569446313816064", "is_retweet": false}, {"created_at": "Sat Sep 19 23:27:01 +0000 2015", "text": "Senator Chuck Schumer: Hillary helped \u201crestore the shattered credibility of the United States.\u201d http://t.co/3LTkgRux1L", "in_reply_to_screen_name": null, "retweet_count": 473, "favorite_count": 1039, "source": "TweetDeck", "id_str": "645378592537509888", "is_retweet": false}, {"created_at": "Sun Sep 06 17:44:57 +0000 2015", "text": "Food craving? Binge-watch show of choice? 6 things you probably didn\u2019t know about Hillary, via @MSNBC:\nhttps://t.co/f0u5pZSdRW", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 638, "source": "Twitter Web Client", "id_str": "640581466104004608", "is_retweet": false}, {"created_at": "Mon Apr 20 20:08:03 +0000 2015", "text": "Saying hi at Whitney Brothers Inc., a furniture-maker in Keene, NH http://t.co/MkhNtpvODM", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 986, "source": "Twitter Web Client", "id_str": "590245562856906752", "is_retweet": false}, {"created_at": "Tue Apr 14 20:38:54 +0000 2015", "text": "\"And we need to protect our country from threats that we see and the ones that are on the horizon.\"", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 1003, "source": "Twitter Web Client", "id_str": "588079002788765697", "is_retweet": false}, {"created_at": "Thu Nov 12 13:06:05 +0000 2015", "text": "In 1991 Hillary Clinton filed her husband's papers to run for president. In 2015 she filed her own. https://t.co/hbmPBXBgkv", "in_reply_to_screen_name": null, "retweet_count": 581, "favorite_count": 1358, "source": "TweetDeck", "id_str": "664791272226361345", "is_retweet": false}, {"created_at": "Thu May 21 19:43:39 +0000 2015", "text": "Mary Jo, you're right: business can be a powerful force for change, &amp; yours certainly is. Thanks for inviting us in, one tweet at a time. -H", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 384, "source": "Twitter Web Client", "id_str": "601473449731686400", "is_retweet": false}, {"created_at": "Thu May 28 19:46:44 +0000 2015", "text": "A moment of reflection on the campaign trail: Hillary and Reverend Hunt talk about faith at a South Carolina bakery. http://t.co/jY2u2lOjWL", "in_reply_to_screen_name": null, "retweet_count": 228, "favorite_count": 556, "source": "TweetDeck", "id_str": "604010940808445952", "is_retweet": false}, {"created_at": "Thu Aug 27 15:11:01 +0000 2015", "text": "Hillary is laying out her vision for strengthening the middle class in Cleveland, Ohio. Watch live: http://t.co/nWCT1TLc2x", "in_reply_to_screen_name": null, "retweet_count": 250, "favorite_count": 418, "source": "TweetDeck", "id_str": "636918846503448576", "is_retweet": false}, {"created_at": "Tue Nov 03 00:42:55 +0000 2015", "text": "Republicans continue to play politics with families who want to contribute to our economy. Eso no es liderazgo. https://t.co/tl55HEIWwR", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 563, "source": "TweetDeck", "id_str": "661342757890465792", "is_retweet": false}, {"created_at": "Fri Jun 19 17:55:38 +0000 2015", "text": "150 years ago today, freedom triumphed over injustice. This Juneteenth, we recognize how far we've come &amp; how far we have to go. -H", "in_reply_to_screen_name": null, "retweet_count": 800, "favorite_count": 1336, "source": "Twitter Web Client", "id_str": "611955514365374464", "is_retweet": false}, {"created_at": "Wed Oct 28 16:45:38 +0000 2015", "text": ".@StephenAtHome on \"Hillary for Halloween\" costume ideas: Dress up however you want, but stay for 11 hours.\nhttps://t.co/scXyiutlaE", "in_reply_to_screen_name": null, "retweet_count": 406, "favorite_count": 856, "source": "Twitter Web Client", "id_str": "659410707243335680", "is_retweet": false}, {"created_at": "Fri Nov 13 00:43:19 +0000 2015", "text": "Create your own #Hillary2016\u2013inspired cross-stitch. Here\u2019s the pattern to DIY: https://t.co/EIdmMpIj2X https://t.co/y452tnL0L0", "in_reply_to_screen_name": null, "retweet_count": 790, "favorite_count": 2340, "source": "Twitter Web Client", "id_str": "664966738556100608", "is_retweet": false}, {"created_at": "Tue May 05 15:23:37 +0000 2015", "text": "Get the facts and fight back against false attacks. Sign up for @TheBriefing2016: http://t.co/YyCoe2wfMR http://t.co/UjxaQz74em", "in_reply_to_screen_name": null, "retweet_count": 268, "favorite_count": 366, "source": "Twitter Web Client", "id_str": "595609804191707136", "is_retweet": false}, {"created_at": "Mon Oct 26 18:23:11 +0000 2015", "text": "\u266a \u266a Qu\u00e9 linda est\u00e1 la ma\u00f1ana en que vengo a saludarte, venimos todos con gusto y placer a felicitarte... \u266a \u266a https://t.co/lGDjG7Dk9q", "in_reply_to_screen_name": null, "retweet_count": 459, "favorite_count": 910, "source": "TweetDeck", "id_str": "658710481788674048", "is_retweet": false}, {"created_at": "Tue Oct 20 16:57:25 +0000 2015", "text": "Watch: Hillary\u2019s diplomacy united unlikely allies around sanctions that got Iran to the negotiating table. https://t.co/zb59ne5yRT", "in_reply_to_screen_name": null, "retweet_count": 297, "favorite_count": 424, "source": "TweetDeck", "id_str": "656514571344044032", "is_retweet": false}, {"created_at": "Thu May 28 12:48:17 +0000 2015", "text": "Hometown pride. http://t.co/EIVHijRSfI", "in_reply_to_screen_name": null, "retweet_count": 286, "favorite_count": 954, "source": "TweetDeck", "id_str": "603905631309983746", "is_retweet": false}, {"created_at": "Wed Dec 09 03:56:44 +0000 2015", "text": "If you agree that #LoveTrumpsHate, text LOVE to 47246 to get the sticker. https://t.co/4VvGxgjbjT", "in_reply_to_screen_name": null, "retweet_count": 846, "favorite_count": 1900, "source": "Twitter for iPhone", "id_str": "674437497749970944", "is_retweet": false}, {"created_at": "Wed Apr 29 14:30:19 +0000 2015", "text": "We have to take on broader inequities in society\u2014you can\u2019t separate unrest in the streets from cycles of poverty &amp; despair in communities.", "in_reply_to_screen_name": null, "retweet_count": 1654, "favorite_count": 2088, "source": "Twitter Web Client", "id_str": "593422060199677955", "is_retweet": false}, {"created_at": "Sun Jul 05 22:00:27 +0000 2015", "text": "To: @ussoccer_wnt\nFrom: Hillary\n#SheBelieves\nhttps://t.co/FTmbqKPuOw", "in_reply_to_screen_name": null, "retweet_count": 1125, "favorite_count": 2612, "source": "Twitter Web Client", "id_str": "617815330253967360", "is_retweet": false}, {"created_at": "Thu Dec 03 19:11:45 +0000 2015", "text": "\"No matter what motivation these shooters had, we can say one thing for certain\u2014they shouldn\u2019t have been able to do this.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1092, "favorite_count": 2530, "source": "TweetDeck", "id_str": "672493442707136512", "is_retweet": false}, {"created_at": "Thu Jul 16 00:32:20 +0000 2015", "text": "Tonight, the #Hillary2016 campaign filed its first official fundraising report with the FEC. Here are some of our favorite parts:", "in_reply_to_screen_name": null, "retweet_count": 126, "favorite_count": 317, "source": "TweetDeck", "id_str": "621477429249474560", "is_retweet": false}, {"created_at": "Tue May 19 20:49:50 +0000 2015", "text": "We shouldn\u2019t break up hardworking families who contribute to our economy and our society. I\u2019ll #Fight4DAPA. -H", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 831, "source": "TweetDeck", "id_str": "600765327450988544", "is_retweet": false}, {"created_at": "Tue Dec 08 00:01:34 +0000 2015", "text": "En un paso democr\u00e1tico, el pueblo venezolano vot\u00f3 por el cambio. Estamos con el pueblo venezolano. #Venezuela", "in_reply_to_screen_name": null, "retweet_count": 6089, "favorite_count": 4132, "source": "TweetDeck", "id_str": "674015926526717952", "is_retweet": false}, {"created_at": "Sat Nov 07 02:38:13 +0000 2015", "text": "On foreign policy, the use of force \"should always be the last resort\u2014not the first choice.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 507, "favorite_count": 1058, "source": "TweetDeck", "id_str": "662821328022429696", "is_retweet": false}, {"created_at": "Sun Jun 21 15:27:27 +0000 2015", "text": "Happy Father's Day, @billclinton! Doesn't this feel like yesterday? -H http://t.co/Vx4tJdiTJc", "in_reply_to_screen_name": null, "retweet_count": 1049, "favorite_count": 4140, "source": "Twitter Web Client", "id_str": "612642995188465664", "is_retweet": false}, {"created_at": "Fri Sep 18 16:52:57 +0000 2015", "text": "\u201cAny woman who reports an assault should be heard and believed.\" \u2014Hillary to @Refinery29. Read the interview: http://t.co/8GQaZ109tE", "in_reply_to_screen_name": null, "retweet_count": 416, "favorite_count": 822, "source": "TweetDeck", "id_str": "644917034116075520", "is_retweet": false}, {"created_at": "Tue Nov 10 02:47:28 +0000 2015", "text": "2015 is on track to be the hottest year on record. Climate change is not only real, it's already present.", "in_reply_to_screen_name": null, "retweet_count": 1010, "favorite_count": 2119, "source": "TweetDeck", "id_str": "663910819378298880", "is_retweet": false}, {"created_at": "Mon Jul 27 23:40:59 +0000 2015", "text": "Hillary just unveiled the first steps of her broad #climatechange agenda. Here is #2: http://t.co/xG0UKQ7To7", "in_reply_to_screen_name": null, "retweet_count": 393, "favorite_count": 686, "source": "Twitter Web Client", "id_str": "625813160449191936", "is_retweet": false}, {"created_at": "Thu Dec 10 22:50:32 +0000 2015", "text": "\"Why are you running for president?\"\n\n\"Because I want to help little kids.\" https://t.co/r3ZKOx7ewr", "in_reply_to_screen_name": null, "retweet_count": 641, "favorite_count": 1465, "source": "TweetDeck", "id_str": "675085214918549506", "is_retweet": false}, {"created_at": "Fri Aug 21 02:38:41 +0000 2015", "text": "Add us on Snapchat! \ud83d\udc7b hillaryclinton http://t.co/n1S0bnFlSX", "in_reply_to_screen_name": null, "retweet_count": 354, "favorite_count": 902, "source": "Twitter for iPhone", "id_str": "634555188297265153", "is_retweet": false}, {"created_at": "Tue Dec 01 13:09:08 +0000 2015", "text": "Let's commit to an AIDS-free generation: invest in research, fight discrimination, and expand access to lifesaving drugs. #WorldAIDSDay -H", "in_reply_to_screen_name": null, "retweet_count": 1357, "favorite_count": 2199, "source": "TweetDeck", "id_str": "671677410438418432", "is_retweet": false}, {"created_at": "Sun Apr 12 20:37:36 +0000 2015", "text": "This account will be run by campaign staff from now on\u2014but you\u2019ll still see tweets from Hillary. They\u2019ll be signed \u201c-H.\u201d", "in_reply_to_screen_name": null, "retweet_count": 3069, "favorite_count": 7815, "source": "Twitter Web Client", "id_str": "587353897779515392", "is_retweet": false}, {"created_at": "Mon Apr 13 00:59:15 +0000 2015", "text": "Road trip! Loaded the van &amp; set off for IA. Met a great family when we stopped this afternoon. Many more to come. -H http://t.co/5Va7zeR8RP", "in_reply_to_screen_name": null, "retweet_count": 2821, "favorite_count": 7554, "source": "Twitter Web Client", "id_str": "587419742505426944", "is_retweet": false}, {"created_at": "Tue Sep 29 19:49:40 +0000 2015", "text": "For nearly 100 yrs, Planned Parenthood has stood up to political attacks on women's health while providing care. GOP: You're outmatched. -H", "in_reply_to_screen_name": null, "retweet_count": 1302, "favorite_count": 2149, "source": "TweetDeck", "id_str": "648947770615836672", "is_retweet": false}, {"created_at": "Sat Jul 18 15:02:20 +0000 2015", "text": "Officially the coolest way to support Hillary. Get yours: http://t.co/L8W7cfClE1 http://t.co/c6WzWlVWz1", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 440, "source": "Twitter Web Client", "id_str": "622421149817901056", "is_retweet": false}, {"created_at": "Tue Apr 14 14:23:16 +0000 2015", "text": "Like road trips, campaigns are better with friends along for the ride. Reply &amp; tag a friend to join: http://t.co/W15pNka7VR", "in_reply_to_screen_name": null, "retweet_count": 475, "favorite_count": 1078, "source": "Twitter Web Client", "id_str": "587984469828730882", "is_retweet": false}, {"created_at": "Fri Nov 20 22:32:20 +0000 2015", "text": "We need to say with one voice that transgender people are valued, loved, and deserve to be treated that way. #TDOR https://t.co/RGU9XjMwra", "in_reply_to_screen_name": null, "retweet_count": 2410, "favorite_count": 4482, "source": "TweetDeck", "id_str": "667832879867518981", "is_retweet": false}, {"created_at": "Thu Nov 19 16:10:25 +0000 2015", "text": "\"This is not a time for scoring political points... This is a time for American leadership.\" \u2014Hillary on defeating ISIS &amp; the refugee crisis", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 926, "source": "TweetDeck", "id_str": "667374377881739264", "is_retweet": false}, {"created_at": "Tue Nov 10 22:20:51 +0000 2015", "text": "Celebrating 240 years of @USMC service and sacrifice, from Tun Tavern to Helmand. Happy birthday, Marines!", "in_reply_to_screen_name": null, "retweet_count": 199, "favorite_count": 414, "source": "Twitter Web Client", "id_str": "664206108660109312", "is_retweet": false}, {"created_at": "Sun Dec 20 15:58:36 +0000 2015", "text": "Strong economy? Thank a Democrat.\nhttps://t.co/7T2Rd0G7dc", "in_reply_to_screen_name": null, "retweet_count": 689, "favorite_count": 1599, "source": "Twitter Web Client", "id_str": "678605426556973056", "is_retweet": false}, {"created_at": "Wed Sep 02 22:30:34 +0000 2015", "text": "\u201cOur tribe learned the hard way that one-size-fits-all prevention programs don\u2019t work.\u201d http://t.co/gO9kNFeznv http://t.co/jvtO1ej6Vd", "in_reply_to_screen_name": null, "retweet_count": 161, "favorite_count": 315, "source": "TweetDeck", "id_str": "639203792827887616", "is_retweet": false}, {"created_at": "Wed Sep 02 21:03:36 +0000 2015", "text": "\"We as a nation need to get over the fiction that willpower is the cure for a brain disease.\" http://t.co/gO9kNFeznv http://t.co/KSqlV5s5CT", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 642, "source": "TweetDeck", "id_str": "639181904659525635", "is_retweet": false}, {"created_at": "Mon Sep 21 18:40:29 +0000 2015", "text": "HBCUs serve some of our brightest students and are a bridge to equal opportunity. Proud to support them this #HBCUweek and year round. -H", "in_reply_to_screen_name": null, "retweet_count": 1023, "favorite_count": 931, "source": "TweetDeck", "id_str": "646031260364705792", "is_retweet": false}, {"created_at": "Wed Nov 11 03:40:54 +0000 2015", "text": "Ning\u00fan candidato en el escenario apoya una reforma migrator\u00eda con un camino a la ciudadan\u00eda. Ninguno. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 236, "favorite_count": 385, "source": "TweetDeck", "id_str": "664286654199271424", "is_retweet": false}, {"created_at": "Sat Nov 07 00:29:21 +0000 2015", "text": "Our favorites from the Internet this week. https://t.co/kn0TXo2T20", "in_reply_to_screen_name": null, "retweet_count": 161, "favorite_count": 360, "source": "TweetDeck", "id_str": "662788896145600512", "is_retweet": false}, {"created_at": "Fri May 15 19:02:36 +0000 2015", "text": "Greetings from Brooklyn, USA! http://t.co/jKlkbFmHsm", "in_reply_to_screen_name": null, "retweet_count": 433, "favorite_count": 1067, "source": "TweetDeck", "id_str": "599288792063836160", "is_retweet": false}, {"created_at": "Tue Dec 08 00:44:33 +0000 2015", "text": "The US women's soccer team faces unequal treatment in playing surfaces and pay\u2014but they're not alone. https://t.co/fk6M9QSgLT", "in_reply_to_screen_name": null, "retweet_count": 881, "favorite_count": 1723, "source": "TweetDeck", "id_str": "674026743066300416", "is_retweet": false}, {"created_at": "Wed Nov 11 15:23:00 +0000 2015", "text": "On Veterans Day, to all who have served\u2014you deserve our gratitude, respect, and the best care and benefits in the world. -H", "in_reply_to_screen_name": null, "retweet_count": 880, "favorite_count": 1509, "source": "TweetDeck", "id_str": "664463343231471618", "is_retweet": false}, {"created_at": "Wed Apr 29 14:20:30 +0000 2015", "text": "We need to start understanding how important it is to care for every single child as though that child were our own.", "in_reply_to_screen_name": null, "retweet_count": 1155, "favorite_count": 2063, "source": "Twitter Web Client", "id_str": "593419590601994240", "is_retweet": false}, {"created_at": "Thu Nov 12 02:32:07 +0000 2015", "text": ".@Bustle: \"6 Feminist Points In Hillary Clinton's Veterans Plan That Are Awesomely Inclusive\" \u2192 https://t.co/SHEKnnJLcA", "in_reply_to_screen_name": null, "retweet_count": 250, "favorite_count": 522, "source": "TweetDeck", "id_str": "664631731081732096", "is_retweet": false}, {"created_at": "Thu May 21 15:58:39 +0000 2015", "text": "I never meant to start a company. I studied fine art at UNH (to my parents' horror)\u2014but I was lucky to have the support to do what I loved.", "in_reply_to_screen_name": null, "retweet_count": 67, "favorite_count": 209, "source": "TweetDeck", "id_str": "601416824631205888", "is_retweet": false}, {"created_at": "Wed Nov 11 04:17:37 +0000 2015", "text": "#GOPdebate https://t.co/vqbB3Tpf5r", "in_reply_to_screen_name": null, "retweet_count": 2956, "favorite_count": 5357, "source": "Twitter Web Client", "id_str": "664295891600146433", "is_retweet": false}, {"created_at": "Fri May 15 01:54:17 +0000 2015", "text": "Saying hi to the new neighbors!\nhttps://t.co/kQLVrIv2L7", "in_reply_to_screen_name": null, "retweet_count": 467, "favorite_count": 709, "source": "Twitter Web Client", "id_str": "599030004215713792", "is_retweet": false}, {"created_at": "Mon Aug 10 17:40:29 +0000 2015", "text": "Watch live: Hillary is laying out her plan to make college affordable &amp; relieve the crushing burden of student debt \u2192 http://t.co/RFZKk4gUcf", "in_reply_to_screen_name": null, "retweet_count": 255, "favorite_count": 417, "source": "TweetDeck", "id_str": "630795867457515520", "is_retweet": false}, {"created_at": "Wed Oct 21 02:42:03 +0000 2015", "text": "What did Hillary accomplish as Secretary of State? @SenSchumer weighs in: https://t.co/QYIq2iHAtk", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 1084, "source": "TweetDeck", "id_str": "656661696082153473", "is_retweet": false}, {"created_at": "Wed Oct 28 02:02:37 +0000 2015", "text": "Don\u2019t miss Hillary\u2019s first meeting with the real @stephenathome, tonight on @colbertlateshow! https://t.co/cCUqPSpPU7", "in_reply_to_screen_name": null, "retweet_count": 541, "favorite_count": 1666, "source": "TweetDeck", "id_str": "659188490060566529", "is_retweet": false}, {"created_at": "Mon Nov 30 20:33:07 +0000 2015", "text": "Climate change deniers and obstructionists should know\u2014their cynical efforts will fail. https://t.co/FZnWncj65p https://t.co/kg23FSjYMt", "in_reply_to_screen_name": null, "retweet_count": 657, "favorite_count": 942, "source": "TweetDeck", "id_str": "671426754414641152", "is_retweet": false}, {"created_at": "Thu Apr 23 17:06:32 +0000 2015", "text": "Students: We're hiring! Apply to be a #Hillary2016 intern now, and tag friends to spread the word: http://t.co/cOR9w2U2hq", "in_reply_to_screen_name": null, "retweet_count": 1104, "favorite_count": 1654, "source": "Twitter Web Client", "id_str": "591287047169695744", "is_retweet": false}, {"created_at": "Fri Nov 06 15:15:11 +0000 2015", "text": "What do you call the male spouse of a female president? Hillary and @JimmyKimmel have some ideas.\nhttps://t.co/QU0THUPn90", "in_reply_to_screen_name": null, "retweet_count": 505, "favorite_count": 964, "source": "Twitter Web Client", "id_str": "662649436254810112", "is_retweet": false}, {"created_at": "Mon Nov 30 15:53:53 +0000 2015", "text": "Free shipping on orders of $75 or more at the 2016 shop! #CyberMonday https://t.co/uQPu5prxN3 https://t.co/jM7SuWkIDJ", "in_reply_to_screen_name": null, "retweet_count": 126, "favorite_count": 330, "source": "TweetDeck", "id_str": "671356484266164224", "is_retweet": false}, {"created_at": "Fri Sep 18 12:45:37 +0000 2015", "text": "What is Hillary's greatest accomplishment? Here's a list from 20 top American leaders and strategists: http://t.co/CQ4ALy1AZX", "in_reply_to_screen_name": null, "retweet_count": 638, "favorite_count": 842, "source": "Twitter Web Client", "id_str": "644854791873658881", "is_retweet": false}, {"created_at": "Thu Aug 13 23:14:51 +0000 2015", "text": "We should make voting easier\u2014not harder. Why is voting important to you? Share your story: http://t.co/Z1Nr11mfcz http://t.co/BkN5xrPqd5", "in_reply_to_screen_name": null, "retweet_count": 363, "favorite_count": 628, "source": "TweetDeck", "id_str": "631967179953541120", "is_retweet": false}, {"created_at": "Fri Nov 13 13:01:49 +0000 2015", "text": "That time Donald Trump gushed about one of the most shameful periods in our country\u2019s history: https://t.co/ezEqiVJJMs", "in_reply_to_screen_name": null, "retweet_count": 439, "favorite_count": 776, "source": "Twitter for iPhone", "id_str": "665152586648014853", "is_retweet": false}, {"created_at": "Tue Aug 18 21:27:20 +0000 2015", "text": "The best way to honor women who broke boundaries before us: Keeping it up. See the timeline: http://t.co/lB63pCTE8v", "in_reply_to_screen_name": null, "retweet_count": 449, "favorite_count": 730, "source": "Twitter Web Client", "id_str": "633752059414642689", "is_retweet": false}, {"created_at": "Sun Aug 16 20:12:09 +0000 2015", "text": "Warming up for Team Hillary: Jason Collins visits campaign HQ.\nhttps://t.co/QywK7wQ6De", "in_reply_to_screen_name": null, "retweet_count": 218, "favorite_count": 449, "source": "Twitter Web Client", "id_str": "633008362817327104", "is_retweet": false}, {"created_at": "Mon Oct 19 00:45:21 +0000 2015", "text": "Hillary's mission as president: raise incomes for hardworking middle-class families.\nhttps://t.co/vw0IIRfVFi", "in_reply_to_screen_name": null, "retweet_count": 533, "favorite_count": 1172, "source": "Twitter Web Client", "id_str": "655907552824193025", "is_retweet": false}, {"created_at": "Fri May 22 13:27:48 +0000 2015", "text": "Thanks again, Iowa! http://t.co/wC6wvXizek http://t.co/PKs2hMkPu2", "in_reply_to_screen_name": null, "retweet_count": 227, "favorite_count": 576, "source": "TweetDeck", "id_str": "601741251621351424", "is_retweet": false}, {"created_at": "Sat Sep 19 02:16:27 +0000 2015", "text": ".@BarbaraBoxer on Hillary\u2019s greatest accomplishments, from Iranian sanctions to women\u2019s rights around the world. http://t.co/zfRzOtnsCC", "in_reply_to_screen_name": null, "retweet_count": 679, "favorite_count": 1183, "source": "Twitter Web Client", "id_str": "645058842708066304", "is_retweet": false}, {"created_at": "Fri Oct 16 23:12:42 +0000 2015", "text": "As usual, @madeleine is right: We need to strengthen America's leadership\u2014not go backwards. #GrandmothersKnowBest -H https://t.co/eAvYCqt8k5", "in_reply_to_screen_name": null, "retweet_count": 273, "favorite_count": 549, "source": "Twitter Web Client", "id_str": "655159460084715520", "is_retweet": false}, {"created_at": "Tue Apr 14 20:37:51 +0000 2015", "text": "Hillary in Iowa this afternoon: \"I want to be the champion who goes to bat for Americans in four big areas.\"", "in_reply_to_screen_name": null, "retweet_count": 360, "favorite_count": 952, "source": "Twitter Web Client", "id_str": "588078737884872707", "is_retweet": false}, {"created_at": "Wed Dec 09 21:39:09 +0000 2015", "text": "Take the quiz! Who said the shameful, dangerous, and extreme quote: Donald Trump or another Republican? https://t.co/54iVNcFYzT", "in_reply_to_screen_name": null, "retweet_count": 506, "favorite_count": 740, "source": "TweetDeck", "id_str": "674704864161751040", "is_retweet": false}, {"created_at": "Wed Jul 08 17:30:18 +0000 2015", "text": "Sharing campaign advice with an aspiring future president in Gorham, New Hampshire:\nhttps://t.co/jCQEnTyesr", "in_reply_to_screen_name": null, "retweet_count": 343, "favorite_count": 660, "source": "Twitter Web Client", "id_str": "618834508683411456", "is_retweet": false}, {"created_at": "Tue Aug 18 14:07:47 +0000 2015", "text": "95 years ago today, women got one step closer to winning the right to vote. Here\u2019s to making history. http://t.co/tpgGIWkzPI", "in_reply_to_screen_name": null, "retweet_count": 1802, "favorite_count": 2898, "source": "Twitter Web Client", "id_str": "633641444734029825", "is_retweet": false}, {"created_at": "Mon Nov 09 19:59:04 +0000 2015", "text": "Yet another Republican refuses to make it easier to vote. What part of democracy are they so afraid of? -H https://t.co/P4Y4VHr6nS", "in_reply_to_screen_name": null, "retweet_count": 1486, "favorite_count": 1841, "source": "TweetDeck", "id_str": "663808039409971200", "is_retweet": false}, {"created_at": "Sun Sep 13 17:06:58 +0000 2015", "text": "We have an obligation not just to our own children and grandchildren, but to every child in America. http://t.co/CfQ8gXhQ9R", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 986, "source": "TweetDeck", "id_str": "643108620025090050", "is_retweet": false}, {"created_at": "Thu May 14 16:12:58 +0000 2015", "text": "Harriet Tubman could be the first woman on the $20 bill. Awesome, well deserved\u2014and about time. http://t.co/VIw2KyWEzX #womenon20s", "in_reply_to_screen_name": null, "retweet_count": 883, "favorite_count": 1428, "source": "TweetDeck", "id_str": "598883713892638720", "is_retweet": false}, {"created_at": "Wed Apr 22 22:46:37 +0000 2015", "text": "You can't fight what you don't believe exists. Climate change is real and we must meet this challenge. #EarthDay -H", "in_reply_to_screen_name": null, "retweet_count": 2718, "favorite_count": 4092, "source": "Twitter for iPhone", "id_str": "591010244580474882", "is_retweet": false}, {"created_at": "Fri Mar 27 19:26:42 +0000 2015", "text": "Loved serving w/ @SenatorReid, true friend, partner, &amp; fighter for the middle class. Big loss for Senate, Nevada &amp; country. #ThanksHarry", "in_reply_to_screen_name": null, "retweet_count": 760, "favorite_count": 1708, "source": "Twitter for iPhone", "id_str": "581537849054519296", "is_retweet": false}, {"created_at": "Sat Jun 13 16:36:50 +0000 2015", "text": "Advantage, Hillary. http://t.co/vewNE5SvMP", "in_reply_to_screen_name": null, "retweet_count": 1451, "favorite_count": 2867, "source": "Twitter Web Client", "id_str": "609761354975682560", "is_retweet": false}, {"created_at": "Thu Dec 31 16:04:19 +0000 2015", "text": "\"I know what it's like to go into the primaries up. And I know what it's like to come out of them down.\" https://t.co/ovPKXD5IKJ", "in_reply_to_screen_name": null, "retweet_count": 253, "favorite_count": 617, "source": "TweetDeck", "id_str": "682593134551920641", "is_retweet": false}, {"created_at": "Wed Jul 01 00:30:17 +0000 2015", "text": "The ability to organize &amp; bargain collectively is a fundamental American right. Proud to stand with unions &amp; working families. #SCOTUS -H", "in_reply_to_screen_name": null, "retweet_count": 426, "favorite_count": 818, "source": "Twitter Web Client", "id_str": "616041096167227394", "is_retweet": false}, {"created_at": "Mon Dec 14 20:51:05 +0000 2015", "text": "Trump no es el \u00fanico Republicano con opiniones ofensivas. https://t.co/EXPHHvSsly", "in_reply_to_screen_name": null, "retweet_count": 248, "favorite_count": 410, "source": "TweetDeck", "id_str": "676504704675946500", "is_retweet": false}, {"created_at": "Sun May 10 22:15:12 +0000 2015", "text": "The best Mother's Day gift has been seeing my daughter become a mom. Happy Mother's Day to @ChelseaClinton\u2014and to every mom and grandma! \u2013H", "in_reply_to_screen_name": null, "retweet_count": 579, "favorite_count": 2660, "source": "Twitter Web Client", "id_str": "597525318908432386", "is_retweet": false}, {"created_at": "Mon Jul 13 16:24:38 +0000 2015", "text": "Share this \u2192 Hillary's vision to raise incomes for hardworking Americans\u2014in one infographic: http://t.co/HLy6Z9QkQE http://t.co/CGdBVqEBBE", "in_reply_to_screen_name": null, "retweet_count": 421, "favorite_count": 414, "source": "TweetDeck", "id_str": "620629922801807360", "is_retweet": false}, {"created_at": "Sat Jul 25 18:24:39 +0000 2015", "text": "Here's a soup-er idea: Join the official #Hillary2016 list. \u2192 http://t.co/284j1HxKaM http://t.co/yPvfDOYxuJ", "in_reply_to_screen_name": null, "retweet_count": 490, "favorite_count": 1443, "source": "Twitter Web Client", "id_str": "625008778476433408", "is_retweet": false}, {"created_at": "Sun Nov 29 19:12:53 +0000 2015", "text": "Agreed! (via Instagram/edenrmz) https://t.co/VcSXNfifMB", "in_reply_to_screen_name": null, "retweet_count": 744, "favorite_count": 2328, "source": "Twitter for iPhone", "id_str": "671044173802414080", "is_retweet": false}, {"created_at": "Thu Dec 10 22:08:31 +0000 2015", "text": "Can\u2019t wait! https://t.co/epG52kUEQK https://t.co/NnDuEp4VbN", "in_reply_to_screen_name": null, "retweet_count": 135, "favorite_count": 320, "source": "Twitter Web Client", "id_str": "675074642550353923", "is_retweet": false}, {"created_at": "Wed Aug 12 18:49:54 +0000 2015", "text": "How does your student loan debt make you feel?\nTell us in 3 emojis or less.", "in_reply_to_screen_name": null, "retweet_count": 6444, "favorite_count": 5312, "source": "Twitter Web Client", "id_str": "631538115514007553", "is_retweet": false}, {"created_at": "Tue Apr 28 13:41:04 +0000 2015", "text": "Every loving couple &amp; family deserves to be recognized &amp; treated equally under the law across our nation. #LoveMustWin #LoveCantWait \u2013H", "in_reply_to_screen_name": null, "retweet_count": 12579, "favorite_count": 14187, "source": "Twitter for iPhone", "id_str": "593047280036511745", "is_retweet": false}, {"created_at": "Sat Jun 13 16:43:25 +0000 2015", "text": "Hillary is ready to fight for every single one of us. Sign on if you're with her: http://t.co/TlI2nJ9Um3 #Hillary2016 http://t.co/6D8eoKfIgw", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 1003, "source": "Twitter Web Client", "id_str": "609763010576543744", "is_retweet": false}, {"created_at": "Wed Jul 01 15:03:59 +0000 2015", "text": "(3/3) Just one thing left to say to everyone who has pitched in to support this campaign: Thank you. -H http://t.co/TQTBWUZ3MW", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 928, "source": "Twitter Web Client", "id_str": "616260969426231296", "is_retweet": false}, {"created_at": "Sun Nov 01 01:18:53 +0000 2015", "text": "Happy Halloween! \ud83c\udf83 https://t.co/kjfUE0YO8U", "in_reply_to_screen_name": null, "retweet_count": 958, "favorite_count": 4073, "source": "Twitter for iPhone", "id_str": "660627032649441281", "is_retweet": false}, {"created_at": "Sat Jun 13 16:41:39 +0000 2015", "text": "Advice for kids: Dress for the job you want. http://t.co/Ecw1ua7x4N http://t.co/4mWOAoqOX7", "in_reply_to_screen_name": null, "retweet_count": 649, "favorite_count": 1351, "source": "Twitter Web Client", "id_str": "609762565586092032", "is_retweet": false}, {"created_at": "Sun Aug 09 16:09:57 +0000 2015", "text": "A year after Ferguson, there is more we must all do to address systemic racism and ensure every American feels safe in their community. -H", "in_reply_to_screen_name": null, "retweet_count": 1433, "favorite_count": 2405, "source": "Twitter for iPhone", "id_str": "630410695935426561", "is_retweet": false}, {"created_at": "Wed Oct 21 17:20:57 +0000 2015", "text": ".@VP is a good friend and a great man. Today and always, inspired by his optimism and commitment to change the world for the better. -H", "in_reply_to_screen_name": null, "retweet_count": 1987, "favorite_count": 3382, "source": "TweetDeck", "id_str": "656882880044371968", "is_retweet": false}, {"created_at": "Thu Oct 15 17:07:12 +0000 2015", "text": "\"I salute the Black Lives movement for raising this issue to the high priority it is.\"\u2014Hillary on race and criminal justice reform at #USHCC", "in_reply_to_screen_name": null, "retweet_count": 426, "favorite_count": 814, "source": "TweetDeck", "id_str": "654705093346902020", "is_retweet": false}, {"created_at": "Sun Nov 22 15:30:36 +0000 2015", "text": "We need to protect our communities from the scourge of gun violence. Thank you, @Bradybuzz. https://t.co/FylLgwFw2D", "in_reply_to_screen_name": null, "retweet_count": 630, "favorite_count": 1257, "source": "Twitter Web Client", "id_str": "668451519012958208", "is_retweet": false}, {"created_at": "Wed Dec 23 19:04:35 +0000 2015", "text": "There\u2019s something wrong when so many families have such a hard time affording basic needs. https://t.co/9pC5FjBtxQ #BigIdeas2016", "in_reply_to_screen_name": null, "retweet_count": 548, "favorite_count": 1454, "source": "TweetDeck", "id_str": "679739396246077441", "is_retweet": false}, {"created_at": "Fri Jun 26 02:11:52 +0000 2015", "text": "Latest GOP attack on EPA is dangerous &amp; shortsighted. Protecting the environment is good for communities, families, &amp; our economy. -H", "in_reply_to_screen_name": null, "retweet_count": 476, "favorite_count": 1281, "source": "Twitter for iPhone", "id_str": "614254719482130432", "is_retweet": false}, {"created_at": "Fri Mar 27 01:32:14 +0000 2015", "text": "Sad this new Indiana law can happen in America today. We shouldn't discriminate against ppl bc of who they love #LGBT http://t.co/mDhpS18oEH", "in_reply_to_screen_name": null, "retweet_count": 12823, "favorite_count": 14025, "source": "Twitter for iPhone", "id_str": "581267449523343360", "is_retweet": false}, {"created_at": "Sun Jul 26 17:07:36 +0000 2015", "text": "Today on the 25th anniversary of the Americans with Disabilities Act, Adam, Dale &amp; I are thrilled to spend the day with Hillary. #ADA25", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 101, "favorite_count": 235, "source": "Twitter Web Client", "id_str": "625351777915904004", "is_retweet": false}, {"created_at": "Wed Oct 14 02:45:13 +0000 2015", "text": "No politician should interfere with a woman's personal medical decisions. Full stop. #DemDebate #ImWithHer", "in_reply_to_screen_name": null, "retweet_count": 3475, "favorite_count": 5303, "source": "Twitter Web Client", "id_str": "654125779446562816", "is_retweet": false}, {"created_at": "Wed Dec 16 03:13:48 +0000 2015", "text": "Solo un candidato en esta elecci\u00f3n sabe c\u00f3mo trabajar con otros pa\u00edses para mantenernos seguros\u2014ella tiene la experiencia. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 355, "favorite_count": 704, "source": "TweetDeck", "id_str": "676963406671429632", "is_retweet": false}, {"created_at": "Wed May 27 00:55:21 +0000 2015", "text": "These are going FAST\u2014we've already had to order more! Get in on the second batch: http://t.co/OKehfqkW1z http://t.co/Wu4LgTc7Mv", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 1159, "source": "TweetDeck", "id_str": "603363827741270016", "is_retweet": false}, {"created_at": "Wed Dec 23 17:32:46 +0000 2015", "text": "Your loved ones deserve the best care\u2014without you having to worry about your paycheck.\nhttps://t.co/TakhXKSgmb", "in_reply_to_screen_name": null, "retweet_count": 561, "favorite_count": 1107, "source": "Twitter Web Client", "id_str": "679716290605367296", "is_retweet": false}, {"created_at": "Fri Oct 23 15:29:16 +0000 2015", "text": "Hillary on those who tell her to \"stop shouting\" on issues that matter. https://t.co/pmZ4FJihvH", "in_reply_to_screen_name": null, "retweet_count": 3830, "favorite_count": 5864, "source": "TweetDeck", "id_str": "657579551527170048", "is_retweet": false}, {"created_at": "Sat Jul 18 01:51:04 +0000 2015", "text": "An Iowa tradition: Hillary is speaking to @iowademocrats at their annual Hall of Fame Dinner. Watch live now: http://t.co/sUHCWFsl1L", "in_reply_to_screen_name": null, "retweet_count": 166, "favorite_count": 386, "source": "Twitter Web Client", "id_str": "622222019485167616", "is_retweet": false}, {"created_at": "Mon Jun 15 20:06:28 +0000 2015", "text": "Today in NH, Hillary:\n\u2714\ufe0f proposed universal pre-K\n\u2714\ufe0f proposed 2x investment in Early Head Start\n\u2714\ufe0f joined story time http://t.co/VJOtxqTMmg", "in_reply_to_screen_name": null, "retweet_count": 646, "favorite_count": 1601, "source": "TweetDeck", "id_str": "610538884825546752", "is_retweet": false}, {"created_at": "Thu Aug 13 16:58:28 +0000 2015", "text": "Team meeting. http://t.co/Ol0MreEjic", "in_reply_to_screen_name": null, "retweet_count": 256, "favorite_count": 738, "source": "TweetDeck", "id_str": "631872458958761985", "is_retweet": false}, {"created_at": "Wed Jul 01 01:11:24 +0000 2015", "text": "Puerto Rico's debt crisis is not theirs alone. For PR's economy to grow &amp; their people to thrive, they need real tools &amp; real support. -H", "in_reply_to_screen_name": null, "retweet_count": 1332, "favorite_count": 1470, "source": "Twitter Web Client", "id_str": "616051441900367874", "is_retweet": false}, {"created_at": "Wed Sep 02 15:44:14 +0000 2015", "text": "How will Hillary address the substance abuse epidemic? Join @mayaharris_ and @sarasolow for a Q&amp;A today at 12:30 ET: http://t.co/LtTRauX0kP", "in_reply_to_screen_name": null, "retweet_count": 143, "favorite_count": 195, "source": "TweetDeck", "id_str": "639101536187076608", "is_retweet": false}, {"created_at": "Sun Jun 28 13:31:05 +0000 2015", "text": "RT if you agree with Hillary: It's time to stop the partisan attacks on health care. http://t.co/WPntVwBGyN http://t.co/OVxyljLlxs", "in_reply_to_screen_name": null, "retweet_count": 1073, "favorite_count": 1513, "source": "TweetDeck", "id_str": "615150426032353280", "is_retweet": false}, {"created_at": "Mon Aug 24 01:32:29 +0000 2015", "text": "Not one of the 17 GOP candidates has discussed how they'd address the rising cost of college. Disappointing, but not surprising.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1312, "favorite_count": 2625, "source": "Twitter Web Client", "id_str": "635625693116825600", "is_retweet": false}, {"created_at": "Tue Oct 27 16:01:44 +0000 2015", "text": "Hillary has a plan to make affordable childcare a reality\u2014and this supporter in Alexandria, Virginia knows it.\nhttps://t.co/BorYwrNJCv", "in_reply_to_screen_name": null, "retweet_count": 462, "favorite_count": 852, "source": "Twitter Web Client", "id_str": "659037272461828097", "is_retweet": false}, {"created_at": "Sun Oct 25 03:43:58 +0000 2015", "text": "\"I\u2019m listening to you. I\u2019m fighting for you. And with your support, I\u2019m going to deliver.\" \u2014Hillary at #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 367, "favorite_count": 980, "source": "TweetDeck", "id_str": "658126829476270080", "is_retweet": false}, {"created_at": "Mon Aug 03 21:16:29 +0000 2015", "text": "2.7 million Americans turn to Planned Parenthood every year for health care. Proud to #standwithPP. http://t.co/TaMAc3YgEr", "in_reply_to_screen_name": null, "retweet_count": 1830, "favorite_count": 2932, "source": "Twitter Web Client", "id_str": "628313510741733376", "is_retweet": false}, {"created_at": "Sun Jul 26 17:04:47 +0000 2015", "text": "Iowa's @SenatorHarkin co-authored the ADA. We're proud to have been represented by such a strong champion for people with disabilities.", "in_reply_to_screen_name": null, "retweet_count": 86, "favorite_count": 199, "source": "Twitter Web Client", "id_str": "625351067769925632", "is_retweet": false}, {"created_at": "Sat Oct 24 22:11:42 +0000 2015", "text": "\"Sometimes, you just have to ROAR!\" \u2014Hillary after @katyperry's performance at the @HillaryforIA rally in Des Moines. #HillYes", "in_reply_to_screen_name": null, "retweet_count": 946, "favorite_count": 1648, "source": "Twitter Web Client", "id_str": "658043213937291265", "is_retweet": false}, {"created_at": "Sun Oct 25 03:45:44 +0000 2015", "text": "\"Together we\u2019re going to build an America where...a father can tell his daughter, 'you can be anything you want to be\u2014including president.'\"", "in_reply_to_screen_name": null, "retweet_count": 1051, "favorite_count": 2279, "source": "TweetDeck", "id_str": "658127276513603584", "is_retweet": false}, {"created_at": "Thu Oct 22 17:32:03 +0000 2015", "text": "America must continue to lead in a dangerous world. To do otherwise would mean drawing the wrong lesson from the Benghazi tragedy.", "in_reply_to_screen_name": null, "retweet_count": 671, "favorite_count": 1466, "source": "Twitter for iPhone", "id_str": "657248062763638784", "is_retweet": false}, {"created_at": "Sun Jun 14 18:35:01 +0000 2015", "text": "What was your favorite part of Hillary's official launch speech? Annotate it using @Genius: http://t.co/Gzf423irGB http://t.co/FRlsFGeiN8", "in_reply_to_screen_name": null, "retweet_count": 214, "favorite_count": 397, "source": "Twitter Web Client", "id_str": "610153483870842880", "is_retweet": false}, {"created_at": "Wed Dec 30 21:16:21 +0000 2015", "text": "No parent should have to bury a child due to substance use. It's time we get serious about investing in treatment. https://t.co/l76qKeIO57", "in_reply_to_screen_name": null, "retweet_count": 526, "favorite_count": 1109, "source": "Twitter Web Client", "id_str": "682309271183323138", "is_retweet": false}, {"created_at": "Tue Nov 10 00:46:04 +0000 2015", "text": "\"Why are you running for president?\"\n\n\"Because I want to help little kids.\"\nhttps://t.co/r3ZKOxoPnZ", "in_reply_to_screen_name": null, "retweet_count": 618, "favorite_count": 1413, "source": "Twitter Web Client", "id_str": "663880265366790144", "is_retweet": false}, {"created_at": "Fri Aug 28 12:04:30 +0000 2015", "text": "Denying women access to health care might be good politics in a Republican primary, but it\u2019s terrible policy in the real world.", "in_reply_to_screen_name": null, "retweet_count": 1492, "favorite_count": 2894, "source": "Twitter for iPhone", "id_str": "637234296965701632", "is_retweet": false}, {"created_at": "Wed Oct 14 02:58:28 +0000 2015", "text": "Hillary ha luchado toda su vida por los derechos de las mujeres y no va a parar ahora. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 808, "source": "TweetDeck", "id_str": "654129111825285120", "is_retweet": false}, {"created_at": "Wed Nov 11 03:11:15 +0000 2015", "text": "What\u2019s really pro-family: Supporting equal pay, paid leave, affordable child care, and Planned Parenthood. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1238, "favorite_count": 2174, "source": "TweetDeck", "id_str": "664279189332324352", "is_retweet": false}, {"created_at": "Sun Aug 09 16:31:54 +0000 2015", "text": "Voting is \u201cthe very essence of the American dream.\u201d Read #MyFirstVote stories on @Tumblr: http://t.co/Z1Nr11mfcz http://t.co/FI4boP54Fg", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 591, "source": "Twitter Web Client", "id_str": "630416219984818176", "is_retweet": false}, {"created_at": "Sun Sep 20 18:58:47 +0000 2015", "text": "Keith from NH works part-time so he can care for his mom. He shared his story with Hillary: http://t.co/I01hCm69Pg http://t.co/LoGi99fGPb", "in_reply_to_screen_name": null, "retweet_count": 271, "favorite_count": 510, "source": "Twitter Web Client", "id_str": "645673474862804993", "is_retweet": false}, {"created_at": "Mon Nov 23 01:09:16 +0000 2015", "text": "Every survivor of sexual assault deserves to be heard, believed, and supported. https://t.co/mkD69RHeBL", "in_reply_to_screen_name": null, "retweet_count": 2214, "favorite_count": 3344, "source": "Twitter Web Client", "id_str": "668597149291184128", "is_retweet": false}, {"created_at": "Thu May 21 18:31:10 +0000 2015", "text": "David, our VP, is the reason my life works. Took over check-signing when Haley was born and still does it today. http://t.co/3HxDGu5I8v", "in_reply_to_screen_name": null, "retweet_count": 42, "favorite_count": 127, "source": "TweetDeck", "id_str": "601455208485400577", "is_retweet": false}, {"created_at": "Thu Dec 17 13:57:48 +0000 2015", "text": "How this teen became the first openly transgender elected official in her state: https://t.co/oUdOG7HH4B", "in_reply_to_screen_name": null, "retweet_count": 272, "favorite_count": 719, "source": "Twitter for iPhone", "id_str": "677487863932592128", "is_retweet": false}, {"created_at": "Mon Jul 13 14:43:40 +0000 2015", "text": "Hillary on misconduct in the financial industry: \"There can be no justification or tolerance for this kind of criminal behavior.\"", "in_reply_to_screen_name": null, "retweet_count": 199, "favorite_count": 340, "source": "TweetDeck", "id_str": "620604511439065088", "is_retweet": false}, {"created_at": "Thu Jul 02 15:23:37 +0000 2015", "text": "51 years later, the Civil Rights Act remains one of our country's greatest triumphs\u2014and an enduring call to keep fighting for equality. -H", "in_reply_to_screen_name": null, "retweet_count": 675, "favorite_count": 1350, "source": "Twitter Web Client", "id_str": "616628298135785473", "is_retweet": false}, {"created_at": "Fri Aug 07 02:11:39 +0000 2015", "text": "We should change how we think about business. http://t.co/61YZQWxaPw", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 1045, "source": "Twitter Web Client", "id_str": "629474958918479872", "is_retweet": false}, {"created_at": "Thu May 21 16:27:05 +0000 2015", "text": "We should remove barriers so we can focus on the important things: Supporting employees, doing good work, &amp; contributing to our communities.", "in_reply_to_screen_name": null, "retweet_count": 133, "favorite_count": 275, "source": "TweetDeck", "id_str": "601423978847215617", "is_retweet": false}, {"created_at": "Fri Oct 16 14:30:00 +0000 2015", "text": "\u00bfSab\u00edas que Hillary Clinton trabaj\u00f3 destripando pescados? http://t.co/zkCagavfeE", "in_reply_to_screen_name": null, "retweet_count": 159, "favorite_count": 271, "source": "TweetDeck", "id_str": "655027918796685312", "is_retweet": false}, {"created_at": "Wed Aug 05 21:51:38 +0000 2015", "text": "\u201cI'm tired of women being shamed and blamed and dismissed\u2026When you attack women's health, you attack America's health.\u201d\u2014Hillary yesterday", "in_reply_to_screen_name": null, "retweet_count": 1690, "favorite_count": 3228, "source": "Twitter Web Client", "id_str": "629047133988089856", "is_retweet": false}, {"created_at": "Fri May 29 00:52:41 +0000 2015", "text": "Win a free trip to hang out with Hillary. The deadline to enter is TONIGHT\u2014don't miss out: http://t.co/2AvWlZM7LJ", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 258, "source": "TweetDeck", "id_str": "604087932367020033", "is_retweet": false}, {"created_at": "Sat May 16 14:57:48 +0000 2015", "text": "Be a part of this team. Sign up to volunteer with #Hillary2016: http://t.co/wdqjt6L0Nz http://t.co/fciJ87XSGR", "in_reply_to_screen_name": null, "retweet_count": 284, "favorite_count": 512, "source": "TweetDeck", "id_str": "599589574168416258", "is_retweet": false}, {"created_at": "Sat Oct 03 14:43:29 +0000 2015", "text": "Today the Immigration and Nationality Act turns 50. It was a first step towards making our system fair, but our work remains unfinished.", "in_reply_to_screen_name": null, "retweet_count": 421, "favorite_count": 896, "source": "Twitter Web Client", "id_str": "650320270780198912", "is_retweet": false}, {"created_at": "Fri Apr 17 18:33:40 +0000 2015", "text": "As court hears immigration case today, at stake are stronger families, communities, &amp; economy. Parents &amp; Dreamers shouldn't live in fear. -H", "in_reply_to_screen_name": null, "retweet_count": 1316, "favorite_count": 1878, "source": "Twitter Web Client", "id_str": "589134649307303937", "is_retweet": false}, {"created_at": "Thu Jun 25 19:22:16 +0000 2015", "text": "\"Now is our chance to beat the odds and give the American people the health security they need.\"\u2013Hillary in 1993 http://t.co/aaCNeVQo4U", "in_reply_to_screen_name": null, "retweet_count": 512, "favorite_count": 1193, "source": "Twitter Web Client", "id_str": "614151643815350273", "is_retweet": false}, {"created_at": "Mon Jul 06 13:49:34 +0000 2015", "text": "From the soccer field to the White House\u2014girls can do anything. http://t.co/C6pTZGI0DR", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 2461, "source": "TweetDeck", "id_str": "618054180167675904", "is_retweet": false}, {"created_at": "Fri Oct 16 02:02:02 +0000 2015", "text": "Me gusta ser \"La Hillary,\" pero tambi\u00e9n soy \"Tu Hillary.\" #LatinosforHillary", "in_reply_to_screen_name": null, "retweet_count": 1920, "favorite_count": 1849, "source": "TweetDeck", "id_str": "654839689313062912", "is_retweet": false}, {"created_at": "Fri Aug 07 01:49:57 +0000 2015", "text": "Access to health care should be a right\u2014not a privilege for those who can afford it. http://t.co/zVkxIhMKq7", "in_reply_to_screen_name": null, "retweet_count": 1035, "favorite_count": 1912, "source": "Twitter Web Client", "id_str": "629469495560699908", "is_retweet": false}, {"created_at": "Sat Oct 17 01:14:02 +0000 2015", "text": "If you\u2019re a progressive who believes in getting things done, sign up for your free sticker! http://t.co/croZqCscnM http://t.co/PlIyHKMwvY", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 1137, "source": "TweetDeck", "id_str": "655189997901869056", "is_retweet": false}, {"created_at": "Sun Nov 22 21:26:17 +0000 2015", "text": "With a GOP majority in Congress, how will Hillary pass laws? See her response to this Q from an astute young lady.\nhttps://t.co/wYQ9Dd98OR", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 1344, "source": "Twitter Web Client", "id_str": "668541031202226180", "is_retweet": false}, {"created_at": "Wed Dec 16 03:36:37 +0000 2015", "text": "We're better than this. #GOPdebate https://t.co/XrCaN6tfKz", "in_reply_to_screen_name": null, "retweet_count": 1567, "favorite_count": 2885, "source": "Twitter Web Client", "id_str": "676969152066756608", "is_retweet": false}, {"created_at": "Tue Nov 10 13:21:46 +0000 2015", "text": "Fast-food, home care, child care workers: Your advocacy is changing our country for the better. #Fightfor15 -H", "in_reply_to_screen_name": null, "retweet_count": 589, "favorite_count": 963, "source": "Twitter for iPhone", "id_str": "664070444425826304", "is_retweet": false}, {"created_at": "Fri Jun 19 22:12:26 +0000 2015", "text": "Change can come\u2014sometimes, even in the form of a $10 bill. #TheNew10 http://t.co/Zyk7oHojJ8", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 700, "source": "Twitter Web Client", "id_str": "612020140662747136", "is_retweet": false}, {"created_at": "Thu Oct 29 12:12:56 +0000 2015", "text": "\"Do you think that when you\u2019re president, you\u2019ll be paid as much as a man?\"\nhttps://t.co/2uQMq2v5ev", "in_reply_to_screen_name": null, "retweet_count": 2211, "favorite_count": 3696, "source": "Twitter Web Client", "id_str": "659704467344875520", "is_retweet": false}, {"created_at": "Mon Jun 08 13:00:39 +0000 2015", "text": "Hillary can't do it without you. Sign up to volunteer: http://t.co/W9SjTC3BmA http://t.co/mBmewVACIO", "in_reply_to_screen_name": null, "retweet_count": 184, "favorite_count": 317, "source": "TweetDeck", "id_str": "607895013075255298", "is_retweet": false}, {"created_at": "Wed Nov 25 22:38:01 +0000 2015", "text": "From Hillary\u2019s record to whether she wears a wig(?!), @creynoldsnc has your back for awkward family political talk. https://t.co/LplkWSDoeL", "in_reply_to_screen_name": null, "retweet_count": 188, "favorite_count": 393, "source": "TweetDeck", "id_str": "669646249188978688", "is_retweet": false}, {"created_at": "Mon Sep 21 23:22:25 +0000 2015", "text": "Couldn't agree more, @HumaAbedin. Welcome to Twitter! https://t.co/T8hBwqschV", "in_reply_to_screen_name": null, "retweet_count": 714, "favorite_count": 1715, "source": "TweetDeck", "id_str": "646102208765894657", "is_retweet": false}, {"created_at": "Mon Oct 19 20:06:15 +0000 2015", "text": "\"I don't think I have ever met someone more prepared to be president.\" \u2014@Madeleine Albright\nhttps://t.co/D6nCGEDC6v", "in_reply_to_screen_name": null, "retweet_count": 978, "favorite_count": 1775, "source": "Twitter Web Client", "id_str": "656199705169268736", "is_retweet": false}, {"created_at": "Wed Nov 04 21:29:43 +0000 2015", "text": "Hillary\u2019s answer shows *exactly* what it would mean to have a former secretary of state in the Oval Office. https://t.co/tWkN1ablD9", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 603, "source": "TweetDeck", "id_str": "662018912691834880", "is_retweet": false}, {"created_at": "Sat Dec 12 22:22:38 +0000 2015", "text": "Sometimes a grandma needs to make a pit stop to shop for her granddaughter. https://t.co/pXBIINyInN", "in_reply_to_screen_name": null, "retweet_count": 870, "favorite_count": 4972, "source": "TweetDeck", "id_str": "675802970953539584", "is_retweet": false}, {"created_at": "Wed Jul 22 16:20:52 +0000 2015", "text": "\"I lived through it, and there are photographs. And we're not going back to that.\" http://t.co/bU9Soxd8kA", "in_reply_to_screen_name": null, "retweet_count": 661, "favorite_count": 1174, "source": "TweetDeck", "id_str": "623890463758643200", "is_retweet": false}, {"created_at": "Mon Jul 13 21:29:13 +0000 2015", "text": "\"Para el Se\u00f1or Trump, solo tengo una palabra.\" http://t.co/7CJnin3aGh", "in_reply_to_screen_name": null, "retweet_count": 4559, "favorite_count": 4549, "source": "Twitter Web Client", "id_str": "620706572218564608", "is_retweet": false}, {"created_at": "Sat Oct 03 20:32:04 +0000 2015", "text": "Grateful to have @NEAtoday on Team Hillary. Educators are the frontline fighters building a stronger America. http://t.co/cdBeoumR8v", "in_reply_to_screen_name": null, "retweet_count": 336, "favorite_count": 692, "source": "Twitter Web Client", "id_str": "650407996321845251", "is_retweet": false}, {"created_at": "Tue Jul 21 14:54:28 +0000 2015", "text": "If you think you shouldn't have to choose between taking care of your family and getting a paycheck, you might be playing the #gendercard.", "in_reply_to_screen_name": null, "retweet_count": 602, "favorite_count": 1223, "source": "TweetDeck", "id_str": "623506332071632896", "is_retweet": false}, {"created_at": "Thu Sep 03 21:17:44 +0000 2015", "text": "Our friends at @BitmojiApp are marking the 20th anniversary of Hillary's speech in Beijing. Make yours today! http://t.co/GVEiNbiKbb", "in_reply_to_screen_name": null, "retweet_count": 439, "favorite_count": 935, "source": "TweetDeck", "id_str": "639547851127812096", "is_retweet": false}, {"created_at": "Tue Oct 13 00:47:37 +0000 2015", "text": "Hillary's been debating important issues since high school. Let her know you\u2019re on her team: http://t.co/QPIWimMvL1 http://t.co/aAFnSIcGwK", "in_reply_to_screen_name": null, "retweet_count": 678, "favorite_count": 1987, "source": "Twitter Web Client", "id_str": "653733796408377344", "is_retweet": false}, {"created_at": "Sat Dec 05 21:32:30 +0000 2015", "text": "Thrilled to have you on Team Hillary, @ricky_martin. \u00a1Muchas gracias! https://t.co/6v2UK9hItZ", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 1451, "source": "TweetDeck", "id_str": "673253638865743872", "is_retweet": false}, {"created_at": "Thu Sep 17 02:40:15 +0000 2015", "text": "We need commonsense reforms that keep weapons out of the hands of criminals and the violently unstable and respect responsible gun owners.", "in_reply_to_screen_name": null, "retweet_count": 1192, "favorite_count": 2520, "source": "Twitter Web Client", "id_str": "644340058607198208", "is_retweet": false}, {"created_at": "Tue Jun 09 18:20:37 +0000 2015", "text": "Saturday's the big day! Host a house party in your community and join a special call with Hillary: http://t.co/JgeluS0Dtl", "in_reply_to_screen_name": null, "retweet_count": 133, "favorite_count": 231, "source": "TweetDeck", "id_str": "608337920701956096", "is_retweet": false}, {"created_at": "Thu Jun 04 20:32:18 +0000 2015", "text": "RT if you agree: We should make it as easy as possible for every American citizen to make their voice heard. http://t.co/waRraQNdpS", "in_reply_to_screen_name": null, "retweet_count": 1328, "favorite_count": 1211, "source": "TweetDeck", "id_str": "606559122469744641", "is_retweet": false}, {"created_at": "Thu Dec 03 23:21:56 +0000 2015", "text": "Our roads, bridges, and airports are in a sorry state. Hillary will invest in the infrastructure America deserves:\nhttps://t.co/dZTPdseBTc", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 1140, "source": "Twitter Web Client", "id_str": "672556401856655360", "is_retweet": false}, {"created_at": "Wed Dec 16 02:01:23 +0000 2015", "text": "To keep America safe, we need real leadership\u2014not hateful rhetoric. #GOPdebate https://t.co/DyM1d1t0Hj", "in_reply_to_screen_name": null, "retweet_count": 954, "favorite_count": 1916, "source": "Twitter Web Client", "id_str": "676945185675354114", "is_retweet": false}, {"created_at": "Mon May 18 23:40:55 +0000 2015", "text": "Consider this a message to 7-year-old you: Don't give up. (And yes, that's his real name\u2014give or take a vowel.) https://t.co/zKv388Pr2y", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 893, "source": "TweetDeck", "id_str": "600445996200501248", "is_retweet": false}, {"created_at": "Sat Sep 05 15:22:37 +0000 2015", "text": "Hillary, 20 years ago today: \u201cIt is no longer acceptable to discuss women's rights as separate from human rights.\u201d\nhttps://t.co/TNEXF8jZF4", "in_reply_to_screen_name": null, "retweet_count": 1348, "favorite_count": 2243, "source": "Twitter Web Client", "id_str": "640183258240585728", "is_retweet": false}, {"created_at": "Mon Sep 21 14:56:01 +0000 2015", "text": "Price gouging like this in the specialty drug market is outrageous. Tomorrow I'll lay out a plan to take it on. -H https://t.co/9Z0Aw7aI6h", "in_reply_to_screen_name": null, "retweet_count": 2272, "favorite_count": 2747, "source": "Twitter Web Client", "id_str": "645974772275408896", "is_retweet": false}, {"created_at": "Fri Aug 14 15:11:03 +0000 2015", "text": "To strengthen American families, we need to prevent systemic drug abuse and support those seeking treatment. http://t.co/sCKeQ1UOR1", "in_reply_to_screen_name": null, "retweet_count": 271, "favorite_count": 417, "source": "TweetDeck", "id_str": "632207814564446208", "is_retweet": false}, {"created_at": "Fri May 22 16:23:52 +0000 2015", "text": "Great event brewing at @smuttynosebeer in Hampton, NH. Watch Hillary's small business roundtable live: http://t.co/vR9gTJNZ0W", "in_reply_to_screen_name": null, "retweet_count": 109, "favorite_count": 210, "source": "TweetDeck", "id_str": "601785559829319680", "is_retweet": false}, {"created_at": "Fri Aug 07 01:19:56 +0000 2015", "text": "Hillary is proud to #StandWithPP. RT if you are too. http://t.co/F5Wq1C054S", "in_reply_to_screen_name": null, "retweet_count": 3954, "favorite_count": 4893, "source": "Twitter Web Client", "id_str": "629461943934414848", "is_retweet": false}, {"created_at": "Fri Jul 31 14:41:18 +0000 2015", "text": "These names are emblazoned on our hearts. http://t.co/beOwVAVwn5", "in_reply_to_screen_name": null, "retweet_count": 1253, "favorite_count": 1771, "source": "Twitter Web Client", "id_str": "627126896204083200", "is_retweet": false}, {"created_at": "Thu Oct 15 01:39:35 +0000 2015", "text": "Go behind the scenes with Hillary at the #DemDebate: http://t.co/M5XAMWZFNx http://t.co/fQf48HHNMW", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 706, "source": "Twitter Web Client", "id_str": "654471648347820032", "is_retweet": false}, {"created_at": "Sun Oct 25 03:37:44 +0000 2015", "text": "Hillary at the #IDPJJ: https://t.co/reLfQa31DJ", "in_reply_to_screen_name": null, "retweet_count": 466, "favorite_count": 887, "source": "TweetDeck", "id_str": "658125263549673472", "is_retweet": false}, {"created_at": "Sat May 09 14:34:48 +0000 2015", "text": "If you agree with Hillary, add your name to let her know: http://t.co/Ws6gSVl5yh http://t.co/fLnX2xKxx3", "in_reply_to_screen_name": null, "retweet_count": 355, "favorite_count": 691, "source": "Twitter Web Client", "id_str": "597047070873264128", "is_retweet": false}, {"created_at": "Fri May 29 00:04:24 +0000 2015", "text": "Join the #Hillary2016 list\u2014all you need to spell is your email address. http://t.co/ZwBBZ0j9OG", "in_reply_to_screen_name": null, "retweet_count": 126, "favorite_count": 246, "source": "Twitter Web Client", "id_str": "604075784987369472", "is_retweet": false}, {"created_at": "Tue Dec 08 18:57:49 +0000 2015", "text": "Trump\u2019s hateful comments aren\u2019t just an affront to our values\u2014they\u2019re a threat to our national security. https://t.co/DUXg022w0e", "in_reply_to_screen_name": null, "retweet_count": 2621, "favorite_count": 3902, "source": "TweetDeck", "id_str": "674301875785768960", "is_retweet": false}, {"created_at": "Wed Sep 23 22:21:38 +0000 2015", "text": "\u261d\ufe0f No, really\u2014read Hillary\u2019s comprehensive plan for lowering health care costs for working families: http://t.co/7f9XkUYrBP", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 260, "favorite_count": 448, "source": "TweetDeck", "id_str": "646811687438450688", "is_retweet": false}, {"created_at": "Sun Sep 06 15:07:09 +0000 2015", "text": "Through prevention, treatment, and criminal justice reform, we can combat this country's addiction epidemic. http://t.co/srrjmvAowT", "in_reply_to_screen_name": null, "retweet_count": 595, "favorite_count": 978, "source": "Twitter Web Client", "id_str": "640541752764579840", "is_retweet": false}, {"created_at": "Sun Oct 25 03:42:56 +0000 2015", "text": "\"I\u2019ve spent my life working for children, women, families, and our country...and I\u2019m just getting warmed up.\" \u2014Hillary at #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 468, "favorite_count": 1188, "source": "TweetDeck", "id_str": "658126571560112128", "is_retweet": false}, {"created_at": "Fri Jul 24 14:12:55 +0000 2015", "text": "http://t.co/H1hZAZodsF", "in_reply_to_screen_name": null, "retweet_count": 785, "favorite_count": 1643, "source": "TweetDeck", "id_str": "624583041374027777", "is_retweet": false}, {"created_at": "Thu Apr 16 00:36:33 +0000 2015", "text": "Hillary discusses paid leave in Iowa: All children deserve the \"same chances.\" http://t.co/vf1X9pi1nP", "in_reply_to_screen_name": null, "retweet_count": 536, "favorite_count": 1035, "source": "Twitter Web Client", "id_str": "588501196954042368", "is_retweet": false}, {"created_at": "Sun Aug 16 23:16:38 +0000 2015", "text": "If schools load students up with debt for programs that don\u2019t lead to good-paying jobs, they should be accountable, too.", "in_reply_to_screen_name": null, "retweet_count": 1508, "favorite_count": 2028, "source": "Twitter Web Client", "id_str": "633054790310866946", "is_retweet": false}, {"created_at": "Sat Jun 27 14:58:01 +0000 2015", "text": "Best Pride month ever. Celebrate with the Hillary Pride collection: http://t.co/PMt81ZKcbk #lovewins http://t.co/2lyVeNY436", "in_reply_to_screen_name": null, "retweet_count": 327, "favorite_count": 959, "source": "TweetDeck", "id_str": "614809916423995392", "is_retweet": false}, {"created_at": "Wed Apr 15 18:43:03 +0000 2015", "text": "Saying hi at Capital City Fruit in Norwalk, Iowa http://t.co/NqpzSFreNo", "in_reply_to_screen_name": null, "retweet_count": 386, "favorite_count": 1136, "source": "Twitter Web Client", "id_str": "588412234428211200", "is_retweet": false}, {"created_at": "Sat Aug 01 17:57:54 +0000 2015", "text": "Yesterday, Hillary spoke at @NatUrbanLeague on systemic racial inequality in America\u2014and how we can help fix it: http://t.co/PbYFT8KVxO", "in_reply_to_screen_name": null, "retweet_count": 281, "favorite_count": 421, "source": "Twitter Web Client", "id_str": "627538761904205824", "is_retweet": false}, {"created_at": "Tue Nov 10 18:46:58 +0000 2015", "text": "The 5th Circuit is wrong on immigration. SCOTUS should uphold DACA/DAPA so millions of families can stop living in fear. -H", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 461, "source": "TweetDeck", "id_str": "664152285472157696", "is_retweet": false}, {"created_at": "Tue Sep 22 22:40:36 +0000 2015", "text": "@deray: Let's meet; we want to hear from anyone ready to address this urgent problem and work toward solutions. Our team will follow up.", "in_reply_to_screen_name": "deray", "retweet_count": 1097, "favorite_count": 1568, "source": "Twitter Web Client", "id_str": "646454072732614657", "is_retweet": false}, {"created_at": "Mon Oct 12 12:06:51 +0000 2015", "text": "\"We need their voices, we need their activism.\" Hillary on the Black Lives Matter movement on @anotherround: http://t.co/R4FNFAWCJY", "in_reply_to_screen_name": null, "retweet_count": 364, "favorite_count": 637, "source": "TweetDeck", "id_str": "653542343816159232", "is_retweet": false}, {"created_at": "Mon Aug 17 14:20:51 +0000 2015", "text": "\"She has so much compassion and it shows. She's a person, she's a grandmother, she's somebody's mother.\" http://t.co/JoqSQ2bdGc", "in_reply_to_screen_name": null, "retweet_count": 332, "favorite_count": 674, "source": "Twitter Web Client", "id_str": "633282345412468736", "is_retweet": false}, {"created_at": "Mon Jul 13 21:26:13 +0000 2015", "text": "\u201cArreglar el sistema migratorio es un imperativo econ\u00f3mico. Tambi\u00e9n es un imperativo familiar y moral.\u201d", "in_reply_to_screen_name": null, "retweet_count": 579, "favorite_count": 812, "source": "Twitter Web Client", "id_str": "620705817759719424", "is_retweet": false}, {"created_at": "Wed Nov 04 20:41:35 +0000 2015", "text": "In 1976, @BarbaraJWalters became the first woman co-anchor on a major network. https://t.co/w6F7J3FZYs", "in_reply_to_screen_name": null, "retweet_count": 607, "favorite_count": 1340, "source": "TweetDeck", "id_str": "662006802683441153", "is_retweet": false}, {"created_at": "Wed Jul 01 02:05:43 +0000 2015", "text": "The hippest way to spend ten bucks: being one of the first to support #Hillary2016. http://t.co/xvr0lRmmND http://t.co/QZ1y5EfphX", "in_reply_to_screen_name": null, "retweet_count": 503, "favorite_count": 1723, "source": "TweetDeck", "id_str": "616065111577358336", "is_retweet": false}, {"created_at": "Wed Jul 01 03:40:27 +0000 2015", "text": "Last chance! We\u2019re closing the books on this quarter at midnight. Get us over the finish line by chipping in $5: http://t.co/l0IiiUIpAC", "in_reply_to_screen_name": null, "retweet_count": 90, "favorite_count": 176, "source": "TweetDeck", "id_str": "616088954719186944", "is_retweet": false}, {"created_at": "Sat Oct 03 23:47:10 +0000 2015", "text": "\u201cCongress must pass the Federal Equality Act.\u201d Read Hillary\u2019s remarks to the @HRC: http://t.co/k4uMCAwp61", "in_reply_to_screen_name": null, "retweet_count": 385, "favorite_count": 706, "source": "Twitter Web Client", "id_str": "650457094135676928", "is_retweet": false}, {"created_at": "Fri Sep 04 02:21:25 +0000 2015", "text": "Whatever language you speak, you should feel welcome in America. http://t.co/atdAyenhnT", "in_reply_to_screen_name": null, "retweet_count": 1820, "favorite_count": 3077, "source": "Twitter for iPhone", "id_str": "639624276279103488", "is_retweet": false}, {"created_at": "Fri Dec 11 20:43:19 +0000 2015", "text": "If your paycheck doesn\u2019t stretch as far as it used to, you\u2019re not alone. https://t.co/B7WKvKM5pw https://t.co/jzQNj96Oc8", "in_reply_to_screen_name": null, "retweet_count": 404, "favorite_count": 805, "source": "TweetDeck", "id_str": "675415589196812288", "is_retweet": false}, {"created_at": "Wed Nov 04 13:06:44 +0000 2015", "text": "Everyone deserves full and equal protection under the law. This is a reminder of the work still left to do.  https://t.co/r68QAHxxPT", "in_reply_to_screen_name": null, "retweet_count": 797, "favorite_count": 1274, "source": "Twitter for iPhone", "id_str": "661892332971782144", "is_retweet": false}, {"created_at": "Sat Mar 28 02:29:45 +0000 2015", "text": "Abusive payday lenders take advantage of families trying to get ahead. Glad to see @BarackObama &amp; @CFPB take a stand. http://t.co/7CALMIwGzi", "in_reply_to_screen_name": null, "retweet_count": 1279, "favorite_count": 2186, "source": "Twitter for iPhone", "id_str": "581644312275992576", "is_retweet": false}, {"created_at": "Thu Aug 20 22:11:48 +0000 2015", "text": "Se llaman \"beb\u00e9s,\" \"ni\u00f1os,\" o \"ciudadanos.\" https://t.co/ofxEG6Za00", "in_reply_to_screen_name": null, "retweet_count": 741, "favorite_count": 1127, "source": "Twitter Web Client", "id_str": "634488025305776128", "is_retweet": false}, {"created_at": "Thu May 21 23:04:35 +0000 2015", "text": "Want to meet Hillary? Know a friend who does, too? Free idea: Tag them here and make a deal to be each other's +1 \u2192 http://t.co/e7apxO0z8V", "in_reply_to_screen_name": null, "retweet_count": 120, "favorite_count": 243, "source": "TweetDeck", "id_str": "601524012901072896", "is_retweet": false}, {"created_at": "Mon Aug 17 16:27:21 +0000 2015", "text": "Thought you\u2019d never ask. Text \u201cGO\u201d to 47246 for updates from the campaign. http://t.co/cy0IeCompp", "in_reply_to_screen_name": null, "retweet_count": 261, "favorite_count": 488, "source": "Twitter Web Client", "id_str": "633314179617787904", "is_retweet": false}, {"created_at": "Wed Jul 15 22:47:42 +0000 2015", "text": "No one should have to choose between keeping a paycheck and caring for a loved one. http://t.co/2ta3l1zMU8 http://t.co/esDQEWhu5u", "in_reply_to_screen_name": null, "retweet_count": 703, "favorite_count": 1189, "source": "TweetDeck", "id_str": "621451099531255808", "is_retweet": false}, {"created_at": "Thu Aug 20 18:05:47 +0000 2015", "text": "How about \"babies,\" \"children,\" or \"American citizens.\" https://t.co/ofxEG6Za00", "in_reply_to_screen_name": null, "retweet_count": 1978, "favorite_count": 2985, "source": "TweetDeck", "id_str": "634426115436740608", "is_retweet": false}, {"created_at": "Thu Sep 24 17:38:04 +0000 2015", "text": "Thank you, @Pontifex. We have much to do to care for our planet, strengthen economic opportunity, and defend the rights &amp; dignity of all. -H", "in_reply_to_screen_name": null, "retweet_count": 907, "favorite_count": 1893, "source": "Twitter for iPhone", "id_str": "647102715617771520", "is_retweet": false}, {"created_at": "Sat Dec 05 20:41:19 +0000 2015", "text": "7 proud feminists who aren't apologizing: https://t.co/IlxeSwcG8G", "in_reply_to_screen_name": null, "retweet_count": 463, "favorite_count": 1061, "source": "Twitter for iPhone", "id_str": "673240755910148097", "is_retweet": false}, {"created_at": "Fri Nov 06 13:10:01 +0000 2015", "text": "Hillary\u2019s spent 40 years in public service, and the numbers speak for themselves. https://t.co/tsj4DYQ4It", "in_reply_to_screen_name": null, "retweet_count": 396, "favorite_count": 893, "source": "TweetDeck", "id_str": "662617937321304064", "is_retweet": false}, {"created_at": "Thu Sep 17 02:43:50 +0000 2015", "text": "You don\u2019t have to be a scientist to know that climate change is an urgent challenge that threatens us all. We need to act.", "in_reply_to_screen_name": null, "retweet_count": 2638, "favorite_count": 5009, "source": "Twitter Web Client", "id_str": "644340958566445056", "is_retweet": false}, {"created_at": "Thu Jun 04 20:31:47 +0000 2015", "text": "Hillary calls for automatic voter registration\u2014for everybody. http://t.co/AWMYuaDJLB", "in_reply_to_screen_name": null, "retweet_count": 1662, "favorite_count": 2225, "source": "TweetDeck", "id_str": "606558991582261248", "is_retweet": false}, {"created_at": "Fri Oct 30 21:10:15 +0000 2015", "text": "No pagarle lo mismo a las campeonas del mundo de f\u00fatbol es m\u00e1s injusto que ganar el mundial con \"la mano de D\u00edos.\" https://t.co/TWmzEETe7v", "in_reply_to_screen_name": null, "retweet_count": 700, "favorite_count": 679, "source": "TweetDeck", "id_str": "660202077617000449", "is_retweet": false}, {"created_at": "Mon Aug 24 01:00:04 +0000 2015", "text": "No student should have to borrow money to pay tuition at a public college.", "in_reply_to_screen_name": null, "retweet_count": 18125, "favorite_count": 20993, "source": "Twitter Web Client", "id_str": "635617534633492480", "is_retweet": false}, {"created_at": "Mon Nov 02 14:55:23 +0000 2015", "text": "\u00a1Feliz D\u00eda de los Muertos! Text LATINOS to 47246 to join Latinos for Hillary. https://t.co/kC56iMB4nn", "in_reply_to_screen_name": null, "retweet_count": 397, "favorite_count": 702, "source": "TweetDeck", "id_str": "661194901833560064", "is_retweet": false}, {"created_at": "Tue Nov 24 13:03:47 +0000 2015", "text": "Providing care for an elderly or sick loved one should not mean sacrificing your own secure retirement.", "in_reply_to_screen_name": null, "retweet_count": 603, "favorite_count": 1453, "source": "TweetDeck", "id_str": "669139347250290690", "is_retweet": false}, {"created_at": "Tue Jun 23 20:12:13 +0000 2015", "text": "http://t.co/x0YqqEkWUW", "in_reply_to_screen_name": null, "retweet_count": 432, "favorite_count": 709, "source": "TweetDeck", "id_str": "613439435628265472", "is_retweet": false}, {"created_at": "Tue Oct 06 19:29:00 +0000 2015", "text": "Watch Hillary talk about the best advice her mom ever gave her.\nhttps://t.co/NEbs67GSSn", "in_reply_to_screen_name": null, "retweet_count": 383, "favorite_count": 707, "source": "Twitter Web Client", "id_str": "651479287275454464", "is_retweet": false}, {"created_at": "Fri Jul 31 16:06:36 +0000 2015", "text": "\"We can't go back to cowboy diplomacy and reckless war-mongering...We need a foreign policy for the future.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 565, "favorite_count": 1062, "source": "TweetDeck", "id_str": "627148362630963200", "is_retweet": false}, {"created_at": "Wed Apr 29 14:12:59 +0000 2015", "text": "WATCH: Hillary calls for an end to the era of mass incarceration. http://t.co/SMv27iunyG", "in_reply_to_screen_name": null, "retweet_count": 505, "favorite_count": 917, "source": "Twitter Web Client", "id_str": "593417700342398977", "is_retweet": false}, {"created_at": "Sun Jul 26 17:06:18 +0000 2015", "text": "We know Hillary\u2019s a fighter &amp; that she\u2019ll fight for Adam as President just like she did at the Children\u2019s Defense Fund &amp; in Congress.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 80, "favorite_count": 210, "source": "Twitter Web Client", "id_str": "625351448663093248", "is_retweet": false}, {"created_at": "Sun Dec 20 03:06:16 +0000 2015", "text": "The Affordable Care Act is working\u2014and it's too important to repeal. https://t.co/I7cSwLqlEq #DemDebate https://t.co/zUVGkr6rC7", "in_reply_to_screen_name": null, "retweet_count": 551, "favorite_count": 1110, "source": "Twitter Web Client", "id_str": "678411065340911616", "is_retweet": false}, {"created_at": "Sat Oct 10 13:30:55 +0000 2015", "text": "We can protect the Second Amendment while also protecting our families and communities from gun violence. http://t.co/4UBTUq9Po2", "in_reply_to_screen_name": null, "retweet_count": 1432, "favorite_count": 2309, "source": "Twitter Web Client", "id_str": "652838725139976193", "is_retweet": false}, {"created_at": "Wed Jul 22 02:08:29 +0000 2015", "text": "We need to make sure there\u2019s accountability on Wall Street so there can be prosperity on Main Street.", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 1096, "source": "Twitter Web Client", "id_str": "623675956222410752", "is_retweet": false}, {"created_at": "Wed Nov 25 17:04:08 +0000 2015", "text": "Hillary answers: What\u2019s it like to watch football with your family? \ud83c\udfc8\nhttps://t.co/j1DrUnQ7qG", "in_reply_to_screen_name": null, "retweet_count": 243, "favorite_count": 593, "source": "Twitter Web Client", "id_str": "669562223375740928", "is_retweet": false}, {"created_at": "Mon Jul 13 20:08:05 +0000 2015", "text": "Hillary stands up for workers against GOP attacks: \"They don\u2019t need a lecture\u200a\u2014\u200athey need a raise.\"\nhttps://t.co/Km2eFdQiSc", "in_reply_to_screen_name": null, "retweet_count": 682, "favorite_count": 1154, "source": "Twitter Web Client", "id_str": "620686153402822656", "is_retweet": false}, {"created_at": "Tue Nov 03 23:24:57 +0000 2015", "text": "Hillary's gun violence prevention plan supports legislation to stop convicted stalkers from possessing guns. https://t.co/qUX5t1k8OY", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 417, "favorite_count": 732, "source": "TweetDeck", "id_str": "661685526483701760", "is_retweet": false}, {"created_at": "Thu Jul 02 22:02:49 +0000 2015", "text": "Song of the week, brought to you by 93-year-old Jerry R. in California. http://t.co/1KJcSaOvvb #Hillary2016", "in_reply_to_screen_name": null, "retweet_count": 160, "favorite_count": 313, "source": "Twitter Web Client", "id_str": "616728758955978752", "is_retweet": false}, {"created_at": "Mon Nov 09 20:36:40 +0000 2015", "text": "\u201cWhen it comes to fighting the climate crisis, the stakes couldn\u2019t be higher.\u201d \u2014@LCVoters https://t.co/ngjjNRPMkX https://t.co/2zONDStLVv", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 726, "source": "TweetDeck", "id_str": "663817502573498368", "is_retweet": false}, {"created_at": "Thu Jul 16 00:37:12 +0000 2015", "text": "In 50 states, 11,869 volunteers are building a powerful grassroots organization\u2014plus one quilt. http://t.co/jX7vCarQdj", "in_reply_to_screen_name": null, "retweet_count": 276, "favorite_count": 505, "source": "TweetDeck", "id_str": "621478653013135360", "is_retweet": false}, {"created_at": "Sat Nov 21 16:37:09 +0000 2015", "text": "Louisiana: Today is Election Day! Text VOTE to 47246 to find your polling place\u2014then go make your voice heard!", "in_reply_to_screen_name": null, "retweet_count": 359, "favorite_count": 717, "source": "Twitter Web Client", "id_str": "668105880865492992", "is_retweet": false}, {"created_at": "Tue Aug 18 15:16:08 +0000 2015", "text": "16 million Americans have gained health insurance from the Affordable Care Act. We need to protect it\u2014not repeal it.", "in_reply_to_screen_name": null, "retweet_count": 786, "favorite_count": 1460, "source": "Twitter Web Client", "id_str": "633658646195474433", "is_retweet": false}, {"created_at": "Wed Dec 30 13:59:27 +0000 2015", "text": "We can make families stronger by cutting taxes, raising the minimum wage, and making sure women get equal pay for equal work.", "in_reply_to_screen_name": null, "retweet_count": 968, "favorite_count": 2653, "source": "Twitter for iPhone", "id_str": "682199321366904833", "is_retweet": false}, {"created_at": "Wed Apr 22 18:36:20 +0000 2015", "text": "Organizing is the heart and soul of this campaign. Watch the video &amp; sign up to get involved: http://t.co/4j0Xyx7unx http://t.co/hjWK5LVPcV", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 734, "source": "Twitter Web Client", "id_str": "590947257157038080", "is_retweet": false}, {"created_at": "Thu Jun 04 20:18:31 +0000 2015", "text": "\"We should be doing everything we can to get our young people more engaged in our democracy, not less.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 519, "favorite_count": 782, "source": "Twitter Web Client", "id_str": "606555650793955329", "is_retweet": false}, {"created_at": "Sun Oct 18 22:51:01 +0000 2015", "text": "\"What part of democracy are all these candidates afraid of?\" Read why Hillary is fighting to protect voting rights. http://t.co/z6SHW4ChQF", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 771, "source": "Twitter Web Client", "id_str": "655878778355322880", "is_retweet": false}, {"created_at": "Wed Sep 30 01:29:20 +0000 2015", "text": "Did you know Hillary once had a job gutting salmon in Alaska? Read about it in her interview with @lenadunham: http://t.co/SKGEVx9nNf", "in_reply_to_screen_name": null, "retweet_count": 218, "favorite_count": 433, "source": "Twitter for iPhone", "id_str": "649033254021033984", "is_retweet": false}, {"created_at": "Tue Oct 27 12:15:27 +0000 2015", "text": "Giving students a world class education also means making sure adjunct faculty are paid fairly. #CampusEquityWeek https://t.co/jRsMhHWeRg", "in_reply_to_screen_name": null, "retweet_count": 996, "favorite_count": 1251, "source": "TweetDeck", "id_str": "658980324089663488", "is_retweet": false}, {"created_at": "Thu Jun 04 20:30:07 +0000 2015", "text": "\"We should set a standard across our country of at least 20 days of early in-person voting everywhere.\"", "in_reply_to_screen_name": null, "retweet_count": 212, "favorite_count": 381, "source": "Twitter Web Client", "id_str": "606558570251886592", "is_retweet": false}, {"created_at": "Mon Aug 31 00:48:24 +0000 2015", "text": "Watch Hillary say: \u201cWe have got to do something about gun violence in America\u2014and I will take it on.\u201d\nhttps://t.co/9sbP4UHW41", "in_reply_to_screen_name": null, "retweet_count": 833, "favorite_count": 1564, "source": "Twitter Web Client", "id_str": "638151316099854336", "is_retweet": false}, {"created_at": "Tue Jul 21 21:23:51 +0000 2015", "text": "If Hillary is playing the so-called #gendercard, what cards are Republicans holding?\nhttps://t.co/QoldL2hBow", "in_reply_to_screen_name": null, "retweet_count": 1276, "favorite_count": 1725, "source": "Twitter Web Client", "id_str": "623604325151961088", "is_retweet": false}, {"created_at": "Mon Jul 27 13:02:01 +0000 2015", "text": "We don't hide from change. We harness it. Learn more about Hillary's environmental agenda:\nhttps://t.co/pYCDcgWCFU", "in_reply_to_screen_name": null, "retweet_count": 312, "favorite_count": 415, "source": "Twitter Web Client", "id_str": "625652359067119616", "is_retweet": false}, {"created_at": "Wed Sep 23 12:42:43 +0000 2015", "text": "Hillary is joining Tom Joyner on the @TJMShow! Tune in \u2192 http://t.co/dpg08DaOwu", "in_reply_to_screen_name": null, "retweet_count": 113, "favorite_count": 209, "source": "Twitter for iPhone", "id_str": "646666000348352512", "is_retweet": false}, {"created_at": "Mon Aug 10 20:00:03 +0000 2015", "text": "This is about ensuring families can get ahead\u2014&amp; having the greatest workforce in the world. Win-win. #MillennialMon https://t.co/4VSvLzZZ09", "in_reply_to_screen_name": null, "retweet_count": 203, "favorite_count": 343, "source": "TweetDeck", "id_str": "630830992471793665", "is_retweet": false}, {"created_at": "Tue Dec 01 20:50:12 +0000 2015", "text": "\"I want to build on the progress we\u2019ve made under the Affordable Care Act.\" Hillary on @Quora: https://t.co/RUS47Tzn4i", "in_reply_to_screen_name": null, "retweet_count": 180, "favorite_count": 404, "source": "TweetDeck", "id_str": "671793440892538881", "is_retweet": false}, {"created_at": "Tue Aug 25 19:18:45 +0000 2015", "text": "\"AmeriCorps is a...cost-effective solution to some of our nation\u2019s most pressing issues.\" Hillary wants to expand it: http://t.co/u0wPP0s9fs", "in_reply_to_screen_name": null, "retweet_count": 272, "favorite_count": 510, "source": "TweetDeck", "id_str": "636256418153267200", "is_retweet": false}, {"created_at": "Sun Jul 26 17:12:03 +0000 2015", "text": "Thanks for listening. Follow along at @HillaryforIA as we celebrate #ADA25! \u2014Sara http://t.co/Do6PFzytwb", "in_reply_to_screen_name": null, "retweet_count": 115, "favorite_count": 313, "source": "Twitter Web Client", "id_str": "625352896285175808", "is_retweet": false}, {"created_at": "Sun Dec 20 03:31:17 +0000 2015", "text": "La c\u00e1rcel no es un substituto para tratar la adicci\u00f3n a las drogas, ni para problemas de salud mental. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 401, "favorite_count": 691, "source": "Twitter Web Client", "id_str": "678417360013942785", "is_retweet": false}, {"created_at": "Wed May 27 21:05:57 +0000 2015", "text": "How do you know Hillary will fight for equal pay? She's been doing it for years. Learn about her record and ideas: http://t.co/rtOLGS6c3X", "in_reply_to_screen_name": null, "retweet_count": 296, "favorite_count": 510, "source": "TweetDeck", "id_str": "603668484627771392", "is_retweet": false}, {"created_at": "Tue Sep 15 12:06:27 +0000 2015", "text": "Hillary to every survivor of sexual assault: You have the right to be heard and believed. We're with you.\nhttps://t.co/HPJ2gPPwMs", "in_reply_to_screen_name": null, "retweet_count": 1075, "favorite_count": 1770, "source": "Twitter Web Client", "id_str": "643757770861228032", "is_retweet": false}, {"created_at": "Wed Dec 09 03:17:09 +0000 2015", "text": "Muslim Americans: This is your country, too. I\u2019m proud to be your fellow American. And many, many other Americans feel the same way. -H", "in_reply_to_screen_name": null, "retweet_count": 19067, "favorite_count": 38261, "source": "TweetDeck", "id_str": "674427536890195968", "is_retweet": false}, {"created_at": "Fri Oct 23 21:50:39 +0000 2015", "text": "A todos los que est\u00e1n en el paso del #HuracanPatricia, sigan @CENAPRED_mex para encontrar refugio y m\u00e1s informaci\u00f3n. Pensando en ustedes.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3419, "favorite_count": 3372, "source": "Twitter Web Client", "id_str": "657675529320050688", "is_retweet": false}, {"created_at": "Wed Jul 08 00:23:03 +0000 2015", "text": "\"A woman should have her own bill.\"\u2014Hillary https://t.co/XKUHhLEuzX", "in_reply_to_screen_name": null, "retweet_count": 993, "favorite_count": 1940, "source": "TweetDeck", "id_str": "618575992848809984", "is_retweet": false}, {"created_at": "Fri Oct 16 19:47:59 +0000 2015", "text": "Transgender people deserve respect, safety, and equal treatment everywhere. Good move by @TSA. https://t.co/9ZZV0NV6IW", "in_reply_to_screen_name": null, "retweet_count": 785, "favorite_count": 1661, "source": "Twitter Web Client", "id_str": "655107943638134785", "is_retweet": false}, {"created_at": "Thu Jul 30 17:41:54 +0000 2015", "text": "Education, equality, and black coffee (sometimes). Read what Hillary's all about in @theskimm! http://t.co/2Vlnj5IWHX http://t.co/GF2E0QWI7P", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 928, "source": "TweetDeck", "id_str": "626809957900505088", "is_retweet": false}, {"created_at": "Tue Aug 11 21:27:23 +0000 2015", "text": "\u201cI want every young person in America to know that if you work hard, you can get ahead, and I want America to have your back.\"\u2014Hillary in NH", "in_reply_to_screen_name": null, "retweet_count": 627, "favorite_count": 1233, "source": "TweetDeck", "id_str": "631215356724559872", "is_retweet": false}, {"created_at": "Mon Jun 08 23:53:44 +0000 2015", "text": "Couldn't be prouder to have the women of Team #USA representing us in stars, stripes, and shin guards. Good luck, @ussoccer_wnt! -H", "in_reply_to_screen_name": null, "retweet_count": 1235, "favorite_count": 3107, "source": "TweetDeck", "id_str": "608059366613381122", "is_retweet": false}, {"created_at": "Sun Apr 12 19:27:45 +0000 2015", "text": "I'm running for president. Everyday Americans need a champion, and I want to be that champion. \u2013H https://t.co/w8Hoe1pbtC", "in_reply_to_screen_name": null, "retweet_count": 96527, "favorite_count": 104897, "source": "Twitter Web Client", "id_str": "587336319321407488", "is_retweet": false}, {"created_at": "Sat Dec 05 19:37:39 +0000 2015", "text": "Hillary has always stood with Planned Parenthood\u2014and always will. #StandWithPP #solidarity https://t.co/z2yL83BuPV", "in_reply_to_screen_name": null, "retweet_count": 403, "favorite_count": 1092, "source": "TweetDeck", "id_str": "673224737095462912", "is_retweet": false}, {"created_at": "Sun Sep 27 22:40:03 +0000 2015", "text": "Women\u2019s rights are human rights, period. Join Women for Hillary today.\nhttps://t.co/zewoKIuRAJ", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 1127, "source": "Twitter Web Client", "id_str": "648265876525875200", "is_retweet": false}, {"created_at": "Fri Oct 30 13:35:49 +0000 2015", "text": "Whether you're a teacher, an executive, or a world-champion soccer player, you deserve equal pay. Red card, GOP. https://t.co/TWmzEETe7v", "in_reply_to_screen_name": null, "retweet_count": 2009, "favorite_count": 3668, "source": "Twitter for iPhone", "id_str": "660087712620404741", "is_retweet": false}, {"created_at": "Sat May 30 20:04:44 +0000 2015", "text": "Summer essentials: Sunglasses. Iced Tea. This tank: http://t.co/PEF4gRjDgK http://t.co/Klq9l4NfRY", "in_reply_to_screen_name": null, "retweet_count": 194, "favorite_count": 468, "source": "TweetDeck", "id_str": "604740243611373569", "is_retweet": false}, {"created_at": "Fri Jun 12 01:03:51 +0000 2015", "text": "State of the race: Campaign Manager Robby Mook's memo on the next phase of #Hillary2016. http://t.co/VP8KKONvks", "in_reply_to_screen_name": null, "retweet_count": 164, "favorite_count": 255, "source": "TweetDeck", "id_str": "609164173348589569", "is_retweet": false}, {"created_at": "Fri Jun 26 19:58:02 +0000 2015", "text": "A day to remember. http://t.co/F12o9NfUtK http://t.co/o1rIifb8yd", "in_reply_to_screen_name": null, "retweet_count": 3147, "favorite_count": 5779, "source": "TweetDeck", "id_str": "614523028978929664", "is_retweet": false}, {"created_at": "Thu Sep 17 01:59:35 +0000 2015", "text": "Still a good time to sign up! https://t.co/lmV2gMr8cm", "in_reply_to_screen_name": null, "retweet_count": 257, "favorite_count": 624, "source": "Twitter Web Client", "id_str": "644329821032554496", "is_retweet": false}, {"created_at": "Thu Oct 22 19:05:19 +0000 2015", "text": "As Secretary, Hillary implemented reforms to protect diplomats and help prevent future attacks. #BenghaziCommittee\nhttps://t.co/PbkQZVlxLI", "in_reply_to_screen_name": null, "retweet_count": 687, "favorite_count": 1081, "source": "Twitter Web Client", "id_str": "657271533916688385", "is_retweet": false}, {"created_at": "Fri May 01 14:48:13 +0000 2015", "text": "Get your #Hillary2016 bumper sticker before they're gone! http://t.co/EHHz0WdxQg http://t.co/2G7dw4ZEYs", "in_reply_to_screen_name": null, "retweet_count": 275, "favorite_count": 448, "source": "Twitter Web Client", "id_str": "594151343364902912", "is_retweet": false}, {"created_at": "Sun Nov 15 04:14:53 +0000 2015", "text": "Are you ready for the first woman president? #DemDebate #Hillary2016", "in_reply_to_screen_name": null, "retweet_count": 1132, "favorite_count": 2103, "source": "Twitter Web Client", "id_str": "665744754294943744", "is_retweet": false}, {"created_at": "Tue Apr 28 17:21:30 +0000 2015", "text": "\u2764\ufe0f numbers? The #Hillary2016 analytics team is looking for nerds with a passion for data\u2014apply now to join the team! http://t.co/VxYIksVxMJ", "in_reply_to_screen_name": null, "retweet_count": 359, "favorite_count": 756, "source": "Twitter Web Client", "id_str": "593102754660425729", "is_retweet": false}, {"created_at": "Fri Oct 30 19:40:17 +0000 2015", "text": "\"I\u2019m pledging to eliminate the disparity in sentencing between crack and cocaine, which disproportionately impacts African Americans.\"", "in_reply_to_screen_name": null, "retweet_count": 473, "favorite_count": 812, "source": "TweetDeck", "id_str": "660179433844772864", "is_retweet": false}, {"created_at": "Thu Jun 18 04:38:05 +0000 2015", "text": "Heartbreaking news from Charleston - my thoughts and prayers are with you all. -H", "in_reply_to_screen_name": null, "retweet_count": 1970, "favorite_count": 3131, "source": "Twitter for iPhone", "id_str": "611392413945434112", "is_retweet": false}, {"created_at": "Sat Aug 01 19:55:58 +0000 2015", "text": "Voting rights, equal pay, immigration reform, LGBT equality\u2014see more of What We're Fighting For on Pinterest: http://t.co/wXjnrgWUre", "in_reply_to_screen_name": null, "retweet_count": 323, "favorite_count": 591, "source": "TweetDeck", "id_str": "627568472629870592", "is_retweet": false}, {"created_at": "Sat Jun 13 19:07:45 +0000 2015", "text": "Today, Hillary laid out her vision\u2014and she's ready to fight for it. First stop: Iowa. #Hillary2016 http://t.co/dcKxiZmkdb", "in_reply_to_screen_name": null, "retweet_count": 995, "favorite_count": 1821, "source": "Twitter Web Client", "id_str": "609799334436192257", "is_retweet": false}, {"created_at": "Thu Aug 27 22:19:51 +0000 2015", "text": "It makes no sense that bipartisan legislation supporting universal background checks failed despite overwhelming support from the public.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 885, "favorite_count": 1676, "source": "TweetDeck", "id_str": "637026769711853568", "is_retweet": false}, {"created_at": "Thu Jun 04 20:27:34 +0000 2015", "text": "This fight is for all of us. http://t.co/pqH51YhFIr", "in_reply_to_screen_name": null, "retweet_count": 349, "favorite_count": 502, "source": "TweetDeck", "id_str": "606557931107000320", "is_retweet": false}, {"created_at": "Sat Nov 07 20:55:53 +0000 2015", "text": "\u201cI helped launch African Americans for Hillary. This is my story.\u201d -@KarenCivil https://t.co/vy2mwYEGt2", "in_reply_to_screen_name": null, "retweet_count": 279, "favorite_count": 675, "source": "Twitter Web Client", "id_str": "663097562908516353", "is_retweet": false}, {"created_at": "Fri May 22 19:58:54 +0000 2015", "text": "LGBTQ rights are human rights, and human rights are LGBTQ rights. http://t.co/u80OeOVdR6 #HarveyMilkDay", "in_reply_to_screen_name": null, "retweet_count": 1005, "favorite_count": 1552, "source": "TweetDeck", "id_str": "601839674156388352", "is_retweet": false}, {"created_at": "Tue Dec 08 16:28:47 +0000 2015", "text": "Tell Donald Trump: Hate is not an American value. https://t.co/qlhuKPKwn0", "in_reply_to_screen_name": null, "retweet_count": 10335, "favorite_count": 15867, "source": "TweetDeck", "id_str": "674264371095339008", "is_retweet": false}, {"created_at": "Sat Jun 13 16:59:28 +0000 2015", "text": "RT if you're on Team #Hillary2016 http://t.co/jqcvmGt4sc", "in_reply_to_screen_name": null, "retweet_count": 4266, "favorite_count": 2617, "source": "Twitter Web Client", "id_str": "609767051645816832", "is_retweet": false}, {"created_at": "Fri Sep 11 22:48:38 +0000 2015", "text": "We lost many brave Americans on September 11, 2001\u2014and in the years since, because of it. Today we mourn and honor them. -H", "in_reply_to_screen_name": null, "retweet_count": 860, "favorite_count": 1988, "source": "TweetDeck", "id_str": "642469828918411264", "is_retweet": false}, {"created_at": "Thu Nov 26 14:54:05 +0000 2015", "text": "We're thankful for our official campaign supporters. Add your name to become one! https://t.co/KCrp9P4yET", "in_reply_to_screen_name": null, "retweet_count": 209, "favorite_count": 711, "source": "TweetDeck", "id_str": "669891881573195776", "is_retweet": false}, {"created_at": "Tue May 05 22:52:05 +0000 2015", "text": "\u201cThere\u2019s much more to do to expand protections for families &amp; communities ... &amp; keep building support for comprehensive reform.\u201d", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 506, "source": "Twitter Web Client", "id_str": "595722663877844992", "is_retweet": false}, {"created_at": "Mon Jul 06 00:38:42 +0000 2015", "text": "Think @CarliLloyd and the team have this covered. #SheBelieves  https://t.co/kl3GmJwn15", "in_reply_to_screen_name": null, "retweet_count": 582, "favorite_count": 1798, "source": "Twitter Web Client", "id_str": "617855151865507841", "is_retweet": false}, {"created_at": "Sun Jul 26 16:02:26 +0000 2015", "text": "For Adam, that means enjoying cross country. At meets, other teams run him in &amp; congratulate him. It's neat to see! http://t.co/YGk4krihuz", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 129, "favorite_count": 397, "source": "Twitter Web Client", "id_str": "625335375968501761", "is_retweet": false}, {"created_at": "Tue Oct 13 16:42:25 +0000 2015", "text": ".@realDonaldTrump Glad you'll be watching. It's going to be \"huge.\"", "in_reply_to_screen_name": "realDonaldTrump", "retweet_count": 5931, "favorite_count": 11107, "source": "Twitter Web Client", "id_str": "653974078198521857", "is_retweet": false}, {"created_at": "Mon Oct 05 18:01:08 +0000 2015", "text": "It\u2019s time to act on gun violence. http://t.co/V6RP1utuy3", "in_reply_to_screen_name": null, "retweet_count": 1819, "favorite_count": 2770, "source": "TweetDeck", "id_str": "651094785982394368", "is_retweet": false}, {"created_at": "Tue Nov 17 19:42:27 +0000 2015", "text": "The @SEIU, representing 2 million workers, has voted to endorse Hillary! https://t.co/Obakxpm0pj", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1080, "source": "TweetDeck", "id_str": "666702960357982208", "is_retweet": false}, {"created_at": "Sat Dec 12 21:36:47 +0000 2015", "text": "Hillary's statement on the Paris climate change agreement: https://t.co/R3BIcNkr3V", "in_reply_to_screen_name": null, "retweet_count": 841, "favorite_count": 1388, "source": "TweetDeck", "id_str": "675791429772451840", "is_retweet": false}, {"created_at": "Thu Oct 22 16:38:52 +0000 2015", "text": "A lesson from Benghazi: Congress needs to do its part to ensure that our diplomats in dangerous parts of the world are as safe as possible.", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 1163, "source": "TweetDeck", "id_str": "657234678085230593", "is_retweet": false}, {"created_at": "Thu Dec 17 16:23:39 +0000 2015", "text": "Are Republicans stealing policy ideas from \"The Princess Bride\"? https://t.co/FAf5ChI626 https://t.co/tKz9DxtdvT", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 775, "source": "TweetDeck", "id_str": "677524569176023040", "is_retweet": false}, {"created_at": "Sat Nov 07 19:34:14 +0000 2015", "text": "\u201cIt\u2019s hard for me to understand why the suspension and expulsion rate is so much higher for black kids.\u201d \u2014Hillary\nhttps://t.co/RldOVxhayk", "in_reply_to_screen_name": null, "retweet_count": 617, "favorite_count": 1037, "source": "Twitter Web Client", "id_str": "663077013800939520", "is_retweet": false}, {"created_at": "Sun Oct 18 20:22:51 +0000 2015", "text": "\u201cIn 2016, the Latino community is going to play a critical role in electing our next president.\u201d -Juli\u00e1n Castro\nhttps://t.co/vRbKqY7AOV", "in_reply_to_screen_name": null, "retweet_count": 739, "favorite_count": 1315, "source": "Twitter Web Client", "id_str": "655841493156925440", "is_retweet": false}, {"created_at": "Tue May 26 17:31:36 +0000 2015", "text": "This week's Feed is about to hit inboxes. Make sure you're signed up before it goes out: http://t.co/Ru6EiR7lwX http://t.co/VTfIoZCmyK", "in_reply_to_screen_name": null, "retweet_count": 147, "favorite_count": 400, "source": "Twitter Web Client", "id_str": "603252154002968576", "is_retweet": false}, {"created_at": "Tue Oct 06 01:08:38 +0000 2015", "text": "Protecting communities should be our number one priority\u2014not the interests of the NRA. http://t.co/FkAaMqJSNN", "in_reply_to_screen_name": null, "retweet_count": 1044, "favorite_count": 1830, "source": "TweetDeck", "id_str": "651202369326198787", "is_retweet": false}, {"created_at": "Fri Jul 31 15:35:40 +0000 2015", "text": "We need to look to the future\u2014not stay stuck in the past. Watch Hillary speak on Cuba: http://t.co/dAPfBBVeLE http://t.co/fs6Yj0l57a", "in_reply_to_screen_name": null, "retweet_count": 219, "favorite_count": 300, "source": "TweetDeck", "id_str": "627140577696555008", "is_retweet": false}, {"created_at": "Sun Dec 20 03:11:57 +0000 2015", "text": "Hillary is the only candidate on stage who has pledged not to raise taxes on the middle class. #DemDebate https://t.co/saP1PmDwDa", "in_reply_to_screen_name": null, "retweet_count": 1030, "favorite_count": 2833, "source": "TweetDeck", "id_str": "678412495703433216", "is_retweet": false}, {"created_at": "Sat Jul 18 22:29:47 +0000 2015", "text": "Hillary's economic vision would give small business owners opportunities to build, grow &amp; hire\u2192http://t.co/2ta3l1zMU8 http://t.co/EAUloPklHY", "in_reply_to_screen_name": null, "retweet_count": 368, "favorite_count": 643, "source": "Twitter Web Client", "id_str": "622533752791670784", "is_retweet": false}, {"created_at": "Sat May 23 20:45:51 +0000 2015", "text": "Sign up here for your chance to meet Hillary\u2014selfie included: http://t.co/hFtqaY4xvB http://t.co/NpdeQDQspt", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 607, "source": "TweetDeck", "id_str": "602213877934399489", "is_retweet": false}, {"created_at": "Fri Jul 24 20:59:45 +0000 2015", "text": "Equal pay, paid leave, child care\u2014these are not \"women's issues.\"\nhttps://t.co/cq3h5MRsrX", "in_reply_to_screen_name": null, "retweet_count": 902, "favorite_count": 1521, "source": "Twitter Web Client", "id_str": "624685423382564864", "is_retweet": false}, {"created_at": "Wed Dec 09 23:43:04 +0000 2015", "text": "No one\u2014including Martin Shkreli\u2014should have the power to price gouge American families. https://t.co/OQBVyXkA8e", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 964, "source": "TweetDeck", "id_str": "674736046593155073", "is_retweet": false}, {"created_at": "Fri Oct 23 00:17:26 +0000 2015", "text": "If you're standing with Hillary, let her know: https://t.co/6CRK1JCS8t", "in_reply_to_screen_name": null, "retweet_count": 1623, "favorite_count": 4356, "source": "TweetDeck", "id_str": "657350080555520001", "is_retweet": false}, {"created_at": "Thu Nov 05 20:11:11 +0000 2015", "text": "Malala is brave, inspiring\u2014and really onto something here. https://t.co/c3dWxopG7B (via @EmWatson) https://t.co/Zqxxn9sAhx", "in_reply_to_screen_name": null, "retweet_count": 1052, "favorite_count": 2096, "source": "TweetDeck", "id_str": "662361538133688320", "is_retweet": false}, {"created_at": "Tue Sep 22 20:05:24 +0000 2015", "text": "\"If we\u2019re serious about raising people\u2019s incomes, we have to bring down out-of-pocket costs.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 334, "favorite_count": 727, "source": "TweetDeck", "id_str": "646415015201927168", "is_retweet": false}, {"created_at": "Tue Aug 11 16:14:10 +0000 2015", "text": "Lo que dijo Trump sobre Megyn Kelly es indignante, pero el peor insulto son las pol\u00edticas de los Republicanos que afectan a la mujer.", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 531, "source": "TweetDeck", "id_str": "631136534528397312", "is_retweet": false}, {"created_at": "Sat Nov 21 20:27:22 +0000 2015", "text": "Our values are stronger than fear. Slamming the door on refugees isn\u2019t who we are.\nhttps://t.co/ISEisdQbWf", "in_reply_to_screen_name": null, "retweet_count": 1453, "favorite_count": 2836, "source": "Twitter Web Client", "id_str": "668163818053197824", "is_retweet": false}, {"created_at": "Mon May 04 22:47:16 +0000 2015", "text": "Join #Hillary2016 if you believe in creating opportunities for everyone to follow their dream: http://t.co/rEggJUjFsd http://t.co/84bZA3DO3X", "in_reply_to_screen_name": null, "retweet_count": 302, "favorite_count": 429, "source": "Twitter Web Client", "id_str": "595359061534703616", "is_retweet": false}, {"created_at": "Thu Oct 15 18:24:33 +0000 2015", "text": "\"I've been told by some to quit shouting about this. Well, I'll tell you: I will not be silenced...I will keep taking on the NRA.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 785, "favorite_count": 1717, "source": "TweetDeck", "id_str": "654724559606644736", "is_retweet": false}, {"created_at": "Thu Nov 26 02:17:00 +0000 2015", "text": "Senior policy advisor @mayaharris_ talks #BlackLivesMatter and being a working mom with @ELLEmagazine: https://t.co/tELMwoy3dV", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 630, "source": "Twitter for iPhone", "id_str": "669701357788602368", "is_retweet": false}, {"created_at": "Tue Jun 30 01:15:29 +0000 2015", "text": "We have 27 hours to hit our first fundraising goal: 50,000 donors before midnight tomorrow. Can you chip in $5? http://t.co/bPI6uMAik7", "in_reply_to_screen_name": null, "retweet_count": 187, "favorite_count": 299, "source": "TweetDeck", "id_str": "615690081341472769", "is_retweet": false}, {"created_at": "Thu Aug 13 14:04:35 +0000 2015", "text": "QUIZ: How will Hillary's plan help you afford college and pay off student loans? Find out\u2192 http://t.co/PruKIXQQqo http://t.co/xdXefoz1MZ", "in_reply_to_screen_name": null, "retweet_count": 201, "favorite_count": 263, "source": "TweetDeck", "id_str": "631828701538295808", "is_retweet": false}, {"created_at": "Wed Nov 18 00:20:36 +0000 2015", "text": "If you like puppies, dancing, and calling out Republicans, you'll love the hillaryclinton Snapchat. https://t.co/3mKmqJvIpb", "in_reply_to_screen_name": null, "retweet_count": 351, "favorite_count": 1075, "source": "TweetDeck", "id_str": "666772959424573440", "is_retweet": false}, {"created_at": "Fri Jun 26 14:26:19 +0000 2015", "text": "Our new favorite map. RT if you live in a state where marriage equality is law. http://t.co/7GlCwCJHyg", "in_reply_to_screen_name": null, "retweet_count": 26850, "favorite_count": 26349, "source": "Twitter Web Client", "id_str": "614439551491264512", "is_retweet": false}, {"created_at": "Thu May 21 15:36:23 +0000 2015", "text": "The best part of owning my own business: It enabled me to become a single mom at 40, and gives me security &amp; flexibility to be a mom now.", "in_reply_to_screen_name": null, "retweet_count": 94, "favorite_count": 286, "source": "TweetDeck", "id_str": "601411223117295616", "is_retweet": false}, {"created_at": "Tue Sep 22 18:17:58 +0000 2015", "text": "Outrageous. When companies put profits ahead of safety and the environment, there should be consequences. https://t.co/8zQ6sQp4hz", "in_reply_to_screen_name": null, "retweet_count": 554, "favorite_count": 859, "source": "Twitter Web Client", "id_str": "646387978810560512", "is_retweet": false}, {"created_at": "Fri Oct 16 21:51:15 +0000 2015", "text": "On Oct. 16, 1916, Planned Parenthood opened their first health center and changed life for women in America. Here's to the next 99 years. -H", "in_reply_to_screen_name": null, "retweet_count": 1857, "favorite_count": 4055, "source": "Twitter Web Client", "id_str": "655138965666799616", "is_retweet": false}, {"created_at": "Tue Dec 08 20:50:57 +0000 2015", "text": "Jon Stewart returned to @TheDailyShow to stand up for a cause that a lot of New Yorkers\u2014and Americans\u2014care about: https://t.co/giLVAI6Gv2", "in_reply_to_screen_name": null, "retweet_count": 757, "favorite_count": 1693, "source": "TweetDeck", "id_str": "674330344741564416", "is_retweet": false}, {"created_at": "Sat Sep 19 22:18:20 +0000 2015", "text": "The hair\u2019s real; the color\u2019s not. Hillary\u2019s impression of Donald Trump on @FallonTonight:\nhttps://t.co/GoyE02ZrOg", "in_reply_to_screen_name": null, "retweet_count": 681, "favorite_count": 1638, "source": "Twitter Web Client", "id_str": "645361309089857536", "is_retweet": false}, {"created_at": "Fri Sep 25 12:03:17 +0000 2015", "text": "For every daughter who dreams that someday, she\u2019ll be president\u2014join #WomenforHillary: http://t.co/RQ8cDCw0GU\nhttps://t.co/2sy5o8PYDc", "in_reply_to_screen_name": null, "retweet_count": 600, "favorite_count": 1089, "source": "Twitter Web Client", "id_str": "647380851349524480", "is_retweet": false}, {"created_at": "Thu Sep 17 04:15:35 +0000 2015", "text": "#GOPdebate http://t.co/XIWFXiqfqR", "in_reply_to_screen_name": null, "retweet_count": 2252, "favorite_count": 3931, "source": "TweetDeck", "id_str": "644364048570675200", "is_retweet": false}, {"created_at": "Fri Sep 04 18:30:11 +0000 2015", "text": "Hillary sat down with @mitchellreports to talk about everything from her emails to her vision for America. Watch:\nhttps://t.co/oXOCQ9n4Lc", "in_reply_to_screen_name": null, "retweet_count": 487, "favorite_count": 779, "source": "Twitter Web Client", "id_str": "639868074619879424", "is_retweet": false}, {"created_at": "Thu Sep 17 03:29:47 +0000 2015", "text": "No, they\u2019re not talking about the GOP debate. Catch Hillary on @jimmyfallon next! http://t.co/sGp03PRv7Y", "in_reply_to_screen_name": null, "retweet_count": 661, "favorite_count": 1951, "source": "Twitter Web Client", "id_str": "644352520366768129", "is_retweet": false}, {"created_at": "Fri Oct 30 01:12:45 +0000 2015", "text": "We can\u2019t afford to have a Republican in the White House. If you're with Hillary, add your name: https://t.co/3AOKQEfdIA", "in_reply_to_screen_name": null, "retweet_count": 490, "favorite_count": 1200, "source": "TweetDeck", "id_str": "659900713091391488", "is_retweet": false}, {"created_at": "Fri May 22 21:10:04 +0000 2015", "text": "Looking good! Join @michellermanno and support #Hillary2016: http://t.co/99oSyaJ410 https://t.co/2aTbffG02e", "in_reply_to_screen_name": null, "retweet_count": 70, "favorite_count": 163, "source": "TweetDeck", "id_str": "601857582018486272", "is_retweet": false}, {"created_at": "Sun Aug 23 15:50:03 +0000 2015", "text": "Shop the HFA pop-up shop today at @bkflea! For a preview of items for sale, visit the online store: http://t.co/e8PmDiZNKQ", "in_reply_to_screen_name": null, "retweet_count": 98, "favorite_count": 230, "source": "TweetDeck", "id_str": "635479119950512128", "is_retweet": false}, {"created_at": "Tue Sep 08 13:03:09 +0000 2015", "text": "Hillary is passionate about overturning Citizens United because she knows firsthand what it\u2019s done to our democracy.\nhttps://t.co/IRFtcQ03al", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 664, "source": "Twitter Web Client", "id_str": "641235323985391618", "is_retweet": false}, {"created_at": "Sun Jul 26 19:53:29 +0000 2015", "text": "Today, we handed our account to Sara to celebrate #ADA25 and what it means for families. Read it on @Storify: http://t.co/pVPLubfxJe", "in_reply_to_screen_name": null, "retweet_count": 150, "favorite_count": 293, "source": "Twitter Web Client", "id_str": "625393522703777792", "is_retweet": false}, {"created_at": "Fri Dec 04 17:45:50 +0000 2015", "text": "Hillary's plan to repair roads, expand internet access, and create jobs is a \u201cdown payment on America\u2019s future\": https://t.co/7tK5t0Y0Fq", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 566, "source": "TweetDeck", "id_str": "672834208797212672", "is_retweet": false}, {"created_at": "Tue Nov 24 20:28:50 +0000 2015", "text": "Americans who have served their sentences deserve to have their rights restored. Thank you, Gov. Beshear. https://t.co/GhANLwE3KE", "in_reply_to_screen_name": null, "retweet_count": 1056, "favorite_count": 2188, "source": "Twitter Web Client", "id_str": "669251350216208384", "is_retweet": false}, {"created_at": "Tue May 19 13:07:18 +0000 2015", "text": "\"The president for small business\"\u2014like the sound of that. http://t.co/9prM2DmggH", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 781, "source": "Twitter Web Client", "id_str": "600648926300086273", "is_retweet": false}, {"created_at": "Fri May 08 17:59:51 +0000 2015", "text": "#FF @TheBriefing2016, your go-to place to cut through the noise and get the facts. Sign up: http://t.co/4c08Do85cE", "in_reply_to_screen_name": null, "retweet_count": 119, "favorite_count": 207, "source": "TweetDeck", "id_str": "596736281742340097", "is_retweet": false}, {"created_at": "Thu Aug 06 15:35:03 +0000 2015", "text": "On the 50th Anniversary of the Voting Rights Act, read #MyFirstVote stories from Americans across the country: http://t.co/Z1Nr11mfcz", "in_reply_to_screen_name": null, "retweet_count": 195, "favorite_count": 319, "source": "Twitter Web Client", "id_str": "629314751152136192", "is_retweet": false}, {"created_at": "Sat Oct 10 18:49:31 +0000 2015", "text": "This #WorldMentalHealthDay, let's commit to ending stigma and making sure those who seek treatment are supported and taken seriously.", "in_reply_to_screen_name": null, "retweet_count": 2997, "favorite_count": 4390, "source": "Twitter Web Client", "id_str": "652918902142431232", "is_retweet": false}, {"created_at": "Thu Jun 04 20:38:28 +0000 2015", "text": "Sign on if you agree with Hillary: We should make voting easier, not harder \u2192 http://t.co/OwtUauv61n http://t.co/Obyw1G0uBU", "in_reply_to_screen_name": null, "retweet_count": 767, "favorite_count": 943, "source": "TweetDeck", "id_str": "606560675108782080", "is_retweet": false}, {"created_at": "Sat Dec 12 15:01:16 +0000 2015", "text": "A four-decade career in public service, by the numbers: https://t.co/VHTh2H6Kjy", "in_reply_to_screen_name": null, "retweet_count": 417, "favorite_count": 908, "source": "TweetDeck", "id_str": "675691897986392064", "is_retweet": false}, {"created_at": "Fri Oct 02 21:15:36 +0000 2015", "text": "\"I am well aware that this is a political mountain to climb....I will, as your president, never relent on trying to work on this.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 508, "favorite_count": 1411, "source": "Twitter Web Client", "id_str": "650056562594172928", "is_retweet": false}, {"created_at": "Thu Oct 08 19:21:29 +0000 2015", "text": "Jeb should stop attacking voting rights and explain what about citizens exercising their right to vote scares him. https://t.co/Xtgz0wcpdl", "in_reply_to_screen_name": null, "retweet_count": 669, "favorite_count": 976, "source": "TweetDeck", "id_str": "652202170692018176", "is_retweet": false}, {"created_at": "Thu Jul 30 00:08:18 +0000 2015", "text": "Don't miss the most important updates from Hillary &amp; the campaign. Confirm you're on the official #Hillary2016 list: http://t.co/g2nbXshOrj", "in_reply_to_screen_name": null, "retweet_count": 235, "favorite_count": 440, "source": "TweetDeck", "id_str": "626544812662067200", "is_retweet": false}, {"created_at": "Wed Dec 23 13:57:22 +0000 2015", "text": "No one should live in fear because of who they are\u2014we must combat the growing crisis of violence against transgender Americans.", "in_reply_to_screen_name": null, "retweet_count": 1188, "favorite_count": 3083, "source": "Twitter for iPhone", "id_str": "679662079884836864", "is_retweet": false}, {"created_at": "Wed Jul 22 13:26:59 +0000 2015", "text": "One year ago @jrezaian was arrested in Iran. Let\u2019s continue the fight to bring home Jason &amp; others missing &amp; detained in Iran. #FreeJason -H", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 594, "source": "Twitter Web Client", "id_str": "623846703981068289", "is_retweet": false}, {"created_at": "Mon Jun 15 15:54:00 +0000 2015", "text": "\"How many of you have ever seen a butterfly?\"\u2014questions raised by The Very Hungry Caterpillar in Rochester, NH. http://t.co/1yXRgaXerO", "in_reply_to_screen_name": null, "retweet_count": 273, "favorite_count": 741, "source": "TweetDeck", "id_str": "610475351408529408", "is_retweet": false}, {"created_at": "Fri Oct 02 21:08:54 +0000 2015", "text": "\"We don't just need to pray...We need to act...Republicans and the NRA say, now is not the time to talk about guns. Yes, it is.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 1764, "favorite_count": 3063, "source": "Twitter Web Client", "id_str": "650054874068058112", "is_retweet": false}, {"created_at": "Sun Aug 02 20:43:50 +0000 2015", "text": "Three cheers for all the athletes who competed at the @SpecialOlympics this week\u2014your spirit and determination inspire us all! #LA2015", "in_reply_to_screen_name": null, "retweet_count": 438, "favorite_count": 1173, "source": "Twitter for iPhone", "id_str": "627942909367709696", "is_retweet": false}, {"created_at": "Mon Jul 06 18:19:40 +0000 2015", "text": "Hillary and 3-year-old Louisa in Hanover, NH this weekend. http://t.co/tB5JmEYkKO", "in_reply_to_screen_name": null, "retweet_count": 277, "favorite_count": 687, "source": "TweetDeck", "id_str": "618122155109302272", "is_retweet": false}, {"created_at": "Thu May 14 17:51:49 +0000 2015", "text": "Want to do more to support #Hillary2016? You're in luck: http://t.co/oEtVc1EUrA http://t.co/DaUvqxmUhi", "in_reply_to_screen_name": null, "retweet_count": 145, "favorite_count": 324, "source": "TweetDeck", "id_str": "598908588325744640", "is_retweet": false}, {"created_at": "Tue Oct 27 19:34:31 +0000 2015", "text": "Humorous! https://t.co/3zbyqTIn0O", "in_reply_to_screen_name": null, "retweet_count": 2019, "favorite_count": 3124, "source": "TweetDeck", "id_str": "659090821841580032", "is_retweet": false}, {"created_at": "Tue Sep 22 20:17:07 +0000 2015", "text": "Hillary's prescription plan would cap out-of-pocket costs at $250 per month. What would you do with your savings? http://t.co/bTIkVKAdkl", "in_reply_to_screen_name": null, "retweet_count": 510, "favorite_count": 955, "source": "TweetDeck", "id_str": "646417965529698305", "is_retweet": false}, {"created_at": "Sun Apr 12 20:28:16 +0000 2015", "text": "Estoy postul\u00e1ndome para presidente. Todos los estadounidenses necesitan un defensor. Yo quiero ser ese defensor. \u2013H http://t.co/MnnmLkYqLd", "in_reply_to_screen_name": null, "retweet_count": 5484, "favorite_count": 5299, "source": "Twitter Web Client", "id_str": "587351550328188928", "is_retweet": false}, {"created_at": "Tue Jul 28 18:01:26 +0000 2015", "text": "Fighting #climatechange is critical to protecting our environment, powering our economy &amp; safeguarding our country. http://t.co/WUClDwLhb2", "in_reply_to_screen_name": null, "retweet_count": 415, "favorite_count": 605, "source": "Twitter Web Client", "id_str": "626090100909285376", "is_retweet": false}, {"created_at": "Mon Oct 05 14:54:09 +0000 2015", "text": "\"It\u2019s time for us to say, wait a minute. We\u2019re better than this. Our country is better than this.\" \u2014Hillary on gun violence", "in_reply_to_screen_name": null, "retweet_count": 583, "favorite_count": 1206, "source": "TweetDeck", "id_str": "651047728903008256", "is_retweet": false}, {"created_at": "Mon Nov 23 16:54:00 +0000 2015", "text": "This feminist dad is making sure nothing stands in the way of his daughters\u2019 success. Read his letter to them: https://t.co/yOzWVnQVgW", "in_reply_to_screen_name": null, "retweet_count": 310, "favorite_count": 661, "source": "TweetDeck", "id_str": "668834899189743617", "is_retweet": false}, {"created_at": "Wed Aug 05 23:28:39 +0000 2015", "text": "Tomorrow is the 50th Anniversary of the Voting Rights Act\u2014what does the right to vote mean to you? Share your story with #VRA50.", "in_reply_to_screen_name": null, "retweet_count": 351, "favorite_count": 729, "source": "Twitter Web Client", "id_str": "629071549291741184", "is_retweet": false}, {"created_at": "Fri Jul 24 17:18:10 +0000 2015", "text": "Preview: How quarterly capitalism is hurting our long-term economic growth\u2014and what Hillary plans to do about it. http://t.co/kBaU5Ve5Tc", "in_reply_to_screen_name": null, "retweet_count": 148, "favorite_count": 210, "source": "TweetDeck", "id_str": "624629657414070273", "is_retweet": false}, {"created_at": "Wed Dec 16 17:28:29 +0000 2015", "text": "Shallow slogans and chest-beating don\u2019t add up to a strategy for defeating terrorism and keeping America safe. https://t.co/9V7kAB7qqc", "in_reply_to_screen_name": null, "retweet_count": 1216, "favorite_count": 2072, "source": "TweetDeck", "id_str": "677178495286538240", "is_retweet": false}, {"created_at": "Tue Dec 15 16:20:52 +0000 2015", "text": "Smart power: \u201cThere was nobody better at wielding it than Secretary Clinton.\u201d \u2014@Madeleine Albright\nhttps://t.co/jL03rVXQrV", "in_reply_to_screen_name": null, "retweet_count": 419, "favorite_count": 841, "source": "Twitter Web Client", "id_str": "676799093901950976", "is_retweet": false}, {"created_at": "Mon Jun 08 01:22:38 +0000 2015", "text": "Be part of this team. Sign up to join the official #Hillary2016 list: http://t.co/lrlurWKrU5 http://t.co/vJrzI2lhOC", "in_reply_to_screen_name": null, "retweet_count": 298, "favorite_count": 607, "source": "Twitter Web Client", "id_str": "607719349827334144", "is_retweet": false}, {"created_at": "Fri Dec 25 14:14:40 +0000 2015", "text": "Merry Christmas! https://t.co/4zHejEP1ho", "in_reply_to_screen_name": null, "retweet_count": 1396, "favorite_count": 5604, "source": "Twitter Web Client", "id_str": "680391210146598912", "is_retweet": false}, {"created_at": "Mon Apr 20 13:19:16 +0000 2015", "text": "Hillary's campaign kick-off trip to Iowa, in 100 seconds: https://t.co/w4WlLFMbf2", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 624, "source": "Twitter Web Client", "id_str": "590142692811743232", "is_retweet": false}, {"created_at": "Tue Oct 06 23:13:20 +0000 2015", "text": "We must act to stop gun violence, and we cannot wait any longer. http://t.co/3Qiew1BXiU", "in_reply_to_screen_name": null, "retweet_count": 596, "favorite_count": 1147, "source": "TweetDeck", "id_str": "651535742099935232", "is_retweet": false}, {"created_at": "Wed May 20 11:57:48 +0000 2015", "text": "If you could tell Hillary why you're on her team, what would you say? http://t.co/G7Zd3GmmdF", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 556, "source": "TweetDeck", "id_str": "600993824836562944", "is_retweet": false}, {"created_at": "Fri Aug 28 18:04:49 +0000 2015", "text": "What Republicans are saying about women may be red meat in a GOP primary\u2014but it's wrong in 21st-century America.\nhttps://t.co/SrQVhKJVoq", "in_reply_to_screen_name": null, "retweet_count": 1127, "favorite_count": 1785, "source": "Twitter Web Client", "id_str": "637324973359546368", "is_retweet": false}, {"created_at": "Wed Aug 12 22:18:05 +0000 2015", "text": "The Affordable Care Act is working. That's why we're going to defend it. http://t.co/eZ4j6R43SR http://t.co/Y3hQqZiGd0", "in_reply_to_screen_name": null, "retweet_count": 582, "favorite_count": 1002, "source": "TweetDeck", "id_str": "631590504128512001", "is_retweet": false}, {"created_at": "Thu Nov 26 23:07:12 +0000 2015", "text": "\"She has a light and energy about her that makes you want to be your best.\" @OITNB\u2019s @UzoAduba and Dascha Polanco\nhttps://t.co/0lJJOAxDZ4", "in_reply_to_screen_name": null, "retweet_count": 362, "favorite_count": 843, "source": "Twitter Web Client", "id_str": "670015978139316224", "is_retweet": false}, {"created_at": "Mon Jul 13 14:38:15 +0000 2015", "text": "\"The third key driver of income gains alongside strong growth and fair growth must be long-term growth.\" http://t.co/3wz5pKFic7", "in_reply_to_screen_name": null, "retweet_count": 224, "favorite_count": 321, "source": "TweetDeck", "id_str": "620603147187171328", "is_retweet": false}, {"created_at": "Fri Aug 07 13:24:09 +0000 2015", "text": "\"Everything is going to change now.\" Read more #MyFirstVote stories on @tumblr &amp; add your own: http://t.co/Z1Nr11mfcz http://t.co/Ingq3iDUYg", "in_reply_to_screen_name": null, "retweet_count": 263, "favorite_count": 688, "source": "Twitter Web Client", "id_str": "629644196492783616", "is_retweet": false}, {"created_at": "Sat Jun 13 16:37:00 +0000 2015", "text": "A lesson from Hillary's mom: \"Life's not about what happens to you. It's about what you do with what happens to you\u2014so get back out there.\"", "in_reply_to_screen_name": null, "retweet_count": 1191, "favorite_count": 1553, "source": "Twitter Web Client", "id_str": "609761398831321089", "is_retweet": false}, {"created_at": "Tue Aug 11 19:09:55 +0000 2015", "text": "We need to rein in how much higher education costs\u200a. It\u2019s time for a new college compact that makes education available to all. -H", "in_reply_to_screen_name": null, "retweet_count": 568, "favorite_count": 1147, "source": "TweetDeck", "id_str": "631180761748643840", "is_retweet": false}, {"created_at": "Sat Oct 17 21:03:14 +0000 2015", "text": "As President, Hillary will take on the epidemic of gun violence\u2014with or without Congress\u2019s help. http://t.co/WCzGOEa3Uy", "in_reply_to_screen_name": null, "retweet_count": 599, "favorite_count": 1203, "source": "Twitter Web Client", "id_str": "655489268563996674", "is_retweet": false}, {"created_at": "Sun Aug 02 18:44:39 +0000 2015", "text": "http://t.co/itkbQHFiF7", "in_reply_to_screen_name": null, "retweet_count": 635, "favorite_count": 1170, "source": "TweetDeck", "id_str": "627912915597791232", "is_retweet": false}, {"created_at": "Tue Nov 17 00:48:03 +0000 2015", "text": "We asked Senator @clairecmc what a Republican president would mean for women. https://t.co/GgyrAUavZp https://t.co/EZsDjxLVtv", "in_reply_to_screen_name": null, "retweet_count": 697, "favorite_count": 1460, "source": "TweetDeck", "id_str": "666417479040782336", "is_retweet": false}, {"created_at": "Fri Dec 04 01:06:26 +0000 2015", "text": "Love this message from @goldieblox: From running the field to running the world, girls can do anything. https://t.co/JIiQ2TkqaI #ShesWorthIt", "in_reply_to_screen_name": null, "retweet_count": 420, "favorite_count": 957, "source": "Twitter for iPhone", "id_str": "672582699454996480", "is_retweet": false}, {"created_at": "Thu Apr 16 19:54:08 +0000 2015", "text": "There\u2019s still time to become a founding donor of #Hillary2016: http://t.co/ELRjTdWYNT", "in_reply_to_screen_name": null, "retweet_count": 282, "favorite_count": 504, "source": "Twitter Web Client", "id_str": "588792511134568449", "is_retweet": false}, {"created_at": "Mon Sep 07 14:15:37 +0000 2015", "text": "Safer working conditions, weekends, higher wages, a stronger middle class: all brought to you by the US labor movement. Happy Labor Day! -H", "in_reply_to_screen_name": null, "retweet_count": 985, "favorite_count": 1774, "source": "Twitter for iPhone", "id_str": "640891174295896064", "is_retweet": false}, {"created_at": "Thu Jun 25 02:45:49 +0000 2015", "text": "Dinner. With Hillary. Yes, that Hillary. Enter for your spot at the table: \u2192 http://t.co/TQszKfgaeJ http://t.co/pEwjGB93uK", "in_reply_to_screen_name": null, "retweet_count": 182, "favorite_count": 448, "source": "Twitter Web Client", "id_str": "613900878274240512", "is_retweet": false}, {"created_at": "Wed Sep 16 15:13:41 +0000 2015", "text": "Assumptions and fear don't keep us safe\u2014they hold us back. Ahmed, stay curious and keep building. https://t.co/ywrlHUw3g1", "in_reply_to_screen_name": null, "retweet_count": 15704, "favorite_count": 15907, "source": "TweetDeck", "id_str": "644167278196600832", "is_retweet": false}, {"created_at": "Wed Dec 16 02:35:46 +0000 2015", "text": "We cannot let the Republicans win the White House. Text 2016 to 47246 if you agree. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 633, "favorite_count": 1775, "source": "TweetDeck", "id_str": "676953837530390533", "is_retweet": false}, {"created_at": "Wed Aug 12 01:40:27 +0000 2015", "text": "What do you think should be the next #Hillary2016 bumper sticker? Vote for your favorite: http://t.co/k4csUNaRff http://t.co/AvY5Evllrr", "in_reply_to_screen_name": null, "retweet_count": 188, "favorite_count": 390, "source": "Twitter Web Client", "id_str": "631279044584177664", "is_retweet": false}, {"created_at": "Wed Dec 16 03:09:58 +0000 2015", "text": "A reminder of what a presidential candidate with real foreign policy experience looks like \u2b07\ufe0f #GOPdebate  https://t.co/RXgWWKl5wb", "in_reply_to_screen_name": null, "retweet_count": 563, "favorite_count": 1144, "source": "TweetDeck", "id_str": "676962445232091136", "is_retweet": false}, {"created_at": "Fri Aug 07 01:25:10 +0000 2015", "text": "Fixing our immigration system will strengthen families, our economy, and our country. http://t.co/z3h3ho4fZZ http://t.co/oRF5b3ROSR", "in_reply_to_screen_name": null, "retweet_count": 671, "favorite_count": 1292, "source": "Twitter Web Client", "id_str": "629463259217817601", "is_retweet": false}, {"created_at": "Fri Jul 17 02:18:05 +0000 2015", "text": "Today in NH, Hillary called on companies to share profits with workers\u2014giving all employees a stake in success. http://t.co/61okIwyYKg", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 543, "source": "Twitter Web Client", "id_str": "621866432104636416", "is_retweet": false}, {"created_at": "Fri Jul 31 13:18:34 +0000 2015", "text": "\"Race still plays a significant role in determining who gets ahead in America and who gets left behind.\" \u2014Hillary today at @NatUrbanLeague", "in_reply_to_screen_name": null, "retweet_count": 613, "favorite_count": 838, "source": "Twitter Web Client", "id_str": "627106077423861760", "is_retweet": false}, {"created_at": "Sat Oct 31 18:07:28 +0000 2015", "text": "Republican debate-speak, decoded. https://t.co/vQwkoDt11x", "in_reply_to_screen_name": null, "retweet_count": 230, "favorite_count": 410, "source": "Twitter Web Client", "id_str": "660518464910721025", "is_retweet": false}, {"created_at": "Tue Oct 20 22:28:28 +0000 2015", "text": "As secretary of state, Hillary led the international negotiations that paved the way for the Iran Deal. https://t.co/CxYa9zurSv", "in_reply_to_screen_name": null, "retweet_count": 260, "favorite_count": 517, "source": "TweetDeck", "id_str": "656597881286033408", "is_retweet": false}, {"created_at": "Wed Apr 29 13:23:42 +0000 2015", "text": "Congrats, @JohnKerry, on the 2nd #QDDR &amp; honing diplomacy &amp; development as core pillars of power along w/ defense. \u2013H http://t.co/9rSZ79BPI1", "in_reply_to_screen_name": null, "retweet_count": 193, "favorite_count": 428, "source": "Twitter Web Client", "id_str": "593405296766230528", "is_retweet": false}, {"created_at": "Tue Sep 01 21:44:54 +0000 2015", "text": "Why is @GovHowardDean on Team Hillary? Her sense of justice, smart policies, and commitment to middle-class workers. http://t.co/1hx6ubnw1q", "in_reply_to_screen_name": null, "retweet_count": 327, "favorite_count": 526, "source": "TweetDeck", "id_str": "638829909754834945", "is_retweet": false}, {"created_at": "Wed Nov 18 21:02:10 +0000 2015", "text": "Born on this day in 1945, Wilma Mankiller was the first woman elected chief of the @CherokeeNation. https://t.co/vC9XOeM6y5", "in_reply_to_screen_name": null, "retweet_count": 765, "favorite_count": 1466, "source": "TweetDeck", "id_str": "667085410884067328", "is_retweet": false}, {"created_at": "Fri Sep 18 19:53:08 +0000 2015", "text": "On selfies, gefilte fish, and of course, Donald Trump, with @jimmyfallon. http://t.co/snnSSlVckr", "in_reply_to_screen_name": null, "retweet_count": 344, "favorite_count": 798, "source": "TweetDeck", "id_str": "644962377218301952", "is_retweet": false}, {"created_at": "Tue Dec 22 17:11:28 +0000 2015", "text": "A Republican president could nominate as many as 4 Supreme Court justices. Why that should terrify you: https://t.co/gaRy4MSDzo", "in_reply_to_screen_name": null, "retweet_count": 1284, "favorite_count": 1574, "source": "TweetDeck", "id_str": "679348542721380352", "is_retweet": false}, {"created_at": "Sat Jun 13 16:36:53 +0000 2015", "text": "http://t.co/S3xmUndSki", "in_reply_to_screen_name": null, "retweet_count": 571, "favorite_count": 1073, "source": "Twitter Web Client", "id_str": "609761369563512832", "is_retweet": false}, {"created_at": "Sat Sep 05 16:01:41 +0000 2015", "text": "20 years ago today, Hillary stood up for women's rights worldwide. What do her words mean to you? Share with @Genius: http://t.co/fATVWyrBkw", "in_reply_to_screen_name": null, "retweet_count": 263, "favorite_count": 531, "source": "Twitter Web Client", "id_str": "640193090083491840", "is_retweet": false}, {"created_at": "Fri Oct 30 21:54:12 +0000 2015", "text": "Add your name for the chance to party with Hillary at @xtina's house in Los Angeles! https://t.co/XVf5cqQxpl https://t.co/PBY52r7Xpo", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 807, "source": "TweetDeck", "id_str": "660213135169757185", "is_retweet": false}, {"created_at": "Mon Nov 09 23:25:11 +0000 2015", "text": "\u201cWhen things get tough, Hillary does not back down.\u201d \u2014@repjohnlewis https://t.co/6jqrRIvBC4", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 730, "source": "TweetDeck", "id_str": "663859913643298816", "is_retweet": false}, {"created_at": "Mon Oct 26 23:49:50 +0000 2015", "text": "Well done, Ole Miss. Symbols of hate have no business flying over a place of learning. -H https://t.co/t3WL4pJcjV", "in_reply_to_screen_name": null, "retweet_count": 1546, "favorite_count": 2959, "source": "TweetDeck", "id_str": "658792683620708352", "is_retweet": false}, {"created_at": "Mon Apr 20 18:47:54 +0000 2015", "text": "Getting ready to order at Kristin's Bistro &amp; Bakery in Keene, New Hampshire\u2014first stop in the Granite State! http://t.co/VLVW79C7zm", "in_reply_to_screen_name": null, "retweet_count": 379, "favorite_count": 983, "source": "Twitter Web Client", "id_str": "590225393791148032", "is_retweet": false}, {"created_at": "Wed Apr 29 14:14:27 +0000 2015", "text": "We should make sure every police department in the country has body cameras to record interactions between officers on patrol and suspects.", "in_reply_to_screen_name": null, "retweet_count": 1481, "favorite_count": 2720, "source": "Twitter Web Client", "id_str": "593418068224778240", "is_retweet": false}, {"created_at": "Thu Dec 24 00:20:20 +0000 2015", "text": "A win for voting rights in Virginia. No one should have to wait hours to exercise their right to vote. https://t.co/JQ0tJXl7OZ", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 1150, "source": "TweetDeck", "id_str": "679818857649942528", "is_retweet": false}, {"created_at": "Thu Aug 27 23:52:03 +0000 2015", "text": "Tome el quiz para ver c\u00f3mo el plan de Hillary te bajar\u00eda los costos de la universidad. Textea UNIVERSIDAD a 47246. http://t.co/eNaE56diCf", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 328, "source": "TweetDeck", "id_str": "637049970105806849", "is_retweet": false}, {"created_at": "Wed Dec 16 02:14:47 +0000 2015", "text": "We're not at war with a religion. We're at war with radical jihadism. Hillary knows the difference. #GOPdebate https://t.co/UpP9wASGoq", "in_reply_to_screen_name": null, "retweet_count": 1557, "favorite_count": 3279, "source": "TweetDeck", "id_str": "676948556213809152", "is_retweet": false}, {"created_at": "Thu Oct 15 18:20:52 +0000 2015", "text": "\u201cI'm running for president to protect our families and communities from the plague of gun violence.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 970, "source": "TweetDeck", "id_str": "654723632271265792", "is_retweet": false}, {"created_at": "Thu Sep 17 02:19:07 +0000 2015", "text": "Fingers crossed we're getting close to the part when they talk about things they're for\u2014instead of against. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 3023, "favorite_count": 6358, "source": "Twitter Web Client", "id_str": "644334738220679168", "is_retweet": false}, {"created_at": "Tue Oct 06 20:55:02 +0000 2015", "text": "Hillary\u2019s commonsense steps will help reduce gun violence and save lives, say @GabbyGiffords and @ShuttleCDRKelly. http://t.co/Q6kczch6Cy", "in_reply_to_screen_name": null, "retweet_count": 621, "favorite_count": 992, "source": "TweetDeck", "id_str": "651500938943967232", "is_retweet": false}, {"created_at": "Sun Aug 09 21:49:08 +0000 2015", "text": "From Beijing to Brooklyn (with plenty of stops in between)\u2014follow some of Hillary's memorable moments on @Pinterest: http://t.co/cLwTvurEZ6", "in_reply_to_screen_name": null, "retweet_count": 204, "favorite_count": 522, "source": "Twitter Web Client", "id_str": "630496058255273984", "is_retweet": false}, {"created_at": "Tue Dec 08 02:46:27 +0000 2015", "text": "\"Americans now have to move from fear to resolve.\" Hillary on her plan to defeat ISIS: https://t.co/MKd1pM2rmU", "in_reply_to_screen_name": null, "retweet_count": 611, "favorite_count": 1319, "source": "TweetDeck", "id_str": "674057421225123841", "is_retweet": false}, {"created_at": "Sat Dec 12 23:31:53 +0000 2015", "text": "\"Too many people think that the fight for LGBT rights ended with marriage equality.\" \u2014@jimobergefell https://t.co/aaWvSLsH8l", "in_reply_to_screen_name": null, "retweet_count": 506, "favorite_count": 1096, "source": "TweetDeck", "id_str": "675820398450200576", "is_retweet": false}, {"created_at": "Fri Apr 24 16:48:29 +0000 2015", "text": "RT if you agree with Hillary on women. http://t.co/1Cgogzw9l4", "in_reply_to_screen_name": null, "retweet_count": 3346, "favorite_count": 3164, "source": "Twitter Web Client", "id_str": "591644894768324609", "is_retweet": false}, {"created_at": "Tue Jun 30 17:21:36 +0000 2015", "text": "Inscr\u00edbete para ganar una cena con Hillary. \u2192 http://t.co/GCNjjOPrOG http://t.co/0CIAMFP081", "in_reply_to_screen_name": null, "retweet_count": 152, "favorite_count": 271, "source": "Twitter Web Client", "id_str": "615933212842434560", "is_retweet": false}, {"created_at": "Fri Aug 28 21:58:50 +0000 2015", "text": "\"I want to let you know that as your president, I will first and foremost be a champion for our children.\"\u2014Hillary http://t.co/7mRxiFXQRl", "in_reply_to_screen_name": null, "retweet_count": 752, "favorite_count": 1820, "source": "TweetDeck", "id_str": "637383865028472833", "is_retweet": false}, {"created_at": "Thu Nov 19 15:57:14 +0000 2015", "text": "\"Let\u2019s be clear: Islam is not our adversary. Muslims are peaceful and tolerant people and have nothing whatsoever to do with terrorism.\"", "in_reply_to_screen_name": null, "retweet_count": 9845, "favorite_count": 7771, "source": "TweetDeck", "id_str": "667371059885301761", "is_retweet": false}, {"created_at": "Mon Oct 26 17:07:48 +0000 2015", "text": "Quick questions with Hillary: What family memories still make you laugh?\nhttps://t.co/5dm5GOWmHE", "in_reply_to_screen_name": null, "retweet_count": 326, "favorite_count": 786, "source": "Twitter Web Client", "id_str": "658691510121074688", "is_retweet": false}, {"created_at": "Wed Jul 29 02:01:56 +0000 2015", "text": "As part of her plan to meet the climate challenge &amp; make the US a clean energy superpower, Hillary's setting 2 goals\nhttps://t.co/uqjEbdJ18G", "in_reply_to_screen_name": null, "retweet_count": 363, "favorite_count": 532, "source": "Twitter Web Client", "id_str": "626211023037435905", "is_retweet": false}, {"created_at": "Sun Dec 13 19:08:23 +0000 2015", "text": "Text THROWBACK to 47246 to receive a never-before-seen photo of Hillary: https://t.co/3BNuwl5VTa https://t.co/f09faIL7oL", "in_reply_to_screen_name": null, "retweet_count": 491, "favorite_count": 1733, "source": "TweetDeck", "id_str": "676116471089643520", "is_retweet": false}, {"created_at": "Mon Dec 28 14:04:47 +0000 2015", "text": "We have to do more to support people with Alzheimer's, and the families that care for them. https://t.co/LoKf548GTz https://t.co/qtKGsgq3KG", "in_reply_to_screen_name": null, "retweet_count": 774, "favorite_count": 1728, "source": "TweetDeck", "id_str": "681475888974807041", "is_retweet": false}, {"created_at": "Fri Aug 21 12:13:58 +0000 2015", "text": "From a former @TheJusticeDept official: \u201cOur ridiculous classification rules\u201d are the real problem: http://t.co/zdsAki3KG9", "in_reply_to_screen_name": null, "retweet_count": 289, "favorite_count": 397, "source": "Twitter Web Client", "id_str": "634699965193957376", "is_retweet": false}, {"created_at": "Sun Dec 20 03:09:34 +0000 2015", "text": "Ning\u00fan estudiante deber\u00eda pedir un pr\u00e9stamo para pagar su colegiatura. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 429, "favorite_count": 663, "source": "TweetDeck", "id_str": "678411894970019840", "is_retweet": false}, {"created_at": "Fri May 22 23:01:07 +0000 2015", "text": "You never know who you'll meet as a #Hillary2016 volunteer! http://t.co/L1WERRXHqe\nhttps://t.co/alvaOjzD39", "in_reply_to_screen_name": null, "retweet_count": 276, "favorite_count": 600, "source": "Twitter Web Client", "id_str": "601885531551629312", "is_retweet": false}, {"created_at": "Sat Mar 07 21:25:31 +0000 2015", "text": "Watched @repjohnlewis &amp; @BarackObama in #Selma. Let\u2019s answer their call to keep fighting for voting rights, civil rights, &amp; human rights.", "in_reply_to_screen_name": null, "retweet_count": 2070, "favorite_count": 3506, "source": "Twitter Web Client", "id_str": "574319994495987712", "is_retweet": false}, {"created_at": "Fri Sep 11 01:11:06 +0000 2015", "text": "Five-year-old Macey tells Hillary about her presidential aspirations backstage at @TheEllenShow:\nhttps://t.co/DMu8d6YAbK", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 1520, "source": "Twitter Web Client", "id_str": "642143296496648193", "is_retweet": false}, {"created_at": "Thu Apr 16 01:23:39 +0000 2015", "text": "Every American deserves a fair shot at success. Fast food &amp; child care workers shouldn't have to march in streets for living wages. -H", "in_reply_to_screen_name": null, "retweet_count": 2945, "favorite_count": 4917, "source": "Twitter for iPhone", "id_str": "588513047653801984", "is_retweet": false}, {"created_at": "Fri Oct 23 22:44:29 +0000 2015", "text": "11 hours. One candidate who showed she\u2019s ready to be president. https://t.co/C48a403ei0", "in_reply_to_screen_name": null, "retweet_count": 1610, "favorite_count": 3802, "source": "Twitter Web Client", "id_str": "657689074740940800", "is_retweet": false}, {"created_at": "Sun Aug 30 17:24:27 +0000 2015", "text": "http://t.co/pnVyoZkiLg", "in_reply_to_screen_name": null, "retweet_count": 869, "favorite_count": 1551, "source": "Twitter Web Client", "id_str": "638039590591438849", "is_retweet": false}, {"created_at": "Fri Jun 12 23:25:58 +0000 2015", "text": "Watching the #Hillary2016 launch via livestream tomorrow? Follow here for infographics, personal stories, and more. http://t.co/8Vhuss0wrR", "in_reply_to_screen_name": null, "retweet_count": 219, "favorite_count": 327, "source": "TweetDeck", "id_str": "609501928041660416", "is_retweet": false}, {"created_at": "Thu Oct 29 01:11:20 +0000 2015", "text": "Here's what we can't afford: A Republican in the White House. https://t.co/d5zyMz7NgY #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 745, "favorite_count": 1384, "source": "TweetDeck", "id_str": "659537970962309120", "is_retweet": false}, {"created_at": "Mon Aug 10 19:52:07 +0000 2015", "text": "Everyone needs to step up to make education more affordable. Hillary's plan: http://t.co/A4pWb3fOf4 #MillennialMon https://t.co/29oDhkQthk", "in_reply_to_screen_name": null, "retweet_count": 293, "favorite_count": 445, "source": "TweetDeck", "id_str": "630828994020179968", "is_retweet": false}, {"created_at": "Sun Dec 20 03:41:04 +0000 2015", "text": "Here's a First Lady dealing with China. #DemDebate https://t.co/tfanZIEVN5", "in_reply_to_screen_name": null, "retweet_count": 1841, "favorite_count": 3403, "source": "TweetDeck", "id_str": "678419819377594369", "is_retweet": false}, {"created_at": "Wed Apr 29 13:34:13 +0000 2015", "text": "Hillary on reforming our criminal justice system, rebuilding respect, and embracing our common humanity: http://t.co/dzZObrGSFg", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 749, "source": "Twitter for iPhone", "id_str": "593407943195889665", "is_retweet": false}, {"created_at": "Sat Sep 05 20:37:30 +0000 2015", "text": "\"I chose Hillary because I know her and I trust her. She is a voice for the voiceless.\" \u2013 @JeanneShaheen in NH http://t.co/ObGx7TnApu", "in_reply_to_screen_name": null, "retweet_count": 540, "favorite_count": 1123, "source": "Twitter Web Client", "id_str": "640262501226127360", "is_retweet": false}, {"created_at": "Fri Dec 18 18:55:39 +0000 2015", "text": "We are Americans. We will not turn on each other or our principles. https://t.co/GuV0aEfhRr", "in_reply_to_screen_name": null, "retweet_count": 652, "favorite_count": 1308, "source": "TweetDeck", "id_str": "677925206590115840", "is_retweet": false}, {"created_at": "Thu May 07 19:20:33 +0000 2015", "text": "Congress should move ahead now with the USA Freedom Act\u2014a good step forward in ongoing efforts to protect our security &amp; civil liberties. -H", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 639, "source": "Twitter Web Client", "id_str": "596394202675675136", "is_retweet": false}, {"created_at": "Thu Apr 30 17:06:23 +0000 2015", "text": "Show off your #Hillary2016 pride with a free sticker: http://t.co/vqDZpgFeyK http://t.co/WWrkkxJfz7", "in_reply_to_screen_name": null, "retweet_count": 396, "favorite_count": 720, "source": "Twitter Web Client", "id_str": "593823723553161216", "is_retweet": false}, {"created_at": "Mon Dec 28 18:53:10 +0000 2015", "text": "Parades and yellow ribbons aren't enough. Our veterans deserve world-class health care, benefits, and opportunities. https://t.co/5MYThiZXEn", "in_reply_to_screen_name": null, "retweet_count": 737, "favorite_count": 1578, "source": "TweetDeck", "id_str": "681548459678253060", "is_retweet": false}, {"created_at": "Fri Jul 10 14:46:38 +0000 2015", "text": "Thanks to @POTUS, America the beautiful will stay beautiful. Introducing the three newest national monuments: http://t.co/Usiiee94sW", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 881, "source": "TweetDeck", "id_str": "619518095867125761", "is_retweet": false}, {"created_at": "Tue Sep 08 23:51:34 +0000 2015", "text": "Had so much fun at @theellenshow today. Tune in on Thursday! https://t.co/GSJXlaWDMM", "in_reply_to_screen_name": null, "retweet_count": 727, "favorite_count": 2062, "source": "TweetDeck", "id_str": "641398505173557249", "is_retweet": false}, {"created_at": "Wed Jun 03 20:58:27 +0000 2015", "text": "Grandmothers for Hillary. http://t.co/VVuZHUdS8M", "in_reply_to_screen_name": null, "retweet_count": 229, "favorite_count": 650, "source": "TweetDeck", "id_str": "606203314196348928", "is_retweet": false}, {"created_at": "Sat Aug 29 17:56:04 +0000 2015", "text": "101-year-old Jerry\u2014born before women had the vote\u2014joined @TheDemocrats in Minneapolis yesterday for Hillary\u2019s speech. http://t.co/kd2DnSiMWA", "in_reply_to_screen_name": null, "retweet_count": 905, "favorite_count": 2231, "source": "Twitter Web Client", "id_str": "637685161639964673", "is_retweet": false}, {"created_at": "Thu Oct 01 13:15:59 +0000 2015", "text": "The United States is the only country in the developed world without guaranteed paid leave. That has to change. http://t.co/qafJ7MrTRi", "in_reply_to_screen_name": null, "retweet_count": 738, "favorite_count": 1304, "source": "Twitter for iPhone", "id_str": "649573475645005827", "is_retweet": false}, {"created_at": "Wed Dec 09 00:59:03 +0000 2015", "text": "El pueblo Venezolano ha hablado. #Venezuela https://t.co/8TtdHzcSyU", "in_reply_to_screen_name": null, "retweet_count": 802, "favorite_count": 768, "source": "TweetDeck", "id_str": "674392782933364736", "is_retweet": false}, {"created_at": "Tue Nov 24 17:16:44 +0000 2015", "text": "\u00a1Hillary is doing a Q&amp;A on the @TelemundoNews Facebook page en vivo! Join the conversation: https://t.co/ZWQKNlI2kT", "in_reply_to_screen_name": null, "retweet_count": 171, "favorite_count": 403, "source": "Twitter Web Client", "id_str": "669203008169881600", "is_retweet": false}, {"created_at": "Wed Sep 16 01:12:10 +0000 2015", "text": "Encouraging news. We should make it easier to vote in every state. https://t.co/gnqbXAaMOo", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 795, "source": "TweetDeck", "id_str": "643955500506345472", "is_retweet": false}, {"created_at": "Tue Sep 29 15:56:46 +0000 2015", "text": "Excited to be part of @lennyletter's first issue! Read Hillary's interview with @lenadunham: http://t.co/MTOp7YMZ1S http://t.co/UcrkdYZFYv", "in_reply_to_screen_name": null, "retweet_count": 385, "favorite_count": 764, "source": "Twitter Web Client", "id_str": "648889162440015872", "is_retweet": false}, {"created_at": "Tue Sep 01 12:05:19 +0000 2015", "text": "In 1995, Hillary led the US delegation to the UN Women\u2019s Conference, despite opposition. #Beijing20\nhttps://t.co/FdV4cO6MYx", "in_reply_to_screen_name": null, "retweet_count": 469, "favorite_count": 772, "source": "Twitter Web Client", "id_str": "638684054838075392", "is_retweet": false}, {"created_at": "Wed May 20 14:46:59 +0000 2015", "text": "What Hillary's reading: A timely reminder of why we need to remove barriers and empower small business growth. http://t.co/MMWa9KEA4B", "in_reply_to_screen_name": null, "retweet_count": 121, "favorite_count": 212, "source": "TweetDeck", "id_str": "601036402256650242", "is_retweet": false}, {"created_at": "Tue Dec 15 22:24:15 +0000 2015", "text": "\"It defies common sense that Republicans in Congress refuse to make it harder for potential terrorists to buy guns.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 536, "favorite_count": 1091, "source": "TweetDeck", "id_str": "676890541796249600", "is_retweet": false}, {"created_at": "Sat Sep 19 16:18:26 +0000 2015", "text": "Post-speech dance break at the New Hampshire Democratic Party State Convention. (via @ABCLiz) #603forHRC http://t.co/OTUwgrbXv1", "in_reply_to_screen_name": null, "retweet_count": 683, "favorite_count": 1306, "source": "TweetDeck", "id_str": "645270736467308544", "is_retweet": false}, {"created_at": "Thu Jun 04 20:37:27 +0000 2015", "text": "\"Today we refuse...to allow our country and this generation of leaders to slow or reverse America\u2019s long march toward a more perfect union.\"", "in_reply_to_screen_name": null, "retweet_count": 282, "favorite_count": 552, "source": "Twitter Web Client", "id_str": "606560419277238273", "is_retweet": false}, {"created_at": "Tue Oct 13 22:19:17 +0000 2015", "text": "Hillary doesn\u2019t give up and she'll never quit fighting for families\u2014but she needs your help: http://t.co/TtLbKAN2Oe\nhttps://t.co/rBrTa46vY6", "in_reply_to_screen_name": null, "retweet_count": 625, "favorite_count": 1029, "source": "Twitter Web Client", "id_str": "654058854737555456", "is_retweet": false}, {"created_at": "Tue Aug 18 02:25:32 +0000 2015", "text": "Back to school game strong. Shop the new collection: http://t.co/YFbJHEDe7i http://t.co/QL3nUO84dT", "in_reply_to_screen_name": null, "retweet_count": 236, "favorite_count": 559, "source": "Twitter Web Client", "id_str": "633464719135870977", "is_retweet": false}, {"created_at": "Tue Aug 04 16:17:07 +0000 2015", "text": "\"If we want a competitive future for our kids, they have to be better prepared when they walk into kindergarten.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 538, "favorite_count": 1026, "source": "Twitter Web Client", "id_str": "628600562926374913", "is_retweet": false}, {"created_at": "Thu Sep 17 01:17:30 +0000 2015", "text": ".@realdonaldtrump should stop complimenting women and start respecting them. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 10460, "favorite_count": 15444, "source": "Twitter Web Client", "id_str": "644319231350321153", "is_retweet": false}, {"created_at": "Tue Aug 25 12:03:53 +0000 2015", "text": "How do Jeb Bush and Donald Trump differ on immigration? Spoiler alert: They don't.\nhttps://t.co/dSPxK07bEC", "in_reply_to_screen_name": null, "retweet_count": 972, "favorite_count": 1162, "source": "Twitter Web Client", "id_str": "636146978297016320", "is_retweet": false}, {"created_at": "Sat Aug 08 21:19:42 +0000 2015", "text": "Rolling back rules for Wall Street won\u2019t help families get ahead.", "in_reply_to_screen_name": null, "retweet_count": 367, "favorite_count": 871, "source": "Twitter Web Client", "id_str": "630126260849672192", "is_retweet": false}, {"created_at": "Thu May 21 17:00:48 +0000 2015", "text": "We're really proud of our space because we built it together. Now, clients bring us things to add to the \"museum.\" http://t.co/0X5UGpaLPE", "in_reply_to_screen_name": null, "retweet_count": 58, "favorite_count": 178, "source": "TweetDeck", "id_str": "601432464876240896", "is_retweet": false}, {"created_at": "Wed Mar 11 19:11:48 +0000 2015", "text": "GOP letter to Iranian clerics undermines American leadership.  No one considering running for commander-in-chief should be signing on.", "in_reply_to_screen_name": null, "retweet_count": 3670, "favorite_count": 4821, "source": "Twitter for iPhone", "id_str": "575735894386216960", "is_retweet": false}, {"created_at": "Tue Jun 23 00:42:11 +0000 2015", "text": "Seams like fun. http://t.co/JWpM0j4M0z http://t.co/GYZxqQdbEu", "in_reply_to_screen_name": null, "retweet_count": 165, "favorite_count": 555, "source": "TweetDeck", "id_str": "613144990060027904", "is_retweet": false}, {"created_at": "Fri Jun 19 17:38:05 +0000 2015", "text": "\"No vet should have to wait in line for weeks or months to get the care you earned with your service.\"\u2014Hillary in NV http://t.co/tYS3ceyv3b", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 879, "source": "TweetDeck", "id_str": "611951096752435200", "is_retweet": false}, {"created_at": "Sun Nov 15 03:42:21 +0000 2015", "text": "La reforma de salud es demasiado importante para ser revocada. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 248, "favorite_count": 462, "source": "Twitter Web Client", "id_str": "665736567814647808", "is_retweet": false}, {"created_at": "Thu Oct 29 01:30:38 +0000 2015", "text": "We need to fight for policies that break down barriers to good jobs and help balance work and family: equal pay, child care, and paid leave.", "in_reply_to_screen_name": null, "retweet_count": 663, "favorite_count": 1259, "source": "TweetDeck", "id_str": "659542827295236100", "is_retweet": false}, {"created_at": "Sun Nov 01 17:23:30 +0000 2015", "text": "Top CEOs earn 300 times more than the typical American worker. That's wrong.\nhttps://t.co/SUFDsLTG3m", "in_reply_to_screen_name": null, "retweet_count": 573, "favorite_count": 915, "source": "Twitter Web Client", "id_str": "660869789439557633", "is_retweet": false}, {"created_at": "Wed Jun 17 18:51:05 +0000 2015", "text": "Your first job can have a big impact on your life. Read about Hillary's plan to create jobs and invest in workers: http://t.co/kCEAUpAG2s", "in_reply_to_screen_name": null, "retweet_count": 233, "favorite_count": 358, "source": "TweetDeck", "id_str": "611244693645623296", "is_retweet": false}, {"created_at": "Sat Feb 14 01:39:49 +0000 2015", "text": ".@bfrist &amp; I may not agree on everything, but see why we believe kids' health insurance is a priority. #commonground http://t.co/4fkdQElvVC", "in_reply_to_screen_name": null, "retweet_count": 491, "favorite_count": 919, "source": "Twitter for iPhone", "id_str": "566411457298841600", "is_retweet": false}, {"created_at": "Sat Oct 24 17:01:05 +0000 2015", "text": "I organize in rural Iowa. Knocking doors here means driving 20 minutes between each house\u2014but it's not all bad. https://t.co/9NBq1m0F6Z", "in_reply_to_screen_name": null, "retweet_count": 133, "favorite_count": 505, "source": "TweetDeck", "id_str": "657965044777402368", "is_retweet": false}, {"created_at": "Tue Sep 22 22:59:42 +0000 2015", "text": "Good. https://t.co/UkOr0vfeHX", "in_reply_to_screen_name": null, "retweet_count": 694, "favorite_count": 1415, "source": "Twitter Web Client", "id_str": "646458881519054849", "is_retweet": false}, {"created_at": "Mon Jul 27 14:08:57 +0000 2015", "text": "\"There has never been a better moment to reimagine how we power America.\" \u2013 @johnpodesta, #Hillary2016 chair: http://t.co/rF84eipt3Z", "in_reply_to_screen_name": null, "retweet_count": 196, "favorite_count": 322, "source": "Twitter Web Client", "id_str": "625669205032091648", "is_retweet": false}, {"created_at": "Sat Oct 24 18:05:08 +0000 2015", "text": "My team has become a 2nd family. Here\u2019s us the day the Supreme Court legalized marriage equality\u2014I\u2019m in the middle. https://t.co/IUGrptxYqd", "in_reply_to_screen_name": null, "retweet_count": 159, "favorite_count": 547, "source": "TweetDeck", "id_str": "657981160874622976", "is_retweet": false}, {"created_at": "Fri Jun 12 22:17:56 +0000 2015", "text": "Setting the stage for the official #Hillary2016 launch! Tell us: I'm most excited about tomorrow because ________. http://t.co/TZsYuKJkpH", "in_reply_to_screen_name": null, "retweet_count": 284, "favorite_count": 726, "source": "TweetDeck", "id_str": "609484806158684162", "is_retweet": false}, {"created_at": "Tue Jul 21 14:51:42 +0000 2015", "text": "Sen. McConnell thinks unlocking the potential of half the population is playing the #gendercard. We think it's an economic no-brainer.", "in_reply_to_screen_name": null, "retweet_count": 614, "favorite_count": 1192, "source": "TweetDeck", "id_str": "623505634353377280", "is_retweet": false}, {"created_at": "Thu Aug 27 21:51:17 +0000 2015", "text": "We lose people to gun violence every day. It\u2019s time to come to grips with this.", "in_reply_to_screen_name": null, "retweet_count": 1858, "favorite_count": 3670, "source": "TweetDeck", "id_str": "637019577864585216", "is_retweet": false}, {"created_at": "Wed Dec 02 01:23:57 +0000 2015", "text": "Ted Cruz says no one is trying to ban contraception. Here are five times he tried to do *exactly* that: https://t.co/qrRW0tGtFD", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 1380, "source": "TweetDeck", "id_str": "671862331526262785", "is_retweet": false}, {"created_at": "Sun Nov 15 13:31:33 +0000 2015", "text": "Hillary summed up one of the most important issues of this election at the #DemDebate. https://t.co/wtwMLo6HtL", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 860, "source": "TweetDeck", "id_str": "665884846602985472", "is_retweet": false}, {"created_at": "Thu Nov 12 20:46:45 +0000 2015", "text": "We need to keep guns out of the hands of domestic abusers and convicted stalkers. https://t.co/mGPKEgwaho https://t.co/ENvnWqIKoL", "in_reply_to_screen_name": null, "retweet_count": 1004, "favorite_count": 1535, "source": "TweetDeck", "id_str": "664907205540519936", "is_retweet": false}, {"created_at": "Tue Jun 30 14:47:01 +0000 2015", "text": "Introducing: Pinspiration from Hillary! Follow for granddaughter gift ideas and more: http://t.co/XjY4hmNKcP http://t.co/urM7SP8gpY", "in_reply_to_screen_name": null, "retweet_count": 118, "favorite_count": 281, "source": "TweetDeck", "id_str": "615894313575145472", "is_retweet": false}, {"created_at": "Sat Nov 07 02:42:35 +0000 2015", "text": "\"If you stand for equal rights, if you stand against discrimination, you don't just do it once\u2014you've got to keep fighting.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 2008, "favorite_count": 3496, "source": "TweetDeck", "id_str": "662822427018162176", "is_retweet": false}, {"created_at": "Fri May 01 22:41:51 +0000 2015", "text": "Have you claimed your #Hillary2016 pride sticker yet? Sign up now\u2014it's free: http://t.co/s1Bb096Kpd http://t.co/N6PmHuzR9F", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 864, "source": "Twitter Web Client", "id_str": "594270535367929857", "is_retweet": false}, {"created_at": "Thu Oct 22 17:57:06 +0000 2015", "text": "America must do all we can to protect our personnel doing the important work of representing our interests and values around the world.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 246, "favorite_count": 591, "source": "Twitter Web Client", "id_str": "657254365326131200", "is_retweet": false}, {"created_at": "Fri Jun 26 14:05:31 +0000 2015", "text": "Proud to celebrate a historic victory for marriage equality\u2014&amp; the courage &amp; determination of LGBT Americans who made it possible. -H", "in_reply_to_screen_name": null, "retweet_count": 12619, "favorite_count": 17652, "source": "Twitter Web Client", "id_str": "614434318023290884", "is_retweet": false}, {"created_at": "Thu Oct 01 00:36:19 +0000 2015", "text": "In case you were wondering, you should be following hillaryclinton on Snapchat. \ud83d\udc7b http://t.co/eigWQMKXjj", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 1328, "source": "Twitter Web Client", "id_str": "649382296366264321", "is_retweet": false}, {"created_at": "Wed Sep 23 18:48:05 +0000 2015", "text": "Why Hillary opposes the Keystone pipeline: http://t.co/Yttouh5fA4 http://t.co/pnoQAX4P7Z", "in_reply_to_screen_name": null, "retweet_count": 281, "favorite_count": 615, "source": "TweetDeck", "id_str": "646757948421619712", "is_retweet": false}, {"created_at": "Sat Jun 27 16:01:48 +0000 2015", "text": "\"Our country at its best.\" Read Hillary's statement on yesterday's historic win for marriage equality, on @Medium: http://t.co/F12o9NfUtK", "in_reply_to_screen_name": null, "retweet_count": 318, "favorite_count": 722, "source": "TweetDeck", "id_str": "614825969770188800", "is_retweet": false}, {"created_at": "Mon Jun 15 21:12:33 +0000 2015", "text": "Thanks to DREAMers' courage &amp; resolve, #DACA has allowed thousands of young people to contribute to our society. We're better for it. -H", "in_reply_to_screen_name": null, "retweet_count": 437, "favorite_count": 757, "source": "Twitter Web Client", "id_str": "610555515660316672", "is_retweet": false}, {"created_at": "Sun Oct 11 22:53:36 +0000 2015", "text": "Honored to have Congressman @repjohnlewis's support. http://t.co/vIxs9BLRMg", "in_reply_to_screen_name": null, "retweet_count": 591, "favorite_count": 1288, "source": "Twitter Web Client", "id_str": "653342714851893248", "is_retweet": false}, {"created_at": "Wed Dec 30 16:43:33 +0000 2015", "text": "Middle class families shouldn't be shouldering a tax burden while those at the top profit.\nhttps://t.co/BS1eZX0LaA", "in_reply_to_screen_name": null, "retweet_count": 604, "favorite_count": 1144, "source": "Twitter Web Client", "id_str": "682240619511595008", "is_retweet": false}, {"created_at": "Wed Nov 11 03:19:34 +0000 2015", "text": "Apoyar a las familias incluye la baja de maternidad pagada, aumentar el salario m\u00ednimo, y acceso a guarder\u00edas infantiles. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 210, "favorite_count": 346, "source": "TweetDeck", "id_str": "664281284202614784", "is_retweet": false}, {"created_at": "Thu Apr 30 18:06:28 +0000 2015", "text": "I agree with Bernie. Focus must be on helping America's middle class. GOP would hold them back. I welcome him to the race. \u2013H", "in_reply_to_screen_name": null, "retweet_count": 1895, "favorite_count": 3261, "source": "Twitter Web Client", "id_str": "593838843889065984", "is_retweet": false}, {"created_at": "Mon May 11 23:47:54 +0000 2015", "text": "Avoid FOMO. Become a #Hillary2016 founding donor before this window closes: http://t.co/n2QWOesbh6 http://t.co/vS1frixJLZ", "in_reply_to_screen_name": null, "retweet_count": 155, "favorite_count": 332, "source": "Twitter Web Client", "id_str": "597911034825994240", "is_retweet": false}, {"created_at": "Thu Oct 29 17:32:01 +0000 2015", "text": "No one should face discrimination for who they are or who they love\u2014I support efforts for equality in Houston &amp; beyond. #HERO #YesOnProp1 -H", "in_reply_to_screen_name": null, "retweet_count": 1689, "favorite_count": 2597, "source": "TweetDeck", "id_str": "659784766372388864", "is_retweet": false}, {"created_at": "Wed Aug 19 22:14:40 +0000 2015", "text": "They're called babies. https://t.co/VyJJA26OVl", "in_reply_to_screen_name": null, "retweet_count": 2631, "favorite_count": 3915, "source": "TweetDeck", "id_str": "634126361368653824", "is_retweet": false}, {"created_at": "Mon Dec 07 16:13:35 +0000 2015", "text": "Our goal must not be to deter or contain ISIS. Our goal must be to defeat ISIS. https://t.co/L6B9xAtrF3", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 905, "source": "Twitter Web Client", "id_str": "673898157198204928", "is_retweet": false}, {"created_at": "Sat Oct 24 21:02:02 +0000 2015", "text": "Thanks for following our incredible day in Iowa\u2014stay tuned to hear @katyperry, @billclinton, and Hillary! #HillYes https://t.co/f24SyhXI9Z", "in_reply_to_screen_name": null, "retweet_count": 197, "favorite_count": 544, "source": "TweetDeck", "id_str": "658025681025040384", "is_retweet": false}, {"created_at": "Wed Jul 22 19:39:01 +0000 2015", "text": "Black lives matter. Read more from Hillary's Facebook Q&amp;A: http://t.co/L6HriA7KTE http://t.co/42KBb8kMID", "in_reply_to_screen_name": null, "retweet_count": 468, "favorite_count": 732, "source": "TweetDeck", "id_str": "623940328375107584", "is_retweet": false}, {"created_at": "Tue Jul 28 18:50:39 +0000 2015", "text": "\"I want little girls everywhere to grow up knowing they can do anything\u2014even play football.\" Brava, Coach @jwelter47! http://t.co/TDT9NxWPrX", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 1261, "source": "Twitter Web Client", "id_str": "626102485015359488", "is_retweet": false}, {"created_at": "Mon Sep 14 17:18:01 +0000 2015", "text": "\u201cIt is not enough to condemn campus sexual assault. We need to end campus sexual assault.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 833, "favorite_count": 1595, "source": "TweetDeck", "id_str": "643473792170369024", "is_retweet": false}, {"created_at": "Thu Aug 06 15:07:13 +0000 2015", "text": "50 years after the Voting Rights Act, we can't let anyone undermine America's promise: Everyone's voice and vote count. #VRA50 -H", "in_reply_to_screen_name": null, "retweet_count": 484, "favorite_count": 711, "source": "Twitter Web Client", "id_str": "629307746203136001", "is_retweet": false}, {"created_at": "Thu Aug 06 16:43:12 +0000 2015", "text": "On #VRA50, we still have much more work to do to protect the right to vote.\nhttps://t.co/YAuQXEX06v", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 594, "source": "Twitter Web Client", "id_str": "629331902411857920", "is_retweet": false}, {"created_at": "Wed Sep 09 22:38:18 +0000 2015", "text": "What do @madeleine and @CecileRichards recall from Hillary\u2019s #Beijing20 speech? Read the story behind her remarks: http://t.co/nHvowABTWP", "in_reply_to_screen_name": null, "retweet_count": 197, "favorite_count": 370, "source": "TweetDeck", "id_str": "641742453918310400", "is_retweet": false}, {"created_at": "Sat Oct 03 19:15:05 +0000 2015", "text": "\"We need to say with one voice that transgender people are valued, they are loved, they are us\" -Hillary at @HRC today", "in_reply_to_screen_name": null, "retweet_count": 724, "favorite_count": 1603, "source": "Twitter Web Client", "id_str": "650388619925041153", "is_retweet": false}, {"created_at": "Tue Nov 10 16:03:12 +0000 2015", "text": "Happy Diwali! Wishing a bright year ahead to all celebrating the Festival of Lights.", "in_reply_to_screen_name": null, "retweet_count": 565, "favorite_count": 988, "source": "Twitter Web Client", "id_str": "664111072631214080", "is_retweet": false}, {"created_at": "Fri Jun 26 21:13:02 +0000 2015", "text": "Planning a wedding? We've got the perfect party favors: http://t.co/FCF9NShdYQ http://t.co/d0nvlQiyjz", "in_reply_to_screen_name": null, "retweet_count": 561, "favorite_count": 1697, "source": "TweetDeck", "id_str": "614541904722665472", "is_retweet": false}, {"created_at": "Fri Dec 04 01:55:26 +0000 2015", "text": "Women deserve access to the health care they need\u2014without interference, intimidation, or violence. #StandWithPP -H https://t.co/ONX31AfKXr", "in_reply_to_screen_name": null, "retweet_count": 1490, "favorite_count": 2609, "source": "TweetDeck", "id_str": "672595033195941888", "is_retweet": false}, {"created_at": "Sat Dec 19 19:23:51 +0000 2015", "text": "To keep America safe, we need leaders who will stand up against hateful speech. https://t.co/5b7DyHQ6NT", "in_reply_to_screen_name": null, "retweet_count": 1967, "favorite_count": 3364, "source": "Twitter Web Client", "id_str": "678294693424275456", "is_retweet": false}, {"created_at": "Sat Nov 07 02:32:32 +0000 2015", "text": "We can't wait any longer to act on gun violence prevention. #DemForum", "in_reply_to_screen_name": null, "retweet_count": 712, "favorite_count": 1511, "source": "TweetDeck", "id_str": "662819894828756992", "is_retweet": false}, {"created_at": "Mon Mar 16 20:01:43 +0000 2015", "text": "...2) Playing politics with trafficking victims\u2026 3) Threatening women's health &amp; rights.", "in_reply_to_screen_name": null, "retweet_count": 2347, "favorite_count": 2596, "source": "Twitter Web Client", "id_str": "577560394987921408", "is_retweet": false}, {"created_at": "Tue Dec 22 19:36:31 +0000 2015", "text": "Every child deserves a loving family. We must fight discrimination against LGBT parents trying to adopt.", "in_reply_to_screen_name": null, "retweet_count": 1812, "favorite_count": 4125, "source": "TweetDeck", "id_str": "679385041961623553", "is_retweet": false}, {"created_at": "Fri Nov 27 15:12:13 +0000 2015", "text": "How did Hillary and @billclinton feel about dropping @ChelseaClinton off at college? \u201cWe were both wrecks.\u201d\nhttps://t.co/QiM7Ee0xPN", "in_reply_to_screen_name": null, "retweet_count": 324, "favorite_count": 896, "source": "Twitter Web Client", "id_str": "670258833747410944", "is_retweet": false}, {"created_at": "Tue Dec 08 03:57:58 +0000 2015", "text": "On this day in 1993, Toni Morrison became the first African American woman to accept the @NobelPrize in Literature. https://t.co/FPnbfLOVc0", "in_reply_to_screen_name": null, "retweet_count": 1116, "favorite_count": 2058, "source": "TweetDeck", "id_str": "674075418681548800", "is_retweet": false}, {"created_at": "Tue Dec 08 22:14:39 +0000 2015", "text": "Enough of the shameful, dangerous anti-Muslim rhetoric from Republicans. Hillary responds: https://t.co/ZhRYyA0lDh", "in_reply_to_screen_name": null, "retweet_count": 1203, "favorite_count": 1952, "source": "TweetDeck", "id_str": "674351409081556992", "is_retweet": false}, {"created_at": "Thu Jul 23 00:03:08 +0000 2015", "text": "During Hillary's Facebook Q&amp;A, we found out who's really playing the #gendercard. http://t.co/IOqeyJulBs", "in_reply_to_screen_name": null, "retweet_count": 508, "favorite_count": 862, "source": "TweetDeck", "id_str": "624006795690967041", "is_retweet": false}, {"created_at": "Fri Aug 07 17:54:06 +0000 2015", "text": "America's strength lies in families &amp; communities. Sign up to support Hillary's plan for a fairness &amp; growth economy: http://t.co/FeZESF38dD", "in_reply_to_screen_name": null, "retweet_count": 270, "favorite_count": 538, "source": "Twitter Web Client", "id_str": "629712134016999424", "is_retweet": false}, {"created_at": "Fri Nov 06 21:40:55 +0000 2015", "text": "Hillary on criminal justice reform and more in @EBONYMag: https://t.co/QBAD1iIrqf https://t.co/nvzE5dmYSY", "in_reply_to_screen_name": null, "retweet_count": 459, "favorite_count": 685, "source": "TweetDeck", "id_str": "662746507431424000", "is_retweet": false}, {"created_at": "Tue Sep 22 12:10:08 +0000 2015", "text": "David Axelrod, former Senior Advisor to President Obama, on Hillary\u2019s greatest accomplishments. http://t.co/mrlJNtvFye", "in_reply_to_screen_name": null, "retweet_count": 439, "favorite_count": 767, "source": "TweetDeck", "id_str": "646295410454073346", "is_retweet": false}, {"created_at": "Wed Oct 14 22:34:34 +0000 2015", "text": "The feeling when a GOP candidate says it's acceptable to be fired for being gay. https://t.co/cF9mw5k8fq http://t.co/cYFvcW27mQ", "in_reply_to_screen_name": null, "retweet_count": 2896, "favorite_count": 4471, "source": "Twitter Web Client", "id_str": "654425087790219264", "is_retweet": false}, {"created_at": "Sun Sep 13 23:59:36 +0000 2015", "text": "Leadership is about strength, smart choices, and an unyielding commitment to America\u2019s values.\nhttps://t.co/OCcqTwsonz", "in_reply_to_screen_name": null, "retweet_count": 483, "favorite_count": 782, "source": "Twitter Web Client", "id_str": "643212466290233344", "is_retweet": false}, {"created_at": "Sun Dec 20 02:15:57 +0000 2015", "text": "We can\u2019t afford another major ground war in the Middle East\u2014that's exactly what ISIS wants. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 759, "favorite_count": 1494, "source": "TweetDeck", "id_str": "678398399012610048", "is_retweet": false}, {"created_at": "Mon Nov 30 19:17:54 +0000 2015", "text": "Gifts for everyone on your list, from the capital-F Feminist to the cocktail enthusiast. https://t.co/uwNV5srDf1", "in_reply_to_screen_name": null, "retweet_count": 121, "favorite_count": 308, "source": "Twitter Web Client", "id_str": "671407825118240768", "is_retweet": false}, {"created_at": "Tue May 12 15:33:15 +0000 2015", "text": "How can you tell Hillary will fight every day for kids and families? Because it's what she's always done. http://t.co/f52qcESxE5", "in_reply_to_screen_name": null, "retweet_count": 250, "favorite_count": 438, "source": "TweetDeck", "id_str": "598148942602309632", "is_retweet": false}, {"created_at": "Wed Oct 14 03:04:15 +0000 2015", "text": "Are you with Hillary? Let her know: http://t.co/cpNtT9GLNf #DemDebate #ImWithHer http://t.co/67aQwmoeoy", "in_reply_to_screen_name": null, "retweet_count": 1595, "favorite_count": 3000, "source": "TweetDeck", "id_str": "654130570314797056", "is_retweet": false}, {"created_at": "Wed Oct 21 15:55:32 +0000 2015", "text": "Hillary is a longtime fighter for reproductive rights, education, and equal pay. https://t.co/hUO0zHHlur", "in_reply_to_screen_name": null, "retweet_count": 383, "favorite_count": 760, "source": "TweetDeck", "id_str": "656861386023170048", "is_retweet": false}, {"created_at": "Fri Aug 21 18:41:48 +0000 2015", "text": "About that email \"scandal\"\u2014we fact-checked the tweets:\nhttps://t.co/FqfFt9m2YL", "in_reply_to_screen_name": null, "retweet_count": 904, "favorite_count": 1222, "source": "Twitter Web Client", "id_str": "634797565922295808", "is_retweet": false}, {"created_at": "Fri Sep 25 18:56:49 +0000 2015", "text": "Today in 1981, Sandra Day O\u2019Connor became the first woman appointed to the Supreme Court. http://t.co/TjH56UEYx6", "in_reply_to_screen_name": null, "retweet_count": 962, "favorite_count": 1420, "source": "TweetDeck", "id_str": "647484922760953856", "is_retweet": false}, {"created_at": "Tue Dec 01 00:51:59 +0000 2015", "text": "\u201cI want us once again to think big and look up, beyond the horizon, about what\u2019s possible in America.\u201d\nhttps://t.co/LqH67naSRl", "in_reply_to_screen_name": null, "retweet_count": 416, "favorite_count": 766, "source": "Twitter Web Client", "id_str": "671491899048353792", "is_retweet": false}, {"created_at": "Sun Dec 20 03:24:20 +0000 2015", "text": "Prison is not a substitute for treatment for drug addiction and mental health issues. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1908, "favorite_count": 3474, "source": "TweetDeck", "id_str": "678415611597320192", "is_retweet": false}, {"created_at": "Sun Sep 20 20:03:03 +0000 2015", "text": "Carly Fiorina challenged Democrats to name an accomplishment of Hillary\u2019s. @SenatorLeahy accepted: http://t.co/GvqmSQwocN", "in_reply_to_screen_name": null, "retweet_count": 451, "favorite_count": 952, "source": "TweetDeck", "id_str": "645689647964684288", "is_retweet": false}, {"created_at": "Sat May 30 18:52:40 +0000 2015", "text": "One of Hillary's favorite moments from this week. http://t.co/yB4WdzNAiT", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 883, "source": "TweetDeck", "id_str": "604722107579277312", "is_retweet": false}, {"created_at": "Sat Aug 29 14:02:11 +0000 2015", "text": "Today, we remember those lost in Katrina &amp; recommit to finishing the work of rebuilding. No city should have to endure what NOLA endured. -H", "in_reply_to_screen_name": null, "retweet_count": 696, "favorite_count": 1496, "source": "TweetDeck", "id_str": "637626300354723840", "is_retweet": false}, {"created_at": "Thu Apr 16 19:24:21 +0000 2015", "text": "Bye for now, Iowa, &amp; thank you! I loved talking to so many of you about what\u2019s on your mind &amp; your ideas for the future. See you soon! -H", "in_reply_to_screen_name": null, "retweet_count": 524, "favorite_count": 1751, "source": "Twitter for iPhone", "id_str": "588785016072757248", "is_retweet": false}, {"created_at": "Sat Dec 19 15:45:26 +0000 2015", "text": "Captain Humayun Khan was an immigrant and an American hero. This is his story.\nhttps://t.co/6herqIGbcI", "in_reply_to_screen_name": null, "retweet_count": 851, "favorite_count": 1388, "source": "Twitter Web Client", "id_str": "678239724742422528", "is_retweet": false}, {"created_at": "Thu Aug 27 18:26:51 +0000 2015", "text": "@hey_jude34 @JollyScholar Very sweet\u2014hopefully next time! Will brush up on the karaoke.", "in_reply_to_screen_name": "meghannroseee", "retweet_count": 45, "favorite_count": 115, "source": "Twitter Web Client", "id_str": "636968131555143682", "is_retweet": false}, {"created_at": "Tue Apr 14 20:39:13 +0000 2015", "text": "\"It's fair to say the deck is still stacked in favor of those already at the top. There's something wrong with that.\"", "in_reply_to_screen_name": null, "retweet_count": 1114, "favorite_count": 1853, "source": "Twitter Web Client", "id_str": "588079080345571328", "is_retweet": false}, {"created_at": "Thu May 21 20:17:45 +0000 2015", "text": "Get excited: Hillary will be making her official campaign announcement speech at the first big event of her campaign on June 13th.", "in_reply_to_screen_name": null, "retweet_count": 748, "favorite_count": 1108, "source": "TweetDeck", "id_str": "601482030229094403", "is_retweet": false}, {"created_at": "Fri Dec 25 17:08:02 +0000 2015", "text": "Can't think of a better day than one with family, food, and the best gift of all: a new grandchild on the way! Merry Christmas. -H", "in_reply_to_screen_name": null, "retweet_count": 847, "favorite_count": 4580, "source": "TweetDeck", "id_str": "680434842056699907", "is_retweet": false}, {"created_at": "Sat Oct 10 22:32:00 +0000 2015", "text": "Make history and help shatter one of the highest glass ceilings. Apply to be a Hillary for America intern today: http://t.co/BUjkdhZ3Ak", "in_reply_to_screen_name": null, "retweet_count": 289, "favorite_count": 580, "source": "TweetDeck", "id_str": "652974892040724480", "is_retweet": false}, {"created_at": "Fri Apr 24 19:40:39 +0000 2015", "text": "This campaign starts with you. Sign up to be part of it: http://t.co/NqfC3zWkYh http://t.co/pH3JcIvTVj", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 846, "source": "Twitter Web Client", "id_str": "591688218938073089", "is_retweet": false}, {"created_at": "Mon Sep 28 17:21:35 +0000 2015", "text": "Hillary\u2019s hosting a Facebook Q&amp;A this afternoon! Leave your question here: http://t.co/cTFL9SCLYb http://t.co/BYO5Jy6Lom", "in_reply_to_screen_name": null, "retweet_count": 253, "favorite_count": 466, "source": "Twitter Web Client", "id_str": "648548117353209856", "is_retweet": false}, {"created_at": "Wed Sep 09 02:27:17 +0000 2015", "text": "Hillary to @DavidMuir: \"I should have used two accounts... I\u2019m sorry about that, I take responsibility.\u201d\nhttps://t.co/cDPKnCx9l0", "in_reply_to_screen_name": null, "retweet_count": 409, "favorite_count": 751, "source": "Twitter Web Client", "id_str": "641437691066781697", "is_retweet": false}, {"created_at": "Sun Jun 21 22:13:26 +0000 2015", "text": "A little encouragement from dad can go a long way. From Natalie in Florida: http://t.co/42RGMPtG8Z", "in_reply_to_screen_name": null, "retweet_count": 334, "favorite_count": 1091, "source": "Twitter Web Client", "id_str": "612745164445106176", "is_retweet": false}, {"created_at": "Thu Jun 11 23:22:35 +0000 2015", "text": "A group of senators trying to make medical decisions for millions of women: That isn't leadership\u2014it's malpractice. -H", "in_reply_to_screen_name": null, "retweet_count": 3275, "favorite_count": 5027, "source": "TweetDeck", "id_str": "609138690376527872", "is_retweet": false}, {"created_at": "Tue Dec 29 21:49:00 +0000 2015", "text": "We can't let Republicans rip away our progress and give more tax breaks to corporations and those at the top.", "in_reply_to_screen_name": null, "retweet_count": 720, "favorite_count": 2061, "source": "TweetDeck", "id_str": "681955099489497089", "is_retweet": false}, {"created_at": "Tue May 26 18:08:00 +0000 2015", "text": "Thanks, @jimmyfallon\u2014but we actually prefer this. http://t.co/WAlkyO08Uy http://t.co/T1Dwl4si7q", "in_reply_to_screen_name": null, "retweet_count": 494, "favorite_count": 1080, "source": "TweetDeck", "id_str": "603261317139529729", "is_retweet": false}, {"created_at": "Sat Nov 21 22:42:30 +0000 2015", "text": "\"Who would you pick to play you in a movie?\" \u2013@kellyripa\n\n\"Well, Meryl Streep of course!\" \u2013Hillary\nhttps://t.co/M4Yn0O7WpB", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 1995, "source": "Twitter Web Client", "id_str": "668197825537138688", "is_retweet": false}, {"created_at": "Mon Jul 13 14:44:32 +0000 2015", "text": "\"Too often it has seemed that the human beings responsible get off with limited consequences...This is wrong\u2014&amp; on my watch, it will change.\"", "in_reply_to_screen_name": null, "retweet_count": 221, "favorite_count": 382, "source": "TweetDeck", "id_str": "620604728884379648", "is_retweet": false}, {"created_at": "Sun Nov 08 14:48:18 +0000 2015", "text": "A young man asked Hillary: What did you learn from @GirlScouts that you would use to be a successful president?\nhttps://t.co/4fJOJveiMh", "in_reply_to_screen_name": null, "retweet_count": 530, "favorite_count": 1185, "source": "Twitter Web Client", "id_str": "663367444069675008", "is_retweet": false}, {"created_at": "Fri May 29 17:37:51 +0000 2015", "text": "Girls just wanna have fun bumper stickers. Get your own: http://t.co/OJfT2z9Zg2 (Thanks, @lenadunham!) http://t.co/WqqBvmG4qB", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 863, "source": "TweetDeck", "id_str": "604340892246220800", "is_retweet": false}, {"created_at": "Sun Oct 25 23:35:00 +0000 2015", "text": "Highlights and behind-the-scenes moments from a big day in Iowa. https://t.co/Cd83dyGlPb #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 276, "favorite_count": 650, "source": "TweetDeck", "id_str": "658426566100299777", "is_retweet": false}, {"created_at": "Thu Oct 08 23:57:59 +0000 2015", "text": "Hillary s\u00f3lo tiene una palabra para los Republicanos que insultan a los latinos: \u00a1Basta! #CHCI http://t.co/uCG4Y5Tqho", "in_reply_to_screen_name": null, "retweet_count": 357, "favorite_count": 534, "source": "Twitter Web Client", "id_str": "652271752798687232", "is_retweet": false}, {"created_at": "Fri Nov 06 16:20:39 +0000 2015", "text": "Hillary is ready to be president. Want to help make it happen? Apply to be a Hillary for America intern: https://t.co/iSbArYiedG", "in_reply_to_screen_name": null, "retweet_count": 280, "favorite_count": 702, "source": "TweetDeck", "id_str": "662665910881296384", "is_retweet": false}, {"created_at": "Wed Oct 07 18:35:26 +0000 2015", "text": "Republicans say they don\u2019t think Hillary has accomplished anything\u2014so she sent them a gift. http://t.co/nO5hZUCEkI http://t.co/EJerPjx4TX", "in_reply_to_screen_name": null, "retweet_count": 2304, "favorite_count": 4142, "source": "TweetDeck", "id_str": "651828195864518656", "is_retweet": false}, {"created_at": "Thu Oct 29 19:12:51 +0000 2015", "text": "Texts from Hillary, #GOPdebate edition. https://t.co/KT21PtrHVP", "in_reply_to_screen_name": null, "retweet_count": 230, "favorite_count": 444, "source": "TweetDeck", "id_str": "659810143555723265", "is_retweet": false}, {"created_at": "Tue Nov 24 22:24:32 +0000 2015", "text": "Today, @POTUS awards Shirley Chisholm, the first African American congresswoman, with the #MedalOfFreedom. https://t.co/4bu5n0yo7E", "in_reply_to_screen_name": null, "retweet_count": 1718, "favorite_count": 2777, "source": "TweetDeck", "id_str": "669280465526906880", "is_retweet": false}, {"created_at": "Wed May 06 01:24:33 +0000 2015", "text": "RT this and sign up if you're with Hillary on comprehensive immigration reform: http://t.co/ArO4kdleJd http://t.co/cT8g0KybHU", "in_reply_to_screen_name": null, "retweet_count": 939, "favorite_count": 884, "source": "Twitter Web Client", "id_str": "595761032095735809", "is_retweet": false}, {"created_at": "Mon Nov 02 20:50:53 +0000 2015", "text": "The top 25 hedge fund managers make more than all kindergarten teachers in the US\u2014combined. We need to fix that. https://t.co/zTkCxPUd46", "in_reply_to_screen_name": null, "retweet_count": 641, "favorite_count": 804, "source": "TweetDeck", "id_str": "661284364635013120", "is_retweet": false}, {"created_at": "Fri May 01 13:39:29 +0000 2015", "text": "Amen to this headline, @Pontifex! Hope to see more voices speaking out. http://t.co/sZ6gyZygOI \u2013H", "in_reply_to_screen_name": null, "retweet_count": 516, "favorite_count": 752, "source": "Twitter Web Client", "id_str": "594134046063632386", "is_retweet": false}, {"created_at": "Tue Apr 28 19:27:20 +0000 2015", "text": "RT if you're standing with Jared, Nate, and Hillary for equal rights. #LoveCantWait #LoveMustWin http://t.co/9XcxKrpdGK", "in_reply_to_screen_name": null, "retweet_count": 2124, "favorite_count": 2153, "source": "Twitter Web Client", "id_str": "593134420556705792", "is_retweet": false}, {"created_at": "Tue Dec 22 20:51:05 +0000 2015", "text": "\"Under my plan, Medicare will cover comprehensive Alzheimer\u2019s care-planning sessions.\" Hillary on @Quora: https://t.co/zvI5CZqCpg", "in_reply_to_screen_name": null, "retweet_count": 551, "favorite_count": 1259, "source": "TweetDeck", "id_str": "679403809722859524", "is_retweet": false}, {"created_at": "Thu Oct 15 23:46:40 +0000 2015", "text": "Women still make less than men, with women of color facing an even bigger gap. This isn't just holding women back\u2014it's holding America back.", "in_reply_to_screen_name": null, "retweet_count": 1140, "favorite_count": 1864, "source": "TweetDeck", "id_str": "654805621091401728", "is_retweet": false}, {"created_at": "Sun Jul 26 15:46:23 +0000 2015", "text": "One thing that concerns us as Adam gets older is what happens after he finishes school.", "in_reply_to_screen_name": null, "retweet_count": 64, "favorite_count": 177, "source": "Twitter Web Client", "id_str": "625331337197678592", "is_retweet": false}, {"created_at": "Wed Nov 11 04:13:42 +0000 2015", "text": "Times Republicans offered helpful ideas for the middle class: 0. \nTimes Republicans attacked Hillary: We lost count. \n#GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1105, "favorite_count": 2448, "source": "TweetDeck", "id_str": "664294905531883520", "is_retweet": false}, {"created_at": "Tue May 05 19:07:14 +0000 2015", "text": "@RealGabbyR What @HillaryforIA said (and congrats)! https://t.co/NU42mmDp4X", "in_reply_to_screen_name": "RealGabbyR", "retweet_count": 20, "favorite_count": 30, "source": "Twitter Web Client", "id_str": "595666076257640448", "is_retweet": false}, {"created_at": "Tue Sep 08 21:06:23 +0000 2015", "text": ".@TheEllenShow but seriously, where are we on gefilte fish?", "in_reply_to_screen_name": "TheEllenShow", "retweet_count": 341, "favorite_count": 1000, "source": "Twitter Web Client", "id_str": "641356933744562176", "is_retweet": false}, {"created_at": "Tue Dec 01 03:06:53 +0000 2015", "text": "Investing in our infrastructure is about more than creating good jobs: it\u2019s about maintaining our status as the world\u2019s economic superpower.", "in_reply_to_screen_name": null, "retweet_count": 599, "favorite_count": 1335, "source": "Twitter Web Client", "id_str": "671525848139341824", "is_retweet": false}, {"created_at": "Thu Oct 08 02:29:18 +0000 2015", "text": "\"You were great on Saturday Night Live...so, can you do for us the Donald Trump impression?\"\nhttps://t.co/3V4sZMZEY1", "in_reply_to_screen_name": null, "retweet_count": 557, "favorite_count": 1269, "source": "Twitter Web Client", "id_str": "651947444742127616", "is_retweet": false}, {"created_at": "Fri Dec 11 22:35:05 +0000 2015", "text": ".@LateNightSeth asks: What would make @billclinton a great first gentleman? Watch Hillary's answer.\nhttps://t.co/gEBuSfls2W", "in_reply_to_screen_name": null, "retweet_count": 515, "favorite_count": 1095, "source": "Twitter Web Client", "id_str": "675443713162653696", "is_retweet": false}, {"created_at": "Tue Sep 22 13:02:04 +0000 2015", "text": "We need labor law reform. The #WAGEAct would protect workers' rights, now Congress should pass it. -H", "in_reply_to_screen_name": null, "retweet_count": 336, "favorite_count": 591, "source": "Twitter for iPhone", "id_str": "646308481545433088", "is_retweet": false}, {"created_at": "Sat Oct 24 13:01:07 +0000 2015", "text": "As an organizer in Iowa, I spend my days talking to folks in my community about Hillary and her vision for America. https://t.co/9aUQXzHAhk", "in_reply_to_screen_name": null, "retweet_count": 158, "favorite_count": 467, "source": "TweetDeck", "id_str": "657904655511351296", "is_retweet": false}, {"created_at": "Thu Dec 10 03:55:23 +0000 2015", "text": "Today, Germany\u2019s first woman chancellor, Angela Merkel, was named @TIME's Person of the Year. #TimePOY https://t.co/l91J9yvSuV", "in_reply_to_screen_name": null, "retweet_count": 1745, "favorite_count": 4178, "source": "TweetDeck", "id_str": "674799547072294912", "is_retweet": false}, {"created_at": "Mon May 11 00:36:58 +0000 2015", "text": "RT if you agree we should make it easier to raise a family\u2014and guarantee paid family leave once and for all. https://t.co/VINeiM9RC7", "in_reply_to_screen_name": null, "retweet_count": 1528, "favorite_count": 1297, "source": "Twitter Web Client", "id_str": "597560997679910913", "is_retweet": false}, {"created_at": "Fri Sep 18 18:24:41 +0000 2015", "text": "Cutting off Americans from lifesaving health care at Planned Parenthood is wrong. #standwithPP http://t.co/XQbcLdzbUJ", "in_reply_to_screen_name": null, "retweet_count": 2445, "favorite_count": 3423, "source": "TweetDeck", "id_str": "644940119540150272", "is_retweet": false}, {"created_at": "Mon Jul 13 14:52:00 +0000 2015", "text": "Let's build an economy that works for everyone. Join Hillary: http://t.co/nW2JqXGZT9 http://t.co/qDSTlIljsJ", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 475, "source": "Twitter Web Client", "id_str": "620606609933398017", "is_retweet": false}, {"created_at": "Mon Dec 21 14:01:50 +0000 2015", "text": "The president has to keep families safe and make the economy grow for everyone\u2014not just those at the top.\nhttps://t.co/xUVnMrA3zh", "in_reply_to_screen_name": null, "retweet_count": 703, "favorite_count": 1423, "source": "Twitter Web Client", "id_str": "678938429896306688", "is_retweet": false}, {"created_at": "Thu Oct 15 16:45:35 +0000 2015", "text": "\"Comprehensive immigration reform where we bring people out of the shadows will be good for our economy.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 377, "favorite_count": 632, "source": "TweetDeck", "id_str": "654699651614928898", "is_retweet": false}, {"created_at": "Thu Nov 19 16:56:59 +0000 2015", "text": "Hillary on confronting an ideology of hate: https://t.co/Hl6iKdsdQY", "in_reply_to_screen_name": null, "retweet_count": 1786, "favorite_count": 2639, "source": "TweetDeck", "id_str": "667386095601115136", "is_retweet": false}, {"created_at": "Thu Jun 04 22:41:33 +0000 2015", "text": "\u2714\ufe0f Automatic registration\n\u2714\ufe0f More early voting\n\u2714\ufe0f Fix Voting Rights Act\n\nRead Hillary's plan to expand voting rights: http://t.co/xLaP7ZbwMc", "in_reply_to_screen_name": null, "retweet_count": 659, "favorite_count": 900, "source": "TweetDeck", "id_str": "606591647271387136", "is_retweet": false}, {"created_at": "Sun Nov 22 19:33:59 +0000 2015", "text": "How will Hillary\u2019s college plan help you? Find out with this flowchart: https://t.co/7oBYrlK8VS https://t.co/1GnJLqlzei", "in_reply_to_screen_name": null, "retweet_count": 401, "favorite_count": 743, "source": "Twitter Web Client", "id_str": "668512771215114241", "is_retweet": false}, {"created_at": "Sat Jul 04 14:09:23 +0000 2015", "text": "Happy Fourth of July! http://t.co/imqDsCjsK8", "in_reply_to_screen_name": null, "retweet_count": 1062, "favorite_count": 1797, "source": "Twitter Web Client", "id_str": "617334393833693184", "is_retweet": false}, {"created_at": "Thu Sep 03 12:06:39 +0000 2015", "text": "\"We should be saying that enough is enough.\u201d Read Hillary's plan to address America\u2019s substance use epidemic: http://t.co/t8sDgsOgZS", "in_reply_to_screen_name": null, "retweet_count": 223, "favorite_count": 366, "source": "Twitter for iPhone", "id_str": "639409167653031936", "is_retweet": false}, {"created_at": "Mon Oct 26 12:07:06 +0000 2015", "text": "Hillary is fighting for all of us. #IDPJJ https://t.co/VG2IKJItST", "in_reply_to_screen_name": null, "retweet_count": 617, "favorite_count": 1340, "source": "TweetDeck", "id_str": "658615834554732545", "is_retweet": false}, {"created_at": "Sat Dec 12 21:31:20 +0000 2015", "text": "The Paris climate agreement is an historic step. We don't have to choose between economic growth &amp; protecting our planet\u2014we can do both. -H", "in_reply_to_screen_name": null, "retweet_count": 1589, "favorite_count": 2536, "source": "TweetDeck", "id_str": "675790058734141441", "is_retweet": false}, {"created_at": "Sun Aug 16 18:13:33 +0000 2015", "text": "I am deeply saddened by the passing of Julian Bond. We owe him a debt of gratitude for his fight for equality and justice. -H", "in_reply_to_screen_name": null, "retweet_count": 602, "favorite_count": 1414, "source": "Twitter Web Client", "id_str": "632978518322888704", "is_retweet": false}, {"created_at": "Thu Aug 06 17:12:11 +0000 2015", "text": "Watching the #GOPdebate tonight? Follow @TheBriefing2016 for fact checks and more.", "in_reply_to_screen_name": null, "retweet_count": 301, "favorite_count": 446, "source": "Twitter Web Client", "id_str": "629339197518839809", "is_retweet": false}, {"created_at": "Thu Jul 30 15:27:59 +0000 2015", "text": "Medicare and Medicaid have saved lives for half a century. An attack on them is an attack on seniors and vulnerable Americans. -H", "in_reply_to_screen_name": null, "retweet_count": 642, "favorite_count": 1090, "source": "Twitter Web Client", "id_str": "626776257041158144", "is_retweet": false}, {"created_at": "Wed Oct 28 19:43:58 +0000 2015", "text": ".@clairecmc on what a GOP president means for women: \u201cJune Cleaver? Would people get that?\u201d https://t.co/sYWtTuHgGf https://t.co/1Z34B6koES", "in_reply_to_screen_name": null, "retweet_count": 220, "favorite_count": 471, "source": "TweetDeck", "id_str": "659455586111766528", "is_retweet": false}, {"created_at": "Sun Nov 15 03:51:45 +0000 2015", "text": "\"I think the president's job is to do everything possible\u2014everything she can do\u2014to lift up the people of this country.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1540, "favorite_count": 3287, "source": "TweetDeck", "id_str": "665738933116862464", "is_retweet": false}, {"created_at": "Thu Sep 17 15:26:44 +0000 2015", "text": "Trump: \"Are you writing all this down?\"\n\nHillary: \"Let me grab my pen...\"\nhttps://t.co/PwuDVvfVEu", "in_reply_to_screen_name": null, "retweet_count": 4639, "favorite_count": 6409, "source": "Twitter Web Client", "id_str": "644532949338099712", "is_retweet": false}, {"created_at": "Mon Jun 29 00:44:24 +0000 2015", "text": "Chip in now, and you can always say you were one of the very first donors of the #Hillary2016 campaign: http://t.co/QutSL0wtJc", "in_reply_to_screen_name": null, "retweet_count": 106, "favorite_count": 265, "source": "TweetDeck", "id_str": "615319871895683072", "is_retweet": false}, {"created_at": "Thu Jul 30 14:32:15 +0000 2015", "text": "Are you on Team Hillary? Chip in $1, and get your official limited-edition supporter card: http://t.co/kYi2GzsT7y http://t.co/MUL8GUJ7qZ", "in_reply_to_screen_name": null, "retweet_count": 159, "favorite_count": 265, "source": "TweetDeck", "id_str": "626762233184452608", "is_retweet": false}, {"created_at": "Thu Oct 22 14:42:13 +0000 2015", "text": "\"Efforts to establish a modern joint training center are being held up by Congress. The men and women who serve our country deserve better.\"", "in_reply_to_screen_name": null, "retweet_count": 206, "favorite_count": 376, "source": "TweetDeck", "id_str": "657205322000564224", "is_retweet": false}, {"created_at": "Sun Dec 20 02:11:26 +0000 2015", "text": "We can't allow terrorists to intimidate us into abandoning our values\u2014that's not who we are as Americans. We're better than that. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 844, "favorite_count": 1658, "source": "TweetDeck", "id_str": "678397263706738689", "is_retweet": false}, {"created_at": "Tue Apr 21 23:00:56 +0000 2015", "text": "Taking in Democratic history in New Hampshire. http://t.co/JJz24pOKhh", "in_reply_to_screen_name": null, "retweet_count": 706, "favorite_count": 2077, "source": "Twitter Web Client", "id_str": "590651459248779264", "is_retweet": false}, {"created_at": "Tue May 05 00:21:31 +0000 2015", "text": "Put your social media savvy to good use on the digital team at #Hillary2016 HQ: http://t.co/tzxUMkZvhR http://t.co/atUeVBRewf", "in_reply_to_screen_name": null, "retweet_count": 281, "favorite_count": 487, "source": "Twitter Web Client", "id_str": "595382782983016451", "is_retweet": false}, {"created_at": "Fri Dec 04 22:26:16 +0000 2015", "text": "Every Republican senator running for president voted against making it harder for suspected terrorists to get a gun. https://t.co/UPBRimdSAL", "in_reply_to_screen_name": null, "retweet_count": 1115, "favorite_count": 1351, "source": "TweetDeck", "id_str": "672904781413896197", "is_retweet": false}, {"created_at": "Sat Jun 13 20:08:51 +0000 2015", "text": "\u00a1Inscr\u00edbete para recibir textos de Hillary y su campa\u00f1a! Mande \"IR\" a 47246. #Hillary2016 http://t.co/pMsaRROc72", "in_reply_to_screen_name": null, "retweet_count": 279, "favorite_count": 378, "source": "Twitter Web Client", "id_str": "609814712403001344", "is_retweet": false}, {"created_at": "Thu Dec 31 14:02:26 +0000 2015", "text": "We need to make it easier for women to get ahead at work while still being there for their families.", "in_reply_to_screen_name": null, "retweet_count": 863, "favorite_count": 2419, "source": "Twitter for iPhone", "id_str": "682562460184870912", "is_retweet": false}, {"created_at": "Fri Jul 17 23:49:27 +0000 2015", "text": "All smiles. http://t.co/EDi1mVrtgH", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 1084, "source": "TweetDeck", "id_str": "622191415020400640", "is_retweet": false}, {"created_at": "Fri Jun 05 22:11:06 +0000 2015", "text": "Hillary's plans for ensuring every citizen can vote without barriers\u2014in 72 seconds:\nhttps://t.co/wAxZL49eTY", "in_reply_to_screen_name": null, "retweet_count": 634, "favorite_count": 856, "source": "Twitter Web Client", "id_str": "606946374995709953", "is_retweet": false}, {"created_at": "Wed Dec 09 14:08:47 +0000 2015", "text": "\"What you\u2019re hearing from Trump and other Republicans is absolutely, unequivocally wrong.\" Read Hillary's letter: https://t.co/UWQfE0F0hK", "in_reply_to_screen_name": null, "retweet_count": 739, "favorite_count": 1218, "source": "Twitter for iPhone", "id_str": "674591526526275584", "is_retweet": false}, {"created_at": "Sun Nov 15 05:48:45 +0000 2015", "text": "Girl Scouts stick together.  https://t.co/PEulNsoNz6", "in_reply_to_screen_name": null, "retweet_count": 267, "favorite_count": 949, "source": "Twitter for iPhone", "id_str": "665768379236618240", "is_retweet": false}, {"created_at": "Tue Oct 20 12:06:06 +0000 2015", "text": "WATCH: As Sec. of State, Hillary paved the way for the deal that will stop Iran from ever getting a nuclear weapon. https://t.co/OCcqTwsonz", "in_reply_to_screen_name": null, "retweet_count": 370, "favorite_count": 557, "source": "TweetDeck", "id_str": "656441255635738624", "is_retweet": false}, {"created_at": "Tue Sep 08 15:19:54 +0000 2015", "text": "Hillary is committed to overturning Citizens United, the case that helped unleash secret money into U.S. elections. http://t.co/aWC2PNTj9C", "in_reply_to_screen_name": null, "retweet_count": 476, "favorite_count": 754, "source": "TweetDeck", "id_str": "641269736731475968", "is_retweet": false}, {"created_at": "Sun Dec 13 00:37:31 +0000 2015", "text": "Secretary of state, presidential candidate, Grammy winner. More surprising facts about Hillary here: https://t.co/THL93Ojedg", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 907, "source": "TweetDeck", "id_str": "675836915283791872", "is_retweet": false}, {"created_at": "Mon May 11 16:01:06 +0000 2015", "text": "Note to selfie: Join #Hillary2016 today. http://t.co/Nn8QJRe1kw http://t.co/HBGBkHTwTT", "in_reply_to_screen_name": null, "retweet_count": 248, "favorite_count": 557, "source": "Twitter Web Client", "id_str": "597793561225076736", "is_retweet": false}, {"created_at": "Sat Oct 24 20:19:53 +0000 2015", "text": "SO EXCITED to see @katyperry\u2014but while we wait, she's taking over Hillary's Instagram! https://t.co/FMBZnWcMdY https://t.co/fJkSnaLGZ7", "in_reply_to_screen_name": null, "retweet_count": 406, "favorite_count": 838, "source": "Twitter for iPhone", "id_str": "658015074842517504", "is_retweet": false}, {"created_at": "Wed Aug 19 15:54:30 +0000 2015", "text": ".@SenatorHarkin: Hillary's a fighter \u201cfor those who have dreams.\u201d\nhttps://t.co/kHXxzGOH53", "in_reply_to_screen_name": null, "retweet_count": 343, "favorite_count": 587, "source": "Twitter Web Client", "id_str": "634030686647619584", "is_retweet": false}, {"created_at": "Mon Sep 14 17:38:50 +0000 2015", "text": "RT to join Hillary in telling survivors of sexual assault: We're with you. http://t.co/VmqaI7YQDu", "in_reply_to_screen_name": null, "retweet_count": 703, "favorite_count": 778, "source": "TweetDeck", "id_str": "643479030407262208", "is_retweet": false}, {"created_at": "Sun Jun 28 21:04:53 +0000 2015", "text": "Paws up. Get the look: http://t.co/RNgCdXQgKH @ladygaga http://t.co/QldW53nIN7", "in_reply_to_screen_name": null, "retweet_count": 932, "favorite_count": 2079, "source": "Twitter Web Client", "id_str": "615264631930638336", "is_retweet": false}, {"created_at": "Mon Jun 29 13:00:04 +0000 2015", "text": "Celebrate history with a free sticker! Just tell us where to send it: http://t.co/ZjEMZEW74y #lovewins http://t.co/t2WYHzedwg", "in_reply_to_screen_name": null, "retweet_count": 365, "favorite_count": 785, "source": "Twitter Web Client", "id_str": "615505011162918912", "is_retweet": false}, {"created_at": "Thu Jun 04 20:29:27 +0000 2015", "text": "\"We should implement...commonsense reforms, including expanding early, absentee, and mail voting.\"", "in_reply_to_screen_name": null, "retweet_count": 179, "favorite_count": 348, "source": "Twitter Web Client", "id_str": "606558404765614082", "is_retweet": false}, {"created_at": "Thu Sep 17 14:46:48 +0000 2015", "text": "Heading to New Hampshire and just read that there's an emu on the loose! Seems like a story with legs. -H http://t.co/DftYf4omsY", "in_reply_to_screen_name": null, "retweet_count": 379, "favorite_count": 880, "source": "TweetDeck", "id_str": "644522901081866240", "is_retweet": false}, {"created_at": "Tue May 26 19:19:33 +0000 2015", "text": "Today we celebrate Sally Ride\u2014a pioneer who showed generations of girls that the sky is no longer the limit. http://t.co/Hk3Ywz62lO", "in_reply_to_screen_name": null, "retweet_count": 1266, "favorite_count": 2139, "source": "TweetDeck", "id_str": "603279321688571905", "is_retweet": false}, {"created_at": "Thu Jul 23 14:00:53 +0000 2015", "text": "Last week, Hillary laid out her plan for an economy that works for everyone. Read her speech: http://t.co/2ta3l1zMU8 http://t.co/gTwk38ncS3", "in_reply_to_screen_name": null, "retweet_count": 328, "favorite_count": 542, "source": "Twitter Web Client", "id_str": "624217624503844864", "is_retweet": false}, {"created_at": "Mon Nov 30 17:57:07 +0000 2015", "text": "Una historia de amor. https://t.co/M8uZ5OWcvO", "in_reply_to_screen_name": null, "retweet_count": 180, "favorite_count": 528, "source": "TweetDeck", "id_str": "671387498057236480", "is_retweet": false}, {"created_at": "Fri Dec 04 13:17:37 +0000 2015", "text": "Now the most qualified can serve in any military role, regardless of gender\u2014as it should be. -H \nhttps://t.co/vqFbAHCAqw", "in_reply_to_screen_name": null, "retweet_count": 879, "favorite_count": 2250, "source": "TweetDeck", "id_str": "672766708340363264", "is_retweet": false}, {"created_at": "Wed Mar 18 00:05:06 +0000 2015", "text": "Our nation's future - jobs &amp; economic growth - depends on investments made today. The GOP budget fails Americans on these principles.", "in_reply_to_screen_name": null, "retweet_count": 1186, "favorite_count": 1836, "source": "Twitter Web Client", "id_str": "577984032857829377", "is_retweet": false}, {"created_at": "Tue Aug 11 23:41:28 +0000 2015", "text": "Republicans like Gov. Walker are making it harder to afford college &amp; pay off debt. Hillary says that\u2019s wrong\u2014watch:\nhttps://t.co/5MUicqTUTm", "in_reply_to_screen_name": null, "retweet_count": 698, "favorite_count": 1160, "source": "Twitter Web Client", "id_str": "631249101913354240", "is_retweet": false}, {"created_at": "Tue Jul 21 00:43:29 +0000 2015", "text": "Gov. Walker signed dangerous abortion restrictions into law in WI - without exceptions for rape or incest. Extreme and unacceptable. -H", "in_reply_to_screen_name": null, "retweet_count": 1587, "favorite_count": 2975, "source": "Twitter Web Client", "id_str": "623292174894002176", "is_retweet": false}, {"created_at": "Sun Jun 14 15:36:30 +0000 2015", "text": "Hillary to 650+ house parties nationwide: \"It's about you, about us, about all the people who deserve a champion.\" http://t.co/WqkoF0ZZzC", "in_reply_to_screen_name": null, "retweet_count": 315, "favorite_count": 743, "source": "Twitter for iPhone", "id_str": "610108558290489344", "is_retweet": false}, {"created_at": "Tue Jun 30 19:04:14 +0000 2015", "text": "Just pinned to our \"Women Who Inspire\" board: the newest principal ballerina at @ABTBallet. Congrats, @mistyonpointe! http://t.co/7CHabDGyvk", "in_reply_to_screen_name": null, "retweet_count": 606, "favorite_count": 1231, "source": "Twitter Web Client", "id_str": "615959041454555136", "is_retweet": false}, {"created_at": "Wed May 13 17:41:16 +0000 2015", "text": "When workers don't have to choose between staying healthy and staying on the job, it helps everyone. \ud83d\udc4d, @facebook: http://t.co/5KzbhqVqNe", "in_reply_to_screen_name": null, "retweet_count": 289, "favorite_count": 567, "source": "TweetDeck", "id_str": "598543544652009472", "is_retweet": false}, {"created_at": "Thu Jun 04 20:19:14 +0000 2015", "text": "Pop quiz: Which of the following forms of ID can you use to vote in Texas? http://t.co/Jj3qtSHbLu", "in_reply_to_screen_name": null, "retweet_count": 826, "favorite_count": 832, "source": "TweetDeck", "id_str": "606555831211933697", "is_retweet": false}, {"created_at": "Tue Jun 02 21:13:54 +0000 2015", "text": "Don't miss this. http://t.co/mGi3gb7ttI http://t.co/M3qB3wzdCO", "in_reply_to_screen_name": null, "retweet_count": 239, "favorite_count": 439, "source": "TweetDeck", "id_str": "605844812965617664", "is_retweet": false}, {"created_at": "Mon Jul 13 21:15:33 +0000 2015", "text": "\"The defining economic challenge of our time is clear: We must raise wages for hard-working Americans.\"", "in_reply_to_screen_name": null, "retweet_count": 338, "favorite_count": 577, "source": "Twitter Web Client", "id_str": "620703132822147072", "is_retweet": false}, {"created_at": "Fri Oct 09 02:02:02 +0000 2015", "text": "If you work on Wall Street and commit a crime, you deserve to go to jail. http://t.co/3ZwT2C7MjG http://t.co/eoA6jneibw", "in_reply_to_screen_name": null, "retweet_count": 646, "favorite_count": 1139, "source": "TweetDeck", "id_str": "652302972714508288", "is_retweet": false}, {"created_at": "Mon Jul 06 15:44:40 +0000 2015", "text": "Still celebrating? Enjoy the ultimate playlist for champions\u2014inspired by Team #USA: http://t.co/CoaFoju6ch http://t.co/9bd2zC7lB9", "in_reply_to_screen_name": null, "retweet_count": 183, "favorite_count": 443, "source": "TweetDeck", "id_str": "618083146408558592", "is_retweet": false}, {"created_at": "Sun Jul 26 16:18:27 +0000 2015", "text": "Adam's teacher said, \"We\u2019ll make it happen\u2014that's our job.\" The rest is history. He has loved, loved it.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 58, "favorite_count": 211, "source": "Twitter Web Client", "id_str": "625339406610747392", "is_retweet": false}, {"created_at": "Thu Oct 29 01:19:13 +0000 2015", "text": "Commercial break: Hillary wants to make college affordable for every American. Republicans? #GOPdebate\nhttps://t.co/f5iUYZ8Ysp", "in_reply_to_screen_name": null, "retweet_count": 476, "favorite_count": 789, "source": "Twitter Web Client", "id_str": "659539952825270273", "is_retweet": false}, {"created_at": "Mon Dec 07 17:54:52 +0000 2015", "text": "On the date that will live forever in infamy, we honor the sacrifice and courage of all who bravely fought and died at #PearlHarbor.", "in_reply_to_screen_name": null, "retweet_count": 899, "favorite_count": 2243, "source": "TweetDeck", "id_str": "673923643701927937", "is_retweet": false}, {"created_at": "Fri Nov 20 23:51:18 +0000 2015", "text": "DAPA would keep millions of law-abiding families together\u2014and its fate is in the hands of the next president. https://t.co/jzUo3kpRTb", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 526, "source": "TweetDeck", "id_str": "667852749200105472", "is_retweet": false}, {"created_at": "Thu Oct 08 23:11:54 +0000 2015", "text": "Hillary at #CHCI to Republican candidates: Basta. Enough. http://t.co/AiJh6ym58S", "in_reply_to_screen_name": null, "retweet_count": 319, "favorite_count": 538, "source": "Twitter Web Client", "id_str": "652260156693213184", "is_retweet": false}, {"created_at": "Fri Nov 27 01:03:31 +0000 2015", "text": "Our diversity should be celebrated\u2014not denigrated. https://t.co/PttGbVx4SJ", "in_reply_to_screen_name": null, "retweet_count": 1221, "favorite_count": 2544, "source": "Twitter Web Client", "id_str": "670045251365675009", "is_retweet": false}, {"created_at": "Sun Oct 11 21:33:52 +0000 2015", "text": "\u201cI\u2019ve told @KanyeWest that he might want to wait.\u201d Hillary to @AnotherRound\u2014listen to the full interview tonight. https://t.co/MAnqd9GyCl", "in_reply_to_screen_name": null, "retweet_count": 355, "favorite_count": 716, "source": "Twitter Web Client", "id_str": "653322648248827904", "is_retweet": false}, {"created_at": "Mon Sep 14 02:24:13 +0000 2015", "text": "It\u2019s time we recognize that we have a drug and alcohol addiction epidemic on our hands\u2014and act to address it. http://t.co/t8sDgsOgZS", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 423, "favorite_count": 862, "source": "TweetDeck", "id_str": "643248857380487168", "is_retweet": false}, {"created_at": "Sun Dec 13 17:12:35 +0000 2015", "text": "A Republican president could nominate as many as four Supreme Court justices. Why that should terrify you: https://t.co/fAomrcfRiW", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 1521, "source": "TweetDeck", "id_str": "676087329992392704", "is_retweet": false}, {"created_at": "Wed Nov 11 04:05:57 +0000 2015", "text": "Newsflash: You don\u2019t have to be a scientist to know that climate change is real, and act to combat it. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 960, "favorite_count": 2103, "source": "TweetDeck", "id_str": "664292956208103425", "is_retweet": false}, {"created_at": "Thu Dec 10 02:04:20 +0000 2015", "text": "Families need to focus on caring for their loved ones\u2014not paying for health care.\nhttps://t.co/TLFhF0KL58", "in_reply_to_screen_name": null, "retweet_count": 531, "favorite_count": 996, "source": "Twitter Web Client", "id_str": "674771597895438336", "is_retweet": false}, {"created_at": "Mon Jul 13 21:06:50 +0000 2015", "text": "Hillary hablar\u00e1 acerca de c\u00f3mo podemos ayudar a las familias salir adelante. Vean el discurso en #NCLR15 en vivo: http://t.co/cUpomR7y7t", "in_reply_to_screen_name": null, "retweet_count": 145, "favorite_count": 274, "source": "Twitter Web Client", "id_str": "620700939306037248", "is_retweet": false}, {"created_at": "Wed Aug 05 14:01:26 +0000 2015", "text": "\"We\u2019ve had a lot of grandfathers in the White House, but we haven\u2019t had a grandmother.\" \u2014Hillary at @scdp: http://t.co/4hbdtxe4Ya", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 1112, "source": "Twitter Web Client", "id_str": "628928803239272448", "is_retweet": false}, {"created_at": "Sun Dec 20 01:58:41 +0000 2015", "text": "Reason #88: The NRA has never helped Hillary get elected. https://t.co/I7cSwLqlEq #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 419, "favorite_count": 830, "source": "TweetDeck", "id_str": "678394056817381380", "is_retweet": false}, {"created_at": "Mon Sep 14 20:17:00 +0000 2015", "text": "Unions help keep working families strong. Scott Walker's attacks on unions and workers' rights aren't leadership\u2014they're bullying. -H", "in_reply_to_screen_name": null, "retweet_count": 829, "favorite_count": 1177, "source": "TweetDeck", "id_str": "643518832120856576", "is_retweet": false}, {"created_at": "Sun Nov 08 22:13:44 +0000 2015", "text": "\u201cThis has to end.\u201d Hillary on gun violence at the First in the South Democratic Candidates Forum.\nhttps://t.co/OrbVa5rXio", "in_reply_to_screen_name": null, "retweet_count": 582, "favorite_count": 1174, "source": "Twitter Web Client", "id_str": "663479542325997568", "is_retweet": false}, {"created_at": "Fri May 22 00:33:33 +0000 2015", "text": "See you soon, New Hampshire! https://t.co/OL47PUbGOE", "in_reply_to_screen_name": null, "retweet_count": 122, "favorite_count": 291, "source": "TweetDeck", "id_str": "601546403857436672", "is_retweet": false}, {"created_at": "Wed Sep 16 18:36:28 +0000 2015", "text": "Congress must reauthorize the Zadroga Act. We owe it to 9/11 responders to provide them with the care they need. #renew911health", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 777, "source": "Twitter Web Client", "id_str": "644218307751583744", "is_retweet": false}, {"created_at": "Mon Oct 12 15:25:56 +0000 2015", "text": "Sending support to Tamir Rice's loved ones. Too many black families are mourning the loss of a child. We need to change that reality. -H", "in_reply_to_screen_name": null, "retweet_count": 1821, "favorite_count": 2544, "source": "TweetDeck", "id_str": "653592446140555264", "is_retweet": false}, {"created_at": "Fri Aug 07 03:20:53 +0000 2015", "text": "RT if you're prouder than ever to be on Team Hillary. http://t.co/3ljORlSvHw", "in_reply_to_screen_name": null, "retweet_count": 2958, "favorite_count": 4017, "source": "Twitter Web Client", "id_str": "629492381361029120", "is_retweet": false}, {"created_at": "Thu Aug 27 01:33:04 +0000 2015", "text": "Equal pay, paid leave, childcare: These aren't just \"women's issues,\" they're family issues and economic issues. #WomensEqualityDay", "in_reply_to_screen_name": null, "retweet_count": 2391, "favorite_count": 4041, "source": "Twitter for iPhone", "id_str": "636713003044466688", "is_retweet": false}, {"created_at": "Tue Oct 13 12:12:16 +0000 2015", "text": "Today we celebrate Dolores Huerta\u2014teacher, organizer, activist\u2014for her civic leadership and trailblazing spirit. http://t.co/5rWRDcy3O1", "in_reply_to_screen_name": null, "retweet_count": 887, "favorite_count": 1255, "source": "TweetDeck", "id_str": "653906095006720000", "is_retweet": false}, {"created_at": "Tue Jul 21 22:23:14 +0000 2015", "text": "Congrats, @BeckyHammon\u2014first woman head coach in the NBA Summer League, and the first woman to win it. (Coincidence?) http://t.co/fAxWYYAUyw", "in_reply_to_screen_name": null, "retweet_count": 1352, "favorite_count": 2209, "source": "Twitter Web Client", "id_str": "623619267280420864", "is_retweet": false}, {"created_at": "Fri Nov 20 13:57:44 +0000 2015", "text": "This is shocking rhetoric. It should be denounced by all seeking to lead this country. -H \nhttps://t.co/qs2TJI5spu", "in_reply_to_screen_name": null, "retweet_count": 3259, "favorite_count": 4950, "source": "Twitter for iPhone", "id_str": "667703375035789312", "is_retweet": false}, {"created_at": "Sat Apr 18 16:15:43 +0000 2015", "text": "Hillary for America. Let\u2019s go. http://t.co/fUVDvl4rKz", "in_reply_to_screen_name": null, "retweet_count": 963, "favorite_count": 1854, "source": "Twitter Web Client", "id_str": "589462318242725888", "is_retweet": false}, {"created_at": "Tue Dec 01 21:31:51 +0000 2015", "text": "\"We need to put a limit on what Americans are paying out-of-pocket for their medications.\" Hillary on @Quora \u2192 https://t.co/QlJAW3NbWH", "in_reply_to_screen_name": null, "retweet_count": 253, "favorite_count": 634, "source": "TweetDeck", "id_str": "671803925301972993", "is_retweet": false}, {"created_at": "Thu Dec 10 21:31:51 +0000 2015", "text": "Tell @SenateMajLdr to bring a vote on the #ZadrogaAct for 9/11 responders. Their sacrifice deserves our commitment to their health. -H", "in_reply_to_screen_name": null, "retweet_count": 814, "favorite_count": 1221, "source": "TweetDeck", "id_str": "675065415257743361", "is_retweet": false}, {"created_at": "Fri Oct 16 17:58:57 +0000 2015", "text": "Brava, Jennifer. It's hard to speak up against inequity and risk being unpopular\u2014but equal pay matters for us all. http://t.co/g29cRkq5ln", "in_reply_to_screen_name": null, "retweet_count": 1274, "favorite_count": 2360, "source": "TweetDeck", "id_str": "655080503599591424", "is_retweet": false}, {"created_at": "Mon Sep 28 19:33:02 +0000 2015", "text": ".@NASA has found water on Mars. There is no limit to what we can discover when we explore, ask questions, and listen to science.", "in_reply_to_screen_name": null, "retweet_count": 940, "favorite_count": 1948, "source": "TweetDeck", "id_str": "648581200458612736", "is_retweet": false}, {"created_at": "Wed May 27 22:55:51 +0000 2015", "text": "Hillary on equal pay: \"This is not a women\u2019s issue. This is a family issue. This is an American economic issue.\" http://t.co/DY32ByokFW", "in_reply_to_screen_name": null, "retweet_count": 981, "favorite_count": 1584, "source": "TweetDeck", "id_str": "603696142044557312", "is_retweet": false}, {"created_at": "Mon Sep 14 16:08:45 +0000 2015", "text": "\u201cWe can\u2019t stop the world from changing, but we can help to shape those changes.\" Hillary and the Iran Deal:\nhttps://t.co/AcpXl6HS5r", "in_reply_to_screen_name": null, "retweet_count": 381, "favorite_count": 579, "source": "Twitter Web Client", "id_str": "643456357874593792", "is_retweet": false}, {"created_at": "Sat Aug 29 15:03:00 +0000 2015", "text": "A strong America depends on strong rural communities. Learn more: http://t.co/q9Qjhvyrtp http://t.co/5yV7w8nT07", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 728, "source": "Twitter Web Client", "id_str": "637641605688786944", "is_retweet": false}, {"created_at": "Sun May 24 15:37:34 +0000 2015", "text": "Stopping for ice cream in Derry, NH. (Where else?) http://t.co/Z1ZAuoUUCH", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 1027, "source": "TweetDeck", "id_str": "602498680801894400", "is_retweet": false}, {"created_at": "Fri Jul 31 16:03:51 +0000 2015", "text": "Closer ties across Latin America will help our economy at home, and strengthen our influence around the world. http://t.co/RBVgYpGcGu", "in_reply_to_screen_name": null, "retweet_count": 253, "favorite_count": 404, "source": "TweetDeck", "id_str": "627147672898699264", "is_retweet": false}, {"created_at": "Tue Oct 27 02:49:21 +0000 2015", "text": "The GOP should stop trying to roll back consumer protections\u2014standing with @POTUS to defend middle class savings. -H https://t.co/fi0BaHq013", "in_reply_to_screen_name": null, "retweet_count": 392, "favorite_count": 794, "source": "TweetDeck", "id_str": "658837861236678656", "is_retweet": false}, {"created_at": "Wed Dec 02 00:51:47 +0000 2015", "text": ".@SenatorBarb: U. R. The. Best. https://t.co/lBZTGLymXq", "in_reply_to_screen_name": null, "retweet_count": 238, "favorite_count": 603, "source": "Twitter Web Client", "id_str": "671854236200738816", "is_retweet": false}, {"created_at": "Wed Sep 02 16:34:51 +0000 2015", "text": "Starting now! Ask policy experts @mayaharris_ &amp; @sarasolow your questions: http://t.co/LtTRauX0kP https://t.co/Hk1uMgXVWQ", "in_reply_to_screen_name": null, "retweet_count": 103, "favorite_count": 191, "source": "TweetDeck", "id_str": "639114271788503040", "is_retweet": false}, {"created_at": "Mon Jun 01 22:06:17 +0000 2015", "text": "Sew true. \n\n(via @LeighAnnKopans) http://t.co/4s04TvCJHr", "in_reply_to_screen_name": null, "retweet_count": 3486, "favorite_count": 5772, "source": "TweetDeck", "id_str": "605495610158903297", "is_retweet": false}, {"created_at": "Thu Nov 05 00:54:37 +0000 2015", "text": "Guilty as charged. \ud83c\udf55 https://t.co/qnKHHsAUE2", "in_reply_to_screen_name": null, "retweet_count": 1381, "favorite_count": 2220, "source": "TweetDeck", "id_str": "662070477737893888", "is_retweet": false}, {"created_at": "Thu Apr 16 21:58:29 +0000 2015", "text": "#tbt: Wellesley in the '60s. http://t.co/nyl7Ln1DkM", "in_reply_to_screen_name": null, "retweet_count": 649, "favorite_count": 2038, "source": "Twitter Web Client", "id_str": "588823804559888384", "is_retweet": false}, {"created_at": "Fri Oct 02 21:11:55 +0000 2015", "text": "\"Republicans keep refusing to do anything to protect our communities. They put the NRA ahead of American families. It is wrong.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 1340, "favorite_count": 2543, "source": "Twitter Web Client", "id_str": "650055634298236928", "is_retweet": false}, {"created_at": "Tue Dec 15 22:09:17 +0000 2015", "text": "\"Promising to carpet bomb until the desert glows doesn\u2019t make you sound strong\u2014it makes you sound like you\u2019re in over your head.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 809, "favorite_count": 1441, "source": "TweetDeck", "id_str": "676886771913895940", "is_retweet": false}, {"created_at": "Tue Sep 01 00:04:51 +0000 2015", "text": "20 years ago, Hillary gave her historic speech to the United Nations Women\u2019s Conference. #Beijing20\nhttps://t.co/aqf58ZbScH", "in_reply_to_screen_name": null, "retweet_count": 771, "favorite_count": 1292, "source": "Twitter Web Client", "id_str": "638502741837373440", "is_retweet": false}, {"created_at": "Tue May 19 00:48:06 +0000 2015", "text": "Fireside chat in Mason City, Iowa. http://t.co/QQo3PvXWZL", "in_reply_to_screen_name": null, "retweet_count": 293, "favorite_count": 748, "source": "TweetDeck", "id_str": "600462901669945344", "is_retweet": false}, {"created_at": "Fri Aug 21 16:17:09 +0000 2015", "text": "A dad in TX is taking over our Instagram today. See how Hillary's college plan will help him: http://t.co/N09gfgmFmN http://t.co/FQyIvX23Jp", "in_reply_to_screen_name": null, "retweet_count": 220, "favorite_count": 539, "source": "Twitter Web Client", "id_str": "634761165575483392", "is_retweet": false}, {"created_at": "Sat Dec 05 22:34:19 +0000 2015", "text": "\"I\u2019m not going to let anybody undermine collective bargaining rights or prevailing wage standards.\" \u2014Hillary https://t.co/YnDkHbJoLZ", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 1189, "source": "TweetDeck", "id_str": "673269196172558336", "is_retweet": false}, {"created_at": "Thu Aug 27 22:37:28 +0000 2015", "text": "Politics are hard. But when it comes to gun violence, we cannot give up. We cannot sit by while more good people die. We must keep going.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 944, "favorite_count": 1820, "source": "TweetDeck", "id_str": "637031200952090624", "is_retweet": false}, {"created_at": "Tue Oct 27 17:03:28 +0000 2015", "text": "There is no excuse for violence inside a school. The #AssaultAtSpringValleyHigh is unacceptable\u2014schools should be safe places. -H", "in_reply_to_screen_name": null, "retweet_count": 4798, "favorite_count": 5496, "source": "TweetDeck", "id_str": "659052809074180096", "is_retweet": false}, {"created_at": "Thu Sep 03 17:07:17 +0000 2015", "text": "\u201cI knew we were watching history being made.\u201d What it was like to be there when Hillary stood up for women worldwide: http://t.co/8OCn3BW2x9", "in_reply_to_screen_name": null, "retweet_count": 241, "favorite_count": 445, "source": "TweetDeck", "id_str": "639484822273064960", "is_retweet": false}, {"created_at": "Sat Aug 08 00:13:30 +0000 2015", "text": "Hillary's fighting for immigration reform that keeps families together. Read the Facebook Q&amp;A: http://t.co/EVdGCtDdSD http://t.co/GvP88HlAQ8", "in_reply_to_screen_name": null, "retweet_count": 532, "favorite_count": 931, "source": "Twitter Web Client", "id_str": "629807612146647040", "is_retweet": false}, {"created_at": "Fri Sep 04 12:02:15 +0000 2015", "text": "\"When Hillary Clinton cares deeply about something, she is more than willing to be bold and take risks.\" http://t.co/IwRR3Kf01u #Beijing20", "in_reply_to_screen_name": null, "retweet_count": 355, "favorite_count": 567, "source": "Twitter for iPhone", "id_str": "639770445852639232", "is_retweet": false}, {"created_at": "Sun Nov 15 04:00:16 +0000 2015", "text": "Stand with Hillary and sign up to get a free #ImWithHer sticker in the mail: https://t.co/BOSoratpZ9 https://t.co/vjH1ATC96g", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 1241, "source": "Twitter Web Client", "id_str": "665741078847352833", "is_retweet": false}, {"created_at": "Mon Jun 01 16:10:12 +0000 2015", "text": "T-minus 5 minutes until the location of the official #Hillary2016 launch will be announced\u2014right here.", "in_reply_to_screen_name": null, "retweet_count": 149, "favorite_count": 438, "source": "TweetDeck", "id_str": "605405996643708928", "is_retweet": false}, {"created_at": "Mon Jun 29 17:13:07 +0000 2015", "text": "Fun in the sun\u2014#Hillary2016 style. Shop the all-new summer collection: http://t.co/2yp6AyX9zG http://t.co/7lWMyVgNck", "in_reply_to_screen_name": null, "retweet_count": 114, "favorite_count": 246, "source": "TweetDeck", "id_str": "615568693674774528", "is_retweet": false}, {"created_at": "Wed Jul 08 21:02:46 +0000 2015", "text": "\"I will not quit on you. I will fight for you. I will be there for you every single day.\"\u2014Hillary (via @HillaryforIA) http://t.co/KIdjK7rDKH", "in_reply_to_screen_name": null, "retweet_count": 799, "favorite_count": 1535, "source": "TweetDeck", "id_str": "618887977540931584", "is_retweet": false}, {"created_at": "Wed Jun 24 23:09:35 +0000 2015", "text": "Happy campers. http://t.co/Q7r1SFefHY", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 704, "source": "TweetDeck", "id_str": "613846460220637184", "is_retweet": false}, {"created_at": "Tue Dec 08 02:59:50 +0000 2015", "text": "Declaring war on Islam or demonizing Muslim Americans is not only counter to our values\u2014it plays right into the hands of terrorists.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 3338, "favorite_count": 4702, "source": "TweetDeck", "id_str": "674060790492737536", "is_retweet": false}, {"created_at": "Sat Nov 07 03:00:00 +0000 2015", "text": "Si tuviera que aprender un idioma, Hillary dijo que ser\u00eda el idioma de Gabriel Garc\u00eda M\u00e1rquez. #DemForum", "in_reply_to_screen_name": null, "retweet_count": 719, "favorite_count": 965, "source": "TweetDeck", "id_str": "662826808245485569", "is_retweet": false}, {"created_at": "Wed Apr 29 23:53:09 +0000 2015", "text": "Agree that we need to address inequality and expand economic opportunity? Sign up to be part of #Hillary2016: http://t.co/o7WIZQDMjY", "in_reply_to_screen_name": null, "retweet_count": 432, "favorite_count": 953, "source": "Twitter Web Client", "id_str": "593563702001020928", "is_retweet": false}, {"created_at": "Sun Nov 15 21:12:43 +0000 2015", "text": "An artist live-sketched the second #DemDebate. Here\u2019s what caught her attention: https://t.co/O8h9zGsHje https://t.co/QYp1fzmGBM", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 733, "source": "Twitter Web Client", "id_str": "666000901363101701", "is_retweet": false}, {"created_at": "Sat May 23 16:10:03 +0000 2015", "text": "Step 1: Say you'll help Hillary out: http://t.co/jqawozfrvp\nStep 2: Have a great long weekend. http://t.co/f9DEptm4WP", "in_reply_to_screen_name": null, "retweet_count": 213, "favorite_count": 512, "source": "Twitter Web Client", "id_str": "602144471468376064", "is_retweet": false}, {"created_at": "Tue Aug 25 23:01:37 +0000 2015", "text": "Tome el quiz para ver c\u00f3mo el plan de Hillary te bajar\u00eda los costos de la universidad. Textea UNIVERSIDAD a 47246. http://t.co/HU5hzD9C76", "in_reply_to_screen_name": null, "retweet_count": 180, "favorite_count": 296, "source": "Twitter Web Client", "id_str": "636312504789041152", "is_retweet": false}, {"created_at": "Thu May 21 21:04:37 +0000 2015", "text": "Back at you, @kelly_clarkson.\n\nvia @rollingstone http://t.co/SWMU3WTbGG", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 2140, "source": "TweetDeck", "id_str": "601493825207595011", "is_retweet": false}, {"created_at": "Mon Oct 12 23:08:29 +0000 2015", "text": "\u201cOne of the merits is I am a woman.\u201d http://t.co/v3W8c6sASU", "in_reply_to_screen_name": null, "retweet_count": 653, "favorite_count": 1305, "source": "TweetDeck", "id_str": "653708850126848001", "is_retweet": false}, {"created_at": "Tue Sep 01 23:17:19 +0000 2015", "text": "Magic hour in Iowa. \ud83c\udf05 http://t.co/TqWgfbFsFL", "in_reply_to_screen_name": null, "retweet_count": 302, "favorite_count": 1027, "source": "TweetDeck", "id_str": "638853171083935745", "is_retweet": false}, {"created_at": "Sat May 02 14:13:55 +0000 2015", "text": "We\u2019re building this organization across the country, from the grassroots up. Be a part of it: http://t.co/FH5YsI0RSs http://t.co/G0ZdIrKSpp", "in_reply_to_screen_name": null, "retweet_count": 344, "favorite_count": 599, "source": "Twitter Web Client", "id_str": "594505097629011968", "is_retweet": false}, {"created_at": "Tue Nov 03 16:38:43 +0000 2015", "text": "Voting is one of our most important and sacred rights. If there's an election near you today, make your voice heard\u2014go vote! -H", "in_reply_to_screen_name": null, "retweet_count": 1271, "favorite_count": 1861, "source": "TweetDeck", "id_str": "661583295252185088", "is_retweet": false}, {"created_at": "Sun Jul 26 16:32:20 +0000 2015", "text": "\"What do we have here?\" she asked. Adam's father came over, thanking Hillary for her commitment to epilepsy research with a hug.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 74, "favorite_count": 178, "source": "Twitter Web Client", "id_str": "625342900231127040", "is_retweet": false}, {"created_at": "Sat Aug 08 01:47:17 +0000 2015", "text": "4,000,000 followers. Wow! Thanks for joining us\u2014#TeamHillary wouldn\u2019t be the same without you. http://t.co/K6uVNhTBp2", "in_reply_to_screen_name": null, "retweet_count": 956, "favorite_count": 2458, "source": "Twitter Web Client", "id_str": "629831213600108544", "is_retweet": false}, {"created_at": "Fri Sep 25 23:09:26 +0000 2015", "text": "Making friends in Des Moines, Iowa. http://t.co/GZ703gynld", "in_reply_to_screen_name": null, "retweet_count": 331, "favorite_count": 945, "source": "TweetDeck", "id_str": "647548493448499200", "is_retweet": false}, {"created_at": "Fri Jul 03 02:58:18 +0000 2015", "text": "Dinner. With Hillary. Yes, that Hillary. Enter for your spot at the table. \u2192 http://t.co/00eQU4vo3v http://t.co/g3tcgym0lt", "in_reply_to_screen_name": null, "retweet_count": 188, "favorite_count": 366, "source": "Twitter Web Client", "id_str": "616803123009593345", "is_retweet": false}, {"created_at": "Thu Apr 16 18:13:34 +0000 2015", "text": "One more coffee for the road: Hillary in Council Bluffs, Iowa today http://t.co/p4Dr7yawfu", "in_reply_to_screen_name": null, "retweet_count": 394, "favorite_count": 991, "source": "Twitter Web Client", "id_str": "588767201257254913", "is_retweet": false}, {"created_at": "Wed Oct 14 12:03:59 +0000 2015", "text": "Last night, Hillary showed that she has the vision, the plans, and the determination to move this country forward.\nhttps://t.co/lKhqx4Q3a5", "in_reply_to_screen_name": null, "retweet_count": 1285, "favorite_count": 2542, "source": "Twitter Web Client", "id_str": "654266399162937344", "is_retweet": false}, {"created_at": "Mon Jun 08 23:29:46 +0000 2015", "text": "We knew we liked you, @Chipotle. https://t.co/Uli1ZFwfBY", "in_reply_to_screen_name": null, "retweet_count": 954, "favorite_count": 2030, "source": "Twitter Web Client", "id_str": "608053335430676480", "is_retweet": false}, {"created_at": "Fri Apr 24 01:25:36 +0000 2015", "text": "We're looking for engineers to help create the next big thing in digital campaigning. Apply now: http://t.co/1PcrROd7Tr", "in_reply_to_screen_name": null, "retweet_count": 687, "favorite_count": 712, "source": "Twitter Web Client", "id_str": "591412642193022976", "is_retweet": false}, {"created_at": "Fri Jul 31 12:52:40 +0000 2015", "text": "Watch live as Hillary speaks to @NatUrbanLeague in Fort Lauderdale, Florida: http://t.co/vgYXp2Oj1R #SaveOurCities", "in_reply_to_screen_name": null, "retweet_count": 175, "favorite_count": 232, "source": "Twitter Web Client", "id_str": "627099559064403968", "is_retweet": false}, {"created_at": "Fri Jun 12 20:30:08 +0000 2015", "text": "From Nikki G. in Indiana. http://t.co/8ENriTvBYH", "in_reply_to_screen_name": null, "retweet_count": 258, "favorite_count": 831, "source": "TweetDeck", "id_str": "609457677748539392", "is_retweet": false}, {"created_at": "Mon Jul 13 14:45:46 +0000 2015", "text": "\"I will appoint and empower regulators who understand that Too Big To Fail is still too big a problem.\"", "in_reply_to_screen_name": null, "retweet_count": 209, "favorite_count": 419, "source": "TweetDeck", "id_str": "620605039363493889", "is_retweet": false}, {"created_at": "Sun Nov 15 04:05:11 +0000 2015", "text": "Want Hillary's first thoughts after the #DemDebate? Text ImWithHer now to 47246 to get a message from her!", "in_reply_to_screen_name": null, "retweet_count": 215, "favorite_count": 574, "source": "Twitter Web Client", "id_str": "665742314069868545", "is_retweet": false}, {"created_at": "Thu Jun 04 20:30:40 +0000 2015", "text": "\"Early in-person voting will reduce those long lines and give more citizens the chance to participate.\"", "in_reply_to_screen_name": null, "retweet_count": 222, "favorite_count": 414, "source": "Twitter Web Client", "id_str": "606558711440502784", "is_retweet": false}, {"created_at": "Thu Oct 29 01:46:51 +0000 2015", "text": "There is no place in America for second-class citizenship. We can't wait any longer for comprehensive immigration reform. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 667, "favorite_count": 1343, "source": "TweetDeck", "id_str": "659546907564482560", "is_retweet": false}, {"created_at": "Sun Jul 26 15:30:32 +0000 2015", "text": "Adam\u2019s service dog Turbo is a huge part of our lives. He goes everywhere with Adam, including school.", "in_reply_to_screen_name": null, "retweet_count": 62, "favorite_count": 224, "source": "Twitter Web Client", "id_str": "625327346866896896", "is_retweet": false}, {"created_at": "Thu Jul 16 00:33:46 +0000 2015", "text": "In the first 94 days of #Hillary2016, more than 250,000 donors\u2014including 113 Hillarys!\u2014gave more than $46 million. http://t.co/4eXJxFNMRA", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 630, "source": "TweetDeck", "id_str": "621477792371355649", "is_retweet": false}, {"created_at": "Sat Oct 31 16:11:06 +0000 2015", "text": "Too often, women still make less on the dollar than men. It's time for equal pay now.\nhttps://t.co/5HdYQXtQE2", "in_reply_to_screen_name": null, "retweet_count": 665, "favorite_count": 1252, "source": "Twitter Web Client", "id_str": "660489179000778752", "is_retweet": false}, {"created_at": "Wed Sep 23 15:38:36 +0000 2015", "text": "\"Baseball is 90% mental\u2014the other half is physical.\" Yogi gave everything at least 140%. We'll miss him. My prayers are with his family. -H", "in_reply_to_screen_name": null, "retweet_count": 474, "favorite_count": 1229, "source": "TweetDeck", "id_str": "646710261659881474", "is_retweet": false}, {"created_at": "Wed Oct 14 22:00:26 +0000 2015", "text": "Last night, Hillary was the only candidate to confront GOP attacks on Planned Parenthood. http://t.co/kHpSMSC4C5", "in_reply_to_screen_name": null, "retweet_count": 607, "favorite_count": 1480, "source": "TweetDeck", "id_str": "654416498279251968", "is_retweet": false}, {"created_at": "Fri Jan 16 18:57:12 +0000 2015", "text": "Attacking financial reform is risky and wrong. Better for Congress to focus on jobs and wages for middle class families.", "in_reply_to_screen_name": null, "retweet_count": 1240, "favorite_count": 1976, "source": "Twitter for iPhone", "id_str": "556163273738166272", "is_retweet": false}, {"created_at": "Tue Aug 11 15:04:38 +0000 2015", "text": "Let\u2019s relieve the crushing burden of student debt. Learn more about Hillary\u2019s plan: http://t.co/A4pWb3fOf4 http://t.co/i7mZY9Xoph", "in_reply_to_screen_name": null, "retweet_count": 515, "favorite_count": 666, "source": "TweetDeck", "id_str": "631119035170717696", "is_retweet": false}, {"created_at": "Fri Oct 09 23:28:32 +0000 2015", "text": "Last week, Hillary joined @MarcAnthony on stage at his concert in Miami. Thanks for the warm welcome, Marc!\nhttps://t.co/JeTgFK1oBH", "in_reply_to_screen_name": null, "retweet_count": 651, "favorite_count": 1038, "source": "Twitter Web Client", "id_str": "652626732655050752", "is_retweet": false}, {"created_at": "Wed Apr 29 20:29:03 +0000 2015", "text": "Hillary was so struck by this line she read it 3 times. Read the full @USATODAY piece here: http://t.co/znCAimBlFn http://t.co/PTQhSSS4R0", "in_reply_to_screen_name": null, "retweet_count": 1063, "favorite_count": 1469, "source": "Twitter Web Client", "id_str": "593512338801594368", "is_retweet": false}, {"created_at": "Fri Jul 31 23:52:23 +0000 2015", "text": "Check out Hillary's ideas for a stronger, more prosperous relationship with Cuba and the Americas: http://t.co/2KNm6Be9jW", "in_reply_to_screen_name": null, "retweet_count": 245, "favorite_count": 346, "source": "TweetDeck", "id_str": "627265581230759936", "is_retweet": false}, {"created_at": "Wed Aug 26 00:10:16 +0000 2015", "text": "\u201cHillary Clinton is not new to the fight for middle class families.\u201d \u2014Former Iowa Governor Tom Vilsack http://t.co/l3BTNlQjCQ", "in_reply_to_screen_name": null, "retweet_count": 331, "favorite_count": 625, "source": "Twitter Web Client", "id_str": "636329778430234624", "is_retweet": false}, {"created_at": "Sun Sep 13 15:11:13 +0000 2015", "text": "We need to work to make sure that we give every child in America the same opportunities. http://t.co/PW0BVzXITX", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 1220, "source": "TweetDeck", "id_str": "643079491875676160", "is_retweet": false}, {"created_at": "Sat Aug 15 21:06:51 +0000 2015", "text": "Abrimos la embajada estadounidense en La Habana. Simboliza un paso hacia adelante en la relaci\u00f3n entre nuestro pa\u00eds y el pueblo Cubano.", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 460, "source": "Twitter Web Client", "id_str": "632659743060938753", "is_retweet": false}, {"created_at": "Tue Jun 30 21:30:08 +0000 2015", "text": "The positive: This magnet is yours for $10. The negative: Just a few hours left to get one. \u2192 http://t.co/ASwZt9AAis http://t.co/8LEoUun70I", "in_reply_to_screen_name": null, "retweet_count": 88, "favorite_count": 177, "source": "TweetDeck", "id_str": "615995758676807680", "is_retweet": false}, {"created_at": "Sat Feb 14 18:22:21 +0000 2015", "text": "Good week for #Philadelphia...\nhttp://t.co/YqX35enaHP", "in_reply_to_screen_name": null, "retweet_count": 568, "favorite_count": 932, "source": "Twitter for iPhone", "id_str": "566663754268831744", "is_retweet": false}, {"created_at": "Tue May 26 21:56:41 +0000 2015", "text": "Your airfare = covered. All you have to do for a chance to meet Hillary is enter your email: http://t.co/WVtWnp9suL", "in_reply_to_screen_name": null, "retweet_count": 134, "favorite_count": 306, "source": "TweetDeck", "id_str": "603318866769481729", "is_retweet": false}, {"created_at": "Tue Nov 10 21:30:27 +0000 2015", "text": "Hillary\u2019s veterans plan will \u201censure access to timely, high quality health care and modernize veterans\u2019 benefits.\u201d https://t.co/3GLLKmyU86", "in_reply_to_screen_name": null, "retweet_count": 166, "favorite_count": 269, "source": "Twitter Web Client", "id_str": "664193427702046720", "is_retweet": false}, {"created_at": "Sun Sep 13 21:27:52 +0000 2015", "text": "Happy Grandparents Day! http://t.co/wbs8fTzTCF http://t.co/ZiRUj2MSni", "in_reply_to_screen_name": null, "retweet_count": 481, "favorite_count": 1516, "source": "TweetDeck", "id_str": "643174279241179136", "is_retweet": false}, {"created_at": "Tue Sep 22 20:01:16 +0000 2015", "text": "\"Under my plan, I\u2019ll cap out-of-pocket drug costs for families. You won\u2019t have to pay more than $250/month for covered medications.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 691, "source": "TweetDeck", "id_str": "646413978629984256", "is_retweet": false}, {"created_at": "Mon Jun 22 21:58:56 +0000 2015", "text": ".@nikkihaley is right 2 call for removal of a symbol of hate in SC. As I\u2019ve said for years, taking down Confederate flag is long overdue. \u2013H", "in_reply_to_screen_name": null, "retweet_count": 1214, "favorite_count": 2311, "source": "Twitter Web Client", "id_str": "613103906281750528", "is_retweet": false}, {"created_at": "Tue Apr 28 14:59:49 +0000 2015", "text": "Hillary &amp; a grandpa from Iowa talk marriage equality over coffee: https://t.co/OFdXpdmWUi #LoveMustWin #LoveCantWait", "in_reply_to_screen_name": null, "retweet_count": 647, "favorite_count": 1311, "source": "Twitter Web Client", "id_str": "593067097573449730", "is_retweet": false}, {"created_at": "Fri Jun 26 22:37:54 +0000 2015", "text": "H is for history in the making. Get your free celebratory bumper sticker here \u2192 http://t.co/3MV8txaDbR http://t.co/WcdHM73eUv", "in_reply_to_screen_name": null, "retweet_count": 1039, "favorite_count": 2658, "source": "TweetDeck", "id_str": "614563263733481472", "is_retweet": false}, {"created_at": "Wed Aug 12 16:24:56 +0000 2015", "text": "\u201cWe do have to speak out about it.\u201d Watch Hillary say we need to stand up against cyberbullying:\nhttps://t.co/qBWQ2clZQL", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 792, "source": "Twitter Web Client", "id_str": "631501631633252352", "is_retweet": false}, {"created_at": "Sat Jun 13 16:38:13 +0000 2015", "text": "Let's build this together. http://t.co/vibvcipflC", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 1068, "source": "Twitter Web Client", "id_str": "609761702494736384", "is_retweet": false}, {"created_at": "Thu Jul 09 22:00:58 +0000 2015", "text": "The boys are right. We need everyone's help to get the planet moving in the right direction. http://t.co/rNQSBSmgJ8 #action1D", "in_reply_to_screen_name": null, "retweet_count": 60292, "favorite_count": 82963, "source": "TweetDeck", "id_str": "619265009651163136", "is_retweet": false}, {"created_at": "Mon Sep 14 12:05:40 +0000 2015", "text": "\"We can lift each other up and leave no one behind.\" Hillary's remarks at @FoundryUMC yesterday: http://t.co/ctncf8Zfai", "in_reply_to_screen_name": null, "retweet_count": 293, "favorite_count": 566, "source": "TweetDeck", "id_str": "643395185867661312", "is_retweet": false}, {"created_at": "Wed May 20 16:52:57 +0000 2015", "text": "Food for thought: If you're a big Hillary fan, how about volunteering? \u2192 http://t.co/tDJkMDIPlp via @johnbuysse http://t.co/dMBYvRxUlo", "in_reply_to_screen_name": null, "retweet_count": 186, "favorite_count": 546, "source": "TweetDeck", "id_str": "601068100914667522", "is_retweet": false}, {"created_at": "Sun May 17 18:09:26 +0000 2015", "text": "Join #Hillary2016 if you agree that every child should be given the opportunity to reach their full potential: http://t.co/EKIy4T5L8O", "in_reply_to_screen_name": null, "retweet_count": 397, "favorite_count": 749, "source": "TweetDeck", "id_str": "600000186597900289", "is_retweet": false}, {"created_at": "Thu Dec 31 01:53:54 +0000 2015", "text": "6 texts from Hillary you might have missed this year... https://t.co/X0iMPb4kIq", "in_reply_to_screen_name": null, "retweet_count": 213, "favorite_count": 533, "source": "Twitter for iPhone", "id_str": "682379118302883842", "is_retweet": false}, {"created_at": "Tue Nov 24 21:49:50 +0000 2015", "text": "Latinas no deber\u00edan ganar 56 centavos por cada d\u00f3lar que gana un hombre anglosaj\u00f3n. https://t.co/zfJ5oXb8bk", "in_reply_to_screen_name": null, "retweet_count": 311, "favorite_count": 499, "source": "TweetDeck", "id_str": "669271735200534528", "is_retweet": false}, {"created_at": "Fri Aug 07 21:43:04 +0000 2015", "text": "We need to make sure there\u2019s accountability on Wall Street so there can be prosperity on Main Street.", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 1260, "source": "Twitter Web Client", "id_str": "629769753683476480", "is_retweet": false}, {"created_at": "Fri May 08 20:37:23 +0000 2015", "text": "Happy Friday! There's just one more item on your to-do list: Join the #Hillary2016 campaign today \u2192 http://t.co/M8XH7ROShK", "in_reply_to_screen_name": null, "retweet_count": 191, "favorite_count": 378, "source": "TweetDeck", "id_str": "596775929420107776", "is_retweet": false}, {"created_at": "Fri Dec 18 02:28:55 +0000 2015", "text": "Discrimination against LGBT people goes against everything we stand for as a country.\nhttps://t.co/I7sisHScD6", "in_reply_to_screen_name": null, "retweet_count": 1387, "favorite_count": 2727, "source": "Twitter Web Client", "id_str": "677676889184407552", "is_retweet": false}, {"created_at": "Fri Dec 04 23:16:36 +0000 2015", "text": "\"Progressives believe in making progress, which is why I'm proud to endorse Hillary Clinton.\" Thanks, @LaborSec. https://t.co/MQhtNPwYnL", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 808, "source": "Twitter Web Client", "id_str": "672917448451088386", "is_retweet": false}, {"created_at": "Sun Dec 06 22:13:23 +0000 2015", "text": "Warm wishes to everyone celebrating Hanukkah. May the miracle at the center of the Festival of Lights bring you courage and hope. -H", "in_reply_to_screen_name": null, "retweet_count": 655, "favorite_count": 1472, "source": "Twitter Web Client", "id_str": "673626314595782656", "is_retweet": false}, {"created_at": "Tue Sep 08 01:16:06 +0000 2015", "text": "Food craving? Binge-watch show of choice? 6 things you probably didn\u2019t know about Hillary, via @MSNBC:\nhttps://t.co/Vqur9WmijA", "in_reply_to_screen_name": null, "retweet_count": 339, "favorite_count": 705, "source": "Twitter Web Client", "id_str": "641057388213080065", "is_retweet": false}, {"created_at": "Sat Jul 11 20:47:09 +0000 2015", "text": "Thanks for your support, @AFTunion. Your work builds healthy families, thriving communities, &amp; makes our country stronger. -H", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 722, "source": "Twitter Web Client", "id_str": "619971209351036929", "is_retweet": false}, {"created_at": "Mon Jun 29 23:37:12 +0000 2015", "text": "Step 1: Pitch in $10 before the first fundraising deadline\nStep 2: Get a #Hillary2016 magnet! http://t.co/slunFkDQA5 http://t.co/c5E0joe3MO", "in_reply_to_screen_name": null, "retweet_count": 101, "favorite_count": 230, "source": "TweetDeck", "id_str": "615665348336046080", "is_retweet": false}, {"created_at": "Fri Jun 26 17:28:04 +0000 2015", "text": "Our hearts are full for Dave, Dan, and Jaylah, and loving families in all 50 states. http://t.co/OXouvCrUwa", "in_reply_to_screen_name": null, "retweet_count": 1005, "favorite_count": 2927, "source": "TweetDeck", "id_str": "614485292016369664", "is_retweet": false}, {"created_at": "Sat Sep 26 23:19:06 +0000 2015", "text": ".@lorellapraeli, la Directora de Asuntos Latinos de #Hillary2016, comparte su historia inspiradora: http://t.co/Jwma0lxR4J", "in_reply_to_screen_name": null, "retweet_count": 137, "favorite_count": 254, "source": "Twitter Web Client", "id_str": "647913313385488384", "is_retweet": false}, {"created_at": "Thu Aug 06 20:41:51 +0000 2015", "text": "\u201cRepublicans are systematically...trying to stop millions of American citizens from voting. What part of democracy are they afraid of?\u201d\u2014HRC", "in_reply_to_screen_name": null, "retweet_count": 672, "favorite_count": 1149, "source": "Twitter Web Client", "id_str": "629391960575348736", "is_retweet": false}, {"created_at": "Wed Jun 24 14:12:58 +0000 2015", "text": "Is hanging out with Hillary on your bucket list? Enter to dine with the woman herself! \u2192 http://t.co/M49GL2exYk http://t.co/6xu1Zwdsj8", "in_reply_to_screen_name": null, "retweet_count": 199, "favorite_count": 420, "source": "Twitter Web Client", "id_str": "613711415640203264", "is_retweet": false}, {"created_at": "Wed Oct 21 00:19:04 +0000 2015", "text": "\u201cShe was able to restore the credibility of the United States.\u201d \u2014Leon Panetta\nhttps://t.co/IPgeqEd48A", "in_reply_to_screen_name": null, "retweet_count": 460, "favorite_count": 805, "source": "Twitter Web Client", "id_str": "656625716553879552", "is_retweet": false}, {"created_at": "Wed Sep 09 13:36:27 +0000 2015", "text": "\u201cAs president, I will take whatever actions are necessary to protect the United States and our allies.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 347, "favorite_count": 800, "source": "TweetDeck", "id_str": "641606090120146944", "is_retweet": false}, {"created_at": "Fri Nov 13 17:53:18 +0000 2015", "text": "Proud of my friend Aung San Suu Kyi and the people of Burma for never giving up in the long struggle to bring change to their country. -H", "in_reply_to_screen_name": null, "retweet_count": 424, "favorite_count": 969, "source": "Twitter for iPhone", "id_str": "665225943590547456", "is_retweet": false}, {"created_at": "Sat Nov 07 18:23:29 +0000 2015", "text": "Watch live: Hillary joins @RolandMartin for the @NewsOne Town Hall in South Carolina #NewsOneNow \u2192 https://t.co/lADpr4Ccts", "in_reply_to_screen_name": null, "retweet_count": 214, "favorite_count": 393, "source": "TweetDeck", "id_str": "663059211400560642", "is_retweet": false}, {"created_at": "Sat Sep 26 21:44:12 +0000 2015", "text": "America\u2019s diversity is what makes us great. The GOP apparently doesn\u2019t see it that way: https://t.co/uirbqn8YAq", "in_reply_to_screen_name": null, "retweet_count": 931, "favorite_count": 1244, "source": "Twitter Web Client", "id_str": "647889431991599104", "is_retweet": false}, {"created_at": "Wed Sep 02 12:02:53 +0000 2015", "text": "\u201cFor too long, we have had a quiet epidemic on our hands.\u201d Read Hillary\u2019s plan to address drug and alcohol addiction: http://t.co/t8sDgswFBi", "in_reply_to_screen_name": null, "retweet_count": 368, "favorite_count": 513, "source": "TweetDeck", "id_str": "639045828745670660", "is_retweet": false}, {"created_at": "Thu Sep 10 21:42:29 +0000 2015", "text": "Thanks, @TheEllenShow. http://t.co/G2byrNmHG1", "in_reply_to_screen_name": null, "retweet_count": 1255, "favorite_count": 2629, "source": "TweetDeck", "id_str": "642090794933972992", "is_retweet": false}, {"created_at": "Thu Apr 30 16:07:29 +0000 2015", "text": "The #Hillary2016 digital team is looking for engineers with a passion for politics\u2014apply now to join the team at HQ! http://t.co/NgARrKxSTN", "in_reply_to_screen_name": null, "retweet_count": 313, "favorite_count": 378, "source": "Twitter Web Client", "id_str": "593808900786368512", "is_retweet": false}, {"created_at": "Thu Oct 15 22:59:13 +0000 2015", "text": "We should be doing everything we can to get young people more engaged in our democracy, not putting up obstacles. https://t.co/OaVWrU1U8s", "in_reply_to_screen_name": null, "retweet_count": 395, "favorite_count": 638, "source": "Twitter Web Client", "id_str": "654793680662867968", "is_retweet": false}, {"created_at": "Wed Oct 28 15:52:37 +0000 2015", "text": "That feeling when you picked *just* the right outfit. https://t.co/cOdpX0rzDU", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 1756, "source": "TweetDeck", "id_str": "659397364101328896", "is_retweet": false}, {"created_at": "Tue Oct 06 12:07:02 +0000 2015", "text": "\u201cIt's time for us to say, we're better than this.\" Hillary's plan to prevent gun violence: http://t.co/2DB7SLJujT http://t.co/xhJW1eY9sB", "in_reply_to_screen_name": null, "retweet_count": 866, "favorite_count": 1406, "source": "TweetDeck", "id_str": "651368063376297985", "is_retweet": false}, {"created_at": "Fri Dec 18 21:01:58 +0000 2015", "text": "Hillary's videographer on what it's like to follow her around the country with a camera: https://t.co/C0XJxz17vB https://t.co/3r4taCPrk1", "in_reply_to_screen_name": null, "retweet_count": 325, "favorite_count": 1128, "source": "TweetDeck", "id_str": "677956996776247297", "is_retweet": false}, {"created_at": "Sat Jun 27 00:11:50 +0000 2015", "text": "To: Everyone celebrating\n\nFrom: Hillary for America staff\nhttps://t.co/oMSywbAs7a", "in_reply_to_screen_name": null, "retweet_count": 1396, "favorite_count": 2831, "source": "Twitter Web Client", "id_str": "614586901173899266", "is_retweet": false}, {"created_at": "Tue Oct 27 21:32:01 +0000 2015", "text": "No hay ninguna excusa para usar violencia en nuestras escuelas. Punto. #AssaultAtSpringValleyHigh https://t.co/vIuWOAPFi2", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 621, "source": "TweetDeck", "id_str": "659120389948362752", "is_retweet": false}, {"created_at": "Fri Jul 03 16:44:03 +0000 2015", "text": "http://t.co/6KDyWewGpl", "in_reply_to_screen_name": null, "retweet_count": 593, "favorite_count": 1098, "source": "TweetDeck", "id_str": "617010930363277312", "is_retweet": false}, {"created_at": "Thu Mar 05 04:35:20 +0000 2015", "text": "I want the public to see my email. I asked State to release them. They said they will review them for release as soon as possible.", "in_reply_to_screen_name": null, "retweet_count": 7846, "favorite_count": 9881, "source": "Twitter Web Client", "id_str": "573340998287413248", "is_retweet": false}, {"created_at": "Fri Sep 04 03:04:44 +0000 2015", "text": "What inspires Hillary about #Beijing20: how women around the world have taken up the call themselves. Watch:\nhttps://t.co/XhMfCKO2aQ", "in_reply_to_screen_name": null, "retweet_count": 392, "favorite_count": 610, "source": "Twitter Web Client", "id_str": "639635176742481921", "is_retweet": false}, {"created_at": "Wed May 20 22:32:50 +0000 2015", "text": "Welcome, @mintimm and @lorellapraeli\u2014great advocates for women and Latinos, and the two newest members of #Hillary2016! Let's go!", "in_reply_to_screen_name": null, "retweet_count": 146, "favorite_count": 315, "source": "TweetDeck", "id_str": "601153637507801088", "is_retweet": false}, {"created_at": "Mon Jun 01 16:19:14 +0000 2015", "text": "Breaking: Start spreading the news\u2014#Hillary2016 kicks off here.\n\nAnd you could be there \u2192 http://t.co/eztnltNOnc http://t.co/3bYkh2kB39", "in_reply_to_screen_name": null, "retweet_count": 544, "favorite_count": 607, "source": "TweetDeck", "id_str": "605408272322043904", "is_retweet": false}, {"created_at": "Wed Oct 14 02:53:57 +0000 2015", "text": "Hillary on the enemies she's proud to have made: \"The NRA, health insurance companies, drug companies, the Iranians...and the Republicans.\"", "in_reply_to_screen_name": null, "retweet_count": 2294, "favorite_count": 4090, "source": "TweetDeck", "id_str": "654127977660350465", "is_retweet": false}, {"created_at": "Wed Jul 01 22:11:22 +0000 2015", "text": "Grandmother knows best. Pins from Hillary's favorite new job: http://t.co/AMSQ9OeA6U http://t.co/eKum9HThfq", "in_reply_to_screen_name": null, "retweet_count": 427, "favorite_count": 1575, "source": "Twitter Web Client", "id_str": "616368524525707264", "is_retweet": false}, {"created_at": "Sat Nov 28 22:49:29 +0000 2015", "text": "Some of Hillary's favorite family-owned businesses on the campaign trail: https://t.co/llCLzTsYAJ https://t.co/QccMhezOd6", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 1019, "source": "Twitter Web Client", "id_str": "670736295308763140", "is_retweet": false}, {"created_at": "Mon Sep 14 02:02:06 +0000 2015", "text": "Our prisons\u2014where 2/3 inmates meet criteria for substance use disorders\u2014are no substitute for treatment. We must reform our justice system.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 880, "favorite_count": 1761, "source": "TweetDeck", "id_str": "643243291715194880", "is_retweet": false}, {"created_at": "Wed Nov 11 17:41:03 +0000 2015", "text": "And if anything's clear from last night's #GOPdebate: \"They don't have a plan\u2014they just hate mine.\" @Lin_Manuel  https://t.co/VMicarTaO3", "in_reply_to_screen_name": null, "retweet_count": 1300, "favorite_count": 2370, "source": "Twitter Web Client", "id_str": "664498081522692096", "is_retweet": false}, {"created_at": "Fri Sep 25 00:01:11 +0000 2015", "text": "Wishing a blessed Eid to those celebrating Eid Al-Adha. My thoughts and prayers are with those affected by the tragedy in Mecca today. -H", "in_reply_to_screen_name": null, "retweet_count": 834, "favorite_count": 1428, "source": "Twitter Web Client", "id_str": "647199129630830592", "is_retweet": false}, {"created_at": "Tue Aug 25 00:58:36 +0000 2015", "text": "Purging 34,000+ voters from Kansas elections is no administrative rule\u2014it's a targeted attack on voting rights. http://t.co/gz5VZPjMrB", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 976, "source": "Twitter for iPhone", "id_str": "635979556072112128", "is_retweet": false}, {"created_at": "Mon Aug 03 02:12:37 +0000 2015", "text": "Are you on Team Hillary? Chip in $1 to support this campaign, and get your official limited-edition supporter card: http://t.co/wZNvt33x3g", "in_reply_to_screen_name": null, "retweet_count": 189, "favorite_count": 344, "source": "TweetDeck", "id_str": "628025648339120130", "is_retweet": false}, {"created_at": "Sat Jun 13 18:22:30 +0000 2015", "text": "\"Hillary laid out some important policy positions, and I was particularly happy to hear her talk about reproductive rights.\u201d \u2014Alex", "in_reply_to_screen_name": null, "retweet_count": 224, "favorite_count": 615, "source": "Twitter Web Client", "id_str": "609787946221314048", "is_retweet": false}, {"created_at": "Sat Jul 18 20:56:15 +0000 2015", "text": "\"A good head and a good heart are always a formidable combination.\" -Nelson Mandela #MandelaDay http://t.co/4TlbW8g4Jg", "in_reply_to_screen_name": null, "retweet_count": 1262, "favorite_count": 2606, "source": "Twitter Web Client", "id_str": "622510215548792832", "is_retweet": false}, {"created_at": "Thu Sep 10 14:25:42 +0000 2015", "text": "Watch live now: Hillary details her record of fighting for women\u2019s rights \u2192 http://t.co/3nbb6d1mE2", "in_reply_to_screen_name": null, "retweet_count": 181, "favorite_count": 307, "source": "TweetDeck", "id_str": "641980874549010434", "is_retweet": false}, {"created_at": "Sun Sep 06 22:45:20 +0000 2015", "text": "Strong support from Senator @JeanneShaheen: http://t.co/vryppsq7IX", "in_reply_to_screen_name": null, "retweet_count": 554, "favorite_count": 1137, "source": "Twitter Web Client", "id_str": "640657060967907328", "is_retweet": false}, {"created_at": "Sun Jun 07 00:04:15 +0000 2015", "text": "Hillary's new favorite singer. http://t.co/GIjA6nUO7h", "in_reply_to_screen_name": null, "retweet_count": 248, "favorite_count": 865, "source": "Twitter Web Client", "id_str": "607337234300313601", "is_retweet": false}, {"created_at": "Thu Sep 17 01:46:31 +0000 2015", "text": "The defining economic challenge of our time is raising incomes. That's how hardworking Americans will get ahead and stay ahead. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 820, "favorite_count": 1588, "source": "Twitter Web Client", "id_str": "644326536338915328", "is_retweet": false}, {"created_at": "Wed Apr 15 22:12:45 +0000 2015", "text": "For photos from the trail, head over to our new Flickr page: https://t.co/z9SPRQBCMe http://t.co/uE3MI7YG1M", "in_reply_to_screen_name": null, "retweet_count": 591, "favorite_count": 1390, "source": "Twitter Web Client", "id_str": "588465006355746816", "is_retweet": false}, {"created_at": "Thu Jun 18 23:56:22 +0000 2015", "text": "Wishing a blessed Ramadan to all those who have embarked on the month of fasting.", "in_reply_to_screen_name": null, "retweet_count": 1083, "favorite_count": 2018, "source": "Twitter Web Client", "id_str": "611683906673332225", "is_retweet": false}, {"created_at": "Mon Jul 13 14:50:35 +0000 2015", "text": "\"I\u2019m running for President to build an America for tomorrow, not yesterday\u2014where if you do your part, you will reap the rewards.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 1106, "source": "TweetDeck", "id_str": "620606250166792193", "is_retweet": false}, {"created_at": "Mon Sep 21 15:55:28 +0000 2015", "text": "Can a Muslim be President of the United States of America? In a word: Yes. Now let's move on. -H http://t.co/AB99hiUPie", "in_reply_to_screen_name": null, "retweet_count": 6066, "favorite_count": 7163, "source": "TweetDeck", "id_str": "645989733055758336", "is_retweet": false}, {"created_at": "Thu Sep 10 12:57:26 +0000 2015", "text": "Read Hillary\u2019s strategy for tough, smart, &amp; effective leadership on Iran &amp; the Middle East: http://t.co/QEznWQvE1H http://t.co/LBWCL9VPXN", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 549, "source": "Twitter Web Client", "id_str": "641958661909291008", "is_retweet": false}, {"created_at": "Fri Aug 07 02:37:30 +0000 2015", "text": "If GOP attacks on @PPFA feel like an assault on women's health, it's because they are. http://t.co/aBkawOvo3z http://t.co/ZtLJYortD0", "in_reply_to_screen_name": null, "retweet_count": 1263, "favorite_count": 2203, "source": "Twitter Web Client", "id_str": "629481461486370816", "is_retweet": false}, {"created_at": "Mon Nov 02 17:19:49 +0000 2015", "text": "On the day of the first Democratic debate, Hillary\u2019s granddaughter Charlotte had a big surprise for her.\nhttps://t.co/yxRM6gcTnJ", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 989, "source": "Twitter Web Client", "id_str": "661231247717371904", "is_retweet": false}, {"created_at": "Fri Aug 07 03:05:38 +0000 2015", "text": "Watch the #GOPdebate? Bet you feel like donating to a Democrat right about now. http://t.co/pGlQCqQgOP http://t.co/QP1e0yObMf", "in_reply_to_screen_name": null, "retweet_count": 4851, "favorite_count": 9559, "source": "Twitter Web Client", "id_str": "629488543090540545", "is_retweet": false}, {"created_at": "Sat Jan 24 18:44:27 +0000 2015", "text": "I'll never forget watching Ernie Banks play- broke barriers, loved baseball &amp; life. We'll miss Mr. Cub. #LetsPlayTwo http://t.co/MKeOeVEYEa", "in_reply_to_screen_name": null, "retweet_count": 538, "favorite_count": 1226, "source": "Twitter for iPhone", "id_str": "559059170213646336", "is_retweet": false}, {"created_at": "Sun Oct 25 03:39:11 +0000 2015", "text": "\"When you short-change women, you short-change families and you short-change America.\" \u2014Hillary on why she's fighting for equal pay #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1184, "source": "TweetDeck", "id_str": "658125627707564032", "is_retweet": false}, {"created_at": "Mon Dec 07 19:06:08 +0000 2015", "text": "#HourOfCode inspires millions of students, especially girls, to learn to code. Excited to see what they'll create. https://t.co/XnwWijaC1W", "in_reply_to_screen_name": null, "retweet_count": 740, "favorite_count": 1009, "source": "TweetDeck", "id_str": "673941579070119937", "is_retweet": false}, {"created_at": "Sun Nov 15 18:27:11 +0000 2015", "text": "\"Our prayers are with the people of France tonight, but that is not enough.\" \u2014Hillary https://t.co/vFQltalvzF https://t.co/q1Zb7XSKg9", "in_reply_to_screen_name": null, "retweet_count": 1273, "favorite_count": 2800, "source": "TweetDeck", "id_str": "665959244219457536", "is_retweet": false}, {"created_at": "Tue Dec 29 17:09:08 +0000 2015", "text": "It\u2019s time we treat diseases like Alzheimer\u2019s with the seriousness they deserve.\nhttps://t.co/n96g9P9TR1", "in_reply_to_screen_name": null, "retweet_count": 774, "favorite_count": 1647, "source": "Twitter Web Client", "id_str": "681884666941444096", "is_retweet": false}, {"created_at": "Thu Sep 17 01:22:00 +0000 2015", "text": "La libertad incluye el derecho de hablar en cualquier idioma. Eso nos hace fuerte como pa\u00eds y es algo que debemos celebrar\u2014no denigrar.", "in_reply_to_screen_name": null, "retweet_count": 4739, "favorite_count": 4751, "source": "Twitter Web Client", "id_str": "644320364387037184", "is_retweet": false}, {"created_at": "Tue Jun 02 19:00:17 +0000 2015", "text": "Aaron (and his grandpa) for Hillary. http://t.co/R6dJqEaxrM", "in_reply_to_screen_name": null, "retweet_count": 231, "favorite_count": 622, "source": "TweetDeck", "id_str": "605811190220988416", "is_retweet": false}, {"created_at": "Sat Sep 05 13:49:35 +0000 2015", "text": "6 things you might not know about Hillary\u2019s #Beijing20 speech, from conference attendee @finneyk: http://t.co/FbPRGiyG5F", "in_reply_to_screen_name": null, "retweet_count": 212, "favorite_count": 329, "source": "Twitter Web Client", "id_str": "640159847120551936", "is_retweet": false}, {"created_at": "Mon Sep 21 17:39:24 +0000 2015", "text": "At the #Emmys, @violadavis became the first black woman to win Outstanding Lead Actress in a drama. Bravo, Viola! http://t.co/y6wDrj22aG", "in_reply_to_screen_name": null, "retweet_count": 1349, "favorite_count": 2602, "source": "TweetDeck", "id_str": "646015887221374976", "is_retweet": false}, {"created_at": "Thu Aug 27 01:06:08 +0000 2015", "text": "We need to recognize that quality, affordable childcare is not a luxury\u2013it's a growth strategy. #WomensEqualityDay", "in_reply_to_screen_name": null, "retweet_count": 843, "favorite_count": 1622, "source": "Twitter Web Client", "id_str": "636706227658051584", "is_retweet": false}, {"created_at": "Mon Jun 01 23:08:48 +0000 2015", "text": "Has substance abuse affected you or your community? Share your thoughts \u2192 http://t.co/hCzp7LHoAt http://t.co/KOHiUvARsU", "in_reply_to_screen_name": null, "retweet_count": 230, "favorite_count": 374, "source": "Twitter Web Client", "id_str": "605511344213905408", "is_retweet": false}, {"created_at": "Fri May 01 18:19:56 +0000 2015", "text": "Happy #AAPI Heritage Month! Asian Americans and Pacific Islanders have contributed to making our country stronger. RT if you agree.", "in_reply_to_screen_name": null, "retweet_count": 534, "favorite_count": 589, "source": "Twitter Web Client", "id_str": "594204622237097984", "is_retweet": false}, {"created_at": "Fri Nov 06 20:17:29 +0000 2015", "text": "The right call. Now it's time to make America a clean energy superpower. -H https://t.co/d6kSvldOLI", "in_reply_to_screen_name": null, "retweet_count": 666, "favorite_count": 1104, "source": "TweetDeck", "id_str": "662725510812688385", "is_retweet": false}, {"created_at": "Wed Oct 14 03:02:38 +0000 2015", "text": "We cannot go back to the failed policies of the past. We will not go back. America's best days are still ahead. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1073, "favorite_count": 2197, "source": "TweetDeck", "id_str": "654130163425366017", "is_retweet": false}, {"created_at": "Wed Jul 29 16:22:38 +0000 2015", "text": "\"If equal pay for equal work is playing the 'gender card,' then deal me in.\"\u2014Hillary yesterday in NH", "in_reply_to_screen_name": null, "retweet_count": 1513, "favorite_count": 2526, "source": "TweetDeck", "id_str": "626427623636357122", "is_retweet": false}, {"created_at": "Thu Aug 13 20:34:23 +0000 2015", "text": "This was emailed to us with the subject line 'MESSAGE FROM THE TOP OF MT. DEMOCRAT': http://t.co/QS5hejr1sk", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 1007, "source": "TweetDeck", "id_str": "631926794749407232", "is_retweet": false}, {"created_at": "Thu May 14 20:54:05 +0000 2015", "text": "Words that ring truer than ever today: \"Human rights are women's rights, and women's rights are human rights.\" #TBT http://t.co/1TUHtcmawR", "in_reply_to_screen_name": null, "retweet_count": 1501, "favorite_count": 2356, "source": "Twitter Web Client", "id_str": "598954460115816448", "is_retweet": false}, {"created_at": "Thu Aug 20 19:33:14 +0000 2015", "text": "Thanks to @nyliberty, Kymora\u2019s back on the court\u2014right where she belongs. #GirlPower http://t.co/Uhn8Ttyvu7", "in_reply_to_screen_name": null, "retweet_count": 246, "favorite_count": 512, "source": "Twitter Web Client", "id_str": "634448123679670272", "is_retweet": false}, {"created_at": "Mon Oct 26 14:16:16 +0000 2015", "text": "Today is Hillary's birthday! Sign her card\u2013it will make her day: https://t.co/1M7kkxbKLw https://t.co/RF7okkxPnk", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 1377, "source": "TweetDeck", "id_str": "658648340268236800", "is_retweet": false}, {"created_at": "Wed Dec 16 21:15:40 +0000 2015", "text": ".@MalalaFund is right: we cannot tolerate Trump\u2019s hateful speech against Muslims. https://t.co/NaMyY7Vo7L", "in_reply_to_screen_name": null, "retweet_count": 2718, "favorite_count": 4272, "source": "TweetDeck", "id_str": "677235668603506689", "is_retweet": false}, {"created_at": "Fri Oct 16 12:02:06 +0000 2015", "text": "The number of American lives lost to gun violence is more than three times the rate as the next developed country. http://t.co/VxoYBfhgLr", "in_reply_to_screen_name": null, "retweet_count": 866, "favorite_count": 1055, "source": "TweetDeck", "id_str": "654990700539285505", "is_retweet": false}, {"created_at": "Thu Dec 10 17:36:56 +0000 2015", "text": "Last chance! Tonight's the deadline for Christmas delivery. Browse the holiday gift guide: https://t.co/o03PljiwIX https://t.co/QyCKlAmERm", "in_reply_to_screen_name": null, "retweet_count": 140, "favorite_count": 481, "source": "TweetDeck", "id_str": "675006296253444097", "is_retweet": false}, {"created_at": "Tue Dec 22 14:00:27 +0000 2015", "text": "We can prevent, effectively treat, and make a cure possible for Alzheimer\u2019s by 2025. -H", "in_reply_to_screen_name": null, "retweet_count": 994, "favorite_count": 2639, "source": "TweetDeck", "id_str": "679300468154220545", "is_retweet": false}, {"created_at": "Sat Oct 10 16:10:07 +0000 2015", "text": "Volunteers serenaded Hillary with \"Lean on Me\" to let her know she has friends in the Granite State.\nhttps://t.co/PhLNLLYNxO", "in_reply_to_screen_name": null, "retweet_count": 371, "favorite_count": 841, "source": "Twitter Web Client", "id_str": "652878786774482944", "is_retweet": false}, {"created_at": "Sun Jul 26 23:17:13 +0000 2015", "text": "You don't have to be a scientist to accept scientific evidence. Climate change is real and we must act. -H\nhttps://t.co/jV0k5v5P4I", "in_reply_to_screen_name": null, "retweet_count": 1314, "favorite_count": 1800, "source": "Twitter Web Client", "id_str": "625444794018312192", "is_retweet": false}, {"created_at": "Tue Dec 15 22:25:44 +0000 2015", "text": "\"I have news for [Republicans]\u2014terrorists use guns to kill Americans. I think we should make it harder for them from to do that.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 533, "favorite_count": 1273, "source": "TweetDeck", "id_str": "676890914850217985", "is_retweet": false}, {"created_at": "Thu Jul 02 18:00:21 +0000 2015", "text": "What this campaign is about: Building a future where every American has the opportunity to get ahead and stay ahead. http://t.co/e7myYGuS12", "in_reply_to_screen_name": null, "retweet_count": 303, "favorite_count": 478, "source": "Twitter Web Client", "id_str": "616667741928464384", "is_retweet": false}, {"created_at": "Sun Oct 25 21:17:10 +0000 2015", "text": "\"If talking about equal pay, paid family leave, child care, &amp; women's health is playing the gender card\u2014deal me in.\"\nhttps://t.co/hu1ELwXVp9", "in_reply_to_screen_name": null, "retweet_count": 1325, "favorite_count": 2416, "source": "Twitter Web Client", "id_str": "658391875401814016", "is_retweet": false}, {"created_at": "Tue Dec 15 13:50:31 +0000 2015", "text": "We can't sit idly by while Republicans shame and blame women, demonize immigrants, and say climate change isn't real.", "in_reply_to_screen_name": null, "retweet_count": 2286, "favorite_count": 4930, "source": "TweetDeck", "id_str": "676761254481018880", "is_retweet": false}, {"created_at": "Mon Aug 24 15:57:19 +0000 2015", "text": "Making being a nerd look cool since 1965. Happy #firstdayofschool to everyone starting today! http://t.co/q59lMx1JGb", "in_reply_to_screen_name": null, "retweet_count": 858, "favorite_count": 2280, "source": "TweetDeck", "id_str": "635843338688663553", "is_retweet": false}, {"created_at": "Fri Nov 20 16:36:56 +0000 2015", "text": "Today, @CoryBooker joins @HillaryforSC for a Twitter chat about what's at stake in this election. Join in\u2192 #CoryinSC https://t.co/JsfYfCHX42", "in_reply_to_screen_name": null, "retweet_count": 181, "favorite_count": 472, "source": "TweetDeck", "id_str": "667743439480610816", "is_retweet": false}, {"created_at": "Thu Aug 27 22:07:16 +0000 2015", "text": "A majority of Americans and a majority of gun owners support universal background checks.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 638, "favorite_count": 1211, "source": "TweetDeck", "id_str": "637023603201081344", "is_retweet": false}, {"created_at": "Wed Jul 15 17:21:29 +0000 2015", "text": "Why is Hillary fighting for comprehensive immigration reform? For people like Betsaida and Rafael:\nhttps://t.co/eX07wuOY4z", "in_reply_to_screen_name": null, "retweet_count": 402, "favorite_count": 483, "source": "Twitter Web Client", "id_str": "621369002632155136", "is_retweet": false}, {"created_at": "Mon Sep 28 12:26:25 +0000 2015", "text": "Families are working harder than ever, but paychecks have barely budged. That needs to change.\nhttps://t.co/pb6Yk6Rhir", "in_reply_to_screen_name": null, "retweet_count": 550, "favorite_count": 847, "source": "Twitter Web Client", "id_str": "648473836719964160", "is_retweet": false}, {"created_at": "Sat Jun 06 00:57:43 +0000 2015", "text": "Recoge una copia del @elmundolv de hoy y lee lo que dice @HillaryClinton sobre reforma migratoria: https://t.co/Eypn7xADuD", "in_reply_to_screen_name": null, "retweet_count": 99, "favorite_count": 167, "source": "Twitter Web Client", "id_str": "606988302005202944", "is_retweet": false}, {"created_at": "Wed Sep 02 19:14:39 +0000 2015", "text": "\"I rode with Hillary in her car to the conference hall.\" Watch the story behind Hillary's iconic #Beijing20 speech:\nhttps://t.co/sMD2k1UC04", "in_reply_to_screen_name": null, "retweet_count": 206, "favorite_count": 414, "source": "Twitter Web Client", "id_str": "639154489782484992", "is_retweet": false}, {"created_at": "Thu Aug 13 02:48:57 +0000 2015", "text": "Proud mom alert: Love what you wrote about #WorldElephantDay, @ChelseaClinton. http://t.co/tXM30ICvC8 -H", "in_reply_to_screen_name": null, "retweet_count": 257, "favorite_count": 834, "source": "TweetDeck", "id_str": "631658670288302080", "is_retweet": false}, {"created_at": "Sun Dec 27 00:43:05 +0000 2015", "text": "Wishing everyone the best this Kwanzaa. To all celebrating\u2014Bill and I send you our warmest wishes. -H", "in_reply_to_screen_name": null, "retweet_count": 1007, "favorite_count": 2606, "source": "Twitter Web Client", "id_str": "680911743632175104", "is_retweet": false}, {"created_at": "Wed Apr 29 14:14:12 +0000 2015", "text": "We need strategies to fight crime &amp; restore trust between law enforcement and our communities, especially communities of color.", "in_reply_to_screen_name": null, "retweet_count": 1106, "favorite_count": 1940, "source": "Twitter Web Client", "id_str": "593418004706234368", "is_retweet": false}, {"created_at": "Fri Oct 16 01:54:04 +0000 2015", "text": "\u00a1Gracias, @JulianCastro, por tu apoyo! #LatinosforHillary", "in_reply_to_screen_name": null, "retweet_count": 189, "favorite_count": 423, "source": "TweetDeck", "id_str": "654837682191753216", "is_retweet": false}, {"created_at": "Fri Dec 11 17:19:05 +0000 2015", "text": "Symbols of hate create more hate. It's time for the Confederate flag to come down at The Citadel. -H \nhttps://t.co/OFkRmc1LiI", "in_reply_to_screen_name": null, "retweet_count": 721, "favorite_count": 1551, "source": "TweetDeck", "id_str": "675364190450810880", "is_retweet": false}, {"created_at": "Fri May 15 16:44:12 +0000 2015", "text": "Say you'll Bey on Team #Hillary2016, too: http://t.co/X1Jyv1CdKw http://t.co/qRVZCONXig", "in_reply_to_screen_name": null, "retweet_count": 3194, "favorite_count": 4053, "source": "TweetDeck", "id_str": "599253962055938049", "is_retweet": false}, {"created_at": "Mon Nov 23 13:02:53 +0000 2015", "text": "Caregiving for elderly and disabled family members in the US in 2013 was estimated to be worth $470 billion. Caregivers deserve our support.", "in_reply_to_screen_name": null, "retweet_count": 602, "favorite_count": 1474, "source": "Twitter for iPhone", "id_str": "668776735748587521", "is_retweet": false}, {"created_at": "Thu Jun 18 20:50:14 +0000 2015", "text": "http://t.co/6jgWpuvsDW", "in_reply_to_screen_name": null, "retweet_count": 1602, "favorite_count": 2220, "source": "TweetDeck", "id_str": "611637064681918465", "is_retweet": false}, {"created_at": "Tue Sep 22 02:08:41 +0000 2015", "text": "http://t.co/Eb9I7oMbY0", "in_reply_to_screen_name": null, "retweet_count": 1972, "favorite_count": 3956, "source": "TweetDeck", "id_str": "646144054036557824", "is_retweet": false}, {"created_at": "Tue Nov 24 02:10:06 +0000 2015", "text": "Families caring for sick or elderly family members shouldn't have to struggle to pay the bills. https://t.co/XtzuegTmNa", "in_reply_to_screen_name": null, "retweet_count": 476, "favorite_count": 1072, "source": "Twitter for iPhone", "id_str": "668974842906038273", "is_retweet": false}, {"created_at": "Thu Nov 12 02:05:01 +0000 2015", "text": "Being a good parent has nothing to do with sexual orientation\u2014thousands of families prove that. https://t.co/xQLh25RAYR", "in_reply_to_screen_name": null, "retweet_count": 2669, "favorite_count": 2151, "source": "Twitter for iPhone", "id_str": "664624908920582144", "is_retweet": false}, {"created_at": "Fri Jun 26 03:06:05 +0000 2015", "text": "Before midnight: Enter to win a dinner with Hillary &amp; it will be counted twice. Don't wait! \u2192 http://t.co/mLeNKLQEl7 http://t.co/crGpb9LD8z", "in_reply_to_screen_name": null, "retweet_count": 194, "favorite_count": 453, "source": "Twitter Web Client", "id_str": "614268367336308736", "is_retweet": false}, {"created_at": "Sat Oct 17 15:24:35 +0000 2015", "text": "We can\u2019t ignore America\u2019s racial inequities. http://t.co/lfcpVSlzp2", "in_reply_to_screen_name": null, "retweet_count": 822, "favorite_count": 1362, "source": "Twitter Web Client", "id_str": "655404042118631424", "is_retweet": false}, {"created_at": "Fri Sep 25 17:52:52 +0000 2015", "text": "Hillary on @Pontifex's climate message: \"There\u2019s no time to waste. We have to act now. Pope Francis is right.\" http://t.co/ia2Ttt33Eo", "in_reply_to_screen_name": null, "retweet_count": 452, "favorite_count": 672, "source": "TweetDeck", "id_str": "647468827375194112", "is_retweet": false}, {"created_at": "Thu Jun 11 00:24:03 +0000 2015", "text": "Remembering a historic day in Beijing, September 1995.\nhttps://t.co/iQ4fZfKUyz", "in_reply_to_screen_name": null, "retweet_count": 389, "favorite_count": 840, "source": "Twitter Web Client", "id_str": "608791770759954432", "is_retweet": false}, {"created_at": "Tue Dec 01 21:16:21 +0000 2015", "text": "\"Attacking Planned Parenthood is part of a concerted effort to roll back women\u2019s access to health care.\" \u2014Hillary https://t.co/sGTGY1agp4", "in_reply_to_screen_name": null, "retweet_count": 432, "favorite_count": 734, "source": "TweetDeck", "id_str": "671800021919121408", "is_retweet": false}, {"created_at": "Fri Nov 06 03:36:54 +0000 2015", "text": "Today on @Snapchat: 10 little girls who are ready for the first woman president. Follow us! \ud83d\udc7b hillaryclinton https://t.co/TJmcOnY89w", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 1106, "source": "Twitter for iPhone", "id_str": "662473707412176896", "is_retweet": false}, {"created_at": "Sun Dec 20 14:12:16 +0000 2015", "text": "Hillary released her plan to protect and expand rights for the LGBT community: https://t.co/kbc8zmwNKV", "in_reply_to_screen_name": null, "retweet_count": 729, "favorite_count": 1522, "source": "TweetDeck", "id_str": "678578670034804736", "is_retweet": false}, {"created_at": "Fri Aug 07 02:31:57 +0000 2015", "text": "No one should be discriminated against because of who they love. http://t.co/hsarT0Kpkv", "in_reply_to_screen_name": null, "retweet_count": 2713, "favorite_count": 5240, "source": "Twitter Web Client", "id_str": "629480066532155392", "is_retweet": false}, {"created_at": "Sat Jun 06 21:12:34 +0000 2015", "text": "Like they say in Arkansas. http://t.co/9eCXqkzW0F http://t.co/tQr898n0sU", "in_reply_to_screen_name": null, "retweet_count": 352, "favorite_count": 526, "source": "Twitter Web Client", "id_str": "607294031320776704", "is_retweet": false}, {"created_at": "Fri Jul 31 14:11:45 +0000 2015", "text": "\"The opportunity gap that America is facing is not just about economic inequality. It's about racial inequality.\"\u2014Hillary at @NatUrbanLeague", "in_reply_to_screen_name": null, "retweet_count": 383, "favorite_count": 570, "source": "Twitter Web Client", "id_str": "627119459078119424", "is_retweet": false}, {"created_at": "Thu Dec 03 19:13:10 +0000 2015", "text": "\u201cWe cannot go on with losing 90 people a day to gun violence...We need to take action now.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1155, "favorite_count": 2456, "source": "TweetDeck", "id_str": "672493797805326336", "is_retweet": false}, {"created_at": "Thu Oct 01 22:04:45 +0000 2015", "text": "Another devastating shooting. We need sensible gun control measures to save lives, and I will do everything I can to achieve that. -H", "in_reply_to_screen_name": null, "retweet_count": 3190, "favorite_count": 5709, "source": "TweetDeck", "id_str": "649706544704167936", "is_retweet": false}, {"created_at": "Tue Aug 25 17:01:45 +0000 2015", "text": "Reminder: Jeb isn't the only Republican who wants to defund Planned Parenthood. Hillary's message to all of them:\nhttps://t.co/aayHEMCfNl", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 980, "source": "Twitter Web Client", "id_str": "636221939237810176", "is_retweet": false}, {"created_at": "Tue Aug 18 18:58:47 +0000 2015", "text": "\u201cThank you for caring about student parents\u2014I was one 17 years ago!\u201d From one mom (and PhD) to Hillary:\nhttps://t.co/sRjY3Y76Hd", "in_reply_to_screen_name": null, "retweet_count": 681, "favorite_count": 1840, "source": "Twitter Web Client", "id_str": "633714674895196160", "is_retweet": false}, {"created_at": "Mon Mar 23 22:21:13 +0000 2015", "text": "#ACA@5: 16m covered. Young ppl. Preexisting conditions. Women get better coverage. Repeal those things? Embrace them! http://t.co/OI1m2VxD4W", "in_reply_to_screen_name": null, "retweet_count": 2754, "favorite_count": 4307, "source": "Twitter Web Client", "id_str": "580132218166726656", "is_retweet": false}, {"created_at": "Mon Aug 03 16:26:45 +0000 2015", "text": "Their names are emblazoned on our hearts.\nhttps://t.co/flfIColGIl", "in_reply_to_screen_name": null, "retweet_count": 323, "favorite_count": 493, "source": "Twitter Web Client", "id_str": "628240600412893184", "is_retweet": false}, {"created_at": "Fri Aug 07 01:44:27 +0000 2015", "text": "Watching the #GOPdebate? Follow @TheBriefing2016 for fact checks and more. https://t.co/fXeiI5XRjd", "in_reply_to_screen_name": null, "retweet_count": 453, "favorite_count": 774, "source": "Twitter Web Client", "id_str": "629468110140108801", "is_retweet": false}, {"created_at": "Tue Nov 03 00:05:09 +0000 2015", "text": "Grateful to spend time today with mothers who have lost a child to violence and turned their grief into a national call to action. -H", "in_reply_to_screen_name": null, "retweet_count": 542, "favorite_count": 1316, "source": "Twitter Web Client", "id_str": "661333253115236352", "is_retweet": false}, {"created_at": "Tue Dec 29 14:04:09 +0000 2015", "text": "Little feminists, moms, love stories\u2014some of the most heartwarming campaign moments of 2015: https://t.co/CEJwRIgwym https://t.co/VwOcllNQRe", "in_reply_to_screen_name": null, "retweet_count": 651, "favorite_count": 1986, "source": "Twitter for iPhone", "id_str": "681838115099701248", "is_retweet": false}, {"created_at": "Sat Dec 19 22:10:14 +0000 2015", "text": "\"I think Hillary will go down as one of the finest secretaries of state we\u2019ve had.\" \u2014President Obama https://t.co/D6nCGEVdv5", "in_reply_to_screen_name": null, "retweet_count": 846, "favorite_count": 1902, "source": "Twitter Web Client", "id_str": "678336563789602816", "is_retweet": false}, {"created_at": "Mon Dec 14 17:51:36 +0000 2015", "text": "\"I don't think I have ever met someone more prepared to be president.\" \u2014@Madeleine Albright on Hillary\nhttps://t.co/b3NCG45OcS", "in_reply_to_screen_name": null, "retweet_count": 1070, "favorite_count": 2241, "source": "Twitter Web Client", "id_str": "676459536782200832", "is_retweet": false}, {"created_at": "Tue May 05 22:48:52 +0000 2015", "text": "\"We have to once and for all fix our broken immigration system. This is a family issue.\"", "in_reply_to_screen_name": null, "retweet_count": 587, "favorite_count": 818, "source": "Twitter Web Client", "id_str": "595721851852234755", "is_retweet": false}, {"created_at": "Mon Oct 26 02:29:17 +0000 2015", "text": ".@ricky_martin tiene raz\u00f3n\u2014hay que ser respetuoso y Hillary continuar\u00e1 demandando que los Republicanos lo sean. https://t.co/HLTxSHr5Ct", "in_reply_to_screen_name": null, "retweet_count": 390, "favorite_count": 577, "source": "Twitter Web Client", "id_str": "658470423370276864", "is_retweet": false}, {"created_at": "Mon Nov 16 18:58:58 +0000 2015", "text": "Quality time in Ames, Iowa. https://t.co/W45JRKOS5Q", "in_reply_to_screen_name": null, "retweet_count": 546, "favorite_count": 2131, "source": "TweetDeck", "id_str": "666329631390216193", "is_retweet": false}, {"created_at": "Thu Dec 17 00:56:00 +0000 2015", "text": "The immigrant story is America's story. That's why we need a real pathway to citizenship. https://t.co/DtZfLk2pSU", "in_reply_to_screen_name": null, "retweet_count": 548, "favorite_count": 968, "source": "Twitter Web Client", "id_str": "677291116396417024", "is_retweet": false}, {"created_at": "Sun Sep 06 20:13:33 +0000 2015", "text": "20 years ago, Hillary stood up for women's rights worldwide. What do her words mean to you? Share with @Genius: http://t.co/dauCCOC9no", "in_reply_to_screen_name": null, "retweet_count": 316, "favorite_count": 565, "source": "Twitter Web Client", "id_str": "640618863525261312", "is_retweet": false}, {"created_at": "Fri Sep 18 17:56:43 +0000 2015", "text": "The House voting to defund Planned Parenthood is an attack on women's health\u2014nothing more, nothing less. Republicans should be ashamed.", "in_reply_to_screen_name": null, "retweet_count": 2703, "favorite_count": 3765, "source": "TweetDeck", "id_str": "644933081854513152", "is_retweet": false}, {"created_at": "Mon Nov 09 01:16:16 +0000 2015", "text": "Tune in to @newsone Monday morning at 7 ET for more from Hillary\u2019s South Carolina town hall with @rolandsmartin: https://t.co/QMZg1jq6fN", "in_reply_to_screen_name": null, "retweet_count": 180, "favorite_count": 342, "source": "Twitter Web Client", "id_str": "663525478347722752", "is_retweet": false}, {"created_at": "Wed Aug 26 12:07:50 +0000 2015", "text": "\"Hillary Clinton has the right policies to strengthen and expand the middle class.\"\u2014Former Iowa Governor Tom Vilsack http://t.co/l3BTNlQjCQ", "in_reply_to_screen_name": null, "retweet_count": 293, "favorite_count": 576, "source": "Twitter for iPhone", "id_str": "636510359256461312", "is_retweet": false}, {"created_at": "Wed Sep 23 02:04:30 +0000 2015", "text": "Good that Turing will lower an essential drug's price. Hillary's plan would prevent price gouging in the first place: http://t.co/bcNtasrkMN", "in_reply_to_screen_name": null, "retweet_count": 455, "favorite_count": 895, "source": "Twitter for iPhone", "id_str": "646505389383618560", "is_retweet": false}, {"created_at": "Sat Oct 24 14:12:49 +0000 2015", "text": "Before Iowa, I was in NC with my husband Aaron &amp; our cat Pretzel. When Hillary announced I knew I had to be here. https://t.co/IRmyhhpoi8", "in_reply_to_screen_name": null, "retweet_count": 100, "favorite_count": 464, "source": "TweetDeck", "id_str": "657922696127369216", "is_retweet": false}, {"created_at": "Sun Aug 23 16:49:51 +0000 2015", "text": "It\u2019s never too early to start asking the tough questions. In case you missed it: http://t.co/OVemv3pN3U", "in_reply_to_screen_name": null, "retweet_count": 393, "favorite_count": 769, "source": "TweetDeck", "id_str": "635494167733497856", "is_retweet": false}, {"created_at": "Mon Oct 05 23:15:52 +0000 2015", "text": "\ud83c\udfb5Voy a reir, voy a bailar... \ud83c\udfb5Lanzando Latinos por Hillary con @MarcAnthony. http://t.co/XDyR0defEF", "in_reply_to_screen_name": null, "retweet_count": 768, "favorite_count": 1515, "source": "TweetDeck", "id_str": "651173993685213185", "is_retweet": false}, {"created_at": "Sat Oct 24 15:03:02 +0000 2015", "text": "More than anyone, Hillary knows that the decisions she will make as President affect me and my family. #HillYes https://t.co/DwR2Ec3A5N", "in_reply_to_screen_name": null, "retweet_count": 332, "favorite_count": 1021, "source": "TweetDeck", "id_str": "657935337021247488", "is_retweet": false}, {"created_at": "Thu Aug 27 12:04:34 +0000 2015", "text": "\"We are smart enough\u2014compassionate enough\u2014to figure out how to balance legitimate Second Amendment rights with preventive measures.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1175, "favorite_count": 1995, "source": "Twitter for iPhone", "id_str": "636871928280653824", "is_retweet": false}, {"created_at": "Sun Nov 15 03:27:35 +0000 2015", "text": "It's 2015. Every woman deserves equal pay. Full stop. #DemDebate https://t.co/l0kBI6hPtp", "in_reply_to_screen_name": null, "retweet_count": 1375, "favorite_count": 2561, "source": "TweetDeck", "id_str": "665732852626145280", "is_retweet": false}, {"created_at": "Sun Sep 20 22:25:59 +0000 2015", "text": "Hillary: A champion for women\u2019s rights. http://t.co/ku922NGL2y", "in_reply_to_screen_name": null, "retweet_count": 395, "favorite_count": 733, "source": "Twitter Web Client", "id_str": "645725622023524352", "is_retweet": false}, {"created_at": "Fri Aug 28 17:11:27 +0000 2015", "text": "\"If calling for equal pay and paid leave and women's health is playing the gender card, well, then, deal me in.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1809, "favorite_count": 3012, "source": "TweetDeck", "id_str": "637311545572229121", "is_retweet": false}, {"created_at": "Wed Sep 09 02:35:37 +0000 2015", "text": "A note from Hillary on her email: http://t.co/sD8jTi5tRJ", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 733, "source": "TweetDeck", "id_str": "641439786381770753", "is_retweet": false}, {"created_at": "Mon Aug 10 23:52:36 +0000 2015", "text": ".@JebBush Fixed it for you. http://t.co/d4q9EWpXCA", "in_reply_to_screen_name": "JebBush", "retweet_count": 7963, "favorite_count": 12055, "source": "TweetDeck", "id_str": "630889514618195968", "is_retweet": false}, {"created_at": "Thu Dec 17 17:48:59 +0000 2015", "text": "Congrats on a magnificent career, Abby. Look forward to cheering on @ussoccer_wnt with you this summer! #ThanksAbby https://t.co/loMpr7ycrB", "in_reply_to_screen_name": null, "retweet_count": 556, "favorite_count": 1552, "source": "TweetDeck", "id_str": "677546044218036224", "is_retweet": false}, {"created_at": "Sun Aug 16 21:09:08 +0000 2015", "text": "Interning at #Hillary2016 HQ in NYC:\n\u2714\ufe0f Free coffee\n\u2714\ufe0f Great views\n\u2714\ufe0f The chance to make history\n\nApply today \u2192 http://t.co/519xG6Q5h2", "in_reply_to_screen_name": null, "retweet_count": 258, "favorite_count": 633, "source": "Twitter Web Client", "id_str": "633022703621025792", "is_retweet": false}, {"created_at": "Sun Nov 01 23:33:54 +0000 2015", "text": "\"I support Hillary because Hillary supports me.\" @OITNB\u2019s @UzoAduba &amp; Dascha Polanco are on Team Hillary.\nhttps://t.co/wauAhWHLnJ", "in_reply_to_screen_name": null, "retweet_count": 764, "favorite_count": 1632, "source": "Twitter Web Client", "id_str": "660963001680326656", "is_retweet": false}, {"created_at": "Mon Oct 05 14:15:17 +0000 2015", "text": "Hillary believes it\u2019s time to act on gun violence. Read her plan here: http://t.co/2DB7SM15It", "in_reply_to_screen_name": null, "retweet_count": 392, "favorite_count": 682, "source": "TweetDeck", "id_str": "651037948167782400", "is_retweet": false}, {"created_at": "Sat Sep 26 18:19:41 +0000 2015", "text": "\"A feminist is by definition someone who believes in equal rights.\" \u2014Hillary http://t.co/GEjgbbBH5n http://t.co/RB7qrBQAXa", "in_reply_to_screen_name": null, "retweet_count": 1053, "favorite_count": 1802, "source": "Twitter Web Client", "id_str": "647837964832260096", "is_retweet": false}, {"created_at": "Tue May 12 21:20:01 +0000 2015", "text": "\u2728 FLASH GIVEAWAY! \u2728 Donate before 5:30 p.m. ET, and you'll win a custom phone wallpaper: http://t.co/puDyGukzt2 http://t.co/vAtTHsWmFe", "in_reply_to_screen_name": null, "retweet_count": 110, "favorite_count": 157, "source": "Twitter Web Client", "id_str": "598236210109292545", "is_retweet": false}, {"created_at": "Thu Nov 19 16:01:37 +0000 2015", "text": "\"We are in a contest of ideas against an ideology of hate\u2014and we have to win.\" \u2014Hillary https://t.co/URx9h8eN87", "in_reply_to_screen_name": null, "retweet_count": 794, "favorite_count": 1328, "source": "TweetDeck", "id_str": "667372161166925824", "is_retweet": false}, {"created_at": "Sun Dec 06 15:07:26 +0000 2015", "text": "Quality, affordable health care is a basic human right\u2014and Hillary\u2019s been fighting for it since day one: https://t.co/OtRz93LDq1", "in_reply_to_screen_name": null, "retweet_count": 434, "favorite_count": 1006, "source": "Twitter for iPhone", "id_str": "673519119065591808", "is_retweet": false}, {"created_at": "Wed Aug 12 23:12:05 +0000 2015", "text": "Courageous words from @NicoleHockley. We need commonsense gun reform. http://t.co/RpcbQFNZ8m", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 418, "source": "TweetDeck", "id_str": "631604096508817408", "is_retweet": false}, {"created_at": "Tue Jul 14 18:53:00 +0000 2015", "text": ".@NASANewHorizons traveled 3 billion miles in nine years to forge a new frontier. Let's always keep exploring. #PlutoFlyBy", "in_reply_to_screen_name": null, "retweet_count": 435, "favorite_count": 891, "source": "Twitter Web Client", "id_str": "621029648298807296", "is_retweet": false}, {"created_at": "Mon Aug 10 21:33:51 +0000 2015", "text": "What Trump said about Megyn Kelly is outrageous\u2014but what's really outrageous is Republicans' actual positions on issues that affect women.", "in_reply_to_screen_name": null, "retweet_count": 2137, "favorite_count": 4024, "source": "TweetDeck", "id_str": "630854596206923776", "is_retweet": false}, {"created_at": "Sat Sep 19 01:18:10 +0000 2015", "text": "A proud step forward. https://t.co/nFR1jcqMj2", "in_reply_to_screen_name": null, "retweet_count": 579, "favorite_count": 1655, "source": "Twitter Web Client", "id_str": "645044174383882240", "is_retweet": false}, {"created_at": "Mon Aug 03 14:05:00 +0000 2015", "text": "Decades of fighting for everyday Americans in just 1 board. Follow some of Hillary's memorable moments on @Pinterest: http://t.co/cLwTvurEZ6", "in_reply_to_screen_name": null, "retweet_count": 144, "favorite_count": 353, "source": "Twitter Web Client", "id_str": "628204925982539777", "is_retweet": false}, {"created_at": "Mon Jul 27 16:03:39 +0000 2015", "text": "Join the fight against #climatechange while wearing the all-new Green Tee: http://t.co/qeBatnUNcT http://t.co/Ic20Aswcbk", "in_reply_to_screen_name": null, "retweet_count": 203, "favorite_count": 432, "source": "Twitter Web Client", "id_str": "625698069879910400", "is_retweet": false}, {"created_at": "Tue Dec 01 22:26:53 +0000 2015", "text": "What would a woman president mean to little girls? This. https://t.co/8PiyiuiaG5", "in_reply_to_screen_name": null, "retweet_count": 333, "favorite_count": 701, "source": "TweetDeck", "id_str": "671817771722907648", "is_retweet": false}, {"created_at": "Fri Dec 18 16:20:42 +0000 2015", "text": "\ud83c\udf08 https://t.co/paZ1iYLgbO https://t.co/nKiXEOjZDt", "in_reply_to_screen_name": null, "retweet_count": 312, "favorite_count": 851, "source": "TweetDeck", "id_str": "677886214368722944", "is_retweet": false}, {"created_at": "Thu Dec 03 19:15:36 +0000 2015", "text": "\"If you are too dangerous to fly in America, you are too dangerous to buy a gun in America.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1405, "favorite_count": 2881, "source": "TweetDeck", "id_str": "672494411553636357", "is_retweet": false}, {"created_at": "Wed May 20 13:40:01 +0000 2015", "text": "You can take the girl out of the Midwest ... https://t.co/WxBJpAYJtq", "in_reply_to_screen_name": null, "retweet_count": 109, "favorite_count": 292, "source": "Twitter Web Client", "id_str": "601019550541447168", "is_retweet": false}, {"created_at": "Sun Nov 15 19:54:34 +0000 2015", "text": "7 of Hillary's best moments at the #DemDebate, including one line every little girl should hear. https://t.co/azhqXJcKda", "in_reply_to_screen_name": null, "retweet_count": 373, "favorite_count": 716, "source": "TweetDeck", "id_str": "665981236972822529", "is_retweet": false}, {"created_at": "Sat Jul 11 15:34:53 +0000 2015", "text": ".@serenawilliams proves yet again: anything is possible when you work hard, dream big, and never stop reaching. #Wimbledon", "in_reply_to_screen_name": null, "retweet_count": 2289, "favorite_count": 3886, "source": "TweetDeck", "id_str": "619892625206865920", "is_retweet": false}, {"created_at": "Thu Oct 01 16:34:46 +0000 2015", "text": "Raising the minimum wage isn\u2019t just a women\u2019s issue -- it\u2019s also a family issue and an economic issue.\nhttps://t.co/Nc3IZrWrRy", "in_reply_to_screen_name": null, "retweet_count": 573, "favorite_count": 985, "source": "Twitter Web Client", "id_str": "649623498210447360", "is_retweet": false}, {"created_at": "Tue May 19 23:47:54 +0000 2015", "text": "Yep. Beyonc\u00e9. Get the best #Hillary2016 moments delivered to your inbox\u2014sign up for The Feed: http://t.co/VOv5boBkoo http://t.co/xA7aN8h88x", "in_reply_to_screen_name": null, "retweet_count": 872, "favorite_count": 1484, "source": "TweetDeck", "id_str": "600810141743714304", "is_retweet": false}, {"created_at": "Sun Oct 18 14:41:26 +0000 2015", "text": "http://t.co/PgJKbM0OEE", "in_reply_to_screen_name": null, "retweet_count": 310, "favorite_count": 570, "source": "Twitter for iPhone", "id_str": "655755573846257664", "is_retweet": false}, {"created_at": "Thu Dec 10 14:25:18 +0000 2015", "text": "American workers shouldn\u2019t have to shoulder the burden of corporate tax breaks. https://t.co/8O8llazLts", "in_reply_to_screen_name": null, "retweet_count": 319, "favorite_count": 674, "source": "TweetDeck", "id_str": "674958069424590848", "is_retweet": false}, {"created_at": "Thu Oct 15 21:33:55 +0000 2015", "text": "To everyone who's ever been bullied for being who you are: You're perfect, and I'm proud of you. #SpiritDay -H", "in_reply_to_screen_name": null, "retweet_count": 3942, "favorite_count": 4973, "source": "TweetDeck", "id_str": "654772215754330116", "is_retweet": false}, {"created_at": "Sun Oct 04 18:07:18 +0000 2015", "text": "We can\u2019t wait any longer to act on gun violence prevention. http://t.co/EZrJVtu8OC", "in_reply_to_screen_name": null, "retweet_count": 1511, "favorite_count": 2408, "source": "Twitter Web Client", "id_str": "650733950806196225", "is_retweet": false}, {"created_at": "Fri Oct 23 17:28:03 +0000 2015", "text": "Watch live as Hillary takes the stage in Alexandria, VA with @TerryMcAuliffe \u2192 https://t.co/8hVpwXewIi", "in_reply_to_screen_name": null, "retweet_count": 144, "favorite_count": 305, "source": "Twitter Web Client", "id_str": "657609443820064769", "is_retweet": false}, {"created_at": "Mon Sep 21 22:33:28 +0000 2015", "text": "Hillary on what the attacks against Planned Parenthood are really about:\nhttps://t.co/fmc7ZD6fq8", "in_reply_to_screen_name": null, "retweet_count": 685, "favorite_count": 1120, "source": "Twitter Web Client", "id_str": "646089892196323328", "is_retweet": false}, {"created_at": "Fri May 15 15:33:11 +0000 2015", "text": "Ever wanted to share your story? Sign up to join the #Hillary2016 email list and the next email could be from you: http://t.co/xUkMfObMer", "in_reply_to_screen_name": null, "retweet_count": 124, "favorite_count": 208, "source": "TweetDeck", "id_str": "599236090654920705", "is_retweet": false}, {"created_at": "Tue Dec 15 22:08:49 +0000 2015", "text": "\"We can\u2019t afford another major ground war in the Middle East\u2014that's exactly what ISIS wants. Shallow slogans don\u2019t add up to a strategy.\"", "in_reply_to_screen_name": null, "retweet_count": 481, "favorite_count": 909, "source": "TweetDeck", "id_str": "676886657522671617", "is_retweet": false}, {"created_at": "Fri May 22 22:14:20 +0000 2015", "text": "The official #Hillary2016 shop is coming soon! Sign up here and get 10% off when it opens: http://t.co/8u96bb4d2m http://t.co/R4k1OHoyPq", "in_reply_to_screen_name": null, "retweet_count": 172, "favorite_count": 318, "source": "TweetDeck", "id_str": "601873756936675328", "is_retweet": false}, {"created_at": "Tue May 05 22:34:02 +0000 2015", "text": "Hillary Clinton conversa sobre la reforma migratoria con un grupo de #DREAMers en Nevada. Sintoniza aqu\u00ed: http://t.co/00WXyllw8L", "in_reply_to_screen_name": null, "retweet_count": 290, "favorite_count": 326, "source": "Twitter Web Client", "id_str": "595718118514814976", "is_retweet": false}, {"created_at": "Mon Aug 10 13:13:09 +0000 2015", "text": "Let\u2019s make college affordable, relieve the crushing burden of student debt, and help every family get ahead. Watch:\nhttps://t.co/i3mQP8h4HX", "in_reply_to_screen_name": null, "retweet_count": 735, "favorite_count": 1034, "source": "Twitter Web Client", "id_str": "630728591450312705", "is_retweet": false}, {"created_at": "Thu Jun 04 20:24:58 +0000 2015", "text": "http://t.co/huecVP3MzK", "in_reply_to_screen_name": null, "retweet_count": 243, "favorite_count": 431, "source": "TweetDeck", "id_str": "606557276124516352", "is_retweet": false}, {"created_at": "Thu May 21 16:21:55 +0000 2015", "text": "Owning a business\u2014managing projects, budgets, and people\u2014is a lot of work. The people aspect can be the toughest and the most rewarding.", "in_reply_to_screen_name": null, "retweet_count": 77, "favorite_count": 175, "source": "TweetDeck", "id_str": "601422682123546624", "is_retweet": false}, {"created_at": "Wed May 20 19:30:34 +0000 2015", "text": "Big news: #Hillary2016 is having its first big rally\u2014and YOU could be there. Enter now: http://t.co/ZT5MzPsUtd http://t.co/CgHGAzs8nL", "in_reply_to_screen_name": null, "retweet_count": 245, "favorite_count": 465, "source": "Twitter Web Client", "id_str": "601107768255328259", "is_retweet": false}, {"created_at": "Wed Aug 26 23:38:45 +0000 2015", "text": "95 years ago, Henrietta fought for women's right to vote. Her granddaughter wrote us a letter: http://t.co/bFiDVCgyVv http://t.co/z8Zca9fnBW", "in_reply_to_screen_name": null, "retweet_count": 644, "favorite_count": 1228, "source": "TweetDeck", "id_str": "636684235739394048", "is_retweet": false}, {"created_at": "Fri Oct 23 20:00:38 +0000 2015", "text": "\"I'm running for President, because after listening to people across our country, your fights are my fights.\" https://t.co/h8qECEPqsx", "in_reply_to_screen_name": null, "retweet_count": 743, "favorite_count": 1736, "source": "TweetDeck", "id_str": "657647840404111360", "is_retweet": false}, {"created_at": "Wed Nov 11 03:46:25 +0000 2015", "text": "It\u2019s not the big banks that need relief from Washington\u2014it\u2019s small banks and small businesses. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 356, "favorite_count": 779, "source": "TweetDeck", "id_str": "664288041951866880", "is_retweet": false}, {"created_at": "Thu Sep 24 18:02:19 +0000 2015", "text": "This is our country, and we won\u2019t stay trapped beneath glass. Join #WomenforHillary: http://t.co/RQ8cDCw0GU\nhttps://t.co/6WL9CVVmA2", "in_reply_to_screen_name": null, "retweet_count": 474, "favorite_count": 697, "source": "Twitter Web Client", "id_str": "647108816983601153", "is_retweet": false}, {"created_at": "Sat Jun 13 16:32:38 +0000 2015", "text": "Texts from Hillary start today. Text \"2016\" to 47246 to get texts from the campaign. #Hillary2016 http://t.co/F42WbjDlIb", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 748, "source": "Twitter Web Client", "id_str": "609760299546222592", "is_retweet": false}, {"created_at": "Fri May 29 01:34:26 +0000 2015", "text": "Two Ls, not one. http://t.co/ZwBBZ0j9OG http://t.co/BdzaS08n41", "in_reply_to_screen_name": null, "retweet_count": 662, "favorite_count": 1546, "source": "Twitter Web Client", "id_str": "604098438804934657", "is_retweet": false}, {"created_at": "Thu Jul 23 20:27:01 +0000 2015", "text": "Add your name if you agree: We need full equality for LGBT Americans. Pass the #EqualityAct. http://t.co/ym2VYOlMvV http://t.co/J1xdbbdKLd", "in_reply_to_screen_name": null, "retweet_count": 557, "favorite_count": 1015, "source": "Twitter Web Client", "id_str": "624314796897210369", "is_retweet": false}, {"created_at": "Mon Jul 06 00:50:55 +0000 2015", "text": "Here's to fearless women chasing their goals. Congratulations, Team #USA! \u2014H", "in_reply_to_screen_name": null, "retweet_count": 5507, "favorite_count": 9467, "source": "Twitter Web Client", "id_str": "617858226957209600", "is_retweet": false}, {"created_at": "Wed Oct 28 17:44:25 +0000 2015", "text": "\"If you're looking for someone to say what is wrong with America, I'm not your candidate. I think there is more right than wrong.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 690, "favorite_count": 1530, "source": "TweetDeck", "id_str": "659425500448890881", "is_retweet": false}, {"created_at": "Mon Sep 14 16:54:43 +0000 2015", "text": "Watch live now: Hillary speaks on the fight to ensure every woman in America can fulfill her potential \u2192 http://t.co/FQpxAxA4LX", "in_reply_to_screen_name": null, "retweet_count": 195, "favorite_count": 350, "source": "TweetDeck", "id_str": "643467928558505984", "is_retweet": false}, {"created_at": "Wed Oct 14 04:15:02 +0000 2015", "text": "\u201cFinally, fathers will be able to say to their daughters: you too can grow up to be president.\u201d #DemDebate\nhttps://t.co/pan4VXnmgT", "in_reply_to_screen_name": null, "retweet_count": 2507, "favorite_count": 4657, "source": "Twitter Web Client", "id_str": "654148384295522304", "is_retweet": false}, {"created_at": "Wed Aug 12 23:44:16 +0000 2015", "text": "\u00af\\_(\u30c4)_/\u00af \n(But in all seriousness: http://t.co/A4pWb3fOf4) http://t.co/qQBYSnkJZa", "in_reply_to_screen_name": null, "retweet_count": 555, "favorite_count": 1081, "source": "Twitter Web Client", "id_str": "631612194594160640", "is_retweet": false}, {"created_at": "Sun Nov 15 04:10:04 +0000 2015", "text": "El trabajo de un presidente o una presidenta es hacer todo lo posible para que todos puedan salir adelante. \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 804, "source": "TweetDeck", "id_str": "665743545307807744", "is_retweet": false}, {"created_at": "Tue Oct 20 20:59:01 +0000 2015", "text": "Take it from a fellow Secretary of State: No one used smart power better than Hillary during her tenure.\nhttps://t.co/y6WwpIXGQf", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 665, "source": "Twitter Web Client", "id_str": "656575368774553600", "is_retweet": false}, {"created_at": "Thu Jun 11 14:47:00 +0000 2015", "text": "\"Doting grandmother, among other things.\" Follow Hillary's new @instagram: http://t.co/FRwn7602wh http://t.co/tG5AkUWnjF", "in_reply_to_screen_name": null, "retweet_count": 149, "favorite_count": 432, "source": "TweetDeck", "id_str": "609008939846344706", "is_retweet": false}, {"created_at": "Fri Jun 19 21:00:56 +0000 2015", "text": ".@Pontifex is right\u2014climate change is a moral crisis that disproportionately harms the neediest among us. We need leadership, not denial. -H", "in_reply_to_screen_name": null, "retweet_count": 1127, "favorite_count": 1828, "source": "Twitter Web Client", "id_str": "612002144686874627", "is_retweet": false}, {"created_at": "Thu Jun 25 14:37:30 +0000 2015", "text": "Yes! SCOTUS affirms what we know is true in our hearts &amp; under the law: Health insurance should be affordable &amp; available to all. -H", "in_reply_to_screen_name": null, "retweet_count": 3053, "favorite_count": 4418, "source": "Twitter Web Client", "id_str": "614079976892182528", "is_retweet": false}, {"created_at": "Thu Oct 22 15:47:44 +0000 2015", "text": "We need leadership that puts national security ahead of politics and ideology. #BenghaziCommittee\nhttps://t.co/8nBtzV0E6K", "in_reply_to_screen_name": null, "retweet_count": 1264, "favorite_count": 1901, "source": "Twitter Web Client", "id_str": "657221810325336064", "is_retweet": false}, {"created_at": "Fri Nov 13 22:17:01 +0000 2015", "text": "The reports from Paris are harrowing. Praying for the city and families of the victims. -H", "in_reply_to_screen_name": null, "retweet_count": 8468, "favorite_count": 15696, "source": "TweetDeck", "id_str": "665292308032520192", "is_retweet": false}, {"created_at": "Thu May 14 14:06:58 +0000 2015", "text": "#Hillary2016 is ramping up across the country! Take a look: http://t.co/DhgLGlGCRN http://t.co/sfwgOdH1aF", "in_reply_to_screen_name": null, "retweet_count": 202, "favorite_count": 368, "source": "TweetDeck", "id_str": "598852004014911488", "is_retweet": false}, {"created_at": "Fri Jul 03 18:49:14 +0000 2015", "text": "Ready for the long weekend? Show us your style by tagging your photos #Hillary2016. (via chanceyloulou on Instagram) http://t.co/RuBosPk2Ub", "in_reply_to_screen_name": null, "retweet_count": 170, "favorite_count": 543, "source": "TweetDeck", "id_str": "617042432925016064", "is_retweet": false}, {"created_at": "Wed Oct 21 12:31:23 +0000 2015", "text": "As Secretary of State, Hillary prioritized the education of women &amp; girls to build peaceful and prosperous nations.\nhttps://t.co/VMXkFLVGOe", "in_reply_to_screen_name": null, "retweet_count": 529, "favorite_count": 841, "source": "Twitter Web Client", "id_str": "656810009943105536", "is_retweet": false}, {"created_at": "Sun Jun 14 17:17:28 +0000 2015", "text": "Spotted in Iowa: Talia (and Talia's grandma) think it's about time for \"the first girl president.\" http://t.co/WSOgkEYWz2", "in_reply_to_screen_name": null, "retweet_count": 301, "favorite_count": 902, "source": "Twitter for iPhone", "id_str": "610133968822923265", "is_retweet": false}, {"created_at": "Wed Nov 18 18:30:52 +0000 2015", "text": "Proud to have @SEIU on this team. https://t.co/i6skAsTxnG https://t.co/pjNOmt96VY", "in_reply_to_screen_name": null, "retweet_count": 265, "favorite_count": 635, "source": "TweetDeck", "id_str": "667047334145097729", "is_retweet": false}, {"created_at": "Mon Jun 29 20:09:02 +0000 2015", "text": "Just one of the millions of reasons why Hillary's fighting for affordable health care: Meghan R. from New Hampshire.\nhttps://t.co/gNrShOlk2z", "in_reply_to_screen_name": null, "retweet_count": 258, "favorite_count": 390, "source": "Twitter Web Client", "id_str": "615612960891801601", "is_retweet": false}, {"created_at": "Wed Dec 02 18:06:51 +0000 2015", "text": "Families pay over $500 per year on car maintenance because of deteriorating roads. We need to invest in our infrastructure.", "in_reply_to_screen_name": null, "retweet_count": 504, "favorite_count": 1430, "source": "TweetDeck", "id_str": "672114720820895744", "is_retweet": false}, {"created_at": "Sun Sep 27 19:00:59 +0000 2015", "text": ".@amyschumer and @lenadunham stopped by HQ: http://t.co/GCydyb9Mfd", "in_reply_to_screen_name": null, "retweet_count": 334, "favorite_count": 1168, "source": "Twitter for iPhone", "id_str": "648210745704976385", "is_retweet": false}, {"created_at": "Thu Aug 13 19:22:12 +0000 2015", "text": "We need to make education affordable and available to every American. Find out how Hillary\u2019s plan will help you: http://t.co/PruKIXQQqo", "in_reply_to_screen_name": null, "retweet_count": 296, "favorite_count": 457, "source": "TweetDeck", "id_str": "631908632683237376", "is_retweet": false}, {"created_at": "Mon Aug 03 22:06:22 +0000 2015", "text": "Hillary stands with Planned Parenthood. Add your name if you do, too: http://t.co/A9YIs0S73W #standwithPP http://t.co/dVY6B1fQ7o", "in_reply_to_screen_name": null, "retweet_count": 733, "favorite_count": 1472, "source": "Twitter Web Client", "id_str": "628326067078606850", "is_retweet": false}, {"created_at": "Thu Apr 23 14:59:00 +0000 2015", "text": "Neighbors talking to neighbors = politics the way it should be. http://t.co/8q0SjOgHhw http://t.co/ibqcFBmsKx", "in_reply_to_screen_name": null, "retweet_count": 342, "favorite_count": 571, "source": "Twitter Web Client", "id_str": "591254954402250752", "is_retweet": false}, {"created_at": "Wed Aug 19 18:52:34 +0000 2015", "text": "After all these years, nobody makes me laugh like @billclinton. Happy birthday! -H http://t.co/8fNuVQ0BKV", "in_reply_to_screen_name": null, "retweet_count": 2077, "favorite_count": 5860, "source": "Twitter Web Client", "id_str": "634075501615808512", "is_retweet": false}, {"created_at": "Mon Aug 10 01:04:25 +0000 2015", "text": "#Hillary2016 is on Snapchat! Add us: @hillaryclinton \ud83d\udc7b http://t.co/JvDuvXrGIm", "in_reply_to_screen_name": null, "retweet_count": 528, "favorite_count": 1186, "source": "Twitter for iPhone", "id_str": "630545198930595841", "is_retweet": false}, {"created_at": "Mon Oct 05 14:43:26 +0000 2015", "text": "Watch live: Hillary unveils her gun violence prevention policy in New Hampshire \u2192 http://t.co/VfohmlYfvs", "in_reply_to_screen_name": null, "retweet_count": 202, "favorite_count": 374, "source": "TweetDeck", "id_str": "651045035161583616", "is_retweet": false}, {"created_at": "Thu Sep 24 02:04:03 +0000 2015", "text": "We must renew the basic bargain of America: If you work hard and you do your part, you should be able to get ahead and stay ahead.", "in_reply_to_screen_name": null, "retweet_count": 578, "favorite_count": 1300, "source": "TweetDeck", "id_str": "646867663788990464", "is_retweet": false}, {"created_at": "Fri Nov 13 03:34:42 +0000 2015", "text": "#TBT to when Hillary declared she\u2019s not *just* a progressive at last month\u2019s Democratic Debate. https://t.co/I1waajSkUk", "in_reply_to_screen_name": null, "retweet_count": 410, "favorite_count": 890, "source": "Twitter Web Client", "id_str": "665009868026310657", "is_retweet": false}, {"created_at": "Wed Aug 05 00:30:26 +0000 2015", "text": "The Voting Rights Act turns 50 this week. When did you cast your first ballot &amp; what did it mean to you? Share your story with #MyFirstVote.", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 704, "source": "Twitter Web Client", "id_str": "628724710684127233", "is_retweet": false}, {"created_at": "Thu Oct 08 21:47:32 +0000 2015", "text": "My plan for Wall Street: Hold individuals and corporations accountable. Make tough rules and enforce them. http://t.co/xcG7SxrWl9 -H", "in_reply_to_screen_name": null, "retweet_count": 332, "favorite_count": 525, "source": "TweetDeck", "id_str": "652238923771572225", "is_retweet": false}, {"created_at": "Sat May 16 20:07:02 +0000 2015", "text": "Hope you have THIS much fun this weekend. http://t.co/MNgd8p4B3W", "in_reply_to_screen_name": null, "retweet_count": 380, "favorite_count": 948, "source": "TweetDeck", "id_str": "599667391711281152", "is_retweet": false}, {"created_at": "Sat Oct 10 00:26:19 +0000 2015", "text": ".@people is right, we can\u2019t give up. It\u2019s time to act on gun violence. https://t.co/YvHxXm9hNm", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 977, "source": "TweetDeck", "id_str": "652641274550452224", "is_retweet": false}, {"created_at": "Fri Oct 23 14:09:20 +0000 2015", "text": "If you're proud to stand with Hillary, show the world with your free sticker \u2192 https://t.co/0Xb1A8C8L3", "in_reply_to_screen_name": null, "retweet_count": 299, "favorite_count": 717, "source": "TweetDeck", "id_str": "657559433237635072", "is_retweet": false}, {"created_at": "Fri Aug 21 00:15:48 +0000 2015", "text": "Grab the She\u2019s Got Your Back(pack) and gear up for back to school: http://t.co/YFbJHEUOYQ\nhttps://t.co/XhUzTHYSer", "in_reply_to_screen_name": null, "retweet_count": 175, "favorite_count": 450, "source": "Twitter Web Client", "id_str": "634519234605780992", "is_retweet": false}, {"created_at": "Wed Nov 11 20:16:16 +0000 2015", "text": "What those who served and sacrificed want you to know this Veterans Day: https://t.co/TWlmE1BQnj", "in_reply_to_screen_name": null, "retweet_count": 202, "favorite_count": 409, "source": "TweetDeck", "id_str": "664537146544418816", "is_retweet": false}, {"created_at": "Mon Jul 27 00:08:32 +0000 2015", "text": "We have to do much more\u2014and we have to do it now. Watch the video:\nhttps://t.co/0nr45wb06j", "in_reply_to_screen_name": null, "retweet_count": 345, "favorite_count": 491, "source": "Twitter Web Client", "id_str": "625457706208333824", "is_retweet": false}, {"created_at": "Thu Nov 19 16:04:31 +0000 2015", "text": "\"We cannot allow terrorists to intimidate us into abandoning our values and our humanitarian obligations.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1058, "favorite_count": 1715, "source": "TweetDeck", "id_str": "667372893475635200", "is_retweet": false}, {"created_at": "Mon Jun 15 14:45:35 +0000 2015", "text": "\"Everything we need to do in our country really starts with how we treat our children.\" -Hillary in NH. Watch live: http://t.co/5og8riq0zF", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 792, "source": "TweetDeck", "id_str": "610458132502982656", "is_retweet": false}, {"created_at": "Sun Dec 20 02:39:58 +0000 2015", "text": "Hillary is the candidate in this race with the experience to be commander-in-chief. Text QUALIFIED to 47246 if you agree. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 1156, "source": "TweetDeck", "id_str": "678404446716588032", "is_retweet": false}, {"created_at": "Wed Dec 16 04:03:10 +0000 2015", "text": "We are Americans. We will not turn on each other or our principles. That's how we win. #GOPdebate https://t.co/d53r0J58iE", "in_reply_to_screen_name": null, "retweet_count": 1121, "favorite_count": 2296, "source": "TweetDeck", "id_str": "676975830627655686", "is_retweet": false}, {"created_at": "Wed Oct 07 23:41:59 +0000 2015", "text": "Stop the delay, price gouging, and profiting off of others' illnesses. Tell @MartinShkreli to drop the price now. http://t.co/HOS4OXq1ES -H", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 759, "source": "Twitter Web Client", "id_str": "651905338183143424", "is_retweet": false}, {"created_at": "Mon Aug 31 21:03:44 +0000 2015", "text": "Read Hillary and @SenatorBaldwin\u2019s op-ed on a bill to stop the revolving door between Wall Street and our government: http://t.co/XkUGfJqF3c", "in_reply_to_screen_name": null, "retweet_count": 231, "favorite_count": 342, "source": "TweetDeck", "id_str": "638457162243682304", "is_retweet": false}, {"created_at": "Wed Nov 18 15:52:32 +0000 2015", "text": "The Affordable Care Act helps millions of Americans. We should build on that progress\u2014not go back to square one. https://t.co/WRlMFRDXXy", "in_reply_to_screen_name": null, "retweet_count": 676, "favorite_count": 1431, "source": "TweetDeck", "id_str": "667007489460862977", "is_retweet": false}, {"created_at": "Sat Nov 28 16:11:23 +0000 2015", "text": "Support small businesses today! They are the backbone of our economy and represent the best of American ingenuity. -H", "in_reply_to_screen_name": null, "retweet_count": 814, "favorite_count": 1616, "source": "TweetDeck", "id_str": "670636112751304704", "is_retweet": false}, {"created_at": "Tue May 26 01:53:32 +0000 2015", "text": "10% off and an exclusive sneak peek at the #Hillary2016 store ahead \u2192 http://t.co/nIzR7ugFyE http://t.co/2V4ixGEVhn", "in_reply_to_screen_name": null, "retweet_count": 128, "favorite_count": 270, "source": "Twitter Web Client", "id_str": "603016085026246656", "is_retweet": false}, {"created_at": "Sun Oct 25 13:01:07 +0000 2015", "text": "A roaring good time at the Iowa JJ. https://t.co/2VzV5u2fQe", "in_reply_to_screen_name": null, "retweet_count": 943, "favorite_count": 2613, "source": "TweetDeck", "id_str": "658267044006117377", "is_retweet": false}, {"created_at": "Tue Oct 20 18:07:42 +0000 2015", "text": "Hillary has the experience, skills, and vision we need in our next Commander-in-chief. Just ask @madeleine: https://t.co/2ETq3t5GBv", "in_reply_to_screen_name": null, "retweet_count": 758, "favorite_count": 1468, "source": "TweetDeck", "id_str": "656532258300411904", "is_retweet": false}, {"created_at": "Fri Jun 12 12:29:01 +0000 2015", "text": "Can't make it to the #Hillary2016 launch? We saved you a seat. Catch the livestream here: http://t.co/vPn5dcZ0e5 http://t.co/FXIogHQUFY", "in_reply_to_screen_name": null, "retweet_count": 308, "favorite_count": 554, "source": "TweetDeck", "id_str": "609336600930189312", "is_retweet": false}, {"created_at": "Mon Nov 09 02:24:04 +0000 2015", "text": "Today marks one year from the presidential election. Here\u2019s what\u2019s at stake, in one terrifying flow chart: https://t.co/xsbuCQRoYT", "in_reply_to_screen_name": null, "retweet_count": 567, "favorite_count": 923, "source": "Twitter Web Client", "id_str": "663542539321008129", "is_retweet": false}, {"created_at": "Tue Sep 01 18:26:22 +0000 2015", "text": ".@GovHowardDean for Hillary: \"I want her compassion and leadership in the Oval Office.\u201d http://t.co/1hx6ubF7q0", "in_reply_to_screen_name": null, "retweet_count": 391, "favorite_count": 637, "source": "TweetDeck", "id_str": "638779950598868992", "is_retweet": false}, {"created_at": "Fri Oct 23 01:01:06 +0000 2015", "text": "11 hours in \u2192 #ImWithHer https://t.co/0t9V3oqZGQ https://t.co/wxtU2atLte", "in_reply_to_screen_name": null, "retweet_count": 4046, "favorite_count": 6743, "source": "TweetDeck", "id_str": "657361067430014976", "is_retweet": false}, {"created_at": "Thu Apr 23 20:40:08 +0000 2015", "text": "Been waiting months to say this: Congratulations to Loretta Lynch, officially confirmed as the next AG. Great news for her + for America. -H", "in_reply_to_screen_name": null, "retweet_count": 1818, "favorite_count": 3563, "source": "Twitter Web Client", "id_str": "591340802384777218", "is_retweet": false}, {"created_at": "Tue Sep 22 19:41:27 +0000 2015", "text": "Hillary on her plan to stop drug companies' price gouging, boost innovation, and keep money in families' pockets \u2192 http://t.co/IzqXHljV8R", "in_reply_to_screen_name": null, "retweet_count": 307, "favorite_count": 524, "source": "TweetDeck", "id_str": "646408990985973760", "is_retweet": false}, {"created_at": "Sun Oct 04 21:27:39 +0000 2015", "text": "LGBT rights are human rights and human rights are LGBT rights -- period. http://t.co/Plj2NjuRHD", "in_reply_to_screen_name": null, "retweet_count": 1268, "favorite_count": 2314, "source": "Twitter Web Client", "id_str": "650784369012031488", "is_retweet": false}, {"created_at": "Wed Nov 25 19:23:40 +0000 2015", "text": "En un chat Telemundo por la web, Hillary habl\u00f3 de Donald Trump, la educaci\u00f3n, y los tacos. https://t.co/bUUI9v753X", "in_reply_to_screen_name": null, "retweet_count": 143, "favorite_count": 288, "source": "TweetDeck", "id_str": "669597336927105028", "is_retweet": false}, {"created_at": "Thu Sep 24 15:46:21 +0000 2015", "text": ".@lenadunham: \"Do you consider yourself a feminist?\"\nHillary: \"Yes. Absolutely.\" http://t.co/GEjgbbBH5n http://t.co/mAIB4bL28z", "in_reply_to_screen_name": null, "retweet_count": 935, "favorite_count": 2077, "source": "TweetDeck", "id_str": "647074600371752960", "is_retweet": false}, {"created_at": "Mon Jun 01 03:11:55 +0000 2015", "text": "Sweet dreams. http://t.co/1gJzW9sfZD", "in_reply_to_screen_name": null, "retweet_count": 694, "favorite_count": 1724, "source": "Twitter Web Client", "id_str": "605210136970457089", "is_retweet": false}, {"created_at": "Mon Sep 28 01:31:08 +0000 2015", "text": "Powerful to see @POTUS sit with federal prisoners for this important conversation. It's time to end mass incarceration. #VICEonHBO", "in_reply_to_screen_name": null, "retweet_count": 1156, "favorite_count": 2030, "source": "Twitter Web Client", "id_str": "648308931371122688", "is_retweet": false}, {"created_at": "Sun Aug 16 22:56:02 +0000 2015", "text": "Students should never have to take out a loan to pay for tuition at their state\u2019s public university.", "in_reply_to_screen_name": null, "retweet_count": 11876, "favorite_count": 10196, "source": "Twitter Web Client", "id_str": "633049608185344000", "is_retweet": false}, {"created_at": "Fri Jul 03 21:02:12 +0000 2015", "text": "A great start to the weekend at Dartmouth College in Hanover, New Hampshire. http://t.co/u41umW75P9", "in_reply_to_screen_name": null, "retweet_count": 331, "favorite_count": 806, "source": "TweetDeck", "id_str": "617075895875014656", "is_retweet": false}, {"created_at": "Thu Oct 29 02:14:59 +0000 2015", "text": "Will repeat this as often as needed: Women\u2014not the politicians on stage\u2014should make decisions about their own health. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 3895, "favorite_count": 7066, "source": "Twitter Web Client", "id_str": "659553987105042432", "is_retweet": false}, {"created_at": "Tue Aug 04 01:32:27 +0000 2015", "text": "Vean los mejores momentos del discurso de Hillary sobre Cuba que pueden compartir por @WhatsApp \u2192 http://t.co/qmEuW1gaM4", "in_reply_to_screen_name": null, "retweet_count": 152, "favorite_count": 250, "source": "Twitter Web Client", "id_str": "628377930461249536", "is_retweet": false}, {"created_at": "Wed Jun 24 12:51:42 +0000 2015", "text": "All love is equal. It's time for marriage equality. http://t.co/U292Ryn5aI", "in_reply_to_screen_name": null, "retweet_count": 1400, "favorite_count": 2187, "source": "TweetDeck", "id_str": "613690963551256577", "is_retweet": false}, {"created_at": "Fri Dec 04 15:08:34 +0000 2015", "text": "Women and girls can stand straighter and speak louder because of the examples set by these artists: https://t.co/3z9mjYzISv #WomenInMusic", "in_reply_to_screen_name": null, "retweet_count": 406, "favorite_count": 902, "source": "TweetDeck", "id_str": "672794629977321472", "is_retweet": false}, {"created_at": "Sat Jun 27 21:05:02 +0000 2015", "text": "Seven years ago today: unity in Unity, NH. http://t.co/HsBuw8jwZU", "in_reply_to_screen_name": null, "retweet_count": 652, "favorite_count": 1666, "source": "Twitter for iPhone", "id_str": "614902279657943040", "is_retweet": false}, {"created_at": "Sat Jun 27 17:00:24 +0000 2015", "text": "You'll want to read this: Hillary's remarks at the Jefferson Jackson Dinner \u2192 http://t.co/lllS5yoNKg http://t.co/ULz8Q17RWf", "in_reply_to_screen_name": null, "retweet_count": 443, "favorite_count": 784, "source": "TweetDeck", "id_str": "614840716913676288", "is_retweet": false}, {"created_at": "Sat Nov 07 02:28:46 +0000 2015", "text": "\"It is hard to understand why the suspension and expulsion rate is so much higher for black kids than for white kids.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 659, "favorite_count": 1235, "source": "TweetDeck", "id_str": "662818948409266178", "is_retweet": false}, {"created_at": "Sat Apr 25 15:44:35 +0000 2015", "text": "My thoughts and prayers are with the people of Nepal. \u2013H", "in_reply_to_screen_name": null, "retweet_count": 1256, "favorite_count": 2800, "source": "Twitter for iPhone", "id_str": "591991199424208896", "is_retweet": false}, {"created_at": "Mon Nov 16 13:13:39 +0000 2015", "text": "Americans deserve a raise. https://t.co/uJAadCjehT", "in_reply_to_screen_name": null, "retweet_count": 677, "favorite_count": 1748, "source": "TweetDeck", "id_str": "666242727735070720", "is_retweet": false}, {"created_at": "Fri Sep 04 01:42:35 +0000 2015", "text": ".@TheEllenShow Can't wait\u2014but please, stop texting \"Clinton/DeGeneres\" slogan ideas.", "in_reply_to_screen_name": "TheEllenShow", "retweet_count": 975, "favorite_count": 3402, "source": "Twitter Web Client", "id_str": "639614504343572480", "is_retweet": false}, {"created_at": "Fri May 29 12:46:44 +0000 2015", "text": "Highlights of #HillaryInSC: small business, equal pay, and a few local specialties. http://t.co/FECNrOzto9 http://t.co/fLW5LJJ5wk", "in_reply_to_screen_name": null, "retweet_count": 199, "favorite_count": 544, "source": "TweetDeck", "id_str": "604267631072415745", "is_retweet": false}, {"created_at": "Sat Nov 28 18:11:34 +0000 2015", "text": "Hillary Rodham and Bill Clinton met at law school\u2014and she made the first move. https://t.co/GJVMz7PpjV", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 1306, "source": "Twitter Web Client", "id_str": "670666355222409217", "is_retweet": false}, {"created_at": "Mon Dec 21 19:06:50 +0000 2015", "text": "It is time to put an end to conversion therapy for minors. We should be supporting LGBT kids\u2014not trying to change them.", "in_reply_to_screen_name": null, "retweet_count": 3141, "favorite_count": 6938, "source": "TweetDeck", "id_str": "679015185575645184", "is_retweet": false}, {"created_at": "Wed Aug 12 19:55:12 +0000 2015", "text": "We can all do our part to make sure every young person has the opportunity to reach her or his full potential. http://t.co/QAgss4qRdD", "in_reply_to_screen_name": null, "retweet_count": 483, "favorite_count": 760, "source": "Twitter Web Client", "id_str": "631554545701756928", "is_retweet": false}, {"created_at": "Wed Sep 16 23:56:34 +0000 2015", "text": "S\u00edganos en @TheBriefing2016 para nuestras reacciones sobre el debate republicano que est\u00e1 por empezar.", "in_reply_to_screen_name": null, "retweet_count": 129, "favorite_count": 244, "source": "Twitter Web Client", "id_str": "644298866813218816", "is_retweet": false}, {"created_at": "Thu Nov 19 16:07:35 +0000 2015", "text": "\"It would be a cruel irony indeed if ISIS can force families from their homes &amp; then also prevent them from ever finding new ones.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1600, "favorite_count": 2088, "source": "TweetDeck", "id_str": "667373664900407296", "is_retweet": false}, {"created_at": "Thu Nov 05 16:49:52 +0000 2015", "text": "Meet Olivia, the 12-year-old feminist who wrote Hillary this letter: https://t.co/1PLC2hrymq https://t.co/STEECewzkM", "in_reply_to_screen_name": null, "retweet_count": 706, "favorite_count": 1951, "source": "TweetDeck", "id_str": "662310876863717377", "is_retweet": false}, {"created_at": "Tue Dec 15 22:20:27 +0000 2015", "text": "\"We cannot allow terrorists to intimidate us into abandoning our values...that is not who we are as Americans. We are better than that.\"", "in_reply_to_screen_name": null, "retweet_count": 465, "favorite_count": 927, "source": "TweetDeck", "id_str": "676889584706392064", "is_retweet": false}, {"created_at": "Tue Dec 15 23:39:53 +0000 2015", "text": "@lorellapraeli I'm so proud to call you my fellow citizen. \u00a1Felicitaciones! -H", "in_reply_to_screen_name": "lorellapraeli", "retweet_count": 71, "favorite_count": 154, "source": "Twitter Web Client", "id_str": "676909573354209281", "is_retweet": false}, {"created_at": "Tue Apr 21 15:10:28 +0000 2015", "text": "Kicking off day two in New Hampshire\u2014follow @HillaryforNH for updates from the trail! http://t.co/vDRM6ruAR7", "in_reply_to_screen_name": null, "retweet_count": 368, "favorite_count": 874, "source": "Twitter Web Client", "id_str": "590533064952020992", "is_retweet": false}, {"created_at": "Mon May 25 17:23:32 +0000 2015", "text": "Some good advice from Hillary. http://t.co/e6Me6yzKhF", "in_reply_to_screen_name": null, "retweet_count": 335, "favorite_count": 987, "source": "Twitter Web Client", "id_str": "602887736849207296", "is_retweet": false}, {"created_at": "Mon Nov 23 20:31:36 +0000 2015", "text": "Take an in-depth look at Hillary's plan to defeat ISIS with the campaign's foreign policy expert, @rosenbergerlm: https://t.co/0CN59dcBq8", "in_reply_to_screen_name": null, "retweet_count": 366, "favorite_count": 644, "source": "TweetDeck", "id_str": "668889659460685824", "is_retweet": false}, {"created_at": "Mon Apr 27 18:26:35 +0000 2015", "text": "Read Hillary's thank you note to Iowa: http://t.co/kCFoGLXqho http://t.co/0XMT89VAz3", "in_reply_to_screen_name": null, "retweet_count": 293, "favorite_count": 570, "source": "Twitter Web Client", "id_str": "592756745623187456", "is_retweet": false}, {"created_at": "Fri Oct 23 14:35:50 +0000 2015", "text": "\"I'm doing everything I can to make sure the issues that matter most to women and families are front and center in this election.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 649, "favorite_count": 1757, "source": "TweetDeck", "id_str": "657566104404033536", "is_retweet": false}, {"created_at": "Sun Nov 15 03:37:16 +0000 2015", "text": "We must make community colleges tuition-free across America. #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 792, "favorite_count": 1831, "source": "TweetDeck", "id_str": "665735289181073412", "is_retweet": false}, {"created_at": "Fri Dec 11 18:30:05 +0000 2015", "text": "On the set of @broadcity season 3 with @abbijacobson, @ilazer and Amy! #yas https://t.co/KYOAWDSshK", "in_reply_to_screen_name": null, "retweet_count": 2481, "favorite_count": 6580, "source": "TweetDeck", "id_str": "675382057388916736", "is_retweet": false}, {"created_at": "Fri Jul 17 17:58:35 +0000 2015", "text": "Thanks for the support, Munir! https://t.co/awRjmMakoS", "in_reply_to_screen_name": null, "retweet_count": 258, "favorite_count": 569, "source": "TweetDeck", "id_str": "622103114104086528", "is_retweet": false}, {"created_at": "Thu Oct 29 02:01:56 +0000 2015", "text": "Republicans are looking out for the wealthy and well-connected. Hillary is looking out for us. #GOPdebate\nhttps://t.co/zTkCxPCBFw", "in_reply_to_screen_name": null, "retweet_count": 460, "favorite_count": 969, "source": "Twitter Web Client", "id_str": "659550706307698688", "is_retweet": false}, {"created_at": "Wed May 13 19:47:35 +0000 2015", "text": "#Hillary2016 supporters bringing this campaign to new heights. Thanks for stopping by, @jasoncollins98! https://t.co/9Uay3TP59s", "in_reply_to_screen_name": null, "retweet_count": 135, "favorite_count": 296, "source": "TweetDeck", "id_str": "598575335999930368", "is_retweet": false}, {"created_at": "Fri Dec 18 14:41:15 +0000 2015", "text": "Those at the top are doing just fine. It\u2019s your family that needs a raise.\nhttps://t.co/9WR6XcctTE", "in_reply_to_screen_name": null, "retweet_count": 722, "favorite_count": 1301, "source": "Twitter Web Client", "id_str": "677861187611000832", "is_retweet": false}, {"created_at": "Mon Nov 16 22:27:56 +0000 2015", "text": "Thank you, @JimObergefell. Our work isn\u2019t over yet. https://t.co/Uk3OZcLIyl", "in_reply_to_screen_name": null, "retweet_count": 432, "favorite_count": 1087, "source": "TweetDeck", "id_str": "666382220253372416", "is_retweet": false}, {"created_at": "Thu Dec 17 02:18:46 +0000 2015", "text": "Need another reason to be upset with Republican candidates? As you wish: https://t.co/yR7yK5ZzFv", "in_reply_to_screen_name": null, "retweet_count": 438, "favorite_count": 938, "source": "Twitter Web Client", "id_str": "677311946094415872", "is_retweet": false}, {"created_at": "Thu Jul 30 23:15:50 +0000 2015", "text": "Medicare and Medicaid stories: Celebrating 50 years of lives saved. http://t.co/ZzKXlXLFSQ #KeepingUSHealthy http://t.co/05w6Ma8Zw8", "in_reply_to_screen_name": null, "retweet_count": 303, "favorite_count": 461, "source": "TweetDeck", "id_str": "626893995067731969", "is_retweet": false}, {"created_at": "Wed Nov 18 16:59:57 +0000 2015", "text": "Hillary is proud to be a champion for workers, and honored to stand with @SEIU.\nhttps://t.co/BWNQbpTUmP", "in_reply_to_screen_name": null, "retweet_count": 340, "favorite_count": 650, "source": "Twitter Web Client", "id_str": "667024454824779776", "is_retweet": false}, {"created_at": "Thu May 21 17:05:56 +0000 2015", "text": "The Wall of Inspiration: Staff members select who inspires them &amp; we put them up. (Can you spot me &amp; Gloria Steinem?) http://t.co/T1uHZwGdEk", "in_reply_to_screen_name": null, "retweet_count": 63, "favorite_count": 185, "source": "TweetDeck", "id_str": "601433756684156929", "is_retweet": false}, {"created_at": "Sat Sep 05 00:29:54 +0000 2015", "text": "Not everyone wanted Hillary to give her speech on combatting human rights abuses against women in Beijing. Watch:\nhttps://t.co/1mLygMkqHA", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 708, "source": "Twitter Web Client", "id_str": "639958599997894657", "is_retweet": false}, {"created_at": "Tue Dec 01 03:17:32 +0000 2015", "text": "Parts of our air traffic control system date to World War II. We invented airplanes; we are the reason the world can fly. We can do better.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 374, "favorite_count": 922, "source": "Twitter Web Client", "id_str": "671528530635833344", "is_retweet": false}, {"created_at": "Wed Dec 30 22:31:32 +0000 2015", "text": "We need a president who can take on Republicans and get the job done. https://t.co/HMDqxUBqvj", "in_reply_to_screen_name": null, "retweet_count": 926, "favorite_count": 2531, "source": "TweetDeck", "id_str": "682328190988193792", "is_retweet": false}, {"created_at": "Thu Nov 05 13:03:25 +0000 2015", "text": "We can't sit by while more people die. It's time to stand up to the NRA once and for all. https://t.co/jse2vAytjl", "in_reply_to_screen_name": null, "retweet_count": 1046, "favorite_count": 1634, "source": "TweetDeck", "id_str": "662253885722116096", "is_retweet": false}, {"created_at": "Sun Jul 26 16:31:20 +0000 2015", "text": "I\u2019ll never forget the first time Adam met Hillary. At a dinner in 2007, Adam broke away from us &amp; ran up to her.", "in_reply_to_screen_name": null, "retweet_count": 73, "favorite_count": 205, "source": "Twitter Web Client", "id_str": "625342647159406592", "is_retweet": false}, {"created_at": "Sat Nov 14 18:47:46 +0000 2015", "text": "\"Even after this darkest night, Paris remains the City of Light.\" https://t.co/RvnZ4oHbsX", "in_reply_to_screen_name": null, "retweet_count": 6686, "favorite_count": 11893, "source": "TweetDeck", "id_str": "665602034805121024", "is_retweet": false}, {"created_at": "Tue Aug 18 15:17:20 +0000 2015", "text": "RT if you agree with Hillary. http://t.co/aQNyU00FTd", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 876, "favorite_count": 995, "source": "Twitter Web Client", "id_str": "633658946658693120", "is_retweet": false}, {"created_at": "Tue Jun 16 14:40:02 +0000 2015", "text": "New York, NY \u2192 Sioux City, Des Moines, and Burlington, Iowa: http://t.co/5tO8kOirk3 http://t.co/rMAiha7khD", "in_reply_to_screen_name": null, "retweet_count": 250, "favorite_count": 473, "source": "TweetDeck", "id_str": "610819126534242304", "is_retweet": false}, {"created_at": "Thu Nov 26 16:05:36 +0000 2015", "text": "So much to be thankful for. Wishing a happy Thanksgiving to you and yours. -H https://t.co/BxnKu5CKwt", "in_reply_to_screen_name": null, "retweet_count": 1726, "favorite_count": 7600, "source": "TweetDeck", "id_str": "669909882502520832", "is_retweet": false}, {"created_at": "Wed Apr 15 18:43:52 +0000 2015", "text": "Hillary at Capital City Fruit in Norwalk, IA: \"I will be offering specific ideas about how to jumpstart small businesses.\"", "in_reply_to_screen_name": null, "retweet_count": 269, "favorite_count": 679, "source": "Twitter Web Client", "id_str": "588412438262980609", "is_retweet": false}, {"created_at": "Fri Jun 19 18:56:16 +0000 2015", "text": "Welcome news: The Iowa Supreme Court has ruled to protect women's ability to access safe &amp; legal abortion throughout the state. -H", "in_reply_to_screen_name": null, "retweet_count": 912, "favorite_count": 2536, "source": "Twitter Web Client", "id_str": "611970773260062720", "is_retweet": false}, {"created_at": "Sun Sep 20 16:48:37 +0000 2015", "text": "\"I cannot imagine anyone being more of an outsider than the first woman president.\"\nhttps://t.co/ybAEte5WkO", "in_reply_to_screen_name": null, "retweet_count": 724, "favorite_count": 1327, "source": "Twitter Web Client", "id_str": "645640717478432768", "is_retweet": false}, {"created_at": "Sat Jun 13 20:29:32 +0000 2015", "text": "Hillary's first Periscope! Hillary says hi earlier today with Michelle Kwan, reporting from Roosevelt Island: https://t.co/98vSl443r3", "in_reply_to_screen_name": null, "retweet_count": 198, "favorite_count": 400, "source": "Twitter Web Client", "id_str": "609819916066267136", "is_retweet": false}, {"created_at": "Thu Jun 04 20:33:15 +0000 2015", "text": "\"All of these reforms...are commonsense ways to strengthen our democracy, but none of them will come easily. It\u2019s going to take leadership.\"", "in_reply_to_screen_name": null, "retweet_count": 182, "favorite_count": 375, "source": "Twitter Web Client", "id_str": "606559359686971392", "is_retweet": false}, {"created_at": "Mon Oct 26 01:17:06 +0000 2015", "text": "It was quite a week. Catch up on these stories before you start the new one. https://t.co/jkI929GhSL", "in_reply_to_screen_name": null, "retweet_count": 286, "favorite_count": 706, "source": "TweetDeck", "id_str": "658452258825236480", "is_retweet": false}, {"created_at": "Wed Dec 02 02:22:06 +0000 2015", "text": "Hillary\u2019s tribute to Rosa Parks in Montgomery, Alabama today: https://t.co/zN0V8n07TY", "in_reply_to_screen_name": null, "retweet_count": 417, "favorite_count": 751, "source": "TweetDeck", "id_str": "671876968183291904", "is_retweet": false}, {"created_at": "Mon Jun 15 13:08:26 +0000 2015", "text": "If you like tweets from Hillary, you're gonna love her texts. Text \"2016\" to 47246 to get texts from #Hillary2016. http://t.co/sHghtFkX8L", "in_reply_to_screen_name": null, "retweet_count": 322, "favorite_count": 538, "source": "Twitter Web Client", "id_str": "610433684953538560", "is_retweet": false}, {"created_at": "Thu Jul 16 00:46:40 +0000 2015", "text": "#Hillary2016 is just getting started\u2014and thanks to supporters nationwide, it's off to a strong start. Couldn't be prouder. Thank you.", "in_reply_to_screen_name": null, "retweet_count": 425, "favorite_count": 1103, "source": "TweetDeck", "id_str": "621481037999271936", "is_retweet": false}, {"created_at": "Mon May 11 20:41:47 +0000 2015", "text": "Healthy women \u2192 healthy communities. Sign up if you agree with Hillary: http://t.co/WFmGBaOeJp #NWHW http://t.co/WY1jIUI3js", "in_reply_to_screen_name": null, "retweet_count": 479, "favorite_count": 688, "source": "TweetDeck", "id_str": "597864201118449664", "is_retweet": false}, {"created_at": "Sun Aug 30 13:51:57 +0000 2015", "text": "A big question from a small supporter in Iowa: How will Hillary get things done? See her answer:\nhttps://t.co/GwveqoBuis", "in_reply_to_screen_name": null, "retweet_count": 894, "favorite_count": 1868, "source": "Twitter Web Client", "id_str": "637986112594558976", "is_retweet": false}, {"created_at": "Wed Nov 11 19:09:04 +0000 2015", "text": "La idea de que vamos a deportar a 11 milliones de personas es absurda, inhumana y va en contra de nuestros valores. De ninguna manera Trump.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 446, "favorite_count": 563, "source": "TweetDeck", "id_str": "664520234372497414", "is_retweet": false}, {"created_at": "Sat Oct 17 23:01:11 +0000 2015", "text": "Attempting to deny citizenship to immigrants' children born here is wrong\u2014and undermines who we are as a country. http://t.co/UEYjq4cruO -H", "in_reply_to_screen_name": null, "retweet_count": 1122, "favorite_count": 1612, "source": "Twitter for iPhone", "id_str": "655518952551006208", "is_retweet": false}, {"created_at": "Sat Oct 24 21:34:45 +0000 2015", "text": "Live from Des Moines, Iowa: @billclinton, @KatyPerry, and team @HillaryforIA! Watch \u2192 https://t.co/aKD8HTHf9b #HillYes", "in_reply_to_screen_name": null, "retweet_count": 242, "favorite_count": 428, "source": "TweetDeck", "id_str": "658033912418058240", "is_retweet": false}, {"created_at": "Sun Apr 12 22:03:17 +0000 2015", "text": "Pitch in $5 today to own a piece of this campaign from the start: http://t.co/9iHRtVOtMl #Hillary2016", "in_reply_to_screen_name": null, "retweet_count": 1200, "favorite_count": 1904, "source": "Twitter Web Client", "id_str": "587375461250027520", "is_retweet": false}, {"created_at": "Sat May 16 18:25:29 +0000 2015", "text": "Brooklyn welcomes Hillary to the neighborhood: http://t.co/368rjZ5EW1 http://t.co/PYaErnhA3V", "in_reply_to_screen_name": null, "retweet_count": 510, "favorite_count": 1270, "source": "TweetDeck", "id_str": "599641837570301952", "is_retweet": false}, {"created_at": "Tue Dec 15 22:08:14 +0000 2015", "text": "\"It is not enough to contain ISIS\u2014we must defeat ISIS. Break its momentum, and then its back.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 300, "favorite_count": 682, "source": "TweetDeck", "id_str": "676886509430116352", "is_retweet": false}, {"created_at": "Mon Dec 21 20:54:53 +0000 2015", "text": "Your dad and I could not be happier for you, Marc, and Charlotte. We\u2019re so excited to meet our second grandchild! -H https://t.co/hgTr07HBlr", "in_reply_to_screen_name": null, "retweet_count": 1317, "favorite_count": 5522, "source": "TweetDeck", "id_str": "679042379047788544", "is_retweet": false}, {"created_at": "Thu Dec 10 15:41:56 +0000 2015", "text": "12 things you can learn from Hillary's throwback photos. #TBT https://t.co/PaBpGpWRbZ", "in_reply_to_screen_name": null, "retweet_count": 228, "favorite_count": 504, "source": "TweetDeck", "id_str": "674977355144814593", "is_retweet": false}, {"created_at": "Tue Dec 08 23:20:11 +0000 2015", "text": "Stick it to Trump with the official #LoveTrumpsHate sticker. https://t.co/uYJ9HjgT3N https://t.co/f3QouFFCxd", "in_reply_to_screen_name": null, "retweet_count": 1135, "favorite_count": 2298, "source": "TweetDeck", "id_str": "674367901739151361", "is_retweet": false}, {"created_at": "Tue Sep 29 19:32:10 +0000 2015", "text": "Health care, college affordability, and pumpkin spice lattes\u2014read everything you missed from Hillary\u2019s Facebook Q&amp;A: http://t.co/cu4KW6rQEx", "in_reply_to_screen_name": null, "retweet_count": 149, "favorite_count": 314, "source": "Twitter Web Client", "id_str": "648943368840605696", "is_retweet": false}, {"created_at": "Thu Oct 22 18:03:48 +0000 2015", "text": "To truly honor those lost at Benghazi, we need to do everything in our power to ensure the safety of the brave Americans who do their work.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 391, "favorite_count": 815, "source": "Twitter Web Client", "id_str": "657256050157031424", "is_retweet": false}, {"created_at": "Sat Oct 10 21:13:45 +0000 2015", "text": "Thank you, @JerryBrownGov. Every state should follow your lead and make it easier to vote.\nhttps://t.co/HWarCEXN8B", "in_reply_to_screen_name": null, "retweet_count": 923, "favorite_count": 1611, "source": "TweetDeck", "id_str": "652955198856499200", "is_retweet": false}, {"created_at": "Wed Jun 03 16:22:35 +0000 2015", "text": "Equali-tee. http://t.co/7wHhsebpVD http://t.co/IrBm70xMyL", "in_reply_to_screen_name": null, "retweet_count": 164, "favorite_count": 486, "source": "TweetDeck", "id_str": "606133890592436224", "is_retweet": false}, {"created_at": "Mon Sep 14 17:24:41 +0000 2015", "text": "\"To every survivor of sexual assault...You have the right to be heard. You have the right to be believed. We're with you.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1288, "favorite_count": 1667, "source": "TweetDeck", "id_str": "643475466490388480", "is_retweet": false}, {"created_at": "Sat Jun 13 18:30:41 +0000 2015", "text": "I\u2019m running for president to make our economy work for you and for every American. It's your time. Let's do this together. \u2014H", "in_reply_to_screen_name": null, "retweet_count": 1462, "favorite_count": 2980, "source": "Twitter Web Client", "id_str": "609790004638973952", "is_retweet": false}, {"created_at": "Fri Aug 07 02:04:16 +0000 2015", "text": "Share this if you're proud to support a candidate who's fighting for everyday Americans. http://t.co/Gkas6qvrm2", "in_reply_to_screen_name": null, "retweet_count": 1232, "favorite_count": 1798, "source": "Twitter Web Client", "id_str": "629473097914060800", "is_retweet": false}, {"created_at": "Tue Jun 09 16:17:19 +0000 2015", "text": "Chip in &amp; we'll keep using your dollars for the most important things (sorry, @johnpodesta): http://t.co/Xk33Z07LWc https://t.co/HNtkoM88oW", "in_reply_to_screen_name": null, "retweet_count": 119, "favorite_count": 240, "source": "Twitter Web Client", "id_str": "608306891844931584", "is_retweet": false}, {"created_at": "Fri Sep 18 19:17:38 +0000 2015", "text": "Otro producto del Partido de Trump\u2014@JohnKasich. Hablar sobre los latinos no solo quiere decir hablar de propinas. http://t.co/uQ29lGgFet", "in_reply_to_screen_name": null, "retweet_count": 188, "favorite_count": 295, "source": "Twitter Web Client", "id_str": "644953446479720448", "is_retweet": false}, {"created_at": "Mon Jul 06 20:54:42 +0000 2015", "text": "A beautiful show of support for Hillary in New Hampshire: http://t.co/SGqU82qJTP via @HillaryforNH http://t.co/uwmQ5wX6DD", "in_reply_to_screen_name": null, "retweet_count": 285, "favorite_count": 665, "source": "TweetDeck", "id_str": "618161170214686720", "is_retweet": false}, {"created_at": "Sun Oct 11 13:51:01 +0000 2015", "text": "On #NationalComingOutDay, we remember that our work isn\u2019t done until everyone can be who they are and is treated with dignity.", "in_reply_to_screen_name": null, "retweet_count": 4085, "favorite_count": 6272, "source": "Twitter Web Client", "id_str": "653206170467987456", "is_retweet": false}, {"created_at": "Thu Oct 08 17:33:27 +0000 2015", "text": "How about this @KevinMcCarthy for speaker instead? https://t.co/HAwL2D56xu", "in_reply_to_screen_name": null, "retweet_count": 589, "favorite_count": 941, "source": "Twitter Web Client", "id_str": "652174985298083840", "is_retweet": false}, {"created_at": "Sun Oct 25 16:05:38 +0000 2015", "text": ".@katyperry, you bring the campaign dress code to the next level. Thanks for hanging out with us in Iowa! -H https://t.co/nctt1B4ilH", "in_reply_to_screen_name": null, "retweet_count": 1624, "favorite_count": 4402, "source": "TweetDeck", "id_str": "658313475270266881", "is_retweet": false}, {"created_at": "Mon Aug 31 22:06:44 +0000 2015", "text": "Retweet if you agree. http://t.co/OjW9FBzlfm", "in_reply_to_screen_name": null, "retweet_count": 2672, "favorite_count": 2350, "source": "Twitter Web Client", "id_str": "638473017132216322", "is_retweet": false}, {"created_at": "Mon Jun 22 13:03:19 +0000 2015", "text": "\"Despite our best efforts and our highest hopes, America\u2019s long struggle with race is far from finished.\"\u2014Hillary http://t.co/U8WFW0eemG", "in_reply_to_screen_name": null, "retweet_count": 501, "favorite_count": 806, "source": "TweetDeck", "id_str": "612969114093625344", "is_retweet": false}, {"created_at": "Wed Apr 29 16:19:18 +0000 2015", "text": "End mass incarceration. Address inequality. Restore trust between law enforcement &amp; communities. Read this &amp; share: http://t.co/WdnFuT8tjo", "in_reply_to_screen_name": null, "retweet_count": 1021, "favorite_count": 1466, "source": "Twitter Web Client", "id_str": "593449489207304192", "is_retweet": false}, {"created_at": "Fri Oct 30 19:39:19 +0000 2015", "text": "\"We need to end private prisons. Protecting public safety...should never be outsourced or left to unaccountable corporations.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1289, "source": "TweetDeck", "id_str": "660179193381134336", "is_retweet": false}, {"created_at": "Mon Oct 12 17:56:33 +0000 2015", "text": ".@Pharrell: \u201cIt\u2019s Hillary time.\u201d http://t.co/fWqT513Esg\nhttps://t.co/kpJ7qdn8SY", "in_reply_to_screen_name": null, "retweet_count": 967, "favorite_count": 1678, "source": "Twitter Web Client", "id_str": "653630349738512384", "is_retweet": false}, {"created_at": "Fri Oct 23 21:48:25 +0000 2015", "text": "To everyone in the path of #HurricanePatricia, follow @CENAPRED_mex for shelter locations and emergency info. Thinking of you\u2014stay safe. -H", "in_reply_to_screen_name": null, "retweet_count": 1727, "favorite_count": 2268, "source": "Twitter Web Client", "id_str": "657674963999195136", "is_retweet": false}, {"created_at": "Sat May 23 14:48:45 +0000 2015", "text": "Car magnets are HERE! Get yours \u2192 http://t.co/MtgrzUsWT3 http://t.co/85FA8NWMRQ", "in_reply_to_screen_name": null, "retweet_count": 183, "favorite_count": 327, "source": "Twitter Web Client", "id_str": "602124010713931778", "is_retweet": false}, {"created_at": "Wed May 13 21:37:01 +0000 2015", "text": "When it comes to women's health, there are two kinds of experts: women and their doctors. True 40+ years ago, true today. -H", "in_reply_to_screen_name": null, "retweet_count": 2688, "favorite_count": 3381, "source": "TweetDeck", "id_str": "598602876613730304", "is_retweet": false}, {"created_at": "Wed Dec 30 00:29:33 +0000 2015", "text": "Whether she's working with world leaders or working across the aisle, we need a president who gets things done: https://t.co/Et2I0gFDrX", "in_reply_to_screen_name": null, "retweet_count": 631, "favorite_count": 1474, "source": "Twitter Web Client", "id_str": "681995505170120704", "is_retweet": false}, {"created_at": "Tue Oct 13 02:14:42 +0000 2015", "text": "Hillary talks sexism in the workplace with @Buzzfeed\u2019s @AnotherRound: http://t.co/R4FNFAWCJY http://t.co/Ustefl9Sjw", "in_reply_to_screen_name": null, "retweet_count": 661, "favorite_count": 1126, "source": "TweetDeck", "id_str": "653755711252484096", "is_retweet": false}, {"created_at": "Sat Dec 05 14:55:58 +0000 2015", "text": "In the face of unconscionable attacks, we should all #StandWithPP\u2014and against hateful rhetoric and violence. -H", "in_reply_to_screen_name": null, "retweet_count": 697, "favorite_count": 1571, "source": "TweetDeck", "id_str": "673153847246893057", "is_retweet": false}, {"created_at": "Tue May 26 14:37:09 +0000 2015", "text": "Pantsuit up. http://t.co/UPnIVjzYDs http://t.co/oC40gHAYHn", "in_reply_to_screen_name": null, "retweet_count": 736, "favorite_count": 1250, "source": "TweetDeck", "id_str": "603208255310065664", "is_retweet": false}, {"created_at": "Sun Jul 19 15:25:18 +0000 2015", "text": "167 years ago: The Seneca Falls Convention paved the way for women's equality. It's up to us to make it a reality for all. -H", "in_reply_to_screen_name": null, "retweet_count": 1016, "favorite_count": 1894, "source": "Twitter Web Client", "id_str": "622789315647684608", "is_retweet": false}, {"created_at": "Wed Dec 16 13:39:12 +0000 2015", "text": "We can\u2019t afford another major ground war in the Middle East\u2014that's exactly what ISIS wants.\nhttps://t.co/FrgWoJeJPS", "in_reply_to_screen_name": null, "retweet_count": 830, "favorite_count": 1419, "source": "Twitter Web Client", "id_str": "677120793835278336", "is_retweet": false}, {"created_at": "Thu Oct 29 01:17:23 +0000 2015", "text": "Every woman deserves equal pay. Period. https://t.co/F5uzo79moY #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1050, "favorite_count": 1836, "source": "TweetDeck", "id_str": "659539494815813632", "is_retweet": false}, {"created_at": "Fri Dec 11 01:10:02 +0000 2015", "text": "Hillary never backs down from a tough fight\u2014even if it's with some of the worst human rights offenders in the world. https://t.co/2Fek4yT5Re", "in_reply_to_screen_name": null, "retweet_count": 429, "favorite_count": 957, "source": "Twitter for iPhone", "id_str": "675120321280802822", "is_retweet": false}, {"created_at": "Thu May 07 15:07:24 +0000 2015", "text": "Tea and good company for #SmallBusinessWeek. Thanks, @mayoredlee! -H http://t.co/YVi3SyyCbG", "in_reply_to_screen_name": null, "retweet_count": 306, "favorite_count": 692, "source": "TweetDeck", "id_str": "596330497711722496", "is_retweet": false}, {"created_at": "Mon Sep 21 14:28:46 +0000 2015", "text": "Hillary\u2019s work \u201cwas an important part of the reason their lives were better.\u201d http://t.co/xGKG5tU7qM", "in_reply_to_screen_name": null, "retweet_count": 302, "favorite_count": 466, "source": "TweetDeck", "id_str": "645967912864452608", "is_retweet": false}, {"created_at": "Tue Dec 01 21:54:48 +0000 2015", "text": ".@Quora asked: Why will being a grandmother make Hillary a better president? Read Hillary's answer: https://t.co/vup9eGP9yG", "in_reply_to_screen_name": null, "retweet_count": 160, "favorite_count": 409, "source": "TweetDeck", "id_str": "671809700787265536", "is_retweet": false}, {"created_at": "Tue Dec 01 15:36:10 +0000 2015", "text": "As Secretary of State, Hillary worked to improve global health and set the stage for an AIDS-free generation.\nhttps://t.co/DSzGAgHc7I", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 607, "source": "Twitter Web Client", "id_str": "671714411992584192", "is_retweet": false}, {"created_at": "Fri Sep 18 00:18:47 +0000 2015", "text": "The @VPCinfo report shows we have more work to do to end violence against women in South Carolina and every state. https://t.co/MIXdhXFdBk", "in_reply_to_screen_name": null, "retweet_count": 213, "favorite_count": 365, "source": "Twitter Web Client", "id_str": "644666844335505408", "is_retweet": false}, {"created_at": "Sat Jun 27 00:44:43 +0000 2015", "text": "A proud day. http://t.co/Iedos1hYTk", "in_reply_to_screen_name": null, "retweet_count": 1478, "favorite_count": 3229, "source": "TweetDeck", "id_str": "614595178247102464", "is_retweet": false}, {"created_at": "Thu Oct 29 01:57:26 +0000 2015", "text": "Republicans are refusing to act on climate change. Hillary has a plan to take it on. https://t.co/Jb7DXwL9WS https://t.co/YbSmmW8mW6", "in_reply_to_screen_name": null, "retweet_count": 587, "favorite_count": 1105, "source": "TweetDeck", "id_str": "659549570502942720", "is_retweet": false}, {"created_at": "Sun Oct 11 17:19:21 +0000 2015", "text": "\"You will surprise yourself with what you\u2019re capable of and the incredible things you [do].\" #NationalComingOutDay\nhttps://t.co/Ks0VR4Xomt", "in_reply_to_screen_name": null, "retweet_count": 1129, "favorite_count": 2127, "source": "Twitter Web Client", "id_str": "653258596478676993", "is_retweet": false}, {"created_at": "Thu Oct 15 00:45:21 +0000 2015", "text": "She has a point: The economy does do better with a Democrat in the White House.\nhttps://t.co/ijhQK1uNGs", "in_reply_to_screen_name": null, "retweet_count": 774, "favorite_count": 1657, "source": "Twitter Web Client", "id_str": "654458002326491136", "is_retweet": false}, {"created_at": "Mon Aug 17 21:40:36 +0000 2015", "text": "Hillary explains why she supports @POTUS's @TheIranDeal\u2014learn more:\nhttps://t.co/nClYHToIpj", "in_reply_to_screen_name": null, "retweet_count": 575, "favorite_count": 834, "source": "Twitter Web Client", "id_str": "633393013532725248", "is_retweet": false}, {"created_at": "Sun Oct 25 18:46:05 +0000 2015", "text": "Hillary's birthday is tomorrow\u2014and she's still on track to be the youngest woman US president ever. Sign her card! https://t.co/cLhVnvmvp1", "in_reply_to_screen_name": null, "retweet_count": 611, "favorite_count": 1732, "source": "TweetDeck", "id_str": "658353854589763584", "is_retweet": false}, {"created_at": "Mon Aug 10 23:45:23 +0000 2015", "text": "@MelissaMarlette @Uwila Millions of Americans with student debt would benefit from Hillary's plan. Read it here: http://t.co/lZKJRZjB0g", "in_reply_to_screen_name": "MelissaMarlette", "retweet_count": 62, "favorite_count": 81, "source": "Twitter Web Client", "id_str": "630887698916634624", "is_retweet": false}, {"created_at": "Fri Jul 24 18:07:23 +0000 2015", "text": "Hillary wants to change how we think about business. http://t.co/NI35wR5K8z", "in_reply_to_screen_name": null, "retweet_count": 448, "favorite_count": 532, "source": "TweetDeck", "id_str": "624642043302801408", "is_retweet": false}, {"created_at": "Tue Dec 15 02:21:52 +0000 2015", "text": "This is what it would be like for a former secretary of state to be president: https://t.co/S3Hhx6smTa", "in_reply_to_screen_name": null, "retweet_count": 398, "favorite_count": 943, "source": "TweetDeck", "id_str": "676587948687552512", "is_retweet": false}, {"created_at": "Thu Dec 31 22:10:39 +0000 2015", "text": "What photographers on the campaign trail saw in 2015: https://t.co/9zicTXwqMq https://t.co/akjMVlTIY4", "in_reply_to_screen_name": null, "retweet_count": 505, "favorite_count": 1579, "source": "TweetDeck", "id_str": "682685323093094400", "is_retweet": false}, {"created_at": "Thu Jun 04 20:28:19 +0000 2015", "text": "\"Congress should move quickly...to repair [damage to Voting Rights Act] &amp; restore the full protections that American voters need &amp; deserve.\"", "in_reply_to_screen_name": null, "retweet_count": 265, "favorite_count": 411, "source": "Twitter Web Client", "id_str": "606558116793032705", "is_retweet": false}, {"created_at": "Wed Jun 17 17:31:41 +0000 2015", "text": "Here's how Hillary's fighting to make the economy work for all Americans\u2014not just those at the top: http://t.co/Y6XqN6gdYW", "in_reply_to_screen_name": null, "retweet_count": 194, "favorite_count": 299, "source": "TweetDeck", "id_str": "611224708458127360", "is_retweet": false}, {"created_at": "Tue Sep 22 15:38:35 +0000 2015", "text": "The best way to celebrate National Voter Registration Day: Register to vote! \u2192 http://t.co/7HK2N8lVRo #CelebrateNVRD", "in_reply_to_screen_name": null, "retweet_count": 627, "favorite_count": 546, "source": "TweetDeck", "id_str": "646347872040939520", "is_retweet": false}, {"created_at": "Mon Oct 05 19:09:46 +0000 2015", "text": "We must act to stop gun violence, and we cannot wait any longer. http://t.co/6l4LntGWh1", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 622, "favorite_count": 962, "source": "TweetDeck", "id_str": "651112057601982464", "is_retweet": false}, {"created_at": "Mon Sep 07 17:31:31 +0000 2015", "text": "Happy Labor Day, indeed! @POTUS is right: everyone deserves to earn seven paid sick days and 12 weeks of paid family leave. -H", "in_reply_to_screen_name": null, "retweet_count": 718, "favorite_count": 1520, "source": "TweetDeck", "id_str": "640940474619035650", "is_retweet": false}, {"created_at": "Wed Nov 25 15:45:46 +0000 2015", "text": "From immigration to education, Trump to tacos: Hillary\u2019s Q&amp;A with @TelemundoNews \u2192 https://t.co/9ggDWwJML7", "in_reply_to_screen_name": null, "retweet_count": 206, "favorite_count": 420, "source": "TweetDeck", "id_str": "669542500982476800", "is_retweet": false}, {"created_at": "Wed May 13 20:24:30 +0000 2015", "text": "RT this if you agree with Hillary. http://t.co/gkDPlN0txM", "in_reply_to_screen_name": null, "retweet_count": 1893, "favorite_count": 1828, "source": "TweetDeck", "id_str": "598584624449724417", "is_retweet": false}, {"created_at": "Mon Sep 21 12:02:34 +0000 2015", "text": "\"These are our moms and our dads.\u201d Keith from New Hampshire thanks Hillary for speaking up for caregivers:\nhttps://t.co/KEnIge8HFJ", "in_reply_to_screen_name": null, "retweet_count": 288, "favorite_count": 586, "source": "Twitter Web Client", "id_str": "645931118953234433", "is_retweet": false}, {"created_at": "Thu Jul 16 00:12:29 +0000 2015", "text": "@HillaryforSC Volunteers are the heart of this campaign. To everyone who's attended a phone bank or made a call: Thank you! -H", "in_reply_to_screen_name": "HillaryforSC", "retweet_count": 66, "favorite_count": 121, "source": "Twitter for iPhone", "id_str": "621472435783794688", "is_retweet": false}, {"created_at": "Mon Oct 05 18:20:40 +0000 2015", "text": "When it comes to preventing gun violence, we cannot give up. http://t.co/6zFlkLenGI", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 469, "favorite_count": 904, "source": "TweetDeck", "id_str": "651099701102645248", "is_retweet": false}, {"created_at": "Fri May 29 23:29:28 +0000 2015", "text": "Hats off to the weekend. http://t.co/4zDXGPbcvU", "in_reply_to_screen_name": null, "retweet_count": 319, "favorite_count": 985, "source": "TweetDeck", "id_str": "604429379490344960", "is_retweet": false}, {"created_at": "Sun Jul 12 15:34:10 +0000 2015", "text": "Hillary has spent her career fighting for families: http://t.co/uPQ4rwm3OM http://t.co/iLkiVXE54m", "in_reply_to_screen_name": null, "retweet_count": 609, "favorite_count": 1229, "source": "TweetDeck", "id_str": "620254832444616704", "is_retweet": false}, {"created_at": "Sat May 16 16:30:24 +0000 2015", "text": "Awesome. Join Dave: http://t.co/SVKi5wxTMy https://t.co/Q8PxZ7oroq", "in_reply_to_screen_name": null, "retweet_count": 105, "favorite_count": 225, "source": "TweetDeck", "id_str": "599612874001100801", "is_retweet": false}, {"created_at": "Mon Jul 13 22:08:49 +0000 2015", "text": "Hillary tells Donald Trump: Enough.\nhttps://t.co/4fWgBTCN7y", "in_reply_to_screen_name": null, "retweet_count": 4047, "favorite_count": 5128, "source": "Twitter Web Client", "id_str": "620716536110583809", "is_retweet": false}, {"created_at": "Sat Oct 03 15:31:15 +0000 2015", "text": "Hillary finally gets to meet the mischievous, trash-eating puppy from the campaign launch video, \u201cGetting Started.\u201d\nhttps://t.co/Hiz2r7qRou", "in_reply_to_screen_name": null, "retweet_count": 229, "favorite_count": 554, "source": "Twitter Web Client", "id_str": "650332291386839040", "is_retweet": false}, {"created_at": "Mon Jun 22 16:56:51 +0000 2015", "text": "New friends make for the best dinner parties. Enter for a chance to have a meal with Hillary: http://t.co/kZTqPOirhn http://t.co/HiFtE3cvn3", "in_reply_to_screen_name": null, "retweet_count": 216, "favorite_count": 446, "source": "TweetDeck", "id_str": "613027883443978240", "is_retweet": false}, {"created_at": "Fri Aug 14 18:56:57 +0000 2015", "text": "Devastated by horrific reports of ISIS sex slavery. People of all faiths must unite to condemn &amp; end these crimes. http://t.co/aa8lJrMizg -H", "in_reply_to_screen_name": null, "retweet_count": 674, "favorite_count": 872, "source": "TweetDeck", "id_str": "632264664605401088", "is_retweet": false}, {"created_at": "Fri Nov 06 01:46:54 +0000 2015", "text": "#TBT to the time Hillary had a @DollyParton-themed birthday party in 1995. \ud83c\udfa4 https://t.co/f4NZVUJGc3", "in_reply_to_screen_name": null, "retweet_count": 805, "favorite_count": 2426, "source": "Twitter for iPhone", "id_str": "662446022313013248", "is_retweet": false}, {"created_at": "Fri Aug 14 12:03:07 +0000 2015", "text": "Today is Social Security's 80th birthday. Congrats on reaching what some Republicans think should be the retirement age. -H", "in_reply_to_screen_name": null, "retweet_count": 1403, "favorite_count": 2626, "source": "TweetDeck", "id_str": "632160521572233216", "is_retweet": false}, {"created_at": "Fri Oct 30 19:15:20 +0000 2015", "text": "Happening now: Hillary kicks off African Americans for Hillary with @repjohnlewis in Atlanta! Watch \u2192 https://t.co/HZ1LppKszD", "in_reply_to_screen_name": null, "retweet_count": 197, "favorite_count": 293, "source": "TweetDeck", "id_str": "660173157366562816", "is_retweet": false}, {"created_at": "Wed Dec 16 03:05:15 +0000 2015", "text": "Only one candidate in this election knows how to build coalitions and make the world safer\u2014because she's done it. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 936, "favorite_count": 2461, "source": "Twitter Web Client", "id_str": "676961255027040257", "is_retweet": false}, {"created_at": "Wed Jul 29 18:29:39 +0000 2015", "text": "No podemos negar el cambio clim\u00e1tico. http://t.co/l2hJBII8ya http://t.co/YV4WUkok7D", "in_reply_to_screen_name": null, "retweet_count": 319, "favorite_count": 341, "source": "TweetDeck", "id_str": "626459587273748480", "is_retweet": false}, {"created_at": "Mon Oct 19 12:04:15 +0000 2015", "text": "Hillary has what it takes to lead America. Watch the new video on her accomplishments as Secretary of State:\nhttps://t.co/NHCzrdNskT", "in_reply_to_screen_name": null, "retweet_count": 925, "favorite_count": 1397, "source": "Twitter Web Client", "id_str": "656078402101731328", "is_retweet": false}, {"created_at": "Sat Oct 24 19:12:05 +0000 2015", "text": "There are people across IA doing what I do every day: knocking on doors, making calls, and doing our part to win the caucus on Feb 1!", "in_reply_to_screen_name": null, "retweet_count": 121, "favorite_count": 329, "source": "TweetDeck", "id_str": "657998012036218880", "is_retweet": false}, {"created_at": "Thu Feb 26 00:58:17 +0000 2015", "text": "Yesterday I met all-star women of tech in Silicon Valley, but #GirlsCanCode anywhere &amp; everywhere. Interesting story: http://t.co/W1ume2CbSS", "in_reply_to_screen_name": null, "retweet_count": 1243, "favorite_count": 1996, "source": "Twitter Web Client", "id_str": "570749660341657600", "is_retweet": false}, {"created_at": "Fri Jul 17 16:57:07 +0000 2015", "text": "Profit sharing is just common sense. See Hillary's plan: http://t.co/GLifSxXucA http://t.co/D2Bl3upnRN", "in_reply_to_screen_name": null, "retweet_count": 290, "favorite_count": 467, "source": "TweetDeck", "id_str": "622087648744730624", "is_retweet": false}, {"created_at": "Fri Sep 18 22:11:22 +0000 2015", "text": ".@DavidAxelrod, former Senior Advisor to President Obama, on Hillary\u2019s greatest accomplishments. http://t.co/mOBPhR741J", "in_reply_to_screen_name": null, "retweet_count": 534, "favorite_count": 996, "source": "Twitter Web Client", "id_str": "644997165748760576", "is_retweet": false}, {"created_at": "Sun Sep 13 19:23:57 +0000 2015", "text": "L'Shana Tova! To all who celebrate, wishing you a sweet and healthy new year. -H", "in_reply_to_screen_name": null, "retweet_count": 740, "favorite_count": 1610, "source": "TweetDeck", "id_str": "643143094192484353", "is_retweet": false}, {"created_at": "Mon Oct 12 16:30:47 +0000 2015", "text": "We\u2019re not going to \u201cget over it,\u201d @JohnKasich, we\u2019re going to protect Social Security for the next generation. https://t.co/IZrT8dWPRS", "in_reply_to_screen_name": null, "retweet_count": 633, "favorite_count": 939, "source": "TweetDeck", "id_str": "653608762620686336", "is_retweet": false}, {"created_at": "Fri Jul 31 20:01:15 +0000 2015", "text": "On Sunday, Sara took over our account for #ADA25\u2014her story inspired @elizejackson to share more #DisabilityStories: http://t.co/8hETXknkXE", "in_reply_to_screen_name": null, "retweet_count": 129, "favorite_count": 199, "source": "Twitter Web Client", "id_str": "627207417097506816", "is_retweet": false}, {"created_at": "Wed Nov 25 21:07:04 +0000 2015", "text": "Sign up and we\u2019ll send you a guide to winning your Thanksgiving table debate: https://t.co/IPQg6CYgzM", "in_reply_to_screen_name": null, "retweet_count": 177, "favorite_count": 420, "source": "TweetDeck", "id_str": "669623358808461312", "is_retweet": false}, {"created_at": "Fri Apr 17 13:20:16 +0000 2015", "text": "\"I was like, 'That's our gal.'\" https://t.co/OFdXpdmWUi", "in_reply_to_screen_name": null, "retweet_count": 502, "favorite_count": 877, "source": "Twitter Web Client", "id_str": "589055778201456640", "is_retweet": false}, {"created_at": "Sun Oct 25 03:35:57 +0000 2015", "text": "Hillary on what she's fighting for: \"At the top of the list is this: Americans need a raise.\" #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 222, "favorite_count": 564, "source": "TweetDeck", "id_str": "658124812536184832", "is_retweet": false}, {"created_at": "Sat Oct 24 22:55:54 +0000 2015", "text": "Thank you, @davidplouffe\u200b. https://t.co/rRXnLazrPU -H", "in_reply_to_screen_name": null, "retweet_count": 355, "favorite_count": 757, "source": "TweetDeck", "id_str": "658054337994821633", "is_retweet": false}, {"created_at": "Tue Aug 04 22:31:13 +0000 2015", "text": "To a dear friend, a great boss, and my second favorite president: Happy birthday @POTUS! -H http://t.co/J3WRZJ1KuG", "in_reply_to_screen_name": null, "retweet_count": 3673, "favorite_count": 9291, "source": "Twitter Web Client", "id_str": "628694709293187072", "is_retweet": false}, {"created_at": "Sun Sep 27 14:35:54 +0000 2015", "text": "Hillary is on @meetthepress this morning, check your local listings and tune in. http://t.co/lCGmRuU2uo", "in_reply_to_screen_name": null, "retweet_count": 232, "favorite_count": 588, "source": "TweetDeck", "id_str": "648144035740282880", "is_retweet": false}, {"created_at": "Sun Oct 04 03:58:47 +0000 2015", "text": "A vote for Hillary is a vote for four more years of Kate McKinnon's impression. #citizens http://t.co/8WFlf1dy9n", "in_reply_to_screen_name": null, "retweet_count": 6553, "favorite_count": 12857, "source": "Twitter Web Client", "id_str": "650520412477083648", "is_retweet": false}, {"created_at": "Thu Nov 19 19:40:21 +0000 2015", "text": "Did you miss Hillary\u2019s big speech on combating terrorism? Here are 3 things you should know: https://t.co/NQ73BRsQeu", "in_reply_to_screen_name": null, "retweet_count": 434, "favorite_count": 578, "source": "TweetDeck", "id_str": "667427207065792513", "is_retweet": false}, {"created_at": "Fri Jun 12 16:47:52 +0000 2015", "text": "Take 5 minutes to watch this\u2014a look back at the big fights of Hillary's career and how they\u2019ve shaped who she is now: http://t.co/vedCBng2cz", "in_reply_to_screen_name": null, "retweet_count": 374, "favorite_count": 439, "source": "TweetDeck", "id_str": "609401744498536448", "is_retweet": false}, {"created_at": "Sat Nov 07 16:30:41 +0000 2015", "text": "Follow @HillaryforSC for updates on Hillary\u2019s trip to the Palmetto State and today\u2019s @newsone town hall: https://t.co/lADpr4kBBU #HRCinSC", "in_reply_to_screen_name": null, "retweet_count": 181, "favorite_count": 363, "source": "Twitter Web Client", "id_str": "663030822610563072", "is_retweet": false}, {"created_at": "Wed Oct 14 02:49:24 +0000 2015", "text": "Attacks on Planned Parenthood are attacks on women's health and rights. We can't let them take us backwards. http://t.co/AwABjhfCjg", "in_reply_to_screen_name": null, "retweet_count": 2185, "favorite_count": 4473, "source": "TweetDeck", "id_str": "654126832669851648", "is_retweet": false}, {"created_at": "Wed Oct 14 17:19:38 +0000 2015", "text": "\"I can't think of anything more outsider than electing the first woman president.\" \u2014Hillary #DemDebate\nhttps://t.co/3OiUNf6Xhb", "in_reply_to_screen_name": null, "retweet_count": 763, "favorite_count": 1663, "source": "Twitter Web Client", "id_str": "654345834230714368", "is_retweet": false}, {"created_at": "Wed Nov 25 19:52:41 +0000 2015", "text": "Statement of Hillary Clinton on the shooting of Laquan McDonald: https://t.co/xcvQMUrbFP", "in_reply_to_screen_name": null, "retweet_count": 680, "favorite_count": 1015, "source": "TweetDeck", "id_str": "669604640837771265", "is_retweet": false}, {"created_at": "Fri Jul 24 17:56:21 +0000 2015", "text": "Quarterly capitalism\u2014focusing only on short-term profits\u2014is bad for wages, bad for business, and bad for our economy. http://t.co/mKBTisZAqN", "in_reply_to_screen_name": null, "retweet_count": 262, "favorite_count": 329, "source": "TweetDeck", "id_str": "624639268875599872", "is_retweet": false}, {"created_at": "Thu Nov 05 23:52:46 +0000 2015", "text": "Working hand in hand with tribal nations, the US government can help ensure the strength of Native communities. https://t.co/GjxVAqV0Kb", "in_reply_to_screen_name": null, "retweet_count": 354, "favorite_count": 670, "source": "Twitter Web Client", "id_str": "662417302592356352", "is_retweet": false}, {"created_at": "Thu Aug 06 00:11:42 +0000 2015", "text": "Good that the appellate court saw the Texas voter ID law for what it is\u2014an assault on the right to vote. http://t.co/dkyhPz3f19", "in_reply_to_screen_name": null, "retweet_count": 472, "favorite_count": 786, "source": "Twitter Web Client", "id_str": "629082381186678784", "is_retweet": false}, {"created_at": "Wed Oct 07 19:22:15 +0000 2015", "text": "\"An act of high political courage.\" @NYDailyNews on Hillary's gun violence prevention plan. http://t.co/d66WkBOw32", "in_reply_to_screen_name": null, "retweet_count": 274, "favorite_count": 430, "source": "TweetDeck", "id_str": "651839973990232064", "is_retweet": false}, {"created_at": "Sat Sep 12 15:14:30 +0000 2015", "text": "At liftoff 23 years ago today, @maejemison made history &amp; became the first African American woman to travel in space. http://t.co/uzN1nf5Ow4", "in_reply_to_screen_name": null, "retweet_count": 1100, "favorite_count": 1935, "source": "TweetDeck", "id_str": "642717929696559106", "is_retweet": false}, {"created_at": "Sun May 31 16:33:52 +0000 2015", "text": "There are a lot of good reasons to be on Team #Hillary2016. What's yours? http://t.co/Fhe2iViePC", "in_reply_to_screen_name": null, "retweet_count": 704, "favorite_count": 1125, "source": "Twitter Web Client", "id_str": "605049566707216385", "is_retweet": false}, {"created_at": "Wed Jul 01 02:42:46 +0000 2015", "text": "To win this, we need to start strong\u2014that's why early donations are so critical. Chip in: http://t.co/cpofiE29TV", "in_reply_to_screen_name": null, "retweet_count": 144, "favorite_count": 284, "source": "TweetDeck", "id_str": "616074435443830786", "is_retweet": false}, {"created_at": "Wed Dec 09 19:02:42 +0000 2015", "text": "Donald Trump\u2019s anti-Muslim proposal is extreme\u2014but not by the standards of the rest of the 2016 Republican field. https://t.co/B73y6uZne6", "in_reply_to_screen_name": null, "retweet_count": 1121, "favorite_count": 1385, "source": "TweetDeck", "id_str": "674665491252838401", "is_retweet": false}, {"created_at": "Tue Dec 01 20:13:00 +0000 2015", "text": "History often gets made on ordinary days by seemingly ordinary people\u2014December 1, 1955 was one of them. Thank you, Rosa Parks. -H", "in_reply_to_screen_name": null, "retweet_count": 909, "favorite_count": 1474, "source": "TweetDeck", "id_str": "671784078195236865", "is_retweet": false}, {"created_at": "Sun Nov 15 03:16:29 +0000 2015", "text": "We cannot accept 33,000 gun deaths per year as \u201cnormal.\u201d Most Americans\u2014including law-abiding gun owners\u2014believe we can and must do better.", "in_reply_to_screen_name": null, "retweet_count": 1329, "favorite_count": 2561, "source": "TweetDeck", "id_str": "665730059878055936", "is_retweet": false}, {"created_at": "Thu Oct 29 01:08:24 +0000 2015", "text": "For people who claim to hate big government, Republicans love using it to try and make health care decisions for women. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 3239, "favorite_count": 4921, "source": "TweetDeck", "id_str": "659537231133192192", "is_retweet": false}, {"created_at": "Tue Jul 21 13:33:48 +0000 2015", "text": "Dodd-Frank was enacted 5 years ago today &amp; has been under GOP attack ever since. As president I'll defend Wall Street reform &amp; go beyond. -H", "in_reply_to_screen_name": null, "retweet_count": 461, "favorite_count": 829, "source": "Twitter Web Client", "id_str": "623486030700802048", "is_retweet": false}, {"created_at": "Mon Oct 19 16:23:17 +0000 2015", "text": "Carly Fiorina challenged Democrats to name an accomplishment of Hillary\u2019s. Senator @BarbaraBoxer accepted: http://t.co/rvSs9FXtpB", "in_reply_to_screen_name": null, "retweet_count": 935, "favorite_count": 1873, "source": "TweetDeck", "id_str": "656143592239464448", "is_retweet": false}, {"created_at": "Thu Aug 27 00:45:29 +0000 2015", "text": "No woman should have to go back to work 24 hours after giving birth. #WomensEqualityDay", "in_reply_to_screen_name": null, "retweet_count": 1588, "favorite_count": 3413, "source": "Twitter Web Client", "id_str": "636701029812277248", "is_retweet": false}, {"created_at": "Mon Aug 17 00:08:07 +0000 2015", "text": "If you can refinance your mortgage or your car loan, you should be able to refinance your student loan.", "in_reply_to_screen_name": null, "retweet_count": 1396, "favorite_count": 2188, "source": "Twitter for iPhone", "id_str": "633067746524299264", "is_retweet": false}, {"created_at": "Sat Aug 15 18:29:14 +0000 2015", "text": "More and more, paying for college is pushing people\u2019s dreams further out of reach\u2013and that\u2019s just wrong.", "in_reply_to_screen_name": null, "retweet_count": 749, "favorite_count": 1187, "source": "Twitter Web Client", "id_str": "632620078358491136", "is_retweet": false}, {"created_at": "Mon Apr 20 22:04:12 +0000 2015", "text": "Congrats to all runners in the Boston Marathon today, &amp; power to all the supportive families &amp; friends braving the rain! -H #BostonStrong", "in_reply_to_screen_name": null, "retweet_count": 826, "favorite_count": 2442, "source": "Twitter Web Client", "id_str": "590274793968181248", "is_retweet": false}, {"created_at": "Sun Dec 20 02:30:51 +0000 2015", "text": "After decades of fighting for progressive issues (and 11 hours of testimony in front of a Republican-led committee): https://t.co/vgLqnX65FX", "in_reply_to_screen_name": null, "retweet_count": 655, "favorite_count": 1500, "source": "Twitter Web Client", "id_str": "678402150771384320", "is_retweet": false}, {"created_at": "Tue Nov 17 02:21:41 +0000 2015", "text": "\u201cIt shows her at her wonkish best.\" https://t.co/2mXmIL6ud6 https://t.co/eIA5yjPmWt", "in_reply_to_screen_name": null, "retweet_count": 295, "favorite_count": 539, "source": "Twitter Web Client", "id_str": "666441042665873409", "is_retweet": false}, {"created_at": "Sat Aug 15 16:05:07 +0000 2015", "text": "Why does Hillary love Snapchat? Watch and learn:\nhttps://t.co/ZkevdcvZOY", "in_reply_to_screen_name": null, "retweet_count": 1098, "favorite_count": 1612, "source": "Twitter Web Client", "id_str": "632583807695089664", "is_retweet": false}, {"created_at": "Thu Dec 24 14:20:34 +0000 2015", "text": "For the families of 5.4 million Americans, a cure for Alzheimer's can\u2019t come soon enough. https://t.co/4WMG5fMFyD", "in_reply_to_screen_name": null, "retweet_count": 513, "favorite_count": 1116, "source": "TweetDeck", "id_str": "680030306540351488", "is_retweet": false}, {"created_at": "Thu Sep 17 02:05:49 +0000 2015", "text": "\u00bfQuieres recibir nuestras reacciones sobre el debate republicano en espa\u00f1ol por mensajes de texto? Env\u00eda DEBATE a 47246.", "in_reply_to_screen_name": null, "retweet_count": 312, "favorite_count": 775, "source": "Twitter Web Client", "id_str": "644331390977372160", "is_retweet": false}, {"created_at": "Sun May 31 03:03:15 +0000 2015", "text": "My heart is broken for the family of Beau Biden\u2014a wonderful man who served his country with devotion and lived his life with courage. -H", "in_reply_to_screen_name": null, "retweet_count": 3257, "favorite_count": 6163, "source": "Twitter for iPhone", "id_str": "604845567911542784", "is_retweet": false}, {"created_at": "Sun May 03 15:26:50 +0000 2015", "text": "Mother\u2019s Day gift idea: a call from Hillary. Sign up for a chance to surprise a mom you love: http://t.co/vG0pZrbUbr http://t.co/IveaxeVfs3", "in_reply_to_screen_name": null, "retweet_count": 742, "favorite_count": 1315, "source": "Twitter Web Client", "id_str": "594885836073771008", "is_retweet": false}, {"created_at": "Thu May 07 21:54:02 +0000 2015", "text": "You never know what you could be missing if you're not following the #Hillary2016 Flickr \u2192 http://t.co/vAeZXsO6Iu http://t.co/8rfHeIvZlD", "in_reply_to_screen_name": null, "retweet_count": 278, "favorite_count": 711, "source": "TweetDeck", "id_str": "596432831515078656", "is_retweet": false}, {"created_at": "Wed Jun 10 12:13:35 +0000 2015", "text": "The first two months of the #Hillary2016 campaign\u2014in a GIF! http://t.co/b3SQVuOXlY", "in_reply_to_screen_name": null, "retweet_count": 201, "favorite_count": 303, "source": "TweetDeck", "id_str": "608607941999128577", "is_retweet": false}, {"created_at": "Thu Oct 15 18:22:11 +0000 2015", "text": "\"It is both heartbreaking and infuriating that we lose an average of 90 Americans every day because of guns.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 531, "favorite_count": 975, "source": "TweetDeck", "id_str": "654723964493692928", "is_retweet": false}, {"created_at": "Tue Jun 30 23:34:48 +0000 2015", "text": "Reauthorizing @EximBankUS means supporting America's small businesses. Time for Congress to put politics aside &amp; act. http://t.co/WhXf1smlGU", "in_reply_to_screen_name": null, "retweet_count": 151, "favorite_count": 222, "source": "Twitter Web Client", "id_str": "616027133119471616", "is_retweet": false}, {"created_at": "Mon Aug 24 23:03:23 +0000 2015", "text": "\u00bfPueden adivinar cu\u00e1l es la diferencia entre Donald Trump y Jeb Bush sobre el tema migratorio? Nosotros no.\nhttps://t.co/Jy5kFpY56o", "in_reply_to_screen_name": null, "retweet_count": 491, "favorite_count": 582, "source": "Twitter Web Client", "id_str": "635950560701640705", "is_retweet": false}, {"created_at": "Sun Oct 04 20:16:50 +0000 2015", "text": "Hillary finally gets to meet the mischievous, trash-eating puppy from the campaign launch video, \u201cGetting Started.\u201d http://t.co/B6YQEu7JkT", "in_reply_to_screen_name": null, "retweet_count": 154, "favorite_count": 386, "source": "Twitter Web Client", "id_str": "650766549855399936", "is_retweet": false}, {"created_at": "Sat Apr 25 18:03:17 +0000 2015", "text": "Hillary's counting on you to get involved\u2014sign up to be part of this campaign: http://t.co/j4jxLMc6JC http://t.co/b4d3zwleHA", "in_reply_to_screen_name": null, "retweet_count": 560, "favorite_count": 1209, "source": "Twitter Web Client", "id_str": "592026106590531585", "is_retweet": false}, {"created_at": "Wed May 20 22:57:39 +0000 2015", "text": "\"When we short-change childcare workers, we short-change kids and America\u2019s future.\" \u2013HRC with @SEIU in Chicago http://t.co/k3v7SzpWbP", "in_reply_to_screen_name": null, "retweet_count": 436, "favorite_count": 777, "source": "Twitter Web Client", "id_str": "601159881731743744", "is_retweet": false}, {"created_at": "Tue May 05 20:51:26 +0000 2015", "text": "Happy #NationalTeacherDay! Here's to teachers who educate and inspire, in and out of the classroom. http://t.co/ppFoCpI2Cl", "in_reply_to_screen_name": null, "retweet_count": 607, "favorite_count": 935, "source": "Twitter Web Client", "id_str": "595692301135060993", "is_retweet": false}, {"created_at": "Fri Aug 28 20:22:30 +0000 2015", "text": "For prosperity to be real and lasting, it has to take root in small towns and rural areas as well as urban ones. http://t.co/q9Qjhvyrtp", "in_reply_to_screen_name": null, "retweet_count": 315, "favorite_count": 553, "source": "TweetDeck", "id_str": "637359623805267968", "is_retweet": false}, {"created_at": "Sat Jul 25 21:35:38 +0000 2015", "text": "Hillary's fought for women and families her whole life\u2014and she's not stopping any time soon. http://t.co/sBQr01Y3SG", "in_reply_to_screen_name": null, "retweet_count": 755, "favorite_count": 1530, "source": "Twitter Web Client", "id_str": "625056839210770432", "is_retweet": false}, {"created_at": "Sun Sep 27 00:54:02 +0000 2015", "text": "If the medicine you need costs less in Canada, you should be able to buy it from Canada\u2014or any country that meets our safety standards.", "in_reply_to_screen_name": null, "retweet_count": 1011, "favorite_count": 2265, "source": "Twitter Web Client", "id_str": "647937206028472320", "is_retweet": false}, {"created_at": "Sun Jul 26 16:00:36 +0000 2015", "text": "Through Adam, we informally raise awareness for people with disabilities every day: It's as simple as taking pride in the small things.", "in_reply_to_screen_name": null, "retweet_count": 77, "favorite_count": 204, "source": "Twitter Web Client", "id_str": "625334916172091392", "is_retweet": false}, {"created_at": "Wed Mar 18 00:04:32 +0000 2015", "text": "Budgets reflect our priorities. They should help families get ahead, educate our kids, and spark small business growth.", "in_reply_to_screen_name": null, "retweet_count": 1417, "favorite_count": 2233, "source": "Twitter Web Client", "id_str": "577983890889039872", "is_retweet": false}, {"created_at": "Thu Nov 19 21:51:14 +0000 2015", "text": "When workers organize for their rights, it helps fix our unbalanced economy and makes families stronger. #worktogether", "in_reply_to_screen_name": null, "retweet_count": 512, "favorite_count": 976, "source": "TweetDeck", "id_str": "667460148273807360", "is_retweet": false}, {"created_at": "Thu Dec 31 20:54:59 +0000 2015", "text": "Tonight\u2019s fundraising deadline is about more than money\u2014it's about standing together. If you're with me, chip in: https://t.co/lJ5pSWAlmr -H", "in_reply_to_screen_name": null, "retweet_count": 259, "favorite_count": 617, "source": "TweetDeck", "id_str": "682666279891800064", "is_retweet": false}, {"created_at": "Fri Oct 23 23:30:34 +0000 2015", "text": "Anyone who\u2019s sick of Hillary standing up for women had better get ready for a long campaign. https://t.co/6yfsZLIgr7", "in_reply_to_screen_name": null, "retweet_count": 631, "favorite_count": 1660, "source": "TweetDeck", "id_str": "657700672436088832", "is_retweet": false}, {"created_at": "Thu May 21 17:27:36 +0000 2015", "text": "Business can be a powerful force of change\u2014there\u2019s something significant in the community work we do. I'm proud to create jobs &amp; give back.", "in_reply_to_screen_name": null, "retweet_count": 78, "favorite_count": 192, "source": "TweetDeck", "id_str": "601439209665134592", "is_retweet": false}, {"created_at": "Tue May 12 17:49:04 +0000 2015", "text": "Campaign manager Robby Mook is finalizing the Founding Donor list\u2014make sure your name's on it: http://t.co/hmwVpoYTRP http://t.co/Q5fh06y5Ll", "in_reply_to_screen_name": null, "retweet_count": 140, "favorite_count": 237, "source": "TweetDeck", "id_str": "598183122484727810", "is_retweet": false}, {"created_at": "Wed Sep 16 22:48:47 +0000 2015", "text": "\"Como Presidenta, siempre estar\u00e9 con la comunidad latina.\" Lea la op-ed de Hillary: https://t.co/xKF1LyXcB8", "in_reply_to_screen_name": null, "retweet_count": 292, "favorite_count": 483, "source": "Twitter Web Client", "id_str": "644281807337340928", "is_retweet": false}, {"created_at": "Sat Oct 24 19:34:03 +0000 2015", "text": "Our Iowa motto: organize with heart, engage with purpose, win every day. We\u2019re definitely winning today! https://t.co/NZsWZvyOHQ", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 213, "favorite_count": 422, "source": "TweetDeck", "id_str": "658003538467880960", "is_retweet": false}, {"created_at": "Sun Jun 21 20:10:17 +0000 2015", "text": "A world with no ceilings: sponsored in part by dads everywhere.\nhttps://t.co/anGn1uY7nA", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 851, "source": "Twitter Web Client", "id_str": "612714173676417024", "is_retweet": false}, {"created_at": "Fri Oct 16 23:58:42 +0000 2015", "text": "Strong step forward by @WhiteHouse. We shouldn't put a national treasure like the Arctic at risk. https://t.co/wpayAgroeN", "in_reply_to_screen_name": null, "retweet_count": 412, "favorite_count": 750, "source": "Twitter for iPhone", "id_str": "655171039576616960", "is_retweet": false}, {"created_at": "Tue Jul 21 15:02:17 +0000 2015", "text": "If fighting for policies that help families get ahead is playing the #gendercard\u2014well then, proud to play it. http://t.co/xAbEyfNtka", "in_reply_to_screen_name": null, "retweet_count": 882, "favorite_count": 1362, "source": "TweetDeck", "id_str": "623508299850346496", "is_retweet": false}, {"created_at": "Wed Dec 30 19:27:36 +0000 2015", "text": "It shouldn\u2019t be so hard to be a working parent. https://t.co/m7pqZgk8M1", "in_reply_to_screen_name": null, "retweet_count": 998, "favorite_count": 2179, "source": "TweetDeck", "id_str": "682281904129708033", "is_retweet": false}, {"created_at": "Tue Jun 16 20:31:03 +0000 2015", "text": "\"I want to wage and win Four Fights for you.\" Read about the policies behind Hillary's vision: http://t.co/6hDhq8i27j http://t.co/dWE7gjJMpP", "in_reply_to_screen_name": null, "retweet_count": 475, "favorite_count": 681, "source": "TweetDeck", "id_str": "610907461772406784", "is_retweet": false}, {"created_at": "Fri Dec 11 03:19:13 +0000 2015", "text": "Hillary's on @LateNightSeth tonight! https://t.co/DbtOPqfPBZ", "in_reply_to_screen_name": null, "retweet_count": 418, "favorite_count": 1402, "source": "TweetDeck", "id_str": "675152832799105024", "is_retweet": false}, {"created_at": "Thu Oct 29 23:54:29 +0000 2015", "text": "An estimated 1.5 million black men are missing from their communities because of incarceration and premature death. https://t.co/cCSANbV4X1", "in_reply_to_screen_name": null, "retweet_count": 1472, "favorite_count": 2250, "source": "TweetDeck", "id_str": "659881016941760512", "is_retweet": false}, {"created_at": "Thu Sep 03 19:53:29 +0000 2015", "text": "Meet \"ThxBox\"\u2014a personal thank you from Hillary. Get on the waiting list to find out more: http://t.co/VOXlYiycaI http://t.co/NntUpyTOgA", "in_reply_to_screen_name": null, "retweet_count": 162, "favorite_count": 305, "source": "TweetDeck", "id_str": "639526648329695232", "is_retweet": false}, {"created_at": "Thu Jul 09 13:58:52 +0000 2015", "text": "No American should have to live under the shadow of racism. A proud day in South Carolina. -H", "in_reply_to_screen_name": null, "retweet_count": 1116, "favorite_count": 2388, "source": "Twitter Web Client", "id_str": "619143687436636161", "is_retweet": false}, {"created_at": "Wed Oct 28 21:58:48 +0000 2015", "text": "Which GOP candidate would you want to see Hillary take on in a debate? Cast your vote! https://t.co/IAf9qEWt7g https://t.co/LdvZ4HytVS", "in_reply_to_screen_name": null, "retweet_count": 223, "favorite_count": 408, "source": "Twitter Web Client", "id_str": "659489516290490368", "is_retweet": false}, {"created_at": "Tue Jul 21 14:59:18 +0000 2015", "text": "Think women should be paid equally? You might be playing the #gendercard.", "in_reply_to_screen_name": null, "retweet_count": 756, "favorite_count": 1573, "source": "TweetDeck", "id_str": "623507548721807361", "is_retweet": false}, {"created_at": "Tue Apr 07 00:18:04 +0000 2015", "text": "The detention of women's activists in #China must end. This is inexcusable. #FreeBeijing20Five Read this story: http://t.co/qV3VNOgmyG", "in_reply_to_screen_name": null, "retweet_count": 2362, "favorite_count": 2786, "source": "Twitter Web Client", "id_str": "585235055078940673", "is_retweet": false}, {"created_at": "Tue Sep 22 22:18:11 +0000 2015", "text": "Wishing an easy fast for all those observing Yom Kippur.", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 1069, "source": "TweetDeck", "id_str": "646448431158984704", "is_retweet": false}, {"created_at": "Fri Oct 30 12:06:03 +0000 2015", "text": "40 million Americans have student debt. We need to make college affordable once and for all. https://t.co/Hl7pGiZ4iQ", "in_reply_to_screen_name": null, "retweet_count": 831, "favorite_count": 1781, "source": "TweetDeck", "id_str": "660065123948560385", "is_retweet": false}, {"created_at": "Sat Jun 06 19:15:42 +0000 2015", "text": "An in-depth look at Hillary's plan for expanding voting rights\u2014with GIFs, graphics, and more: http://t.co/0LA8yoNKtd http://t.co/gBgpZkkE9l", "in_reply_to_screen_name": null, "retweet_count": 323, "favorite_count": 448, "source": "Twitter Web Client", "id_str": "607264619342798848", "is_retweet": false}, {"created_at": "Thu Oct 08 21:07:15 +0000 2015", "text": "We need to enforce regulations on Wall Street to make sure that the 2008 crisis never happens again. http://t.co/kc2uUT3AxY", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 972, "source": "TweetDeck", "id_str": "652228788034650112", "is_retweet": false}, {"created_at": "Wed Sep 30 19:37:36 +0000 2015", "text": "http://t.co/TZG8tREcR1", "in_reply_to_screen_name": null, "retweet_count": 1496, "favorite_count": 2897, "source": "Twitter Web Client", "id_str": "649307123776667648", "is_retweet": false}, {"created_at": "Wed Oct 14 21:07:09 +0000 2015", "text": "Your fights are Hillary's fights. http://t.co/OKwDwbqqaS", "in_reply_to_screen_name": null, "retweet_count": 573, "favorite_count": 1087, "source": "TweetDeck", "id_str": "654403087931699200", "is_retweet": false}, {"created_at": "Sun Oct 25 14:03:05 +0000 2015", "text": "Hillary and @maddow talked about everything from Syria to health care\u2014but first, Rachel was curious about one thing. https://t.co/oNtp766MgM", "in_reply_to_screen_name": null, "retweet_count": 270, "favorite_count": 559, "source": "TweetDeck", "id_str": "658282636540907521", "is_retweet": false}, {"created_at": "Tue Nov 03 20:52:48 +0000 2015", "text": "Our criminal justice system is in crisis\u2014but we can start changing that now. https://t.co/gdBkpPjBEZ https://t.co/L54c868qHl", "in_reply_to_screen_name": null, "retweet_count": 423, "favorite_count": 749, "source": "TweetDeck", "id_str": "661647237265494016", "is_retweet": false}, {"created_at": "Fri Jul 17 13:59:02 +0000 2015", "text": "Yesterday, Hillary outlined a plan to encourage businesses to share profits with employees: http://t.co/GLifSxXucA http://t.co/wfGHwsR9wa", "in_reply_to_screen_name": null, "retweet_count": 321, "favorite_count": 528, "source": "TweetDeck", "id_str": "622042829146210304", "is_retweet": false}, {"created_at": "Tue Dec 15 22:05:43 +0000 2015", "text": "\"The phrase 'active shooter' should not be one we have to teach our children. But it is.\" \u2014Hillary in Minneapolis", "in_reply_to_screen_name": null, "retweet_count": 320, "favorite_count": 738, "source": "TweetDeck", "id_str": "676885875754668036", "is_retweet": false}, {"created_at": "Fri Oct 30 19:37:33 +0000 2015", "text": "\"Racial profiling...is wrong, demeaning, doesn\u2019t keep us safe or help solve crimes\u2014it\u2019s time to put that practice behind us.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 550, "favorite_count": 945, "source": "TweetDeck", "id_str": "660178747895750657", "is_retweet": false}, {"created_at": "Fri Aug 14 01:10:59 +0000 2015", "text": "Last chance! Vote for your favorite design to become the new #Hillary2016 bumper sticker: http://t.co/IaAD4gKOlY http://t.co/84j6JQMqah", "in_reply_to_screen_name": null, "retweet_count": 147, "favorite_count": 292, "source": "Twitter Web Client", "id_str": "631996406501392384", "is_retweet": false}, {"created_at": "Wed Oct 14 03:00:54 +0000 2015", "text": "\"In this debate, we tried to deal with the very tough issues facing our country\u2014in stark contrast to the Republicans.\" -Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 1397, "favorite_count": 2843, "source": "TweetDeck", "id_str": "654129724990603265", "is_retweet": false}, {"created_at": "Mon Sep 14 01:09:27 +0000 2015", "text": "Drug and alcohol addiction is a disease, not a moral failing\u2014and we must treat it as such.", "in_reply_to_screen_name": null, "retweet_count": 3141, "favorite_count": 6576, "source": "TweetDeck", "id_str": "643230044538699776", "is_retweet": false}, {"created_at": "Fri Oct 02 14:53:53 +0000 2015", "text": "Yet another reason we need to restore key protections of the Voting Rights Act. We're better than this. -H https://t.co/HYM1j2irkm", "in_reply_to_screen_name": null, "retweet_count": 769, "favorite_count": 912, "source": "Twitter Web Client", "id_str": "649960501909278720", "is_retweet": false}, {"created_at": "Tue Jun 23 19:48:23 +0000 2015", "text": "Live now: Hillary is with community leaders in Florissant, MO for a conversation on race and strengthening families. http://t.co/z3E2WHrAVE", "in_reply_to_screen_name": null, "retweet_count": 198, "favorite_count": 310, "source": "TweetDeck", "id_str": "613433440533409792", "is_retweet": false}, {"created_at": "Thu Aug 06 19:08:15 +0000 2015", "text": "Add your name if you agree with Hillary: We should make voting easier, not harder \u2192 http://t.co/unc0PWLnBS http://t.co/vqUMQrD4uE", "in_reply_to_screen_name": null, "retweet_count": 411, "favorite_count": 635, "source": "Twitter Web Client", "id_str": "629368406920331264", "is_retweet": false}, {"created_at": "Sat Sep 19 15:38:21 +0000 2015", "text": "\u201cIf you want a president who will listen to you, work her heart out to make your life better\u2014then you\u2019re lookin\u2019 at her.\"\u2014Hillary #603forHRC", "in_reply_to_screen_name": null, "retweet_count": 703, "favorite_count": 1528, "source": "Twitter Web Client", "id_str": "645260649468071938", "is_retweet": false}, {"created_at": "Thu Sep 03 02:49:22 +0000 2015", "text": "\u201cWomen\u2019s rights are human rights.\u201d Watch Hillary say the words that are as true now as they were in 1995. #Beijing20\nhttps://t.co/BtcIcXaiai", "in_reply_to_screen_name": null, "retweet_count": 1442, "favorite_count": 2427, "source": "Twitter Web Client", "id_str": "639268919669211136", "is_retweet": false}, {"created_at": "Mon May 25 02:04:06 +0000 2015", "text": "Win a free trip to meet Hillary. Need we say more? http://t.co/ZQm4MMtIts", "in_reply_to_screen_name": null, "retweet_count": 155, "favorite_count": 424, "source": "Twitter Web Client", "id_str": "602656356953399296", "is_retweet": false}, {"created_at": "Thu Nov 12 00:43:41 +0000 2015", "text": "Mentions of Hillary at #GOPdebate: Over 40.\nMentions of equal pay, paid leave, LGBT rights, or racial justice: 0. https://t.co/MOrjgg69iR", "in_reply_to_screen_name": null, "retweet_count": 971, "favorite_count": 1396, "source": "Twitter Web Client", "id_str": "664604442357026817", "is_retweet": false}, {"created_at": "Tue May 12 18:28:37 +0000 2015", "text": "Want your own personalized H? Chip in $5 to become a Founding Donor\u2014next 10 donors will win: http://t.co/O7mp44k1YF http://t.co/uxY0DAJWGH", "in_reply_to_screen_name": null, "retweet_count": 165, "favorite_count": 352, "source": "Twitter Web Client", "id_str": "598193075085783040", "is_retweet": false}, {"created_at": "Wed Jul 15 03:05:46 +0000 2015", "text": "Hillary in New York yesterday: http://t.co/YeVehwpWlQ", "in_reply_to_screen_name": null, "retweet_count": 627, "favorite_count": 1262, "source": "TweetDeck", "id_str": "621153656054923264", "is_retweet": false}, {"created_at": "Wed May 13 00:37:35 +0000 2015", "text": "Last chance to become a #Hillary2016 Founding Donor \u2014 at midnight, this window closes forever: http://t.co/p17WqZSWMG http://t.co/bXlqaSHXYN", "in_reply_to_screen_name": null, "retweet_count": 149, "favorite_count": 221, "source": "TweetDeck", "id_str": "598285926582853632", "is_retweet": false}, {"created_at": "Fri Oct 02 21:07:03 +0000 2015", "text": "\"What is wrong with us that we can't stand up to the NRA and the gun lobby and the gun manufacturers they represent?\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 1582, "favorite_count": 2645, "source": "Twitter Web Client", "id_str": "650054410387746816", "is_retweet": false}, {"created_at": "Mon Jun 22 19:10:15 +0000 2015", "text": "Couldn't make it to NYC for Hillary's official campaign launch? This video is the next best thing.\nhttps://t.co/fBhptMdexi", "in_reply_to_screen_name": null, "retweet_count": 423, "favorite_count": 587, "source": "Twitter Web Client", "id_str": "613061454212628480", "is_retweet": false}, {"created_at": "Tue May 05 16:18:23 +0000 2015", "text": "While GOP debates the same failed policies, Democrats will debate how to help families get ahead. Looking forward to a real conversation. \u2013H", "in_reply_to_screen_name": null, "retweet_count": 835, "favorite_count": 1522, "source": "Twitter Web Client", "id_str": "595623583604314112", "is_retweet": false}, {"created_at": "Sun Oct 04 13:07:49 +0000 2015", "text": "\"Let us then tap our fists in friendship.\" http://t.co/RkRru8dqNE", "in_reply_to_screen_name": null, "retweet_count": 1074, "favorite_count": 2758, "source": "Twitter Web Client", "id_str": "650658585031131136", "is_retweet": false}, {"created_at": "Wed Nov 11 13:50:31 +0000 2015", "text": "The \"winners\" from last night's #GOPDebate: https://t.co/dH8dKopxbZ https://t.co/vMs8b3O5vG", "in_reply_to_screen_name": null, "retweet_count": 335, "favorite_count": 549, "source": "TweetDeck", "id_str": "664440069248278528", "is_retweet": false}, {"created_at": "Thu Nov 19 16:05:48 +0000 2015", "text": "\"Turning away orphans, applying a religious test, discriminating against Muslims...that\u2019s just not who we are. We\u2019re better than that.\"", "in_reply_to_screen_name": null, "retweet_count": 1556, "favorite_count": 2520, "source": "TweetDeck", "id_str": "667373216097288192", "is_retweet": false}, {"created_at": "Sat Jul 04 02:34:57 +0000 2015", "text": "Dream big. https://t.co/nFuvXGLOuK", "in_reply_to_screen_name": null, "retweet_count": 211, "favorite_count": 622, "source": "TweetDeck", "id_str": "617159632545517568", "is_retweet": false}, {"created_at": "Thu Sep 24 12:06:04 +0000 2015", "text": "It\u2019s not enough to condemn campus sexual assault. We need to end it. http://t.co/M7x2xuNwpb", "in_reply_to_screen_name": null, "retweet_count": 490, "favorite_count": 897, "source": "TweetDeck", "id_str": "647019162649280512", "is_retweet": false}, {"created_at": "Sat Jul 11 20:07:28 +0000 2015", "text": "A preview of Hillary's economic plan in seven charts: http://t.co/K4xix1MaMH via @wonkblog http://t.co/tJScCKf5Tu", "in_reply_to_screen_name": null, "retweet_count": 272, "favorite_count": 370, "source": "TweetDeck", "id_str": "619961221442314241", "is_retweet": false}, {"created_at": "Thu May 14 19:02:06 +0000 2015", "text": "Hillary wrote a letter to a couple featured in her announcement video. You'll definitely want to read this \u2192 http://t.co/o5w47NrQJO", "in_reply_to_screen_name": null, "retweet_count": 225, "favorite_count": 553, "source": "TweetDeck", "id_str": "598926276083261440", "is_retweet": false}, {"created_at": "Tue Apr 14 23:08:33 +0000 2015", "text": "Putting Hillary Bold to good use. http://t.co/NVtjlsoH5u http://t.co/M3Q3nsWqyV", "in_reply_to_screen_name": null, "retweet_count": 1574, "favorite_count": 2803, "source": "Twitter Web Client", "id_str": "588116660520902656", "is_retweet": false}, {"created_at": "Sat Jun 27 18:44:26 +0000 2015", "text": "Hillary needs you. Help the campaign end its first quarter strong by meeting our goal before the deadline: http://t.co/VXgn1XHr3h", "in_reply_to_screen_name": null, "retweet_count": 204, "favorite_count": 423, "source": "TweetDeck", "id_str": "614866898501636096", "is_retweet": false}, {"created_at": "Tue Jun 09 21:21:57 +0000 2015", "text": "No one should be in debt to a college that defrauded them\u2014forgiving students is the right decision. Thx, @usedgov. http://t.co/giZN84WM8G -H", "in_reply_to_screen_name": null, "retweet_count": 482, "favorite_count": 806, "source": "Twitter Web Client", "id_str": "608383554045804544", "is_retweet": false}, {"created_at": "Fri Aug 07 03:40:51 +0000 2015", "text": "Missing Jon Stewart already. #GOPdebate #JonVoyage -H", "in_reply_to_screen_name": null, "retweet_count": 3922, "favorite_count": 9682, "source": "Twitter Web Client", "id_str": "629497403486404608", "is_retweet": false}, {"created_at": "Wed Aug 12 18:55:18 +0000 2015", "text": "Under Hillary's plan, millions could refinance their existing loans and relieve the crushing burden of debt: http://t.co/A4pWb3xp6C", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 471, "favorite_count": 547, "source": "Twitter Web Client", "id_str": "631539472501354496", "is_retweet": false}, {"created_at": "Mon Jul 20 21:24:06 +0000 2015", "text": "...and that's why you don't try to pick a fight on women's economic security with Hillary Clinton. http://t.co/85tdES0q3x", "in_reply_to_screen_name": null, "retweet_count": 2273, "favorite_count": 4325, "source": "TweetDeck", "id_str": "623242000498884609", "is_retweet": false}, {"created_at": "Sun Aug 02 16:43:14 +0000 2015", "text": "\"We can't go on like this. We are better than this. Things must change.\" Hillary at @NatUrbanLeague:\nhttps://t.co/wPJXsRUcMe", "in_reply_to_screen_name": null, "retweet_count": 421, "favorite_count": 719, "source": "Twitter Web Client", "id_str": "627882359791030272", "is_retweet": false}, {"created_at": "Wed Oct 21 22:56:48 +0000 2015", "text": "An investigation into the deaths of four Americans has been twisted into a partisan attack on Hillary. The facts: https://t.co/M0hm0INHAE", "in_reply_to_screen_name": null, "retweet_count": 730, "favorite_count": 826, "source": "TweetDeck", "id_str": "656967401121124352", "is_retweet": false}, {"created_at": "Sat Dec 12 00:03:39 +0000 2015", "text": "Meet a 9/11 responder whose health benefits are being threatened by Republicans: https://t.co/NNQiTwBX1s", "in_reply_to_screen_name": null, "retweet_count": 588, "favorite_count": 904, "source": "TweetDeck", "id_str": "675466002918940672", "is_retweet": false}, {"created_at": "Sun Nov 15 03:40:46 +0000 2015", "text": "\"The Affordable Care Act\u2014I don't think we should have to be defending it among Democrats.\" \u2014Hillary #DemDebate", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 1455, "source": "Twitter Web Client", "id_str": "665736168688906240", "is_retweet": false}, {"created_at": "Wed Apr 22 19:59:37 +0000 2015", "text": "Our organizing teams are ramping up in all 50 states. Ready to get involved? Sign up now: http://t.co/4j0Xyx7unx http://t.co/LPauAobUDc", "in_reply_to_screen_name": null, "retweet_count": 379, "favorite_count": 623, "source": "Twitter Web Client", "id_str": "590968217847386113", "is_retweet": false}, {"created_at": "Sun Aug 16 16:53:13 +0000 2015", "text": "Take this quiz to see how Hillary will help you afford college or manage your existing debt: http://t.co/pUmTbVku1E http://t.co/I4D04Hho46", "in_reply_to_screen_name": null, "retweet_count": 172, "favorite_count": 283, "source": "Twitter Web Client", "id_str": "632958302859718656", "is_retweet": false}, {"created_at": "Sun Oct 25 19:52:08 +0000 2015", "text": "Hillary stands with parents and educators in calling for better, fairer, and fewer tests. On @usedgov's new plan: https://t.co/w53TrBGp8L", "in_reply_to_screen_name": null, "retweet_count": 361, "favorite_count": 737, "source": "TweetDeck", "id_str": "658370477035941889", "is_retweet": false}, {"created_at": "Fri Oct 09 21:08:32 +0000 2015", "text": "Racism is America's original sin. To those I met with today, thank you for sharing your ideas. -H https://t.co/ICqYepExxB", "in_reply_to_screen_name": null, "retweet_count": 2859, "favorite_count": 3813, "source": "TweetDeck", "id_str": "652591497221640194", "is_retweet": false}, {"created_at": "Mon Apr 27 16:48:23 +0000 2015", "text": "Start your week off right\u2014sign up to join #Hillary2016: http://t.co/ub14c8KzcR http://t.co/X7rvDtzaji", "in_reply_to_screen_name": null, "retweet_count": 236, "favorite_count": 483, "source": "Twitter Web Client", "id_str": "592732033002115072", "is_retweet": false}, {"created_at": "Tue Apr 28 23:35:53 +0000 2015", "text": "Join this team if you think everyone should be able to marry the person they love: http://t.co/g4m2imUHdF http://t.co/IicCm2l6NZ", "in_reply_to_screen_name": null, "retweet_count": 1887, "favorite_count": 4186, "source": "Twitter Web Client", "id_str": "593196970858119168", "is_retweet": false}, {"created_at": "Tue May 12 19:24:40 +0000 2015", "text": "Let\u2019s go. http://t.co/enC8HcEj1u http://t.co/5vLi7GNwQ0", "in_reply_to_screen_name": null, "retweet_count": 162, "favorite_count": 287, "source": "TweetDeck", "id_str": "598207179368312834", "is_retweet": false}, {"created_at": "Fri Jun 05 13:30:35 +0000 2015", "text": "http://t.co/zCa7InnSYt", "in_reply_to_screen_name": null, "retweet_count": 643, "favorite_count": 1007, "source": "TweetDeck", "id_str": "606815380980563968", "is_retweet": false}, {"created_at": "Wed Oct 28 12:21:31 +0000 2015", "text": ".@StephenAtHome: \"I was playing a character who did not care for you.\"\n\nHillary: \"I can say it now\u2014it was mutual.\"\nhttps://t.co/RP8cPdEoh3", "in_reply_to_screen_name": null, "retweet_count": 535, "favorite_count": 1340, "source": "Twitter Web Client", "id_str": "659344238132355072", "is_retweet": false}, {"created_at": "Mon May 11 01:43:21 +0000 2015", "text": "A few lucky moms got a Mother's Day surprise to remember today: a call from Hillary. http://t.co/gTai1I3yJZ", "in_reply_to_screen_name": null, "retweet_count": 446, "favorite_count": 1732, "source": "Twitter Web Client", "id_str": "597577705023008769", "is_retweet": false}, {"created_at": "Tue Jun 23 23:19:33 +0000 2015", "text": "Hillary in Florissant, Missouri today: http://t.co/9HlQf4F56n", "in_reply_to_screen_name": null, "retweet_count": 499, "favorite_count": 919, "source": "TweetDeck", "id_str": "613486578510491652", "is_retweet": false}, {"created_at": "Sun Dec 20 22:15:18 +0000 2015", "text": "We can\u2019t go back to a foreign policy that views US boots on the ground as a first choice instead of a last resort. https://t.co/H2k8DIUFIT", "in_reply_to_screen_name": null, "retweet_count": 898, "favorite_count": 1912, "source": "Twitter Web Client", "id_str": "678700225717002240", "is_retweet": false}, {"created_at": "Fri Aug 21 21:11:33 +0000 2015", "text": "Hillary wants to expand @AmeriCorps from 75,000 to 250,000 members. See how AmeriCorps changed one volunteer\u2019s life: http://t.co/NsNj3yJVVq", "in_reply_to_screen_name": null, "retweet_count": 405, "favorite_count": 690, "source": "Twitter Web Client", "id_str": "634835251764854784", "is_retweet": false}, {"created_at": "Thu Oct 15 17:56:14 +0000 2015", "text": "Watch live: Hillary speaks at a Latinos for Hillary event in San Antonio, Texas \u2192 http://t.co/4QDB9eEIwA", "in_reply_to_screen_name": null, "retweet_count": 124, "favorite_count": 235, "source": "TweetDeck", "id_str": "654717432146235392", "is_retweet": false}, {"created_at": "Thu Nov 19 13:07:54 +0000 2015", "text": "The deck is stacked for the wealthiest Americans\u2014and it\u2019s time to reshuffle.\nhttps://t.co/tRzvymEhtl", "in_reply_to_screen_name": null, "retweet_count": 471, "favorite_count": 992, "source": "Twitter Web Client", "id_str": "667328447614599168", "is_retweet": false}, {"created_at": "Wed Oct 07 20:22:42 +0000 2015", "text": "Diversity is a source of strength and should be celebrated\u2014not denigrated. Proud to launch Latinos for Hillary. http://t.co/FNjXs45QFK", "in_reply_to_screen_name": null, "retweet_count": 584, "favorite_count": 789, "source": "TweetDeck", "id_str": "651855189859790850", "is_retweet": false}, {"created_at": "Wed May 27 12:25:26 +0000 2015", "text": "This pillow's place is in your house. Order yours before it sells out (again!): http://t.co/qKTexoi4Dm http://t.co/qbmQ60N2oX", "in_reply_to_screen_name": null, "retweet_count": 358, "favorite_count": 933, "source": "TweetDeck", "id_str": "603537496257994752", "is_retweet": false}, {"created_at": "Sat Jun 13 18:12:52 +0000 2015", "text": "\"Really loved that she brought clean energy and climate change into her speech today.\u201d \u2014Louisa http://t.co/jIaWZHzYcO", "in_reply_to_screen_name": null, "retweet_count": 208, "favorite_count": 575, "source": "Twitter Web Client", "id_str": "609785523033534464", "is_retweet": false}, {"created_at": "Sat Oct 24 11:53:10 +0000 2015", "text": "Hi! I\u2019m James, a @HillaryforIA organizer in NE Iowa. I\u2019ll be tweeting today ahead of the Jefferson-Jackson dinner! https://t.co/2nGjODKbHS", "in_reply_to_screen_name": null, "retweet_count": 147, "favorite_count": 449, "source": "TweetDeck", "id_str": "657887554935595008", "is_retweet": false}, {"created_at": "Sat Oct 03 19:18:10 +0000 2015", "text": "\"Eleven states ban same-sex couples and LGBT individuals from adopting....one of the cruelest vestiges of anti-gay bigotry.\" -Hillary", "in_reply_to_screen_name": null, "retweet_count": 847, "favorite_count": 1763, "source": "Twitter Web Client", "id_str": "650389396785623041", "is_retweet": false}, {"created_at": "Sun Apr 19 22:09:22 +0000 2015", "text": ".@billclinton in OK City today: \"We should all live by the Oklahoma standard: Service, honor, kindness...to affirm our common humanity.\"", "in_reply_to_screen_name": null, "retweet_count": 653, "favorite_count": 1392, "source": "Twitter for iPhone", "id_str": "589913706643005440", "is_retweet": false}, {"created_at": "Sun Oct 04 21:47:21 +0000 2015", "text": "With the dangerous weather hitting South Carolina, please stay safe first and foremost. Take care, @HillaryforSC, and all affected. -H", "in_reply_to_screen_name": null, "retweet_count": 348, "favorite_count": 929, "source": "TweetDeck", "id_str": "650789326054387712", "is_retweet": false}, {"created_at": "Wed Jun 10 15:55:43 +0000 2015", "text": "Hillary is on Instagram! Follow along for a behind-the-scenes look at the campaign: http://t.co/N09gfgmFmN http://t.co/IeabYmyWNh", "in_reply_to_screen_name": null, "retweet_count": 309, "favorite_count": 572, "source": "TweetDeck", "id_str": "608663843829641216", "is_retweet": false}, {"created_at": "Mon Oct 05 16:21:16 +0000 2015", "text": "It's time to act on gun violence. We simply cannot accept as normal 33,000 gun deaths a year. -H", "in_reply_to_screen_name": null, "retweet_count": 1541, "favorite_count": 2889, "source": "TweetDeck", "id_str": "651069652865581056", "is_retweet": false}, {"created_at": "Thu Jun 25 20:29:12 +0000 2015", "text": "Stand with Hillary if you're with her in the fight for affordable health care: http://t.co/I033MLF7sb http://t.co/CKWhtoiH66", "in_reply_to_screen_name": null, "retweet_count": 481, "favorite_count": 923, "source": "TweetDeck", "id_str": "614168488152797184", "is_retweet": false}, {"created_at": "Sun Dec 20 20:02:29 +0000 2015", "text": "Here\u2019s why having a former secretary of state in the Oval Office would be a smart move: https://t.co/pckEqNbZ28", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1355, "source": "Twitter Web Client", "id_str": "678666803661418498", "is_retweet": false}, {"created_at": "Thu Jul 23 22:48:47 +0000 2015", "text": "Hot Dogs + Grillary Clinton = A Happy #NationalHotDogDay http://t.co/pUZZxoUTiQ", "in_reply_to_screen_name": null, "retweet_count": 275, "favorite_count": 801, "source": "Twitter Web Client", "id_str": "624350472372137985", "is_retweet": false}, {"created_at": "Wed Nov 25 18:11:19 +0000 2015", "text": "There\u2019s no place for second-class status in the United States of America. https://t.co/L53sSZGq4o", "in_reply_to_screen_name": null, "retweet_count": 580, "favorite_count": 1102, "source": "TweetDeck", "id_str": "669579132129386496", "is_retweet": false}, {"created_at": "Sun Jun 07 21:59:26 +0000 2015", "text": "Why do voting rights matter? Here's what you said: http://t.co/wWsDuSMHz5", "in_reply_to_screen_name": null, "retweet_count": 517, "favorite_count": 710, "source": "TweetDeck", "id_str": "607668211861962752", "is_retweet": false}, {"created_at": "Fri Oct 16 00:54:18 +0000 2015", "text": "Ever had to tell a prime minister about your bad hair day?\nhttps://t.co/4n4YyQL0Gx", "in_reply_to_screen_name": null, "retweet_count": 310, "favorite_count": 745, "source": "Twitter Web Client", "id_str": "654822642793385984", "is_retweet": false}, {"created_at": "Wed Dec 02 20:26:32 +0000 2015", "text": "I refuse to accept this as normal. We must take action to stop gun violence now. -H https://t.co/SkKglwQycb", "in_reply_to_screen_name": null, "retweet_count": 10006, "favorite_count": 13975, "source": "TweetDeck", "id_str": "672149874046083072", "is_retweet": false}, {"created_at": "Tue May 05 20:00:15 +0000 2015", "text": "Think beyond candy and flowers. This Mother's Day, get Mom a call from Hillary: http://t.co/6ea8mO09AA http://t.co/3QQLvIHA4A", "in_reply_to_screen_name": null, "retweet_count": 194, "favorite_count": 364, "source": "Twitter Web Client", "id_str": "595679417910874115", "is_retweet": false}, {"created_at": "Wed Dec 09 16:36:51 +0000 2015", "text": "#EveryStudentSucceeds is a critical step to giving all children a quality education. Let's work to ensure it lives up to its name. -H", "in_reply_to_screen_name": null, "retweet_count": 381, "favorite_count": 844, "source": "TweetDeck", "id_str": "674628787699601408", "is_retweet": false}, {"created_at": "Mon Sep 14 17:21:15 +0000 2015", "text": "\u201cRape is a crime\u2014wherever it happens.\u201d \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 984, "favorite_count": 1877, "source": "TweetDeck", "id_str": "643474605097750530", "is_retweet": false}, {"created_at": "Mon May 25 23:15:19 +0000 2015", "text": "With respect and gratitude for fallen servicemembers and their families. http://t.co/JF5mFOq1QA", "in_reply_to_screen_name": null, "retweet_count": 601, "favorite_count": 1544, "source": "Twitter Web Client", "id_str": "602976265759498240", "is_retweet": false}, {"created_at": "Wed Aug 19 01:22:47 +0000 2015", "text": "About time. https://t.co/cML4UqfCAT", "in_reply_to_screen_name": null, "retweet_count": 864, "favorite_count": 1734, "source": "Twitter Web Client", "id_str": "633811315325292544", "is_retweet": false}, {"created_at": "Tue Sep 29 22:35:50 +0000 2015", "text": "In school, I learned how to think creatively and stand up for myself. #62MillionGirls don't have that chance. http://t.co/BKNW3A0Oqc -H", "in_reply_to_screen_name": null, "retweet_count": 770, "favorite_count": 1185, "source": "Twitter Web Client", "id_str": "648989588338384896", "is_retweet": false}, {"created_at": "Sat Nov 07 14:38:44 +0000 2015", "text": "Hillary Clinton sat down with the mothers of Eric Garner and Dontre Hamilton\u2014here\u2019s what they talked about: https://t.co/z3zPRwwoAN", "in_reply_to_screen_name": null, "retweet_count": 442, "favorite_count": 800, "source": "Twitter Web Client", "id_str": "663002651295109120", "is_retweet": false}, {"created_at": "Fri Dec 04 02:36:41 +0000 2015", "text": "Americans with disabilities are leaders in every corner of our society. I salute their contributions to our country on #IDPD. -H", "in_reply_to_screen_name": null, "retweet_count": 572, "favorite_count": 1310, "source": "TweetDeck", "id_str": "672605412693319681", "is_retweet": false}, {"created_at": "Tue May 19 15:15:23 +0000 2015", "text": "Hillary's exchanging ideas on strengthening small business with the real experts. Watch live: http://t.co/wZVtg4F8t5", "in_reply_to_screen_name": null, "retweet_count": 147, "favorite_count": 273, "source": "TweetDeck", "id_str": "600681161069895680", "is_retweet": false}, {"created_at": "Sat Jan 24 01:48:29 +0000 2015", "text": ".@madeleine there must be something in the water @Wellesley. #YouGoGirl", "in_reply_to_screen_name": "madeleine", "retweet_count": 694, "favorite_count": 1804, "source": "Twitter for iPhone", "id_str": "558803493809836033", "is_retweet": false}, {"created_at": "Mon Jul 20 01:51:54 +0000 2015", "text": "Today marks the 167th anniversary of the Seneca Falls Convention\u2014a milestone for women's equality. http://t.co/nOHCOkMoTf", "in_reply_to_screen_name": null, "retweet_count": 1015, "favorite_count": 1513, "source": "Twitter Web Client", "id_str": "622947003790721024", "is_retweet": false}, {"created_at": "Tue Nov 17 18:33:44 +0000 2015", "text": "We've seen a lot of hateful rhetoric from the GOP. But the idea that we'd turn away refugees because of religion is a new low. -H", "in_reply_to_screen_name": null, "retweet_count": 3925, "favorite_count": 5668, "source": "TweetDeck", "id_str": "666685670493192194", "is_retweet": false}, {"created_at": "Sun Dec 20 02:54:36 +0000 2015", "text": ".@BernieSanders only one candidate on stage voted to strip the government of power to regulate Wall Street\u2014and it wasn\u2019t Hillary. #DemDebate", "in_reply_to_screen_name": "BernieSanders", "retweet_count": 590, "favorite_count": 1049, "source": "Twitter Web Client", "id_str": "678408127759388672", "is_retweet": false}, {"created_at": "Fri May 29 20:29:53 +0000 2015", "text": "http://t.co/jQ01sVdqVW", "in_reply_to_screen_name": null, "retweet_count": 1418, "favorite_count": 2878, "source": "TweetDeck", "id_str": "604384185336246272", "is_retweet": false}, {"created_at": "Wed Mar 18 00:06:19 +0000 2015", "text": "Repeal of the ACA would let insurers write their own rules again, and wipe out coverage for 16 million Americans.", "in_reply_to_screen_name": null, "retweet_count": 1719, "favorite_count": 2208, "source": "Twitter Web Client", "id_str": "577984339243331584", "is_retweet": false}, {"created_at": "Thu Sep 24 17:09:11 +0000 2015", "text": "\"A feminist is by definition someone who believes in equal rights.\" \u2014Hillary to Lena Dunham: http://t.co/GEjgbbBH5n http://t.co/n1jSaz4HnX", "in_reply_to_screen_name": null, "retweet_count": 1020, "favorite_count": 1774, "source": "TweetDeck", "id_str": "647095446905688064", "is_retweet": false}, {"created_at": "Tue Apr 21 18:07:57 +0000 2015", "text": "Inspiration fix: Meeting with students at NHTI. #HillaryInNH http://t.co/xWNuOCtn7h", "in_reply_to_screen_name": null, "retweet_count": 256, "favorite_count": 611, "source": "Twitter Web Client", "id_str": "590577726744109056", "is_retweet": false}, {"created_at": "Fri Jun 12 01:39:39 +0000 2015", "text": "Sports fans get game alerts. #Hillary2016 supporters get campaign updates. Sign up to get in the game: http://t.co/KmeRiyHy6N", "in_reply_to_screen_name": null, "retweet_count": 129, "favorite_count": 298, "source": "TweetDeck", "id_str": "609173183061696512", "is_retweet": false}, {"created_at": "Mon Sep 07 17:33:08 +0000 2015", "text": "Now federal contractors can't discriminate against workers who discuss their pay. That's a strong step towards closing the equal pay gap. -H", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 395, "favorite_count": 868, "source": "TweetDeck", "id_str": "640940878396264448", "is_retweet": false}, {"created_at": "Tue Sep 29 00:51:20 +0000 2015", "text": "El Papa Francisco tiene raz\u00f3n. Todos los pa\u00edses...tienen la responsabilidad de prevenir el cambio clim\u00e1tico. http://t.co/SIBx6iUX7l", "in_reply_to_screen_name": null, "retweet_count": 275, "favorite_count": 483, "source": "Twitter Web Client", "id_str": "648661300646674432", "is_retweet": false}, {"created_at": "Sun Oct 11 00:55:09 +0000 2015", "text": "The Republicans are spending millions to try and stop her, but Hillary will never quit fighting for you.\nhttps://t.co/tgwEW7iFQT", "in_reply_to_screen_name": null, "retweet_count": 717, "favorite_count": 1231, "source": "Twitter Web Client", "id_str": "653010917429411840", "is_retweet": false}, {"created_at": "Sun Jun 28 14:53:28 +0000 2015", "text": "Hillary lamenta la declaraci\u00f3n de un candidato a la presidencia del Partido Republicano sobre los inmigrantes. http://t.co/40Tm1pmWiY", "in_reply_to_screen_name": null, "retweet_count": 632, "favorite_count": 673, "source": "Twitter Web Client", "id_str": "615171159265529856", "is_retweet": false}, {"created_at": "Fri Nov 06 02:59:13 +0000 2015", "text": "Backstage at @JimmyKimmelLive\u2014tune in tonight! https://t.co/39BrorRCE2", "in_reply_to_screen_name": null, "retweet_count": 346, "favorite_count": 1193, "source": "Twitter for iPhone", "id_str": "662464223474266112", "is_retweet": false}, {"created_at": "Fri Oct 30 19:38:33 +0000 2015", "text": "\"We have to end the era of mass incarceration.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 493, "favorite_count": 869, "source": "TweetDeck", "id_str": "660178999486844928", "is_retweet": false}, {"created_at": "Sat Aug 15 19:21:38 +0000 2015", "text": "We need to make quality education affordable and available to everyone willing to work for it\u2013without saddling them with decades of debt.", "in_reply_to_screen_name": null, "retweet_count": 881, "favorite_count": 1365, "source": "Twitter for iPhone", "id_str": "632633263505469440", "is_retweet": false}, {"created_at": "Sat Jun 27 21:59:02 +0000 2015", "text": "Have a great weekend. (And don't forget to grab your commemorative buttons: http://t.co/rK2EzbeuHv) #lovewins http://t.co/koBcExuN5K", "in_reply_to_screen_name": null, "retweet_count": 623, "favorite_count": 1629, "source": "Twitter for iPhone", "id_str": "614915868796059648", "is_retweet": false}, {"created_at": "Fri Jul 31 15:56:09 +0000 2015", "text": "Republican candidates have it backwards on the Cuba embargo. http://t.co/BO7QBIBOWr", "in_reply_to_screen_name": null, "retweet_count": 485, "favorite_count": 710, "source": "TweetDeck", "id_str": "627145732710133760", "is_retweet": false}, {"created_at": "Mon Jun 01 14:11:36 +0000 2015", "text": "Happy Pride Month\u2014hoping this June is one for the history books. -H", "in_reply_to_screen_name": null, "retweet_count": 1910, "favorite_count": 3086, "source": "Twitter Web Client", "id_str": "605376152409153536", "is_retweet": false}, {"created_at": "Thu Oct 22 17:37:09 +0000 2015", "text": "American diplomats cannot conduct their work from bunkers. Advancing US interests often means going to unstable regions.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 246, "favorite_count": 465, "source": "Twitter for iPhone", "id_str": "657249343498493952", "is_retweet": false}, {"created_at": "Mon Jul 13 14:48:10 +0000 2015", "text": "\"Let's get back to making decisions that rely on evidence more than ideology.\"", "in_reply_to_screen_name": null, "retweet_count": 474, "favorite_count": 770, "source": "TweetDeck", "id_str": "620605642974167040", "is_retweet": false}, {"created_at": "Mon Jul 20 23:58:12 +0000 2015", "text": "@muzzeltov You're very welcome, @muzzeltov. Hope today, and the cake, are both wonderful!", "in_reply_to_screen_name": "muzzeltov", "retweet_count": 12, "favorite_count": 39, "source": "Twitter Web Client", "id_str": "623280780249313285", "is_retweet": false}, {"created_at": "Sat Jun 13 18:10:28 +0000 2015", "text": "\u201cIt was specifically good to hear Hillary acknowledge income inequality.\u201d \u2014Dino http://t.co/waVdVXafTT", "in_reply_to_screen_name": null, "retweet_count": 224, "favorite_count": 600, "source": "Twitter Web Client", "id_str": "609784918680432642", "is_retweet": false}, {"created_at": "Tue Sep 08 18:59:47 +0000 2015", "text": ".@TheEllenShow, see you at 30 Rock this afternoon. Pantsuit up!", "in_reply_to_screen_name": null, "retweet_count": 465, "favorite_count": 1791, "source": "TweetDeck", "id_str": "641325074960748545", "is_retweet": false}, {"created_at": "Mon Nov 23 23:55:41 +0000 2015", "text": "Proud to #StandWithPP in the fight for affordable health care. Don\u2019t mess with Texas women's health. https://t.co/PnxV6yI5Xv", "in_reply_to_screen_name": null, "retweet_count": 630, "favorite_count": 1311, "source": "TweetDeck", "id_str": "668941018511908864", "is_retweet": false}, {"created_at": "Wed Oct 28 17:31:35 +0000 2015", "text": "\"Paid family leave isn't just good for women.\" \u2014Hillary at #PoliticsAndEggs", "in_reply_to_screen_name": null, "retweet_count": 307, "favorite_count": 747, "source": "TweetDeck", "id_str": "659422271736578049", "is_retweet": false}, {"created_at": "Sat Dec 12 17:03:55 +0000 2015", "text": "If you agree, add your name: https://t.co/RoNBbRbF2m https://t.co/JYdwRbpPeB", "in_reply_to_screen_name": null, "retweet_count": 1116, "favorite_count": 2682, "source": "TweetDeck", "id_str": "675722760929288194", "is_retweet": false}, {"created_at": "Wed Oct 21 01:51:06 +0000 2015", "text": "It\u2019s good for our economy when companies prosper by innovating, creating new products, and investing in workers. https://t.co/karaoU0Zmx", "in_reply_to_screen_name": null, "retweet_count": 368, "favorite_count": 687, "source": "TweetDeck", "id_str": "656648875734794240", "is_retweet": false}, {"created_at": "Wed May 06 16:33:40 +0000 2015", "text": "Sign on if you agree: Fixing our immigration system is the right thing to do. http://t.co/yKeogiYGic http://t.co/SneApRzngS", "in_reply_to_screen_name": null, "retweet_count": 463, "favorite_count": 625, "source": "Twitter Web Client", "id_str": "595989817462267904", "is_retweet": false}, {"created_at": "Thu Nov 19 16:06:36 +0000 2015", "text": "\"Remember: many of these Syrian refugees are fleeing the same terrorists who threaten us.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 1078, "favorite_count": 1655, "source": "TweetDeck", "id_str": "667373417927196672", "is_retweet": false}, {"created_at": "Sat Aug 22 18:15:32 +0000 2015", "text": "Need a better understanding of Hillary's use of email as Secretary of State? @brianefallon is breaking it down now: https://t.co/DgKjPZKv9n", "in_reply_to_screen_name": null, "retweet_count": 439, "favorite_count": 665, "source": "Twitter for iPhone", "id_str": "635153343288090624", "is_retweet": false}, {"created_at": "Fri Oct 09 20:22:33 +0000 2015", "text": "Ever sent a kid to college? Hillary talks about how she and Bill handled dropping Chelsea off the first time:\nhttps://t.co/LcqpYLHPDT", "in_reply_to_screen_name": null, "retweet_count": 286, "favorite_count": 575, "source": "Twitter Web Client", "id_str": "652579924478291968", "is_retweet": false}, {"created_at": "Sat Aug 15 22:42:17 +0000 2015", "text": "\"I\u2019ve been fighting for families and underdogs my entire life and I\u2019m\nnot going to stop now.\"\u2014Hillary in Iowa http://t.co/PtIwh4ef0o", "in_reply_to_screen_name": null, "retweet_count": 734, "favorite_count": 1436, "source": "Twitter Web Client", "id_str": "632683758781661184", "is_retweet": false}, {"created_at": "Thu Apr 16 17:13:21 +0000 2015", "text": "\"The deck is still stacked in favor of those already at the top. And there's something wrong with that.\" https://t.co/MPsw2zm21C", "in_reply_to_screen_name": null, "retweet_count": 553, "favorite_count": 872, "source": "Twitter Web Client", "id_str": "588752048235159552", "is_retweet": false}, {"created_at": "Mon Sep 14 01:15:41 +0000 2015", "text": "23 million Americans suffer from addiction, but only 1 in 10 get the treatment they need. http://t.co/xEy7aZjMTK", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 868, "favorite_count": 1540, "source": "TweetDeck", "id_str": "643231611891392512", "is_retweet": false}, {"created_at": "Sun Aug 02 15:22:21 +0000 2015", "text": "Become a card-carrying member of Team Hillary! Chip in $1 &amp; get your official supporter card: http://t.co/H3ytOKZQVs http://t.co/WLrEEBvfc4", "in_reply_to_screen_name": null, "retweet_count": 158, "favorite_count": 279, "source": "TweetDeck", "id_str": "627862002464083969", "is_retweet": false}, {"created_at": "Tue May 05 22:50:39 +0000 2015", "text": "\u201cI will fight for comprehensive immigration reform and a path to citizenship for you and for your families across our country.\u201d", "in_reply_to_screen_name": null, "retweet_count": 637, "favorite_count": 865, "source": "Twitter Web Client", "id_str": "595722300781101056", "is_retweet": false}, {"created_at": "Sun Nov 01 16:12:25 +0000 2015", "text": "Thank you for the support, @BilldeBlasio. https://t.co/ylEKVsIpnx", "in_reply_to_screen_name": null, "retweet_count": 519, "favorite_count": 1205, "source": "Twitter Web Client", "id_str": "660851898073878528", "is_retweet": false}, {"created_at": "Wed Jul 01 13:31:29 +0000 2015", "text": "New US Embassy in Havana helps us engage Cuban people &amp; build on efforts to support positive change. Good step for US &amp; Cuban people. -H", "in_reply_to_screen_name": null, "retweet_count": 525, "favorite_count": 957, "source": "Twitter Web Client", "id_str": "616237690862858240", "is_retweet": false}, {"created_at": "Thu Nov 19 15:40:37 +0000 2015", "text": "\"Our goal is not to deter or contain ISIS, but to defeat and destroy ISIS.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 856, "source": "TweetDeck", "id_str": "667366876780040194", "is_retweet": false}, {"created_at": "Sun Sep 20 00:52:04 +0000 2015", "text": "It's indisputable that having a Democrat in the White House is good for our economy.", "in_reply_to_screen_name": null, "retweet_count": 1082, "favorite_count": 2763, "source": "TweetDeck", "id_str": "645399995932274688", "is_retweet": false}, {"created_at": "Thu Oct 15 17:00:24 +0000 2015", "text": "\"We cannot grow the economy unless we end the unequal pay that women in the workplace are still suffering under.\" \u2014Hillary at #USHCC", "in_reply_to_screen_name": null, "retweet_count": 399, "favorite_count": 659, "source": "TweetDeck", "id_str": "654703379323551744", "is_retweet": false}, {"created_at": "Thu Jun 04 20:26:43 +0000 2015", "text": "Hillary on Republican efforts to make it harder for American citizens to vote: http://t.co/EyuR6czRh6", "in_reply_to_screen_name": null, "retweet_count": 524, "favorite_count": 630, "source": "TweetDeck", "id_str": "606557717965062144", "is_retweet": false}, {"created_at": "Wed Jul 22 00:31:38 +0000 2015", "text": "Hillary doesn't want to go back to the Wild West of Wall Street. Add your name if you agree: http://t.co/jgFiqeyJp3 http://t.co/jrwIrBsUZO", "in_reply_to_screen_name": null, "retweet_count": 271, "favorite_count": 563, "source": "Twitter Web Client", "id_str": "623651580630450176", "is_retweet": false}, {"created_at": "Wed Jan 21 03:19:04 +0000 2015", "text": "@BarackObama #SOTU pointed way to an economy that works for all. Now we need to step up &amp; deliver for the middle class. #FairShot #FairShare", "in_reply_to_screen_name": "BarackObama", "retweet_count": 2909, "favorite_count": 3846, "source": "Twitter for iPhone", "id_str": "557739125886169088", "is_retweet": false}, {"created_at": "Mon Oct 19 21:11:59 +0000 2015", "text": "Patients who rely on prescription drugs should not have their health and lives put at risk because of price gouging.\nhttps://t.co/HYIi3IAswE", "in_reply_to_screen_name": null, "retweet_count": 470, "favorite_count": 867, "source": "Twitter Web Client", "id_str": "656216246929653761", "is_retweet": false}, {"created_at": "Sat Oct 10 20:12:10 +0000 2015", "text": ".@KatyPerry\u2019s coming to Iowa to support Hillary! RSVP for the Des Moines rally here: http://t.co/6Q3mAppXUq https://t.co/yPQwnegc9j", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 861, "source": "Twitter Web Client", "id_str": "652939703273017344", "is_retweet": false}, {"created_at": "Wed Jul 29 14:15:53 +0000 2015", "text": "We must take action on climate change. http://t.co/cBn7RAh9Fh", "in_reply_to_screen_name": null, "retweet_count": 775, "favorite_count": 1339, "source": "TweetDeck", "id_str": "626395727246327808", "is_retweet": false}, {"created_at": "Sun Nov 08 23:45:47 +0000 2015", "text": "We quantified Hillary\u2019s career\u2014take a look at the numbers. https://t.co/pgyGWnDn08", "in_reply_to_screen_name": null, "retweet_count": 507, "favorite_count": 872, "source": "Twitter Web Client", "id_str": "663502706838020096", "is_retweet": false}, {"created_at": "Sun Jun 14 14:39:15 +0000 2015", "text": "Miss Hillary's speech yesterday? Dive into it here with infographics, stories, &amp; more: http://t.co/ksCoTGH02s http://t.co/t91dYWJ51R", "in_reply_to_screen_name": null, "retweet_count": 543, "favorite_count": 814, "source": "Twitter for iPhone", "id_str": "610094152802541568", "is_retweet": false}, {"created_at": "Tue Jul 21 03:23:49 +0000 2015", "text": "How much do you know about Hillary's plan to raise incomes for everyday Americans? Text \"ECON101\" to take the quiz! \ud83d\udcf1 http://t.co/HUjgi8Vxhl", "in_reply_to_screen_name": null, "retweet_count": 224, "favorite_count": 468, "source": "Twitter Web Client", "id_str": "623332523557437440", "is_retweet": false}, {"created_at": "Sat Jun 13 17:57:42 +0000 2015", "text": "\"Hillary's strong values and her drive\u2014I see where she got it.\u201d \u2014Gretchen http://t.co/ZwSVWmDQ4p", "in_reply_to_screen_name": null, "retweet_count": 138, "favorite_count": 363, "source": "Twitter Web Client", "id_str": "609781705411575808", "is_retweet": false}, {"created_at": "Mon Sep 14 23:44:09 +0000 2015", "text": "Hillary's message to survivors of sexual assault: We're with you.\nhttps://t.co/qhLpgr3Iac", "in_reply_to_screen_name": null, "retweet_count": 1001, "favorite_count": 1683, "source": "Twitter Web Client", "id_str": "643570965247492096", "is_retweet": false}, {"created_at": "Mon Dec 07 23:14:12 +0000 2015", "text": "This is reprehensible, prejudiced and divisive. @RealDonaldTrump, you don't get it. This makes us less safe. -H https://t.co/SjAqL0clHd", "in_reply_to_screen_name": null, "retweet_count": 5176, "favorite_count": 6514, "source": "TweetDeck", "id_str": "674004008684523520", "is_retweet": false}, {"created_at": "Mon Mar 09 21:38:18 +0000 2015", "text": "Excited to share the #NoCeilings data. Hope you will dive in &amp; use it, share it, learn from it, &amp; get motivated: http://t.co/GLCVDR69bC", "in_reply_to_screen_name": null, "retweet_count": 1123, "favorite_count": 1350, "source": "Twitter Web Client", "id_str": "575047986356551680", "is_retweet": false}, {"created_at": "Thu Apr 16 23:34:26 +0000 2015", "text": "Here's how we're celebrating #NationalHighFiveDay. http://t.co/iASFZacQ17", "in_reply_to_screen_name": null, "retweet_count": 1580, "favorite_count": 3244, "source": "Twitter Web Client", "id_str": "588847953114222592", "is_retweet": false}, {"created_at": "Thu Apr 09 03:24:35 +0000 2015", "text": "Praying for #WalterScott's family. Heartbreaking &amp; too familiar. We can do better - rebuild trust, reform justice system, respect all lives.", "in_reply_to_screen_name": null, "retweet_count": 7415, "favorite_count": 10540, "source": "Twitter for iPhone", "id_str": "586006768834215936", "is_retweet": false}, {"created_at": "Sun Oct 25 03:37:02 +0000 2015", "text": "\"Companies that ship jobs and profits overseas shouldn\u2019t get a tax break\u2014you should.\" \u2014Hillary at #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 344, "favorite_count": 807, "source": "TweetDeck", "id_str": "658125087141462017", "is_retweet": false}, {"created_at": "Thu Oct 22 14:42:38 +0000 2015", "text": "\"We need leadership at home to match our leadership abroad. Leadership that puts national security ahead of politics and ideology.\" \u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 329, "favorite_count": 548, "source": "TweetDeck", "id_str": "657205426514194432", "is_retweet": false}, {"created_at": "Sun Dec 27 19:30:15 +0000 2015", "text": "Hot peppers and selfies: 48 hours on the campaign trail. https://t.co/8UzIG88ZJ8 https://t.co/aKkJPASKKt", "in_reply_to_screen_name": null, "retweet_count": 440, "favorite_count": 1560, "source": "TweetDeck", "id_str": "681195405393051648", "is_retweet": false}, {"created_at": "Tue Nov 03 18:27:42 +0000 2015", "text": "When unions are strong, America is strong. Thank you, @AFSCME. https://t.co/wWVOq9WEZe", "in_reply_to_screen_name": null, "retweet_count": 492, "favorite_count": 834, "source": "TweetDeck", "id_str": "661610721625554944", "is_retweet": false}, {"created_at": "Thu May 07 17:50:30 +0000 2015", "text": "Hillary visited Nevada this week to talk with DREAMers about immigration reform. See photos: http://t.co/LQH31aV3FK http://t.co/LBG2L5ejkq", "in_reply_to_screen_name": null, "retweet_count": 317, "favorite_count": 549, "source": "TweetDeck", "id_str": "596371541975236608", "is_retweet": false}, {"created_at": "Thu Oct 08 22:22:58 +0000 2015", "text": ".@NRA Stop taking advantage of responsible gun owners who want commonsense reform\u2014including many of your own members.", "in_reply_to_screen_name": "NRA", "retweet_count": 602, "favorite_count": 1192, "source": "Twitter Web Client", "id_str": "652247844217311232", "is_retweet": false}, {"created_at": "Mon May 18 13:06:48 +0000 2015", "text": "#Hillary2016 is ramping up one person, one conversation, one community at a time. Volunteer: http://t.co/awUa1REXCa http://t.co/Wc8zaPTKuY", "in_reply_to_screen_name": null, "retweet_count": 216, "favorite_count": 366, "source": "Twitter Web Client", "id_str": "600286414333435904", "is_retweet": false}, {"created_at": "Thu Sep 17 17:19:06 +0000 2015", "text": "Well said, @jimmyfallon. http://t.co/ahhj6gC6BL", "in_reply_to_screen_name": null, "retweet_count": 569, "favorite_count": 1507, "source": "TweetDeck", "id_str": "644561227771985920", "is_retweet": false}, {"created_at": "Sun Jun 14 17:48:44 +0000 2015", "text": "Can't be in Des Moines to see Hillary at the Iowa launch party? Watch it live here: http://t.co/t2xyeQgUjv https://t.co/4fc0p4h6nn", "in_reply_to_screen_name": null, "retweet_count": 145, "favorite_count": 247, "source": "Twitter Web Client", "id_str": "610141835714015232", "is_retweet": false}, {"created_at": "Tue Oct 06 14:05:57 +0000 2015", "text": "As Republicans spend millions of taxpayer dollars fighting Hillary, she does what she's always done: fight for you.\nhttps://t.co/jIEaUbIU5Q", "in_reply_to_screen_name": null, "retweet_count": 630, "favorite_count": 919, "source": "Twitter Web Client", "id_str": "651397989030752257", "is_retweet": false}, {"created_at": "Mon Oct 19 22:23:58 +0000 2015", "text": "The world is a better place because Hillary was Secretary of State. Here\u2019s why: https://t.co/zUEcuPNekw https://t.co/2VIbnulOD7", "in_reply_to_screen_name": null, "retweet_count": 687, "favorite_count": 1593, "source": "TweetDeck", "id_str": "656234361038045184", "is_retweet": false}, {"created_at": "Thu Oct 22 17:45:25 +0000 2015", "text": "America must pursue a smart brand of leadership that integrates and balances the tools of diplomacy, development, and defense.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 278, "favorite_count": 484, "source": "Twitter for iPhone", "id_str": "657251422967373825", "is_retweet": false}, {"created_at": "Thu Oct 15 18:30:21 +0000 2015", "text": "\"Yo estoy contigo. That's a promise.\" \u2014Hillary #LatinosForHillary", "in_reply_to_screen_name": null, "retweet_count": 344, "favorite_count": 547, "source": "TweetDeck", "id_str": "654726018373042178", "is_retweet": false}, {"created_at": "Tue Sep 15 23:54:19 +0000 2015", "text": "I used to love reading to @ChelseaClinton, and now she's written her own book. I\u2019m so proud. Pick up #ItsYourWorld today! -H", "in_reply_to_screen_name": null, "retweet_count": 347, "favorite_count": 1362, "source": "TweetDeck", "id_str": "643935909713444864", "is_retweet": false}, {"created_at": "Tue Jun 16 13:24:06 +0000 2015", "text": "Hillary in New Hampshire: http://t.co/Zy8GPtT56D", "in_reply_to_screen_name": null, "retweet_count": 353, "favorite_count": 717, "source": "TweetDeck", "id_str": "610800015221596161", "is_retweet": false}, {"created_at": "Sun Dec 27 16:02:29 +0000 2015", "text": "This dad is doing everything he can to make this country a better place for his daughters. Read his letter to them: https://t.co/bg4dh3ZGjj", "in_reply_to_screen_name": null, "retweet_count": 467, "favorite_count": 954, "source": "Twitter for iPhone", "id_str": "681143120680062976", "is_retweet": false}, {"created_at": "Wed Sep 09 13:51:07 +0000 2015", "text": "\"We can\u2019t stop the world from changing, but we can shape the changes...by leading with strength, smarts &amp; commitment to our values.\"\u2014Hillary", "in_reply_to_screen_name": null, "retweet_count": 577, "favorite_count": 877, "source": "TweetDeck", "id_str": "641609783745880064", "is_retweet": false}, {"created_at": "Mon May 18 21:20:09 +0000 2015", "text": "\u2714\ufe0f Wake up\n\u2714\ufe0f Go to the office\n\u2714\ufe0f Elect #Hillary2016\nSound like work you want to be doing? Go here \u2192 http://t.co/w2mC2dqJdH", "in_reply_to_screen_name": null, "retweet_count": 333, "favorite_count": 939, "source": "TweetDeck", "id_str": "600410569129205760", "is_retweet": false}, {"created_at": "Tue May 05 23:21:00 +0000 2015", "text": "\"You are the kind of student that every family &amp; every community should be proud of.\"\u2014Hillary to Rancho HS student &amp; DACA recipient Betsaida", "in_reply_to_screen_name": null, "retweet_count": 329, "favorite_count": 516, "source": "Twitter Web Client", "id_str": "595729940227727361", "is_retweet": false}, {"created_at": "Thu Nov 19 15:39:13 +0000 2015", "text": "We \"can\u2019t sacrifice our values or turn our backs on those in need. We must choose resolve\u2014and we must lead the world to meet this threat.\"", "in_reply_to_screen_name": null, "retweet_count": 450, "favorite_count": 846, "source": "TweetDeck", "id_str": "667366525427449856", "is_retweet": false}, {"created_at": "Wed Oct 07 15:41:06 +0000 2015", "text": "Sorry about the mean tweets you\u2019ve been getting, @KevinMcCarthy\u2014been there! https://t.co/HAwL2D56xu", "in_reply_to_screen_name": null, "retweet_count": 947, "favorite_count": 1335, "source": "TweetDeck", "id_str": "651784323130093568", "is_retweet": false}, {"created_at": "Mon Oct 26 20:26:55 +0000 2015", "text": "It's her \ud83d\udc47 birthday! https://t.co/OokdGojmJJ https://t.co/3p34BYrX3K", "in_reply_to_screen_name": null, "retweet_count": 1049, "favorite_count": 3458, "source": "TweetDeck", "id_str": "658741619345199104", "is_retweet": false}, {"created_at": "Mon Mar 16 19:59:46 +0000 2015", "text": "Congressional trifecta against women today: 1) Blocking great nominee, 1st African American woman AG, for longer than any AG in 30 years\u2026", "in_reply_to_screen_name": null, "retweet_count": 2876, "favorite_count": 3003, "source": "Twitter Web Client", "id_str": "577559904774459392", "is_retweet": false}, {"created_at": "Wed Sep 09 13:56:00 +0000 2015", "text": "Hillary on Iran: http://t.co/oOBL6A8sQq", "in_reply_to_screen_name": null, "retweet_count": 428, "favorite_count": 785, "source": "TweetDeck", "id_str": "641611014140751872", "is_retweet": false}, {"created_at": "Thu Sep 17 21:03:19 +0000 2015", "text": "\"Don\u2019t attack women\u2019s health care. And don\u2019t shut down the government.\" Hillary's message to Republicans: http://t.co/L7Uyb3vYmt", "in_reply_to_screen_name": null, "retweet_count": 1721, "favorite_count": 2644, "source": "TweetDeck", "id_str": "644617650719576065", "is_retweet": false}, {"created_at": "Thu Nov 19 23:59:00 +0000 2015", "text": "Hillary Clinton called out Republicans for slamming the door on Syrian refugees: \u201cWe\u2019re better than that.\u201d https://t.co/qIFY9wQu0o", "in_reply_to_screen_name": null, "retweet_count": 732, "favorite_count": 1568, "source": "Twitter Web Client", "id_str": "667492299182575616", "is_retweet": false}, {"created_at": "Wed Dec 09 15:59:03 +0000 2015", "text": "Take the \u201cTrump or Not Trump\u201d quiz\u2014even if you get every answer right, America still loses. https://t.co/54iVNconbj", "in_reply_to_screen_name": null, "retweet_count": 587, "favorite_count": 1000, "source": "TweetDeck", "id_str": "674619275458379776", "is_retweet": false}, {"created_at": "Sun Nov 01 20:55:04 +0000 2015", "text": "An inside look at an issue that will shape our economy for years to come (yeah, it\u2019s that important). https://t.co/88VTl6B8ec", "in_reply_to_screen_name": null, "retweet_count": 268, "favorite_count": 381, "source": "Twitter Web Client", "id_str": "660923032186302464", "is_retweet": false}, {"created_at": "Thu Oct 08 00:05:17 +0000 2015", "text": "It\u2019s time to end discrimination against LGBT Americans once and for all. http://t.co/9gcJwDFS1Y", "in_reply_to_screen_name": null, "retweet_count": 700, "favorite_count": 1389, "source": "TweetDeck", "id_str": "651911204328341504", "is_retweet": false}, {"created_at": "Tue Nov 03 13:05:32 +0000 2015", "text": "Watch our new ad\u2014why Hillary is working to prevent gun violence:\nhttps://t.co/S7RuSmwzfi", "in_reply_to_screen_name": null, "retweet_count": 574, "favorite_count": 959, "source": "Twitter Web Client", "id_str": "661529645603426304", "is_retweet": false}, {"created_at": "Sun Aug 30 23:11:40 +0000 2015", "text": "We must expand access to health care &amp; education in rural areas. That\u2019s the key to strong families &amp; strong futures. http://t.co/q9Qjhvyrtp", "in_reply_to_screen_name": null, "retweet_count": 413, "favorite_count": 740, "source": "Twitter Web Client", "id_str": "638126970908377089", "is_retweet": false}, {"created_at": "Sun Oct 25 03:40:16 +0000 2015", "text": "\"Yes\u2014Black Lives Matter.\" \u2014Hillary at #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 1173, "source": "TweetDeck", "id_str": "658125900286926848", "is_retweet": false}, {"created_at": "Thu Oct 29 02:20:46 +0000 2015", "text": "#GOPdebate https://t.co/rBT90JvCmM", "in_reply_to_screen_name": null, "retweet_count": 12318, "favorite_count": 16118, "source": "TweetDeck", "id_str": "659555444202070016", "is_retweet": false}, {"created_at": "Fri Jun 26 01:36:07 +0000 2015", "text": "#ChelseasMom2016 https://t.co/0E3Fc23LKa", "in_reply_to_screen_name": null, "retweet_count": 441, "favorite_count": 666, "source": "Twitter Web Client", "id_str": "614245726047092736", "is_retweet": false}, {"created_at": "Mon Aug 31 15:03:47 +0000 2015", "text": "Read Hillary and @SenatorBaldwin\u2019s new op-ed on a bill that will help restore Americans' trust in government: http://t.co/XkUGfJqF3c", "in_reply_to_screen_name": null, "retweet_count": 285, "favorite_count": 376, "source": "TweetDeck", "id_str": "638366581547003904", "is_retweet": false}, {"created_at": "Thu Sep 17 01:44:14 +0000 2015", "text": "Los estadounidenses que trabajan duro cada d\u00eda deber\u00edan de poder salir adelante. Nuestro desaf\u00edo econ\u00f3mico es aumentar sus salarios.", "in_reply_to_screen_name": null, "retweet_count": 873, "favorite_count": 1438, "source": "Twitter Web Client", "id_str": "644325959064264704", "is_retweet": false}, {"created_at": "Sun Sep 20 23:40:51 +0000 2015", "text": "On September 20, 1973, tennis star @BillieJeanKing defeated Bobby Riggs in a match titled \u201cThe Battle of the Sexes.\u201d http://t.co/N4MsCT0fn1", "in_reply_to_screen_name": null, "retweet_count": 568, "favorite_count": 1060, "source": "Twitter Web Client", "id_str": "645744462661087232", "is_retweet": false}, {"created_at": "Sat Jul 11 18:40:51 +0000 2015", "text": "With great pantsuits comes great responsibility: a transformation inspired by Comic Con. #SDCC http://t.co/6VgUdt7LAP", "in_reply_to_screen_name": null, "retweet_count": 817, "favorite_count": 1757, "source": "TweetDeck", "id_str": "619939427113156610", "is_retweet": false}, {"created_at": "Thu Oct 22 21:54:20 +0000 2015", "text": "If you're standing with Hillary today, let her know: https://t.co/6CRK1JCS8t", "in_reply_to_screen_name": null, "retweet_count": 1359, "favorite_count": 3605, "source": "TweetDeck", "id_str": "657314068672487426", "is_retweet": false}, {"created_at": "Wed Apr 22 16:31:29 +0000 2015", "text": "Hillary just wrapped up two whirlwind days in NH\u2014see the photos from her @HillaryforNH trip: https://t.co/xODUVgJkER http://t.co/1QqlRJklcQ", "in_reply_to_screen_name": null, "retweet_count": 331, "favorite_count": 755, "source": "Twitter Web Client", "id_str": "590915837743214593", "is_retweet": false}, {"created_at": "Wed Dec 16 02:06:19 +0000 2015", "text": "Palabras odiosas y propuestas extremas van en contra de nuestros valores. Necesitamos liderazgo serio. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 400, "favorite_count": 644, "source": "TweetDeck", "id_str": "676946425226379269", "is_retweet": false}, {"created_at": "Sat Oct 17 17:52:38 +0000 2015", "text": "What needs to change on Wall Street, according to the \u201cEconomikes.\u201d http://t.co/aJfimOIB9C", "in_reply_to_screen_name": null, "retweet_count": 227, "favorite_count": 336, "source": "Twitter Web Client", "id_str": "655441302654459904", "is_retweet": false}, {"created_at": "Tue Nov 10 20:15:50 +0000 2015", "text": "Vets deserve better. My plan will address issues like this by upgrading VA technology &amp; requiring accountability. https://t.co/m3Zok741f1 -H", "in_reply_to_screen_name": null, "retweet_count": 219, "favorite_count": 308, "source": "TweetDeck", "id_str": "664174649773715456", "is_retweet": false}, {"created_at": "Tue Jul 07 13:05:48 +0000 2015", "text": "Big (and small) support for Hillary in New Hampshire. http://t.co/nD0kbNcFxn", "in_reply_to_screen_name": null, "retweet_count": 240, "favorite_count": 801, "source": "Twitter Web Client", "id_str": "618405555154120704", "is_retweet": false}, {"created_at": "Sun Oct 25 03:41:12 +0000 2015", "text": "Why Hillary fights to prevent gun violence: \"You should be safe when you go to school, when you go to the movies, when you go to church.\"", "in_reply_to_screen_name": null, "retweet_count": 507, "favorite_count": 1210, "source": "TweetDeck", "id_str": "658126133192474624", "is_retweet": false}, {"created_at": "Tue Oct 20 19:46:48 +0000 2015", "text": "Before Hillary was running for president, Republicans had the nicest things to say about her. https://t.co/uRr2doIX4K", "in_reply_to_screen_name": null, "retweet_count": 930, "favorite_count": 1262, "source": "TweetDeck", "id_str": "656557196361072640", "is_retweet": false}, {"created_at": "Thu Oct 22 23:52:26 +0000 2015", "text": "Hillary's email use can be summed up in four sentences: https://t.co/N8ba4DBSBx #BenghaziCommittee", "in_reply_to_screen_name": null, "retweet_count": 476, "favorite_count": 885, "source": "TweetDeck", "id_str": "657343789279911936", "is_retweet": false}, {"created_at": "Fri Aug 07 02:25:04 +0000 2015", "text": "It's past time for politicians to respect women's right to make their own health decisions. http://t.co/nDxYoPFctb", "in_reply_to_screen_name": null, "retweet_count": 2982, "favorite_count": 4315, "source": "Twitter Web Client", "id_str": "629478332321660929", "is_retweet": false}, {"created_at": "Mon Nov 30 13:09:23 +0000 2015", "text": "We should be supporting Planned Parenthood\u2014not attacking it.\nhttps://t.co/h8u9LYGMwc", "in_reply_to_screen_name": null, "retweet_count": 871, "favorite_count": 1881, "source": "Twitter Web Client", "id_str": "671315083645988864", "is_retweet": false}, {"created_at": "Sat Oct 24 15:24:03 +0000 2015", "text": "As a military spouse, I stand with Hillary on national security\u2014&amp; she'll make sure I won't have to worry about getting fired for who I love.", "in_reply_to_screen_name": null, "retweet_count": 192, "favorite_count": 607, "source": "TweetDeck", "id_str": "657940623530438656", "is_retweet": false}, {"created_at": "Mon Nov 02 18:34:42 +0000 2015", "text": "\u201cWe need to end private prisons and detention centers once and for all.\u201d \u2014Hillary in Atlanta https://t.co/f6S3zQ3CFQ", "in_reply_to_screen_name": null, "retweet_count": 723, "favorite_count": 1375, "source": "TweetDeck", "id_str": "661250093262204929", "is_retweet": false}, {"created_at": "Thu May 21 18:07:47 +0000 2015", "text": "I want to say: Equality for women is so important to me. Hillary's deep understanding\u2014to live it and to understand it\u2014means a lot to me.", "in_reply_to_screen_name": null, "retweet_count": 225, "favorite_count": 635, "source": "TweetDeck", "id_str": "601449321318354944", "is_retweet": false}, {"created_at": "Sat Jun 20 16:34:56 +0000 2015", "text": "Watch live: Hillary on the Charleston massacre and confronting the unacceptable realities of racism in America. http://t.co/XEt40Ucd4A", "in_reply_to_screen_name": null, "retweet_count": 384, "favorite_count": 510, "source": "Twitter Web Client", "id_str": "612297591024406528", "is_retweet": false}, {"created_at": "Wed Apr 01 15:33:50 +0000 2015", "text": "Like IN law, AR bill goes beyond protecting religion, would permit unfair discrimination against #LGBT Americans. I urge Governor to veto.", "in_reply_to_screen_name": null, "retweet_count": 3435, "favorite_count": 5364, "source": "Twitter Web Client", "id_str": "583291187559284736", "is_retweet": false}, {"created_at": "Sun Oct 11 15:55:21 +0000 2015", "text": "40 years ago, I married the cute guy from the library. Happy anniversary, @billclinton\u2014you've still got it! -H http://t.co/H6AaXAKdek", "in_reply_to_screen_name": null, "retweet_count": 7795, "favorite_count": 19658, "source": "Twitter Web Client", "id_str": "653237461024382976", "is_retweet": false}, {"created_at": "Tue Sep 22 00:37:36 +0000 2015", "text": "Every child deserves the opportunity to succeed, no matter who their parents are or where they\u2019re from.\nhttps://t.co/nAH4oLRfLo", "in_reply_to_screen_name": null, "retweet_count": 902, "favorite_count": 1594, "source": "Twitter Web Client", "id_str": "646121130617470976", "is_retweet": false}, {"created_at": "Tue Dec 01 02:07:08 +0000 2015", "text": "China is investing $180 billion to expand broadband internet access. We cannot be left behind. https://t.co/2mIZAWp1Di", "in_reply_to_screen_name": null, "retweet_count": 799, "favorite_count": 2085, "source": "Twitter Web Client", "id_str": "671510813987991553", "is_retweet": false}, {"created_at": "Wed Jul 08 14:00:53 +0000 2015", "text": "Kayakers for Hillary. http://t.co/CgLOXQUBJl http://t.co/VpLom6p92f", "in_reply_to_screen_name": null, "retweet_count": 183, "favorite_count": 449, "source": "TweetDeck", "id_str": "618781805643231232", "is_retweet": false}, {"created_at": "Wed May 13 23:36:52 +0000 2015", "text": "If you agree that these priorities are backward, add your name: http://t.co/ek8ZuAKtEm http://t.co/Z4rerM4Nre", "in_reply_to_screen_name": null, "retweet_count": 767, "favorite_count": 1034, "source": "TweetDeck", "id_str": "598633036910108672", "is_retweet": false}, {"created_at": "Tue Jun 30 14:20:08 +0000 2015", "text": "Cheers! Grab yours: http://t.co/V4gNWX8wo6 https://t.co/ZuEOp27Ept", "in_reply_to_screen_name": null, "retweet_count": 96, "favorite_count": 270, "source": "TweetDeck", "id_str": "615887546417942529", "is_retweet": false}, {"created_at": "Thu Jun 04 23:40:12 +0000 2015", "text": "Read Hillary's full speech on strengthening our rights, our Constitution, and our democracy: http://t.co/P1tm1GJBNk http://t.co/F2XWArua3U", "in_reply_to_screen_name": null, "retweet_count": 504, "favorite_count": 626, "source": "TweetDeck", "id_str": "606606406205210624", "is_retweet": false}, {"created_at": "Fri Oct 30 20:19:17 +0000 2015", "text": "Race still plays a role in who gets ahead and who gets held back. Hillary will fight to change that. Join her: https://t.co/eG2ciTEQ4K", "in_reply_to_screen_name": null, "retweet_count": 322, "favorite_count": 617, "source": "TweetDeck", "id_str": "660189248260321280", "is_retweet": false}, {"created_at": "Wed Nov 11 18:38:27 +0000 2015", "text": "The idea of tracking down and deporting 11 million people is absurd, inhumane, and un-American. No, Trump. -H https://t.co/uZyqAWXUdh", "in_reply_to_screen_name": null, "retweet_count": 1354, "favorite_count": 2107, "source": "TweetDeck", "id_str": "664512527947005952", "is_retweet": false}, {"created_at": "Tue Oct 20 02:04:02 +0000 2015", "text": "If you\u2019re a progressive who believes in getting things done, sign up for your free sticker: https://t.co/r51BIC475X https://t.co/Xhx536rMGr", "in_reply_to_screen_name": null, "retweet_count": 318, "favorite_count": 756, "source": "TweetDeck", "id_str": "656289741873156096", "is_retweet": false}, {"created_at": "Tue Aug 11 01:55:01 +0000 2015", "text": "Agree that every student should be able to afford public university tuition without taking out a loan? Add your name: http://t.co/eU9R8254o9", "in_reply_to_screen_name": null, "retweet_count": 740, "favorite_count": 1525, "source": "TweetDeck", "id_str": "630920321990795264", "is_retweet": false}, {"created_at": "Mon Aug 24 01:24:01 +0000 2015", "text": "We need to help students who are also parents. When you help parents get an education, you're also helping their children.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1143, "favorite_count": 1772, "source": "Twitter Web Client", "id_str": "635623562968190976", "is_retweet": false}, {"created_at": "Sun Jul 26 16:33:40 +0000 2015", "text": "Later that night, she joined us to talk about the big questions that really need to be asked\u2014for Adam, and for everyone fighting for a cure.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 64, "favorite_count": 174, "source": "Twitter Web Client", "id_str": "625343237490933760", "is_retweet": false}, {"created_at": "Fri Sep 04 21:19:51 +0000 2015", "text": "Hillary est\u00e1 a punto de hablar en San Juan, Puerto Rico. V\u00e9anlo aqu\u00ed: http://t.co/6F9CpL2pO2", "in_reply_to_screen_name": null, "retweet_count": 153, "favorite_count": 264, "source": "TweetDeck", "id_str": "639910771904905216", "is_retweet": false}, {"created_at": "Tue Dec 22 20:34:39 +0000 2015", "text": ".@Quora asked: \"How close are we to a cure for Alzheimer\u2019s?\" A cure could be possible by 2025. https://t.co/0tVmUN1cOf", "in_reply_to_screen_name": null, "retweet_count": 274, "favorite_count": 649, "source": "TweetDeck", "id_str": "679399674147684353", "is_retweet": false}, {"created_at": "Fri Aug 21 14:04:24 +0000 2015", "text": "The determination to never quit knows no gender. I'm so proud of these soldiers. -H  https://t.co/Dm31KZxz0K", "in_reply_to_screen_name": null, "retweet_count": 538, "favorite_count": 1308, "source": "Twitter Web Client", "id_str": "634727755993776128", "is_retweet": false}, {"created_at": "Thu Sep 17 02:25:26 +0000 2015", "text": "Tired of the #GOPdebate? \n\nWe asked supporters what they were doing instead. \n\nHere were some of our favorites: http://t.co/nzKXbcOdsf", "in_reply_to_screen_name": null, "retweet_count": 612, "favorite_count": 1369, "source": "Twitter Web Client", "id_str": "644336327538946048", "is_retweet": false}, {"created_at": "Fri Aug 07 03:02:48 +0000 2015", "text": "Hillary Clinton sabe que la econom\u00eda favorece a aquellos con m\u00e1s recursos. La agenda Republicana solo empeorar\u00eda el problema.", "in_reply_to_screen_name": null, "retweet_count": 628, "favorite_count": 1137, "source": "Twitter Web Client", "id_str": "629487827777134592", "is_retweet": false}, {"created_at": "Wed Apr 29 22:14:10 +0000 2015", "text": "It's time. http://t.co/4qjj5PU2uQ http://t.co/TyloYKuKWZ", "in_reply_to_screen_name": null, "retweet_count": 955, "favorite_count": 1469, "source": "Twitter Web Client", "id_str": "593538792990081024", "is_retweet": false}, {"created_at": "Sat Oct 03 21:06:59 +0000 2015", "text": "Hillary on the epidemic of gun violence. http://t.co/FkAaVf0WpC", "in_reply_to_screen_name": null, "retweet_count": 1261, "favorite_count": 2122, "source": "Twitter Web Client", "id_str": "650416782621155328", "is_retweet": false}, {"created_at": "Wed Dec 16 15:48:43 +0000 2015", "text": "Hillary wants to fix our immigration system so we can keep families together. https://t.co/mBADwtR8Ue", "in_reply_to_screen_name": null, "retweet_count": 738, "favorite_count": 1766, "source": "TweetDeck", "id_str": "677153390145634304", "is_retweet": false}, {"created_at": "Thu Dec 10 01:01:16 +0000 2015", "text": ".@Glassdoor\u2019s \u2018Best places to work\u2019 have one big thing in common\u2013and it\u2019s not just free coffee. #BPTW https://t.co/h870FKts41", "in_reply_to_screen_name": null, "retweet_count": 225, "favorite_count": 345, "source": "TweetDeck", "id_str": "674755728918364162", "is_retweet": false}, {"created_at": "Tue Sep 29 00:35:57 +0000 2015", "text": "During a Facebook Q&amp;A, Hillary responded to Jeb's claim that Democrats appeal to African Americans with \"free stuff\": http://t.co/o7YVMNXkru", "in_reply_to_screen_name": null, "retweet_count": 1136, "favorite_count": 1726, "source": "Twitter Web Client", "id_str": "648657431799668736", "is_retweet": false}, {"created_at": "Thu Dec 17 17:05:19 +0000 2015", "text": "Hillary on that feeling when you realize your daughter is starting to sound like you.\nhttps://t.co/KpHwepocn5", "in_reply_to_screen_name": null, "retweet_count": 244, "favorite_count": 620, "source": "Twitter Web Client", "id_str": "677535053706952708", "is_retweet": false}, {"created_at": "Tue May 12 13:30:09 +0000 2015", "text": "High five: It's been one month since #Hillary2016 launched! Join the campaign: http://t.co/66YHxzooWN http://t.co/ISXYKLuQj2", "in_reply_to_screen_name": null, "retweet_count": 304, "favorite_count": 637, "source": "Twitter Web Client", "id_str": "598117964211171329", "is_retweet": false}, {"created_at": "Mon Aug 24 01:15:49 +0000 2015", "text": "Millions of borrowers who already have student debt should be able to refinance it at lower rates.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1016, "favorite_count": 1838, "source": "Twitter Web Client", "id_str": "635621500347744256", "is_retweet": false}, {"created_at": "Sun Jul 26 16:16:43 +0000 2015", "text": "We\u2019re grateful for supportive teachers. In junior high, his PE teacher called &amp; asked if Adam would go for cross country.", "in_reply_to_screen_name": null, "retweet_count": 52, "favorite_count": 190, "source": "Twitter Web Client", "id_str": "625338970029838336", "is_retweet": false}, {"created_at": "Tue Sep 22 19:51:42 +0000 2015", "text": "The uninsured rate is the lowest in decades, but prescription costs, out-of-pocket costs, and premiums are growing. We need to do better.", "in_reply_to_screen_name": null, "retweet_count": 302, "favorite_count": 645, "source": "TweetDeck", "id_str": "646411567119106048", "is_retweet": false}, {"created_at": "Fri Jul 24 17:47:30 +0000 2015", "text": "Watch live: Hillary is sharing her plan to take on \"quarterly capitalism\" and boost long-term economic growth \u2192 http://t.co/dvRILRtunV", "in_reply_to_screen_name": null, "retweet_count": 129, "favorite_count": 193, "source": "TweetDeck", "id_str": "624637043289759744", "is_retweet": false}, {"created_at": "Mon Jul 27 22:03:16 +0000 2015", "text": "Hillary has a plan to take our renewable energy production to the next level. This is just step one: http://t.co/kFlFJPtMN7", "in_reply_to_screen_name": null, "retweet_count": 568, "favorite_count": 861, "source": "Twitter Web Client", "id_str": "625788571320995840", "is_retweet": false}, {"created_at": "Tue Oct 27 22:35:01 +0000 2015", "text": "Cosign, @POTUS. https://t.co/NEBLEl7hkt", "in_reply_to_screen_name": null, "retweet_count": 3963, "favorite_count": 5959, "source": "TweetDeck", "id_str": "659136244471975936", "is_retweet": false}, {"created_at": "Thu Aug 27 21:54:26 +0000 2015", "text": "We need commonsense reforms to keep weapons out of the hands of criminals, the violently unstable, domestic abusers, and terrorists.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 876, "favorite_count": 1438, "source": "TweetDeck", "id_str": "637020371703734273", "is_retweet": false}, {"created_at": "Wed Sep 02 00:25:08 +0000 2015", "text": "Reviewing notes on the way to the conference, Hillary knew the #Beijing20 speech would be her most important yet:\nhttps://t.co/sBIqqeWRyw", "in_reply_to_screen_name": null, "retweet_count": 386, "favorite_count": 569, "source": "Twitter Web Client", "id_str": "638870233810251776", "is_retweet": false}, {"created_at": "Sun May 10 21:50:56 +0000 2015", "text": "Share Hillary's Mother's Day video with a mom you love: https://t.co/VINeiM9RC7", "in_reply_to_screen_name": null, "retweet_count": 281, "favorite_count": 390, "source": "Twitter Web Client", "id_str": "597519214459678721", "is_retweet": false}, {"created_at": "Wed Aug 26 01:31:21 +0000 2015", "text": "Before midnight: Last chance to pitch in and have your name added to the new Donor Wall at HQ!\u2192http://t.co/YK25oJk0RY http://t.co/GQq3Xcr9Pd", "in_reply_to_screen_name": null, "retweet_count": 238, "favorite_count": 547, "source": "Twitter Web Client", "id_str": "636350183287209984", "is_retweet": false}, {"created_at": "Sat Dec 19 17:03:50 +0000 2015", "text": "Our values set us apart. Now is not the time to abandon them. https://t.co/q8KvfT10tF", "in_reply_to_screen_name": null, "retweet_count": 586, "favorite_count": 1272, "source": "Twitter Web Client", "id_str": "678259457864912896", "is_retweet": false}, {"created_at": "Sat Dec 26 20:20:06 +0000 2015", "text": "\"If you would like help with your campaign, I am available and I would work for candy.\" https://t.co/1lvbW2W98b", "in_reply_to_screen_name": null, "retweet_count": 426, "favorite_count": 1257, "source": "Twitter for iPhone", "id_str": "680845561864531968", "is_retweet": false}, {"created_at": "Sun Sep 27 17:05:37 +0000 2015", "text": "You should not have to be the grandchild of a former president to know that you can make it in America.\nhttps://t.co/4BzHfPli2x", "in_reply_to_screen_name": null, "retweet_count": 570, "favorite_count": 1138, "source": "Twitter Web Client", "id_str": "648181714057998336", "is_retweet": false}, {"created_at": "Fri Aug 28 01:54:53 +0000 2015", "text": "\"We've got to come to terms with hard truths about guns in America.\"\nhttps://t.co/Wf2SFrAZKb", "in_reply_to_screen_name": null, "retweet_count": 1102, "favorite_count": 1823, "source": "Twitter Web Client", "id_str": "637080882516389888", "is_retweet": false}, {"created_at": "Wed May 13 13:08:51 +0000 2015", "text": "You + #Hillary2016 = a winning team. Sign up to volunteer: http://t.co/rmgK56k2lQ http://t.co/ZlBO3kd5JF", "in_reply_to_screen_name": null, "retweet_count": 191, "favorite_count": 366, "source": "TweetDeck", "id_str": "598474990909038592", "is_retweet": false}, {"created_at": "Fri Jun 12 14:33:09 +0000 2015", "text": "Everyone deserves a champion in their corner. That's been my life's work\u2014and it's why I'm running for president. -H http://t.co/gh11L4BLnL", "in_reply_to_screen_name": null, "retweet_count": 1026, "favorite_count": 1737, "source": "TweetDeck", "id_str": "609367839967969280", "is_retweet": false}, {"created_at": "Tue Nov 10 15:01:41 +0000 2015", "text": "\u201cThe future that scientists have warned us about has arrived.\u201d \u2014Hillary to @LCVoters\nhttps://t.co/kuBWhdPNoF", "in_reply_to_screen_name": null, "retweet_count": 382, "favorite_count": 640, "source": "Twitter Web Client", "id_str": "664095589378818048", "is_retweet": false}, {"created_at": "Mon Aug 24 01:41:41 +0000 2015", "text": "College must be affordable to everyone. It's one of the single biggest ways we can raise incomes. http://t.co/A4pWb3fOf4", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 1174, "favorite_count": 1912, "source": "Twitter Web Client", "id_str": "635628010742415360", "is_retweet": false}, {"created_at": "Tue Dec 08 01:19:28 +0000 2015", "text": "Hillary's new plan &amp; exit tax will ensure companies like Pfizer can\u2019t leave the US to avoid paying their fair share. https://t.co/hcm0jJSXJ3", "in_reply_to_screen_name": null, "retweet_count": 364, "favorite_count": 732, "source": "TweetDeck", "id_str": "674035531701952513", "is_retweet": false}, {"created_at": "Tue Aug 11 19:47:23 +0000 2015", "text": "Access to higher education should be a right, not a privilege for those who can afford it. http://t.co/A4pWb3fOf4 http://t.co/TNWOJw3ZxE", "in_reply_to_screen_name": null, "retweet_count": 747, "favorite_count": 1342, "source": "TweetDeck", "id_str": "631190192402116608", "is_retweet": false}, {"created_at": "Sat Sep 05 23:11:51 +0000 2015", "text": "Say you\u2019re on Team #WomenForHillary: http://t.co/CchJZe1Nge http://t.co/tJtS2b4b9V", "in_reply_to_screen_name": null, "retweet_count": 787, "favorite_count": 1760, "source": "Twitter Web Client", "id_str": "640301344264482817", "is_retweet": false}, {"created_at": "Thu May 21 18:49:31 +0000 2015", "text": "Love this team! Thanks for coming along with us today! http://t.co/HLBrJaVavQ", "in_reply_to_screen_name": null, "retweet_count": 73, "favorite_count": 221, "source": "TweetDeck", "id_str": "601459823012499456", "is_retweet": false}, {"created_at": "Fri Jul 10 19:51:42 +0000 2015", "text": "Love it. #SheBelieves  https://t.co/rOlZRuQS3R", "in_reply_to_screen_name": null, "retweet_count": 420, "favorite_count": 1088, "source": "Twitter Web Client", "id_str": "619594866276847616", "is_retweet": false}, {"created_at": "Thu Nov 05 02:25:56 +0000 2015", "text": "A 10% price reduction is insulting. As I've said before, the FDA and FTC need to step in to protect consumers. https://t.co/guopHDGOBz -H", "in_reply_to_screen_name": null, "retweet_count": 396, "favorite_count": 720, "source": "Twitter for iPhone", "id_str": "662093459814277120", "is_retweet": false}, {"created_at": "Thu Oct 22 14:51:48 +0000 2015", "text": "Hillary this morning at the House Select Committee on Benghazi. https://t.co/ZxhcSJVAfI", "in_reply_to_screen_name": null, "retweet_count": 525, "favorite_count": 909, "source": "TweetDeck", "id_str": "657207733159088128", "is_retweet": false}, {"created_at": "Fri Aug 14 20:20:10 +0000 2015", "text": "Watch live: http://t.co/Pt1EItN0EY https://t.co/HRWtcSqTAJ", "in_reply_to_screen_name": null, "retweet_count": 153, "favorite_count": 268, "source": "Twitter Web Client", "id_str": "632285605326532608", "is_retweet": false}, {"created_at": "Wed Apr 29 14:28:02 +0000 2015", "text": "There\u2019s a quiet epidemic of substance abuse sweeping small town &amp; rural America. We need to do more &amp; get serious about treatment.", "in_reply_to_screen_name": null, "retweet_count": 606, "favorite_count": 1405, "source": "Twitter Web Client", "id_str": "593421486049853441", "is_retweet": false}, {"created_at": "Thu Oct 08 12:07:04 +0000 2015", "text": "We need to make sure there\u2019s accountability on Wall Street so there can be prosperity on Main Street.", "in_reply_to_screen_name": null, "retweet_count": 429, "favorite_count": 1058, "source": "TweetDeck", "id_str": "652092847408021504", "is_retweet": false}, {"created_at": "Mon Oct 05 16:22:10 +0000 2015", "text": "As president, I'll push to close background check loopholes like the \"Charleston loophole\" that let the shooter get a gun. -H", "in_reply_to_screen_name": null, "retweet_count": 656, "favorite_count": 1972, "source": "TweetDeck", "id_str": "651069880746307584", "is_retweet": false}, {"created_at": "Tue Sep 08 18:17:08 +0000 2015", "text": "\u201cThat\u2019s going on the mantel\u2014we don\u2019t have one, but we\u2019ll make one.\u201d Scenes from the Women for Hillary launch in NH:\nhttps://t.co/XTABst2R3T", "in_reply_to_screen_name": null, "retweet_count": 218, "favorite_count": 447, "source": "Twitter Web Client", "id_str": "641314338502873088", "is_retweet": false}, {"created_at": "Sun Oct 25 03:35:32 +0000 2015", "text": "\"As a smart man once said, there\u2019s nothing wrong with America that can\u2019t be fixed by what is right with America.\" \u2014Hillary #IDPJJ", "in_reply_to_screen_name": null, "retweet_count": 357, "favorite_count": 834, "source": "TweetDeck", "id_str": "658124707754090501", "is_retweet": false}, {"created_at": "Wed Dec 16 02:31:15 +0000 2015", "text": "There's too much at stake to let Republicans take us backwards. #GOPdebate https://t.co/OpUc0fBMCB", "in_reply_to_screen_name": null, "retweet_count": 836, "favorite_count": 1761, "source": "Twitter Web Client", "id_str": "676952701779996673", "is_retweet": false}, {"created_at": "Thu Jul 23 23:56:29 +0000 2015", "text": "Hillary stands up for Planned Parenthood\u2014and women's rights. http://t.co/eZ5LRJyasg", "in_reply_to_screen_name": null, "retweet_count": 1130, "favorite_count": 1877, "source": "TweetDeck", "id_str": "624367511480500225", "is_retweet": false}, {"created_at": "Wed Oct 07 22:09:16 +0000 2015", "text": "Hillary's statement on the Trans-Pacific Partnership: http://t.co/dL3f5cCvFP", "in_reply_to_screen_name": null, "retweet_count": 563, "favorite_count": 608, "source": "TweetDeck", "id_str": "651882008239542272", "is_retweet": false}, {"created_at": "Sun Sep 13 18:37:07 +0000 2015", "text": "Every woman and family deserves safety from violence. On VAWA's anniversary, we have more to do to prevent violence and support survivors.", "in_reply_to_screen_name": null, "retweet_count": 542, "favorite_count": 1035, "source": "Twitter Web Client", "id_str": "643131308588290048", "is_retweet": false}, {"created_at": "Tue Jun 30 15:53:10 +0000 2015", "text": "President Obama is right to update overtime rules for the modern workforce\u2014a win for our economy and workers nationwide. -H", "in_reply_to_screen_name": null, "retweet_count": 599, "favorite_count": 1435, "source": "Twitter Web Client", "id_str": "615910959450849280", "is_retweet": false}, {"created_at": "Thu Aug 27 00:24:01 +0000 2015", "text": "The United States is the only country in the developed world without guaranteed paid leave. This needs to change. #WomensEqualityDay", "in_reply_to_screen_name": null, "retweet_count": 1841, "favorite_count": 3449, "source": "Twitter Web Client", "id_str": "636695627708108800", "is_retweet": false}, {"created_at": "Wed Nov 11 03:05:43 +0000 2015", "text": "These candidates don't seem to mind a \"big government\" when it's politicians interfering in women's personal health decisions. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 1600, "favorite_count": 3114, "source": "TweetDeck", "id_str": "664277797263777792", "is_retweet": false}, {"created_at": "Thu Oct 22 14:43:55 +0000 2015", "text": "\"We should debate on the basis of fact, not fear. We should resist denigrating the patriotism or loyalty of those who disagree with us.\"", "in_reply_to_screen_name": null, "retweet_count": 360, "favorite_count": 620, "source": "TweetDeck", "id_str": "657205747906912256", "is_retweet": false}, {"created_at": "Tue May 05 22:49:22 +0000 2015", "text": "\"We can\u2019t wait any longer for a path to full and equal citizenship.\"", "in_reply_to_screen_name": null, "retweet_count": 558, "favorite_count": 814, "source": "Twitter Web Client", "id_str": "595721980055257090", "is_retweet": false}, {"created_at": "Sat Jun 20 14:19:56 +0000 2015", "text": "What's better than a pantsuit tee? A pantsuit tee signed by Hillary. Your chance to win \u2192 http://t.co/GfXrTvf0ot http://t.co/y1I8iLp1e3", "in_reply_to_screen_name": null, "retweet_count": 259, "favorite_count": 574, "source": "Twitter Web Client", "id_str": "612263619766681601", "is_retweet": false}, {"created_at": "Sat Oct 24 11:56:55 +0000 2015", "text": "The Jefferson-Jackson Dinner is an Iowa tradition. This year, it starts the 100-day countdown to the caucus. A big night here in Des Moines!", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 124, "favorite_count": 251, "source": "TweetDeck", "id_str": "657888497869680640", "is_retweet": false}, {"created_at": "Tue Jun 02 14:46:46 +0000 2015", "text": "Show your support for Hillary AND for equality. Check out the\nbrand-new Pride shop\u2014open now! http://t.co/bRB1bEhp6M http://t.co/ZO3rCk6Ggn", "in_reply_to_screen_name": null, "retweet_count": 215, "favorite_count": 381, "source": "TweetDeck", "id_str": "605747388087738368", "is_retweet": false}, {"created_at": "Fri Aug 28 05:43:17 +0000 2015", "text": "May #ErikaPR bring enough rain to end the drought, but cuidado con los vientos. \u00a1Pensando en ustedes, Puerto Rico! -H", "in_reply_to_screen_name": null, "retweet_count": 1166, "favorite_count": 1423, "source": "Twitter for iPhone", "id_str": "637138362093174784", "is_retweet": false}, {"created_at": "Tue Nov 03 19:28:19 +0000 2015", "text": ".@GregAbbott_TX is right about one thing: equality is one of Hillary's values. Houston\u2014vote #YesOnProp1 today. https://t.co/AI0IWnqhB7", "in_reply_to_screen_name": null, "retweet_count": 789, "favorite_count": 1150, "source": "Twitter Web Client", "id_str": "661625975789219841", "is_retweet": false}, {"created_at": "Tue Jun 02 23:39:01 +0000 2015", "text": "Yaaas, indeed. http://t.co/lclMOKwjZ8 http://t.co/wS1nlT7awE", "in_reply_to_screen_name": null, "retweet_count": 880, "favorite_count": 1626, "source": "TweetDeck", "id_str": "605881333068406785", "is_retweet": false}, {"created_at": "Mon Jul 20 23:00:12 +0000 2015", "text": "#BlackLivesMatter. http://t.co/cXd9W2AXhC http://t.co/qEKKa0ms23", "in_reply_to_screen_name": null, "retweet_count": 1241, "favorite_count": 1991, "source": "TweetDeck", "id_str": "623266184994103296", "is_retweet": false}, {"created_at": "Thu Nov 19 02:42:17 +0000 2015", "text": "The wealthy should not be the only ones rewarded for our country's success.", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 384, "favorite_count": 903, "source": "TweetDeck", "id_str": "667171002846199808", "is_retweet": false}, {"created_at": "Wed Aug 12 14:09:40 +0000 2015", "text": "#Hillary2016 gear + an adorable pup = one amazing family photo. (via andyjameswhite on Instagram) http://t.co/wZ85HkyLhk", "in_reply_to_screen_name": null, "retweet_count": 127, "favorite_count": 379, "source": "Twitter Web Client", "id_str": "631467591349968896", "is_retweet": false}, {"created_at": "Wed Sep 23 20:57:31 +0000 2015", "text": "Hillary opposes the Keystone pipeline. Read why: http://t.co/Yttouh5fA4 http://t.co/C85aNV07ii", "in_reply_to_screen_name": null, "retweet_count": 460, "favorite_count": 700, "source": "TweetDeck", "id_str": "646790519918428160", "is_retweet": false}, {"created_at": "Sat Oct 24 21:53:43 +0000 2015", "text": "\"I'm tired of the stranglehold that women have had on presidential spouse.\u201d \u2014President @billclinton at the @HillaryforIA rally in Des Moines", "in_reply_to_screen_name": null, "retweet_count": 573, "favorite_count": 1147, "source": "TweetDeck", "id_str": "658038688740462593", "is_retweet": false}, {"created_at": "Sun Dec 13 15:08:37 +0000 2015", "text": "Keeping our families and communities safe shouldn\u2019t be controversial. https://t.co/eLTLcurDD7", "in_reply_to_screen_name": null, "retweet_count": 1393, "favorite_count": 3056, "source": "TweetDeck", "id_str": "676056133723922433", "is_retweet": false}, {"created_at": "Tue May 19 22:33:22 +0000 2015", "text": "@smarino92, @enlaurent, and @ginamaria6: Thank you! Grateful and inspired by your hard work for this campaign &amp; everyday Iowans. -H", "in_reply_to_screen_name": "smarino92", "retweet_count": 55, "favorite_count": 88, "source": "TweetDeck", "id_str": "600791381091741696", "is_retweet": false}, {"created_at": "Thu Nov 05 18:42:15 +0000 2015", "text": "Our criminal justice system is broken. Here are 3 things we can do to start fixing it: https://t.co/H2WHRkOrFy https://t.co/NdgnofiDu0", "in_reply_to_screen_name": null, "retweet_count": 624, "favorite_count": 868, "source": "TweetDeck", "id_str": "662339159512715264", "is_retweet": false}, {"created_at": "Thu Nov 05 00:02:37 +0000 2015", "text": "We should not put 650,000+ promising young people at risk for deportation. Sen. Rubio is wrong on this. -H \nhttps://t.co/763Ok5xBtS", "in_reply_to_screen_name": null, "retweet_count": 783, "favorite_count": 1165, "source": "TweetDeck", "id_str": "662057393749106689", "is_retweet": false}, {"created_at": "Fri Dec 11 19:34:31 +0000 2015", "text": "Hillary and @LateNightSeth talk gun violence prevention: \u201cWe can sure do a better job than we're doing now.\u201d\nhttps://t.co/hWIWAi6GXk", "in_reply_to_screen_name": null, "retweet_count": 467, "favorite_count": 939, "source": "Twitter Web Client", "id_str": "675398272962310144", "is_retweet": false}, {"created_at": "Tue Sep 29 21:07:21 +0000 2015", "text": "#PinkOut for @PPFA because they provide quality, affordable health care to those who need it most. #StandWithPP http://t.co/smM6J6N91B", "in_reply_to_screen_name": null, "retweet_count": 1379, "favorite_count": 1544, "source": "Twitter Web Client", "id_str": "648967322120658945", "is_retweet": false}, {"created_at": "Sat Aug 22 22:56:42 +0000 2015", "text": "Thank you to these brave servicemen for risking their lives to prevent a far worse tragedy. http://t.co/Bo8S3583PU", "in_reply_to_screen_name": null, "retweet_count": 738, "favorite_count": 1640, "source": "TweetDeck", "id_str": "635224103251787776", "is_retweet": false}, {"created_at": "Mon Oct 05 18:43:56 +0000 2015", "text": "We cannot sit by while more people die. http://t.co/oeWiP3rg4Z", "in_reply_to_screen_name": "HillaryClinton", "retweet_count": 596, "favorite_count": 1218, "source": "TweetDeck", "id_str": "651105559354167296", "is_retweet": false}, {"created_at": "Wed Nov 11 21:18:29 +0000 2015", "text": "\u201cTo all our veterans, and the men and women now serving: You represent the very best that our country has to offer.\u201d\nhttps://t.co/qIqdJGHwKX", "in_reply_to_screen_name": null, "retweet_count": 639, "favorite_count": 1097, "source": "Twitter Web Client", "id_str": "664552801494679552", "is_retweet": false}, {"created_at": "Wed Dec 16 02:44:57 +0000 2015", "text": "This election is about keeping American families safe and strong. The ideas we're hearing from Republicans won't do that. #GOPdebate", "in_reply_to_screen_name": null, "retweet_count": 837, "favorite_count": 1945, "source": "Twitter Web Client", "id_str": "676956145723027458", "is_retweet": false}, {"created_at": "Fri Sep 25 15:53:28 +0000 2015", "text": "You don\u2019t have to be a scientist to take on climate change\u2014you just have to be willing to act.\nhttps://t.co/EpZ0Q7DPQ0", "in_reply_to_screen_name": null, "retweet_count": 540, "favorite_count": 815, "source": "Twitter Web Client", "id_str": "647438781411274752", "is_retweet": false}, {"created_at": "Sun Jul 19 16:32:35 +0000 2015", "text": "The journey toward women's equality began 167 years ago in Seneca Falls, NY. Today, we must write its future. http://t.co/lBQEdxYd91", "in_reply_to_screen_name": null, "retweet_count": 1102, "favorite_count": 1661, "source": "Twitter Web Client", "id_str": "622806246622691328", "is_retweet": false}, {"created_at": "Sun Aug 09 14:22:42 +0000 2015", "text": "Join Hillary's fight to build an America where we don't leave anyone out or anyone behind: http://t.co/fHWH8uaBa4 http://t.co/9MpXn38lzf", "in_reply_to_screen_name": null, "retweet_count": 488, "favorite_count": 805, "source": "Twitter Web Client", "id_str": "630383706620993536", "is_retweet": false}, {"created_at": "Sat Aug 29 01:08:20 +0000 2015", "text": "On this anniversary of the March on Washington, we honor those who fought for civil rights. We must commit to continuing the fight today.", "in_reply_to_screen_name": null, "retweet_count": 643, "favorite_count": 1362, "source": "TweetDeck", "id_str": "637431555707826176", "is_retweet": false}, {"created_at": "Thu Dec 24 18:36:37 +0000 2015", "text": "American families like progress a lot. But the grinches in GOPville? It seems they do not. https://t.co/ttBgXPHe2k", "in_reply_to_screen_name": null, "retweet_count": 498, "favorite_count": 1058, "source": "TweetDeck", "id_str": "680094746317078528", "is_retweet": false}, {"created_at": "Fri Jun 19 15:20:41 +0000 2015", "text": "What's the most important lesson a dad in your life taught you? http://t.co/rPIZ94xyQD", "in_reply_to_screen_name": null, "retweet_count": 623, "favorite_count": 1241, "source": "TweetDeck", "id_str": "611916516901191681", "is_retweet": false}, {"created_at": "Thu Jun 04 20:32:27 +0000 2015", "text": "\"If you're an eligible voter and want to be registered, you should be a registered voter\u2014period.\"", "in_reply_to_screen_name": null, "retweet_count": 420, "favorite_count": 685, "source": "Twitter Web Client", "id_str": "606559157664104448", "is_retweet": false}, {"created_at": "Wed Jun 24 18:27:00 +0000 2015", "text": "RT if you agree with Hillary: Every American deserves quality, affordable health care. http://t.co/d9j9Ab3G4T", "in_reply_to_screen_name": null, "retweet_count": 1104, "favorite_count": 1195, "source": "TweetDeck", "id_str": "613775345540562945", "is_retweet": false}, {"created_at": "Sat Aug 22 14:45:11 +0000 2015", "text": "\"When you see that you've got CEOs making 300x what the average worker is making, you know the deck is stacked.\"\nhttps://t.co/PMAX1XZjwO", "in_reply_to_screen_name": null, "retweet_count": 978, "favorite_count": 1685, "source": "Twitter Web Client", "id_str": "635100405890834432", "is_retweet": false}, {"created_at": "Thu May 07 23:00:36 +0000 2015", "text": "Midnight deadline! This mom could call a mom you love\u2014but you have to sign up now to enter: http://t.co/JxLxPdR1Lp http://t.co/mVqNJvZe7L", "in_reply_to_screen_name": null, "retweet_count": 204, "favorite_count": 384, "source": "TweetDeck", "id_str": "596449583829487616", "is_retweet": false}]